from mithril.backends.with_autograd.torch_backend.ops import *

def evaluate(params, data, cache):
    concat_0_axis = cache['concat_0_axis']
    concat_1_axis = cache['concat_1_axis']
    double_blocks_0_add_0_left = cache['double_blocks_0_add_0_left']
    double_blocks_0_add_2_left = cache['double_blocks_0_add_2_left']
    double_blocks_0_add_5_left = cache['double_blocks_0_add_5_left']
    double_blocks_0_add_8_left = cache['double_blocks_0_add_8_left']
    double_blocks_0_concat_0_axis = cache['double_blocks_0_concat_0_axis']
    double_blocks_0_concat_1_axis = cache['double_blocks_0_concat_1_axis']
    double_blocks_0_concat_2_axis = cache['double_blocks_0_concat_2_axis']
    double_blocks_0_img_attn_norm_key_norm_add_right = cache['double_blocks_0_img_attn_norm_key_norm_add_right']
    double_blocks_0_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_0_img_attn_norm_key_norm_divide_numerator']
    double_blocks_0_img_attn_norm_key_norm_mean_axis = cache['double_blocks_0_img_attn_norm_key_norm_mean_axis']
    double_blocks_0_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_0_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_0_img_attn_norm_key_norm_power_exponent = cache['double_blocks_0_img_attn_norm_key_norm_power_exponent']
    double_blocks_0_img_attn_norm_key_norm_scale = params['double_blocks_0_img_attn_norm_key_norm_scale']
    double_blocks_0_img_attn_norm_query_norm_add_right = cache['double_blocks_0_img_attn_norm_query_norm_add_right']
    double_blocks_0_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_0_img_attn_norm_query_norm_divide_numerator']
    double_blocks_0_img_attn_norm_query_norm_mean_axis = cache['double_blocks_0_img_attn_norm_query_norm_mean_axis']
    double_blocks_0_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_0_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_0_img_attn_norm_query_norm_power_exponent = cache['double_blocks_0_img_attn_norm_query_norm_power_exponent']
    double_blocks_0_img_attn_norm_query_norm_scale = params['double_blocks_0_img_attn_norm_query_norm_scale']
    double_blocks_0_img_attn_proj_bias = params['double_blocks_0_img_attn_proj_bias']
    double_blocks_0_img_attn_proj_transpose_axes = cache['double_blocks_0_img_attn_proj_transpose_axes']
    double_blocks_0_img_attn_proj_weight = params['double_blocks_0_img_attn_proj_weight']
    double_blocks_0_img_attn_qkv_bias = params['double_blocks_0_img_attn_qkv_bias']
    double_blocks_0_img_attn_qkv_transpose_axes = cache['double_blocks_0_img_attn_qkv_transpose_axes']
    double_blocks_0_img_attn_qkv_weight = params['double_blocks_0_img_attn_qkv_weight']
    double_blocks_0_img_mlp_0_bias = params['double_blocks_0_img_mlp_0_bias']
    double_blocks_0_img_mlp_0_transpose_axes = cache['double_blocks_0_img_mlp_0_transpose_axes']
    double_blocks_0_img_mlp_0_weight = params['double_blocks_0_img_mlp_0_weight']
    double_blocks_0_img_mlp_2_bias = params['double_blocks_0_img_mlp_2_bias']
    double_blocks_0_img_mlp_2_transpose_axes = cache['double_blocks_0_img_mlp_2_transpose_axes']
    double_blocks_0_img_mlp_2_weight = params['double_blocks_0_img_mlp_2_weight']
    double_blocks_0_img_mlp_gelu_approximate = cache['double_blocks_0_img_mlp_gelu_approximate']
    double_blocks_0_img_mod_lin_bias = params['double_blocks_0_img_mod_lin_bias']
    double_blocks_0_img_mod_lin_transpose_axes = cache['double_blocks_0_img_mod_lin_transpose_axes']
    double_blocks_0_img_mod_lin_weight = params['double_blocks_0_img_mod_lin_weight']
    double_blocks_0_img_mod_silu_add_left = cache['double_blocks_0_img_mod_silu_add_left']
    double_blocks_0_img_mod_split_0_axis = cache['double_blocks_0_img_mod_split_0_axis']
    double_blocks_0_img_mod_split_0_split_size = cache['double_blocks_0_img_mod_split_0_split_size']
    double_blocks_0_img_mod_split_1_axis = cache['double_blocks_0_img_mod_split_1_axis']
    double_blocks_0_img_mod_split_1_split_size = cache['double_blocks_0_img_mod_split_1_split_size']
    double_blocks_0_img_mod_split_2_axis = cache['double_blocks_0_img_mod_split_2_axis']
    double_blocks_0_img_mod_split_2_split_size = cache['double_blocks_0_img_mod_split_2_split_size']
    double_blocks_0_img_mod_tensoritem_0_index = cache['double_blocks_0_img_mod_tensoritem_0_index']
    double_blocks_0_img_mod_tensoritem_1_index = cache['double_blocks_0_img_mod_tensoritem_1_index']
    double_blocks_0_img_mod_tensoritem_2_index = cache['double_blocks_0_img_mod_tensoritem_2_index']
    double_blocks_0_img_norm1_add_right = cache['double_blocks_0_img_norm1_add_right']
    double_blocks_0_img_norm1_mean_axis = cache['double_blocks_0_img_norm1_mean_axis']
    double_blocks_0_img_norm1_mean_keepdim = cache['double_blocks_0_img_norm1_mean_keepdim']
    double_blocks_0_img_norm1_variance_axis = cache['double_blocks_0_img_norm1_variance_axis']
    double_blocks_0_img_norm1_variance_correction = cache['double_blocks_0_img_norm1_variance_correction']
    double_blocks_0_img_norm1_variance_keepdim = cache['double_blocks_0_img_norm1_variance_keepdim']
    double_blocks_0_img_norm2_add_right = cache['double_blocks_0_img_norm2_add_right']
    double_blocks_0_img_norm2_mean_axis = cache['double_blocks_0_img_norm2_mean_axis']
    double_blocks_0_img_norm2_mean_keepdim = cache['double_blocks_0_img_norm2_mean_keepdim']
    double_blocks_0_img_norm2_variance_axis = cache['double_blocks_0_img_norm2_variance_axis']
    double_blocks_0_img_norm2_variance_correction = cache['double_blocks_0_img_norm2_variance_correction']
    double_blocks_0_img_norm2_variance_keepdim = cache['double_blocks_0_img_norm2_variance_keepdim']
    double_blocks_0_model_model_shape_0_output = cache['double_blocks_0_model_model_shape_0_output']
    double_blocks_0_model_model_shape_1_output = cache['double_blocks_0_model_model_shape_1_output']
    double_blocks_0_model_model_tensoritem_0_index = cache['double_blocks_0_model_model_tensoritem_0_index']
    double_blocks_0_model_model_tensoritem_1_index = cache['double_blocks_0_model_model_tensoritem_1_index']
    double_blocks_0_model_model_tensoritem_2_index = cache['double_blocks_0_model_model_tensoritem_2_index']
    double_blocks_0_model_model_tensoritem_3_index = cache['double_blocks_0_model_model_tensoritem_3_index']
    double_blocks_0_model_model_tensoritem_4_index = cache['double_blocks_0_model_model_tensoritem_4_index']
    double_blocks_0_model_model_tensoritem_5_index = cache['double_blocks_0_model_model_tensoritem_5_index']
    double_blocks_0_model_model_tensoritem_6_index = cache['double_blocks_0_model_model_tensoritem_6_index']
    double_blocks_0_model_model_tensoritem_7_index = cache['double_blocks_0_model_model_tensoritem_7_index']
    double_blocks_0_model_model_totuple_0_output = cache['double_blocks_0_model_model_totuple_0_output']
    double_blocks_0_model_model_totuple_1_output = cache['double_blocks_0_model_model_totuple_1_output']
    double_blocks_0_model_scaleddotproduct_attn_mask = cache['double_blocks_0_model_scaleddotproduct_attn_mask']
    double_blocks_0_model_totuple_output = cache['double_blocks_0_model_totuple_output']
    double_blocks_0_model_transpose_axes = cache['double_blocks_0_model_transpose_axes']
    double_blocks_0_tensoritem_0_index = cache['double_blocks_0_tensoritem_0_index']
    double_blocks_0_tensoritem_10_index = cache['double_blocks_0_tensoritem_10_index']
    double_blocks_0_tensoritem_11_index = cache['double_blocks_0_tensoritem_11_index']
    double_blocks_0_tensoritem_12_index = cache['double_blocks_0_tensoritem_12_index']
    double_blocks_0_tensoritem_13_index = cache['double_blocks_0_tensoritem_13_index']
    double_blocks_0_tensoritem_14_index = cache['double_blocks_0_tensoritem_14_index']
    double_blocks_0_tensoritem_15_index = cache['double_blocks_0_tensoritem_15_index']
    double_blocks_0_tensoritem_16_index = cache['double_blocks_0_tensoritem_16_index']
    double_blocks_0_tensoritem_17_index = cache['double_blocks_0_tensoritem_17_index']
    double_blocks_0_tensoritem_18_index = cache['double_blocks_0_tensoritem_18_index']
    double_blocks_0_tensoritem_19_index = cache['double_blocks_0_tensoritem_19_index']
    double_blocks_0_tensoritem_1_index = cache['double_blocks_0_tensoritem_1_index']
    double_blocks_0_tensoritem_2_index = cache['double_blocks_0_tensoritem_2_index']
    double_blocks_0_tensoritem_3_index = cache['double_blocks_0_tensoritem_3_index']
    double_blocks_0_tensoritem_4_index = cache['double_blocks_0_tensoritem_4_index']
    double_blocks_0_tensoritem_5_index = cache['double_blocks_0_tensoritem_5_index']
    double_blocks_0_tensoritem_6_index = cache['double_blocks_0_tensoritem_6_index']
    double_blocks_0_tensoritem_7_index = cache['double_blocks_0_tensoritem_7_index']
    double_blocks_0_tensoritem_8_index = cache['double_blocks_0_tensoritem_8_index']
    double_blocks_0_tensoritem_9_index = cache['double_blocks_0_tensoritem_9_index']
    double_blocks_0_totuple_0_output = cache['double_blocks_0_totuple_0_output']
    double_blocks_0_totuple_1_output = cache['double_blocks_0_totuple_1_output']
    double_blocks_0_transpose_0_axes = cache['double_blocks_0_transpose_0_axes']
    double_blocks_0_transpose_1_axes = cache['double_blocks_0_transpose_1_axes']
    double_blocks_0_txt_attn_norm_key_norm_add_right = cache['double_blocks_0_txt_attn_norm_key_norm_add_right']
    double_blocks_0_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_0_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_0_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_0_txt_attn_norm_key_norm_mean_axis']
    double_blocks_0_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_0_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_0_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_0_txt_attn_norm_key_norm_power_exponent']
    double_blocks_0_txt_attn_norm_key_norm_scale = params['double_blocks_0_txt_attn_norm_key_norm_scale']
    double_blocks_0_txt_attn_norm_query_norm_add_right = cache['double_blocks_0_txt_attn_norm_query_norm_add_right']
    double_blocks_0_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_0_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_0_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_0_txt_attn_norm_query_norm_mean_axis']
    double_blocks_0_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_0_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_0_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_0_txt_attn_norm_query_norm_power_exponent']
    double_blocks_0_txt_attn_norm_query_norm_scale = params['double_blocks_0_txt_attn_norm_query_norm_scale']
    double_blocks_0_txt_attn_proj_bias = params['double_blocks_0_txt_attn_proj_bias']
    double_blocks_0_txt_attn_proj_transpose_axes = cache['double_blocks_0_txt_attn_proj_transpose_axes']
    double_blocks_0_txt_attn_proj_weight = params['double_blocks_0_txt_attn_proj_weight']
    double_blocks_0_txt_attn_qkv_bias = params['double_blocks_0_txt_attn_qkv_bias']
    double_blocks_0_txt_attn_qkv_transpose_axes = cache['double_blocks_0_txt_attn_qkv_transpose_axes']
    double_blocks_0_txt_attn_qkv_weight = params['double_blocks_0_txt_attn_qkv_weight']
    double_blocks_0_txt_mlp_0_bias = params['double_blocks_0_txt_mlp_0_bias']
    double_blocks_0_txt_mlp_0_transpose_axes = cache['double_blocks_0_txt_mlp_0_transpose_axes']
    double_blocks_0_txt_mlp_0_weight = params['double_blocks_0_txt_mlp_0_weight']
    double_blocks_0_txt_mlp_2_bias = params['double_blocks_0_txt_mlp_2_bias']
    double_blocks_0_txt_mlp_2_transpose_axes = cache['double_blocks_0_txt_mlp_2_transpose_axes']
    double_blocks_0_txt_mlp_2_weight = params['double_blocks_0_txt_mlp_2_weight']
    double_blocks_0_txt_mlp_gelu_approximate = cache['double_blocks_0_txt_mlp_gelu_approximate']
    double_blocks_0_txt_mod_lin_bias = params['double_blocks_0_txt_mod_lin_bias']
    double_blocks_0_txt_mod_lin_transpose_axes = cache['double_blocks_0_txt_mod_lin_transpose_axes']
    double_blocks_0_txt_mod_lin_weight = params['double_blocks_0_txt_mod_lin_weight']
    double_blocks_0_txt_mod_silu_add_left = cache['double_blocks_0_txt_mod_silu_add_left']
    double_blocks_0_txt_mod_split_0_axis = cache['double_blocks_0_txt_mod_split_0_axis']
    double_blocks_0_txt_mod_split_0_split_size = cache['double_blocks_0_txt_mod_split_0_split_size']
    double_blocks_0_txt_mod_split_1_axis = cache['double_blocks_0_txt_mod_split_1_axis']
    double_blocks_0_txt_mod_split_1_split_size = cache['double_blocks_0_txt_mod_split_1_split_size']
    double_blocks_0_txt_mod_split_2_axis = cache['double_blocks_0_txt_mod_split_2_axis']
    double_blocks_0_txt_mod_split_2_split_size = cache['double_blocks_0_txt_mod_split_2_split_size']
    double_blocks_0_txt_mod_tensoritem_0_index = cache['double_blocks_0_txt_mod_tensoritem_0_index']
    double_blocks_0_txt_mod_tensoritem_1_index = cache['double_blocks_0_txt_mod_tensoritem_1_index']
    double_blocks_0_txt_mod_tensoritem_2_index = cache['double_blocks_0_txt_mod_tensoritem_2_index']
    double_blocks_0_txt_norm1_add_right = cache['double_blocks_0_txt_norm1_add_right']
    double_blocks_0_txt_norm1_mean_axis = cache['double_blocks_0_txt_norm1_mean_axis']
    double_blocks_0_txt_norm1_mean_keepdim = cache['double_blocks_0_txt_norm1_mean_keepdim']
    double_blocks_0_txt_norm1_variance_axis = cache['double_blocks_0_txt_norm1_variance_axis']
    double_blocks_0_txt_norm1_variance_correction = cache['double_blocks_0_txt_norm1_variance_correction']
    double_blocks_0_txt_norm1_variance_keepdim = cache['double_blocks_0_txt_norm1_variance_keepdim']
    double_blocks_0_txt_norm2_add_right = cache['double_blocks_0_txt_norm2_add_right']
    double_blocks_0_txt_norm2_mean_axis = cache['double_blocks_0_txt_norm2_mean_axis']
    double_blocks_0_txt_norm2_mean_keepdim = cache['double_blocks_0_txt_norm2_mean_keepdim']
    double_blocks_0_txt_norm2_variance_axis = cache['double_blocks_0_txt_norm2_variance_axis']
    double_blocks_0_txt_norm2_variance_correction = cache['double_blocks_0_txt_norm2_variance_correction']
    double_blocks_0_txt_norm2_variance_keepdim = cache['double_blocks_0_txt_norm2_variance_keepdim']
    double_blocks_10_add_0_left = cache['double_blocks_10_add_0_left']
    double_blocks_10_add_2_left = cache['double_blocks_10_add_2_left']
    double_blocks_10_add_5_left = cache['double_blocks_10_add_5_left']
    double_blocks_10_add_8_left = cache['double_blocks_10_add_8_left']
    double_blocks_10_concat_0_axis = cache['double_blocks_10_concat_0_axis']
    double_blocks_10_concat_1_axis = cache['double_blocks_10_concat_1_axis']
    double_blocks_10_concat_2_axis = cache['double_blocks_10_concat_2_axis']
    double_blocks_10_img_attn_norm_key_norm_add_right = cache['double_blocks_10_img_attn_norm_key_norm_add_right']
    double_blocks_10_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_10_img_attn_norm_key_norm_divide_numerator']
    double_blocks_10_img_attn_norm_key_norm_mean_axis = cache['double_blocks_10_img_attn_norm_key_norm_mean_axis']
    double_blocks_10_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_10_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_10_img_attn_norm_key_norm_power_exponent = cache['double_blocks_10_img_attn_norm_key_norm_power_exponent']
    double_blocks_10_img_attn_norm_key_norm_scale = params['double_blocks_10_img_attn_norm_key_norm_scale']
    double_blocks_10_img_attn_norm_query_norm_add_right = cache['double_blocks_10_img_attn_norm_query_norm_add_right']
    double_blocks_10_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_10_img_attn_norm_query_norm_divide_numerator']
    double_blocks_10_img_attn_norm_query_norm_mean_axis = cache['double_blocks_10_img_attn_norm_query_norm_mean_axis']
    double_blocks_10_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_10_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_10_img_attn_norm_query_norm_power_exponent = cache['double_blocks_10_img_attn_norm_query_norm_power_exponent']
    double_blocks_10_img_attn_norm_query_norm_scale = params['double_blocks_10_img_attn_norm_query_norm_scale']
    double_blocks_10_img_attn_proj_bias = params['double_blocks_10_img_attn_proj_bias']
    double_blocks_10_img_attn_proj_transpose_axes = cache['double_blocks_10_img_attn_proj_transpose_axes']
    double_blocks_10_img_attn_proj_weight = params['double_blocks_10_img_attn_proj_weight']
    double_blocks_10_img_attn_qkv_bias = params['double_blocks_10_img_attn_qkv_bias']
    double_blocks_10_img_attn_qkv_transpose_axes = cache['double_blocks_10_img_attn_qkv_transpose_axes']
    double_blocks_10_img_attn_qkv_weight = params['double_blocks_10_img_attn_qkv_weight']
    double_blocks_10_img_mlp_0_bias = params['double_blocks_10_img_mlp_0_bias']
    double_blocks_10_img_mlp_0_transpose_axes = cache['double_blocks_10_img_mlp_0_transpose_axes']
    double_blocks_10_img_mlp_0_weight = params['double_blocks_10_img_mlp_0_weight']
    double_blocks_10_img_mlp_2_bias = params['double_blocks_10_img_mlp_2_bias']
    double_blocks_10_img_mlp_2_transpose_axes = cache['double_blocks_10_img_mlp_2_transpose_axes']
    double_blocks_10_img_mlp_2_weight = params['double_blocks_10_img_mlp_2_weight']
    double_blocks_10_img_mlp_gelu_approximate = cache['double_blocks_10_img_mlp_gelu_approximate']
    double_blocks_10_img_mod_lin_bias = params['double_blocks_10_img_mod_lin_bias']
    double_blocks_10_img_mod_lin_transpose_axes = cache['double_blocks_10_img_mod_lin_transpose_axes']
    double_blocks_10_img_mod_lin_weight = params['double_blocks_10_img_mod_lin_weight']
    double_blocks_10_img_mod_silu_add_left = cache['double_blocks_10_img_mod_silu_add_left']
    double_blocks_10_img_mod_split_0_axis = cache['double_blocks_10_img_mod_split_0_axis']
    double_blocks_10_img_mod_split_0_split_size = cache['double_blocks_10_img_mod_split_0_split_size']
    double_blocks_10_img_mod_split_1_axis = cache['double_blocks_10_img_mod_split_1_axis']
    double_blocks_10_img_mod_split_1_split_size = cache['double_blocks_10_img_mod_split_1_split_size']
    double_blocks_10_img_mod_split_2_axis = cache['double_blocks_10_img_mod_split_2_axis']
    double_blocks_10_img_mod_split_2_split_size = cache['double_blocks_10_img_mod_split_2_split_size']
    double_blocks_10_img_mod_tensoritem_0_index = cache['double_blocks_10_img_mod_tensoritem_0_index']
    double_blocks_10_img_mod_tensoritem_1_index = cache['double_blocks_10_img_mod_tensoritem_1_index']
    double_blocks_10_img_mod_tensoritem_2_index = cache['double_blocks_10_img_mod_tensoritem_2_index']
    double_blocks_10_img_norm1_add_right = cache['double_blocks_10_img_norm1_add_right']
    double_blocks_10_img_norm1_mean_axis = cache['double_blocks_10_img_norm1_mean_axis']
    double_blocks_10_img_norm1_mean_keepdim = cache['double_blocks_10_img_norm1_mean_keepdim']
    double_blocks_10_img_norm1_variance_axis = cache['double_blocks_10_img_norm1_variance_axis']
    double_blocks_10_img_norm1_variance_correction = cache['double_blocks_10_img_norm1_variance_correction']
    double_blocks_10_img_norm1_variance_keepdim = cache['double_blocks_10_img_norm1_variance_keepdim']
    double_blocks_10_img_norm2_add_right = cache['double_blocks_10_img_norm2_add_right']
    double_blocks_10_img_norm2_mean_axis = cache['double_blocks_10_img_norm2_mean_axis']
    double_blocks_10_img_norm2_mean_keepdim = cache['double_blocks_10_img_norm2_mean_keepdim']
    double_blocks_10_img_norm2_variance_axis = cache['double_blocks_10_img_norm2_variance_axis']
    double_blocks_10_img_norm2_variance_correction = cache['double_blocks_10_img_norm2_variance_correction']
    double_blocks_10_img_norm2_variance_keepdim = cache['double_blocks_10_img_norm2_variance_keepdim']
    double_blocks_10_model_model_shape_0_output = cache['double_blocks_10_model_model_shape_0_output']
    double_blocks_10_model_model_shape_1_output = cache['double_blocks_10_model_model_shape_1_output']
    double_blocks_10_model_model_tensoritem_0_index = cache['double_blocks_10_model_model_tensoritem_0_index']
    double_blocks_10_model_model_tensoritem_1_index = cache['double_blocks_10_model_model_tensoritem_1_index']
    double_blocks_10_model_model_tensoritem_2_index = cache['double_blocks_10_model_model_tensoritem_2_index']
    double_blocks_10_model_model_tensoritem_3_index = cache['double_blocks_10_model_model_tensoritem_3_index']
    double_blocks_10_model_model_tensoritem_4_index = cache['double_blocks_10_model_model_tensoritem_4_index']
    double_blocks_10_model_model_tensoritem_5_index = cache['double_blocks_10_model_model_tensoritem_5_index']
    double_blocks_10_model_model_tensoritem_6_index = cache['double_blocks_10_model_model_tensoritem_6_index']
    double_blocks_10_model_model_tensoritem_7_index = cache['double_blocks_10_model_model_tensoritem_7_index']
    double_blocks_10_model_model_totuple_0_output = cache['double_blocks_10_model_model_totuple_0_output']
    double_blocks_10_model_model_totuple_1_output = cache['double_blocks_10_model_model_totuple_1_output']
    double_blocks_10_model_scaleddotproduct_attn_mask = cache['double_blocks_10_model_scaleddotproduct_attn_mask']
    double_blocks_10_model_totuple_output = cache['double_blocks_10_model_totuple_output']
    double_blocks_10_model_transpose_axes = cache['double_blocks_10_model_transpose_axes']
    double_blocks_10_tensoritem_0_index = cache['double_blocks_10_tensoritem_0_index']
    double_blocks_10_tensoritem_10_index = cache['double_blocks_10_tensoritem_10_index']
    double_blocks_10_tensoritem_11_index = cache['double_blocks_10_tensoritem_11_index']
    double_blocks_10_tensoritem_12_index = cache['double_blocks_10_tensoritem_12_index']
    double_blocks_10_tensoritem_13_index = cache['double_blocks_10_tensoritem_13_index']
    double_blocks_10_tensoritem_14_index = cache['double_blocks_10_tensoritem_14_index']
    double_blocks_10_tensoritem_15_index = cache['double_blocks_10_tensoritem_15_index']
    double_blocks_10_tensoritem_16_index = cache['double_blocks_10_tensoritem_16_index']
    double_blocks_10_tensoritem_17_index = cache['double_blocks_10_tensoritem_17_index']
    double_blocks_10_tensoritem_18_index = cache['double_blocks_10_tensoritem_18_index']
    double_blocks_10_tensoritem_19_index = cache['double_blocks_10_tensoritem_19_index']
    double_blocks_10_tensoritem_1_index = cache['double_blocks_10_tensoritem_1_index']
    double_blocks_10_tensoritem_2_index = cache['double_blocks_10_tensoritem_2_index']
    double_blocks_10_tensoritem_3_index = cache['double_blocks_10_tensoritem_3_index']
    double_blocks_10_tensoritem_4_index = cache['double_blocks_10_tensoritem_4_index']
    double_blocks_10_tensoritem_5_index = cache['double_blocks_10_tensoritem_5_index']
    double_blocks_10_tensoritem_6_index = cache['double_blocks_10_tensoritem_6_index']
    double_blocks_10_tensoritem_7_index = cache['double_blocks_10_tensoritem_7_index']
    double_blocks_10_tensoritem_8_index = cache['double_blocks_10_tensoritem_8_index']
    double_blocks_10_tensoritem_9_index = cache['double_blocks_10_tensoritem_9_index']
    double_blocks_10_totuple_0_output = cache['double_blocks_10_totuple_0_output']
    double_blocks_10_totuple_1_output = cache['double_blocks_10_totuple_1_output']
    double_blocks_10_transpose_0_axes = cache['double_blocks_10_transpose_0_axes']
    double_blocks_10_transpose_1_axes = cache['double_blocks_10_transpose_1_axes']
    double_blocks_10_txt_attn_norm_key_norm_add_right = cache['double_blocks_10_txt_attn_norm_key_norm_add_right']
    double_blocks_10_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_10_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_10_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_10_txt_attn_norm_key_norm_mean_axis']
    double_blocks_10_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_10_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_10_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_10_txt_attn_norm_key_norm_power_exponent']
    double_blocks_10_txt_attn_norm_key_norm_scale = params['double_blocks_10_txt_attn_norm_key_norm_scale']
    double_blocks_10_txt_attn_norm_query_norm_add_right = cache['double_blocks_10_txt_attn_norm_query_norm_add_right']
    double_blocks_10_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_10_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_10_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_10_txt_attn_norm_query_norm_mean_axis']
    double_blocks_10_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_10_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_10_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_10_txt_attn_norm_query_norm_power_exponent']
    double_blocks_10_txt_attn_norm_query_norm_scale = params['double_blocks_10_txt_attn_norm_query_norm_scale']
    double_blocks_10_txt_attn_proj_bias = params['double_blocks_10_txt_attn_proj_bias']
    double_blocks_10_txt_attn_proj_transpose_axes = cache['double_blocks_10_txt_attn_proj_transpose_axes']
    double_blocks_10_txt_attn_proj_weight = params['double_blocks_10_txt_attn_proj_weight']
    double_blocks_10_txt_attn_qkv_bias = params['double_blocks_10_txt_attn_qkv_bias']
    double_blocks_10_txt_attn_qkv_transpose_axes = cache['double_blocks_10_txt_attn_qkv_transpose_axes']
    double_blocks_10_txt_attn_qkv_weight = params['double_blocks_10_txt_attn_qkv_weight']
    double_blocks_10_txt_mlp_0_bias = params['double_blocks_10_txt_mlp_0_bias']
    double_blocks_10_txt_mlp_0_transpose_axes = cache['double_blocks_10_txt_mlp_0_transpose_axes']
    double_blocks_10_txt_mlp_0_weight = params['double_blocks_10_txt_mlp_0_weight']
    double_blocks_10_txt_mlp_2_bias = params['double_blocks_10_txt_mlp_2_bias']
    double_blocks_10_txt_mlp_2_transpose_axes = cache['double_blocks_10_txt_mlp_2_transpose_axes']
    double_blocks_10_txt_mlp_2_weight = params['double_blocks_10_txt_mlp_2_weight']
    double_blocks_10_txt_mlp_gelu_approximate = cache['double_blocks_10_txt_mlp_gelu_approximate']
    double_blocks_10_txt_mod_lin_bias = params['double_blocks_10_txt_mod_lin_bias']
    double_blocks_10_txt_mod_lin_transpose_axes = cache['double_blocks_10_txt_mod_lin_transpose_axes']
    double_blocks_10_txt_mod_lin_weight = params['double_blocks_10_txt_mod_lin_weight']
    double_blocks_10_txt_mod_silu_add_left = cache['double_blocks_10_txt_mod_silu_add_left']
    double_blocks_10_txt_mod_split_0_axis = cache['double_blocks_10_txt_mod_split_0_axis']
    double_blocks_10_txt_mod_split_0_split_size = cache['double_blocks_10_txt_mod_split_0_split_size']
    double_blocks_10_txt_mod_split_1_axis = cache['double_blocks_10_txt_mod_split_1_axis']
    double_blocks_10_txt_mod_split_1_split_size = cache['double_blocks_10_txt_mod_split_1_split_size']
    double_blocks_10_txt_mod_split_2_axis = cache['double_blocks_10_txt_mod_split_2_axis']
    double_blocks_10_txt_mod_split_2_split_size = cache['double_blocks_10_txt_mod_split_2_split_size']
    double_blocks_10_txt_mod_tensoritem_0_index = cache['double_blocks_10_txt_mod_tensoritem_0_index']
    double_blocks_10_txt_mod_tensoritem_1_index = cache['double_blocks_10_txt_mod_tensoritem_1_index']
    double_blocks_10_txt_mod_tensoritem_2_index = cache['double_blocks_10_txt_mod_tensoritem_2_index']
    double_blocks_10_txt_norm1_add_right = cache['double_blocks_10_txt_norm1_add_right']
    double_blocks_10_txt_norm1_mean_axis = cache['double_blocks_10_txt_norm1_mean_axis']
    double_blocks_10_txt_norm1_mean_keepdim = cache['double_blocks_10_txt_norm1_mean_keepdim']
    double_blocks_10_txt_norm1_variance_axis = cache['double_blocks_10_txt_norm1_variance_axis']
    double_blocks_10_txt_norm1_variance_correction = cache['double_blocks_10_txt_norm1_variance_correction']
    double_blocks_10_txt_norm1_variance_keepdim = cache['double_blocks_10_txt_norm1_variance_keepdim']
    double_blocks_10_txt_norm2_add_right = cache['double_blocks_10_txt_norm2_add_right']
    double_blocks_10_txt_norm2_mean_axis = cache['double_blocks_10_txt_norm2_mean_axis']
    double_blocks_10_txt_norm2_mean_keepdim = cache['double_blocks_10_txt_norm2_mean_keepdim']
    double_blocks_10_txt_norm2_variance_axis = cache['double_blocks_10_txt_norm2_variance_axis']
    double_blocks_10_txt_norm2_variance_correction = cache['double_blocks_10_txt_norm2_variance_correction']
    double_blocks_10_txt_norm2_variance_keepdim = cache['double_blocks_10_txt_norm2_variance_keepdim']
    double_blocks_11_add_0_left = cache['double_blocks_11_add_0_left']
    double_blocks_11_add_2_left = cache['double_blocks_11_add_2_left']
    double_blocks_11_add_5_left = cache['double_blocks_11_add_5_left']
    double_blocks_11_add_8_left = cache['double_blocks_11_add_8_left']
    double_blocks_11_concat_0_axis = cache['double_blocks_11_concat_0_axis']
    double_blocks_11_concat_1_axis = cache['double_blocks_11_concat_1_axis']
    double_blocks_11_concat_2_axis = cache['double_blocks_11_concat_2_axis']
    double_blocks_11_img_attn_norm_key_norm_add_right = cache['double_blocks_11_img_attn_norm_key_norm_add_right']
    double_blocks_11_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_11_img_attn_norm_key_norm_divide_numerator']
    double_blocks_11_img_attn_norm_key_norm_mean_axis = cache['double_blocks_11_img_attn_norm_key_norm_mean_axis']
    double_blocks_11_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_11_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_11_img_attn_norm_key_norm_power_exponent = cache['double_blocks_11_img_attn_norm_key_norm_power_exponent']
    double_blocks_11_img_attn_norm_key_norm_scale = params['double_blocks_11_img_attn_norm_key_norm_scale']
    double_blocks_11_img_attn_norm_query_norm_add_right = cache['double_blocks_11_img_attn_norm_query_norm_add_right']
    double_blocks_11_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_11_img_attn_norm_query_norm_divide_numerator']
    double_blocks_11_img_attn_norm_query_norm_mean_axis = cache['double_blocks_11_img_attn_norm_query_norm_mean_axis']
    double_blocks_11_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_11_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_11_img_attn_norm_query_norm_power_exponent = cache['double_blocks_11_img_attn_norm_query_norm_power_exponent']
    double_blocks_11_img_attn_norm_query_norm_scale = params['double_blocks_11_img_attn_norm_query_norm_scale']
    double_blocks_11_img_attn_proj_bias = params['double_blocks_11_img_attn_proj_bias']
    double_blocks_11_img_attn_proj_transpose_axes = cache['double_blocks_11_img_attn_proj_transpose_axes']
    double_blocks_11_img_attn_proj_weight = params['double_blocks_11_img_attn_proj_weight']
    double_blocks_11_img_attn_qkv_bias = params['double_blocks_11_img_attn_qkv_bias']
    double_blocks_11_img_attn_qkv_transpose_axes = cache['double_blocks_11_img_attn_qkv_transpose_axes']
    double_blocks_11_img_attn_qkv_weight = params['double_blocks_11_img_attn_qkv_weight']
    double_blocks_11_img_mlp_0_bias = params['double_blocks_11_img_mlp_0_bias']
    double_blocks_11_img_mlp_0_transpose_axes = cache['double_blocks_11_img_mlp_0_transpose_axes']
    double_blocks_11_img_mlp_0_weight = params['double_blocks_11_img_mlp_0_weight']
    double_blocks_11_img_mlp_2_bias = params['double_blocks_11_img_mlp_2_bias']
    double_blocks_11_img_mlp_2_transpose_axes = cache['double_blocks_11_img_mlp_2_transpose_axes']
    double_blocks_11_img_mlp_2_weight = params['double_blocks_11_img_mlp_2_weight']
    double_blocks_11_img_mlp_gelu_approximate = cache['double_blocks_11_img_mlp_gelu_approximate']
    double_blocks_11_img_mod_lin_bias = params['double_blocks_11_img_mod_lin_bias']
    double_blocks_11_img_mod_lin_transpose_axes = cache['double_blocks_11_img_mod_lin_transpose_axes']
    double_blocks_11_img_mod_lin_weight = params['double_blocks_11_img_mod_lin_weight']
    double_blocks_11_img_mod_silu_add_left = cache['double_blocks_11_img_mod_silu_add_left']
    double_blocks_11_img_mod_split_0_axis = cache['double_blocks_11_img_mod_split_0_axis']
    double_blocks_11_img_mod_split_0_split_size = cache['double_blocks_11_img_mod_split_0_split_size']
    double_blocks_11_img_mod_split_1_axis = cache['double_blocks_11_img_mod_split_1_axis']
    double_blocks_11_img_mod_split_1_split_size = cache['double_blocks_11_img_mod_split_1_split_size']
    double_blocks_11_img_mod_split_2_axis = cache['double_blocks_11_img_mod_split_2_axis']
    double_blocks_11_img_mod_split_2_split_size = cache['double_blocks_11_img_mod_split_2_split_size']
    double_blocks_11_img_mod_tensoritem_0_index = cache['double_blocks_11_img_mod_tensoritem_0_index']
    double_blocks_11_img_mod_tensoritem_1_index = cache['double_blocks_11_img_mod_tensoritem_1_index']
    double_blocks_11_img_mod_tensoritem_2_index = cache['double_blocks_11_img_mod_tensoritem_2_index']
    double_blocks_11_img_norm1_add_right = cache['double_blocks_11_img_norm1_add_right']
    double_blocks_11_img_norm1_mean_axis = cache['double_blocks_11_img_norm1_mean_axis']
    double_blocks_11_img_norm1_mean_keepdim = cache['double_blocks_11_img_norm1_mean_keepdim']
    double_blocks_11_img_norm1_variance_axis = cache['double_blocks_11_img_norm1_variance_axis']
    double_blocks_11_img_norm1_variance_correction = cache['double_blocks_11_img_norm1_variance_correction']
    double_blocks_11_img_norm1_variance_keepdim = cache['double_blocks_11_img_norm1_variance_keepdim']
    double_blocks_11_img_norm2_add_right = cache['double_blocks_11_img_norm2_add_right']
    double_blocks_11_img_norm2_mean_axis = cache['double_blocks_11_img_norm2_mean_axis']
    double_blocks_11_img_norm2_mean_keepdim = cache['double_blocks_11_img_norm2_mean_keepdim']
    double_blocks_11_img_norm2_variance_axis = cache['double_blocks_11_img_norm2_variance_axis']
    double_blocks_11_img_norm2_variance_correction = cache['double_blocks_11_img_norm2_variance_correction']
    double_blocks_11_img_norm2_variance_keepdim = cache['double_blocks_11_img_norm2_variance_keepdim']
    double_blocks_11_model_model_shape_0_output = cache['double_blocks_11_model_model_shape_0_output']
    double_blocks_11_model_model_shape_1_output = cache['double_blocks_11_model_model_shape_1_output']
    double_blocks_11_model_model_tensoritem_0_index = cache['double_blocks_11_model_model_tensoritem_0_index']
    double_blocks_11_model_model_tensoritem_1_index = cache['double_blocks_11_model_model_tensoritem_1_index']
    double_blocks_11_model_model_tensoritem_2_index = cache['double_blocks_11_model_model_tensoritem_2_index']
    double_blocks_11_model_model_tensoritem_3_index = cache['double_blocks_11_model_model_tensoritem_3_index']
    double_blocks_11_model_model_tensoritem_4_index = cache['double_blocks_11_model_model_tensoritem_4_index']
    double_blocks_11_model_model_tensoritem_5_index = cache['double_blocks_11_model_model_tensoritem_5_index']
    double_blocks_11_model_model_tensoritem_6_index = cache['double_blocks_11_model_model_tensoritem_6_index']
    double_blocks_11_model_model_tensoritem_7_index = cache['double_blocks_11_model_model_tensoritem_7_index']
    double_blocks_11_model_model_totuple_0_output = cache['double_blocks_11_model_model_totuple_0_output']
    double_blocks_11_model_model_totuple_1_output = cache['double_blocks_11_model_model_totuple_1_output']
    double_blocks_11_model_scaleddotproduct_attn_mask = cache['double_blocks_11_model_scaleddotproduct_attn_mask']
    double_blocks_11_model_totuple_output = cache['double_blocks_11_model_totuple_output']
    double_blocks_11_model_transpose_axes = cache['double_blocks_11_model_transpose_axes']
    double_blocks_11_tensoritem_0_index = cache['double_blocks_11_tensoritem_0_index']
    double_blocks_11_tensoritem_10_index = cache['double_blocks_11_tensoritem_10_index']
    double_blocks_11_tensoritem_11_index = cache['double_blocks_11_tensoritem_11_index']
    double_blocks_11_tensoritem_12_index = cache['double_blocks_11_tensoritem_12_index']
    double_blocks_11_tensoritem_13_index = cache['double_blocks_11_tensoritem_13_index']
    double_blocks_11_tensoritem_14_index = cache['double_blocks_11_tensoritem_14_index']
    double_blocks_11_tensoritem_15_index = cache['double_blocks_11_tensoritem_15_index']
    double_blocks_11_tensoritem_16_index = cache['double_blocks_11_tensoritem_16_index']
    double_blocks_11_tensoritem_17_index = cache['double_blocks_11_tensoritem_17_index']
    double_blocks_11_tensoritem_18_index = cache['double_blocks_11_tensoritem_18_index']
    double_blocks_11_tensoritem_19_index = cache['double_blocks_11_tensoritem_19_index']
    double_blocks_11_tensoritem_1_index = cache['double_blocks_11_tensoritem_1_index']
    double_blocks_11_tensoritem_2_index = cache['double_blocks_11_tensoritem_2_index']
    double_blocks_11_tensoritem_3_index = cache['double_blocks_11_tensoritem_3_index']
    double_blocks_11_tensoritem_4_index = cache['double_blocks_11_tensoritem_4_index']
    double_blocks_11_tensoritem_5_index = cache['double_blocks_11_tensoritem_5_index']
    double_blocks_11_tensoritem_6_index = cache['double_blocks_11_tensoritem_6_index']
    double_blocks_11_tensoritem_7_index = cache['double_blocks_11_tensoritem_7_index']
    double_blocks_11_tensoritem_8_index = cache['double_blocks_11_tensoritem_8_index']
    double_blocks_11_tensoritem_9_index = cache['double_blocks_11_tensoritem_9_index']
    double_blocks_11_totuple_0_output = cache['double_blocks_11_totuple_0_output']
    double_blocks_11_totuple_1_output = cache['double_blocks_11_totuple_1_output']
    double_blocks_11_transpose_0_axes = cache['double_blocks_11_transpose_0_axes']
    double_blocks_11_transpose_1_axes = cache['double_blocks_11_transpose_1_axes']
    double_blocks_11_txt_attn_norm_key_norm_add_right = cache['double_blocks_11_txt_attn_norm_key_norm_add_right']
    double_blocks_11_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_11_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_11_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_11_txt_attn_norm_key_norm_mean_axis']
    double_blocks_11_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_11_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_11_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_11_txt_attn_norm_key_norm_power_exponent']
    double_blocks_11_txt_attn_norm_key_norm_scale = params['double_blocks_11_txt_attn_norm_key_norm_scale']
    double_blocks_11_txt_attn_norm_query_norm_add_right = cache['double_blocks_11_txt_attn_norm_query_norm_add_right']
    double_blocks_11_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_11_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_11_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_11_txt_attn_norm_query_norm_mean_axis']
    double_blocks_11_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_11_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_11_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_11_txt_attn_norm_query_norm_power_exponent']
    double_blocks_11_txt_attn_norm_query_norm_scale = params['double_blocks_11_txt_attn_norm_query_norm_scale']
    double_blocks_11_txt_attn_proj_bias = params['double_blocks_11_txt_attn_proj_bias']
    double_blocks_11_txt_attn_proj_transpose_axes = cache['double_blocks_11_txt_attn_proj_transpose_axes']
    double_blocks_11_txt_attn_proj_weight = params['double_blocks_11_txt_attn_proj_weight']
    double_blocks_11_txt_attn_qkv_bias = params['double_blocks_11_txt_attn_qkv_bias']
    double_blocks_11_txt_attn_qkv_transpose_axes = cache['double_blocks_11_txt_attn_qkv_transpose_axes']
    double_blocks_11_txt_attn_qkv_weight = params['double_blocks_11_txt_attn_qkv_weight']
    double_blocks_11_txt_mlp_0_bias = params['double_blocks_11_txt_mlp_0_bias']
    double_blocks_11_txt_mlp_0_transpose_axes = cache['double_blocks_11_txt_mlp_0_transpose_axes']
    double_blocks_11_txt_mlp_0_weight = params['double_blocks_11_txt_mlp_0_weight']
    double_blocks_11_txt_mlp_2_bias = params['double_blocks_11_txt_mlp_2_bias']
    double_blocks_11_txt_mlp_2_transpose_axes = cache['double_blocks_11_txt_mlp_2_transpose_axes']
    double_blocks_11_txt_mlp_2_weight = params['double_blocks_11_txt_mlp_2_weight']
    double_blocks_11_txt_mlp_gelu_approximate = cache['double_blocks_11_txt_mlp_gelu_approximate']
    double_blocks_11_txt_mod_lin_bias = params['double_blocks_11_txt_mod_lin_bias']
    double_blocks_11_txt_mod_lin_transpose_axes = cache['double_blocks_11_txt_mod_lin_transpose_axes']
    double_blocks_11_txt_mod_lin_weight = params['double_blocks_11_txt_mod_lin_weight']
    double_blocks_11_txt_mod_silu_add_left = cache['double_blocks_11_txt_mod_silu_add_left']
    double_blocks_11_txt_mod_split_0_axis = cache['double_blocks_11_txt_mod_split_0_axis']
    double_blocks_11_txt_mod_split_0_split_size = cache['double_blocks_11_txt_mod_split_0_split_size']
    double_blocks_11_txt_mod_split_1_axis = cache['double_blocks_11_txt_mod_split_1_axis']
    double_blocks_11_txt_mod_split_1_split_size = cache['double_blocks_11_txt_mod_split_1_split_size']
    double_blocks_11_txt_mod_split_2_axis = cache['double_blocks_11_txt_mod_split_2_axis']
    double_blocks_11_txt_mod_split_2_split_size = cache['double_blocks_11_txt_mod_split_2_split_size']
    double_blocks_11_txt_mod_tensoritem_0_index = cache['double_blocks_11_txt_mod_tensoritem_0_index']
    double_blocks_11_txt_mod_tensoritem_1_index = cache['double_blocks_11_txt_mod_tensoritem_1_index']
    double_blocks_11_txt_mod_tensoritem_2_index = cache['double_blocks_11_txt_mod_tensoritem_2_index']
    double_blocks_11_txt_norm1_add_right = cache['double_blocks_11_txt_norm1_add_right']
    double_blocks_11_txt_norm1_mean_axis = cache['double_blocks_11_txt_norm1_mean_axis']
    double_blocks_11_txt_norm1_mean_keepdim = cache['double_blocks_11_txt_norm1_mean_keepdim']
    double_blocks_11_txt_norm1_variance_axis = cache['double_blocks_11_txt_norm1_variance_axis']
    double_blocks_11_txt_norm1_variance_correction = cache['double_blocks_11_txt_norm1_variance_correction']
    double_blocks_11_txt_norm1_variance_keepdim = cache['double_blocks_11_txt_norm1_variance_keepdim']
    double_blocks_11_txt_norm2_add_right = cache['double_blocks_11_txt_norm2_add_right']
    double_blocks_11_txt_norm2_mean_axis = cache['double_blocks_11_txt_norm2_mean_axis']
    double_blocks_11_txt_norm2_mean_keepdim = cache['double_blocks_11_txt_norm2_mean_keepdim']
    double_blocks_11_txt_norm2_variance_axis = cache['double_blocks_11_txt_norm2_variance_axis']
    double_blocks_11_txt_norm2_variance_correction = cache['double_blocks_11_txt_norm2_variance_correction']
    double_blocks_11_txt_norm2_variance_keepdim = cache['double_blocks_11_txt_norm2_variance_keepdim']
    double_blocks_12_add_0_left = cache['double_blocks_12_add_0_left']
    double_blocks_12_add_2_left = cache['double_blocks_12_add_2_left']
    double_blocks_12_add_5_left = cache['double_blocks_12_add_5_left']
    double_blocks_12_add_8_left = cache['double_blocks_12_add_8_left']
    double_blocks_12_concat_0_axis = cache['double_blocks_12_concat_0_axis']
    double_blocks_12_concat_1_axis = cache['double_blocks_12_concat_1_axis']
    double_blocks_12_concat_2_axis = cache['double_blocks_12_concat_2_axis']
    double_blocks_12_img_attn_norm_key_norm_add_right = cache['double_blocks_12_img_attn_norm_key_norm_add_right']
    double_blocks_12_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_12_img_attn_norm_key_norm_divide_numerator']
    double_blocks_12_img_attn_norm_key_norm_mean_axis = cache['double_blocks_12_img_attn_norm_key_norm_mean_axis']
    double_blocks_12_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_12_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_12_img_attn_norm_key_norm_power_exponent = cache['double_blocks_12_img_attn_norm_key_norm_power_exponent']
    double_blocks_12_img_attn_norm_key_norm_scale = params['double_blocks_12_img_attn_norm_key_norm_scale']
    double_blocks_12_img_attn_norm_query_norm_add_right = cache['double_blocks_12_img_attn_norm_query_norm_add_right']
    double_blocks_12_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_12_img_attn_norm_query_norm_divide_numerator']
    double_blocks_12_img_attn_norm_query_norm_mean_axis = cache['double_blocks_12_img_attn_norm_query_norm_mean_axis']
    double_blocks_12_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_12_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_12_img_attn_norm_query_norm_power_exponent = cache['double_blocks_12_img_attn_norm_query_norm_power_exponent']
    double_blocks_12_img_attn_norm_query_norm_scale = params['double_blocks_12_img_attn_norm_query_norm_scale']
    double_blocks_12_img_attn_proj_bias = params['double_blocks_12_img_attn_proj_bias']
    double_blocks_12_img_attn_proj_transpose_axes = cache['double_blocks_12_img_attn_proj_transpose_axes']
    double_blocks_12_img_attn_proj_weight = params['double_blocks_12_img_attn_proj_weight']
    double_blocks_12_img_attn_qkv_bias = params['double_blocks_12_img_attn_qkv_bias']
    double_blocks_12_img_attn_qkv_transpose_axes = cache['double_blocks_12_img_attn_qkv_transpose_axes']
    double_blocks_12_img_attn_qkv_weight = params['double_blocks_12_img_attn_qkv_weight']
    double_blocks_12_img_mlp_0_bias = params['double_blocks_12_img_mlp_0_bias']
    double_blocks_12_img_mlp_0_transpose_axes = cache['double_blocks_12_img_mlp_0_transpose_axes']
    double_blocks_12_img_mlp_0_weight = params['double_blocks_12_img_mlp_0_weight']
    double_blocks_12_img_mlp_2_bias = params['double_blocks_12_img_mlp_2_bias']
    double_blocks_12_img_mlp_2_transpose_axes = cache['double_blocks_12_img_mlp_2_transpose_axes']
    double_blocks_12_img_mlp_2_weight = params['double_blocks_12_img_mlp_2_weight']
    double_blocks_12_img_mlp_gelu_approximate = cache['double_blocks_12_img_mlp_gelu_approximate']
    double_blocks_12_img_mod_lin_bias = params['double_blocks_12_img_mod_lin_bias']
    double_blocks_12_img_mod_lin_transpose_axes = cache['double_blocks_12_img_mod_lin_transpose_axes']
    double_blocks_12_img_mod_lin_weight = params['double_blocks_12_img_mod_lin_weight']
    double_blocks_12_img_mod_silu_add_left = cache['double_blocks_12_img_mod_silu_add_left']
    double_blocks_12_img_mod_split_0_axis = cache['double_blocks_12_img_mod_split_0_axis']
    double_blocks_12_img_mod_split_0_split_size = cache['double_blocks_12_img_mod_split_0_split_size']
    double_blocks_12_img_mod_split_1_axis = cache['double_blocks_12_img_mod_split_1_axis']
    double_blocks_12_img_mod_split_1_split_size = cache['double_blocks_12_img_mod_split_1_split_size']
    double_blocks_12_img_mod_split_2_axis = cache['double_blocks_12_img_mod_split_2_axis']
    double_blocks_12_img_mod_split_2_split_size = cache['double_blocks_12_img_mod_split_2_split_size']
    double_blocks_12_img_mod_tensoritem_0_index = cache['double_blocks_12_img_mod_tensoritem_0_index']
    double_blocks_12_img_mod_tensoritem_1_index = cache['double_blocks_12_img_mod_tensoritem_1_index']
    double_blocks_12_img_mod_tensoritem_2_index = cache['double_blocks_12_img_mod_tensoritem_2_index']
    double_blocks_12_img_norm1_add_right = cache['double_blocks_12_img_norm1_add_right']
    double_blocks_12_img_norm1_mean_axis = cache['double_blocks_12_img_norm1_mean_axis']
    double_blocks_12_img_norm1_mean_keepdim = cache['double_blocks_12_img_norm1_mean_keepdim']
    double_blocks_12_img_norm1_variance_axis = cache['double_blocks_12_img_norm1_variance_axis']
    double_blocks_12_img_norm1_variance_correction = cache['double_blocks_12_img_norm1_variance_correction']
    double_blocks_12_img_norm1_variance_keepdim = cache['double_blocks_12_img_norm1_variance_keepdim']
    double_blocks_12_img_norm2_add_right = cache['double_blocks_12_img_norm2_add_right']
    double_blocks_12_img_norm2_mean_axis = cache['double_blocks_12_img_norm2_mean_axis']
    double_blocks_12_img_norm2_mean_keepdim = cache['double_blocks_12_img_norm2_mean_keepdim']
    double_blocks_12_img_norm2_variance_axis = cache['double_blocks_12_img_norm2_variance_axis']
    double_blocks_12_img_norm2_variance_correction = cache['double_blocks_12_img_norm2_variance_correction']
    double_blocks_12_img_norm2_variance_keepdim = cache['double_blocks_12_img_norm2_variance_keepdim']
    double_blocks_12_model_model_shape_0_output = cache['double_blocks_12_model_model_shape_0_output']
    double_blocks_12_model_model_shape_1_output = cache['double_blocks_12_model_model_shape_1_output']
    double_blocks_12_model_model_tensoritem_0_index = cache['double_blocks_12_model_model_tensoritem_0_index']
    double_blocks_12_model_model_tensoritem_1_index = cache['double_blocks_12_model_model_tensoritem_1_index']
    double_blocks_12_model_model_tensoritem_2_index = cache['double_blocks_12_model_model_tensoritem_2_index']
    double_blocks_12_model_model_tensoritem_3_index = cache['double_blocks_12_model_model_tensoritem_3_index']
    double_blocks_12_model_model_tensoritem_4_index = cache['double_blocks_12_model_model_tensoritem_4_index']
    double_blocks_12_model_model_tensoritem_5_index = cache['double_blocks_12_model_model_tensoritem_5_index']
    double_blocks_12_model_model_tensoritem_6_index = cache['double_blocks_12_model_model_tensoritem_6_index']
    double_blocks_12_model_model_tensoritem_7_index = cache['double_blocks_12_model_model_tensoritem_7_index']
    double_blocks_12_model_model_totuple_0_output = cache['double_blocks_12_model_model_totuple_0_output']
    double_blocks_12_model_model_totuple_1_output = cache['double_blocks_12_model_model_totuple_1_output']
    double_blocks_12_model_scaleddotproduct_attn_mask = cache['double_blocks_12_model_scaleddotproduct_attn_mask']
    double_blocks_12_model_totuple_output = cache['double_blocks_12_model_totuple_output']
    double_blocks_12_model_transpose_axes = cache['double_blocks_12_model_transpose_axes']
    double_blocks_12_tensoritem_0_index = cache['double_blocks_12_tensoritem_0_index']
    double_blocks_12_tensoritem_10_index = cache['double_blocks_12_tensoritem_10_index']
    double_blocks_12_tensoritem_11_index = cache['double_blocks_12_tensoritem_11_index']
    double_blocks_12_tensoritem_12_index = cache['double_blocks_12_tensoritem_12_index']
    double_blocks_12_tensoritem_13_index = cache['double_blocks_12_tensoritem_13_index']
    double_blocks_12_tensoritem_14_index = cache['double_blocks_12_tensoritem_14_index']
    double_blocks_12_tensoritem_15_index = cache['double_blocks_12_tensoritem_15_index']
    double_blocks_12_tensoritem_16_index = cache['double_blocks_12_tensoritem_16_index']
    double_blocks_12_tensoritem_17_index = cache['double_blocks_12_tensoritem_17_index']
    double_blocks_12_tensoritem_18_index = cache['double_blocks_12_tensoritem_18_index']
    double_blocks_12_tensoritem_19_index = cache['double_blocks_12_tensoritem_19_index']
    double_blocks_12_tensoritem_1_index = cache['double_blocks_12_tensoritem_1_index']
    double_blocks_12_tensoritem_2_index = cache['double_blocks_12_tensoritem_2_index']
    double_blocks_12_tensoritem_3_index = cache['double_blocks_12_tensoritem_3_index']
    double_blocks_12_tensoritem_4_index = cache['double_blocks_12_tensoritem_4_index']
    double_blocks_12_tensoritem_5_index = cache['double_blocks_12_tensoritem_5_index']
    double_blocks_12_tensoritem_6_index = cache['double_blocks_12_tensoritem_6_index']
    double_blocks_12_tensoritem_7_index = cache['double_blocks_12_tensoritem_7_index']
    double_blocks_12_tensoritem_8_index = cache['double_blocks_12_tensoritem_8_index']
    double_blocks_12_tensoritem_9_index = cache['double_blocks_12_tensoritem_9_index']
    double_blocks_12_totuple_0_output = cache['double_blocks_12_totuple_0_output']
    double_blocks_12_totuple_1_output = cache['double_blocks_12_totuple_1_output']
    double_blocks_12_transpose_0_axes = cache['double_blocks_12_transpose_0_axes']
    double_blocks_12_transpose_1_axes = cache['double_blocks_12_transpose_1_axes']
    double_blocks_12_txt_attn_norm_key_norm_add_right = cache['double_blocks_12_txt_attn_norm_key_norm_add_right']
    double_blocks_12_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_12_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_12_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_12_txt_attn_norm_key_norm_mean_axis']
    double_blocks_12_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_12_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_12_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_12_txt_attn_norm_key_norm_power_exponent']
    double_blocks_12_txt_attn_norm_key_norm_scale = params['double_blocks_12_txt_attn_norm_key_norm_scale']
    double_blocks_12_txt_attn_norm_query_norm_add_right = cache['double_blocks_12_txt_attn_norm_query_norm_add_right']
    double_blocks_12_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_12_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_12_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_12_txt_attn_norm_query_norm_mean_axis']
    double_blocks_12_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_12_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_12_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_12_txt_attn_norm_query_norm_power_exponent']
    double_blocks_12_txt_attn_norm_query_norm_scale = params['double_blocks_12_txt_attn_norm_query_norm_scale']
    double_blocks_12_txt_attn_proj_bias = params['double_blocks_12_txt_attn_proj_bias']
    double_blocks_12_txt_attn_proj_transpose_axes = cache['double_blocks_12_txt_attn_proj_transpose_axes']
    double_blocks_12_txt_attn_proj_weight = params['double_blocks_12_txt_attn_proj_weight']
    double_blocks_12_txt_attn_qkv_bias = params['double_blocks_12_txt_attn_qkv_bias']
    double_blocks_12_txt_attn_qkv_transpose_axes = cache['double_blocks_12_txt_attn_qkv_transpose_axes']
    double_blocks_12_txt_attn_qkv_weight = params['double_blocks_12_txt_attn_qkv_weight']
    double_blocks_12_txt_mlp_0_bias = params['double_blocks_12_txt_mlp_0_bias']
    double_blocks_12_txt_mlp_0_transpose_axes = cache['double_blocks_12_txt_mlp_0_transpose_axes']
    double_blocks_12_txt_mlp_0_weight = params['double_blocks_12_txt_mlp_0_weight']
    double_blocks_12_txt_mlp_2_bias = params['double_blocks_12_txt_mlp_2_bias']
    double_blocks_12_txt_mlp_2_transpose_axes = cache['double_blocks_12_txt_mlp_2_transpose_axes']
    double_blocks_12_txt_mlp_2_weight = params['double_blocks_12_txt_mlp_2_weight']
    double_blocks_12_txt_mlp_gelu_approximate = cache['double_blocks_12_txt_mlp_gelu_approximate']
    double_blocks_12_txt_mod_lin_bias = params['double_blocks_12_txt_mod_lin_bias']
    double_blocks_12_txt_mod_lin_transpose_axes = cache['double_blocks_12_txt_mod_lin_transpose_axes']
    double_blocks_12_txt_mod_lin_weight = params['double_blocks_12_txt_mod_lin_weight']
    double_blocks_12_txt_mod_silu_add_left = cache['double_blocks_12_txt_mod_silu_add_left']
    double_blocks_12_txt_mod_split_0_axis = cache['double_blocks_12_txt_mod_split_0_axis']
    double_blocks_12_txt_mod_split_0_split_size = cache['double_blocks_12_txt_mod_split_0_split_size']
    double_blocks_12_txt_mod_split_1_axis = cache['double_blocks_12_txt_mod_split_1_axis']
    double_blocks_12_txt_mod_split_1_split_size = cache['double_blocks_12_txt_mod_split_1_split_size']
    double_blocks_12_txt_mod_split_2_axis = cache['double_blocks_12_txt_mod_split_2_axis']
    double_blocks_12_txt_mod_split_2_split_size = cache['double_blocks_12_txt_mod_split_2_split_size']
    double_blocks_12_txt_mod_tensoritem_0_index = cache['double_blocks_12_txt_mod_tensoritem_0_index']
    double_blocks_12_txt_mod_tensoritem_1_index = cache['double_blocks_12_txt_mod_tensoritem_1_index']
    double_blocks_12_txt_mod_tensoritem_2_index = cache['double_blocks_12_txt_mod_tensoritem_2_index']
    double_blocks_12_txt_norm1_add_right = cache['double_blocks_12_txt_norm1_add_right']
    double_blocks_12_txt_norm1_mean_axis = cache['double_blocks_12_txt_norm1_mean_axis']
    double_blocks_12_txt_norm1_mean_keepdim = cache['double_blocks_12_txt_norm1_mean_keepdim']
    double_blocks_12_txt_norm1_variance_axis = cache['double_blocks_12_txt_norm1_variance_axis']
    double_blocks_12_txt_norm1_variance_correction = cache['double_blocks_12_txt_norm1_variance_correction']
    double_blocks_12_txt_norm1_variance_keepdim = cache['double_blocks_12_txt_norm1_variance_keepdim']
    double_blocks_12_txt_norm2_add_right = cache['double_blocks_12_txt_norm2_add_right']
    double_blocks_12_txt_norm2_mean_axis = cache['double_blocks_12_txt_norm2_mean_axis']
    double_blocks_12_txt_norm2_mean_keepdim = cache['double_blocks_12_txt_norm2_mean_keepdim']
    double_blocks_12_txt_norm2_variance_axis = cache['double_blocks_12_txt_norm2_variance_axis']
    double_blocks_12_txt_norm2_variance_correction = cache['double_blocks_12_txt_norm2_variance_correction']
    double_blocks_12_txt_norm2_variance_keepdim = cache['double_blocks_12_txt_norm2_variance_keepdim']
    double_blocks_13_add_0_left = cache['double_blocks_13_add_0_left']
    double_blocks_13_add_2_left = cache['double_blocks_13_add_2_left']
    double_blocks_13_add_5_left = cache['double_blocks_13_add_5_left']
    double_blocks_13_add_8_left = cache['double_blocks_13_add_8_left']
    double_blocks_13_concat_0_axis = cache['double_blocks_13_concat_0_axis']
    double_blocks_13_concat_1_axis = cache['double_blocks_13_concat_1_axis']
    double_blocks_13_concat_2_axis = cache['double_blocks_13_concat_2_axis']
    double_blocks_13_img_attn_norm_key_norm_add_right = cache['double_blocks_13_img_attn_norm_key_norm_add_right']
    double_blocks_13_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_13_img_attn_norm_key_norm_divide_numerator']
    double_blocks_13_img_attn_norm_key_norm_mean_axis = cache['double_blocks_13_img_attn_norm_key_norm_mean_axis']
    double_blocks_13_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_13_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_13_img_attn_norm_key_norm_power_exponent = cache['double_blocks_13_img_attn_norm_key_norm_power_exponent']
    double_blocks_13_img_attn_norm_key_norm_scale = params['double_blocks_13_img_attn_norm_key_norm_scale']
    double_blocks_13_img_attn_norm_query_norm_add_right = cache['double_blocks_13_img_attn_norm_query_norm_add_right']
    double_blocks_13_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_13_img_attn_norm_query_norm_divide_numerator']
    double_blocks_13_img_attn_norm_query_norm_mean_axis = cache['double_blocks_13_img_attn_norm_query_norm_mean_axis']
    double_blocks_13_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_13_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_13_img_attn_norm_query_norm_power_exponent = cache['double_blocks_13_img_attn_norm_query_norm_power_exponent']
    double_blocks_13_img_attn_norm_query_norm_scale = params['double_blocks_13_img_attn_norm_query_norm_scale']
    double_blocks_13_img_attn_proj_bias = params['double_blocks_13_img_attn_proj_bias']
    double_blocks_13_img_attn_proj_transpose_axes = cache['double_blocks_13_img_attn_proj_transpose_axes']
    double_blocks_13_img_attn_proj_weight = params['double_blocks_13_img_attn_proj_weight']
    double_blocks_13_img_attn_qkv_bias = params['double_blocks_13_img_attn_qkv_bias']
    double_blocks_13_img_attn_qkv_transpose_axes = cache['double_blocks_13_img_attn_qkv_transpose_axes']
    double_blocks_13_img_attn_qkv_weight = params['double_blocks_13_img_attn_qkv_weight']
    double_blocks_13_img_mlp_0_bias = params['double_blocks_13_img_mlp_0_bias']
    double_blocks_13_img_mlp_0_transpose_axes = cache['double_blocks_13_img_mlp_0_transpose_axes']
    double_blocks_13_img_mlp_0_weight = params['double_blocks_13_img_mlp_0_weight']
    double_blocks_13_img_mlp_2_bias = params['double_blocks_13_img_mlp_2_bias']
    double_blocks_13_img_mlp_2_transpose_axes = cache['double_blocks_13_img_mlp_2_transpose_axes']
    double_blocks_13_img_mlp_2_weight = params['double_blocks_13_img_mlp_2_weight']
    double_blocks_13_img_mlp_gelu_approximate = cache['double_blocks_13_img_mlp_gelu_approximate']
    double_blocks_13_img_mod_lin_bias = params['double_blocks_13_img_mod_lin_bias']
    double_blocks_13_img_mod_lin_transpose_axes = cache['double_blocks_13_img_mod_lin_transpose_axes']
    double_blocks_13_img_mod_lin_weight = params['double_blocks_13_img_mod_lin_weight']
    double_blocks_13_img_mod_silu_add_left = cache['double_blocks_13_img_mod_silu_add_left']
    double_blocks_13_img_mod_split_0_axis = cache['double_blocks_13_img_mod_split_0_axis']
    double_blocks_13_img_mod_split_0_split_size = cache['double_blocks_13_img_mod_split_0_split_size']
    double_blocks_13_img_mod_split_1_axis = cache['double_blocks_13_img_mod_split_1_axis']
    double_blocks_13_img_mod_split_1_split_size = cache['double_blocks_13_img_mod_split_1_split_size']
    double_blocks_13_img_mod_split_2_axis = cache['double_blocks_13_img_mod_split_2_axis']
    double_blocks_13_img_mod_split_2_split_size = cache['double_blocks_13_img_mod_split_2_split_size']
    double_blocks_13_img_mod_tensoritem_0_index = cache['double_blocks_13_img_mod_tensoritem_0_index']
    double_blocks_13_img_mod_tensoritem_1_index = cache['double_blocks_13_img_mod_tensoritem_1_index']
    double_blocks_13_img_mod_tensoritem_2_index = cache['double_blocks_13_img_mod_tensoritem_2_index']
    double_blocks_13_img_norm1_add_right = cache['double_blocks_13_img_norm1_add_right']
    double_blocks_13_img_norm1_mean_axis = cache['double_blocks_13_img_norm1_mean_axis']
    double_blocks_13_img_norm1_mean_keepdim = cache['double_blocks_13_img_norm1_mean_keepdim']
    double_blocks_13_img_norm1_variance_axis = cache['double_blocks_13_img_norm1_variance_axis']
    double_blocks_13_img_norm1_variance_correction = cache['double_blocks_13_img_norm1_variance_correction']
    double_blocks_13_img_norm1_variance_keepdim = cache['double_blocks_13_img_norm1_variance_keepdim']
    double_blocks_13_img_norm2_add_right = cache['double_blocks_13_img_norm2_add_right']
    double_blocks_13_img_norm2_mean_axis = cache['double_blocks_13_img_norm2_mean_axis']
    double_blocks_13_img_norm2_mean_keepdim = cache['double_blocks_13_img_norm2_mean_keepdim']
    double_blocks_13_img_norm2_variance_axis = cache['double_blocks_13_img_norm2_variance_axis']
    double_blocks_13_img_norm2_variance_correction = cache['double_blocks_13_img_norm2_variance_correction']
    double_blocks_13_img_norm2_variance_keepdim = cache['double_blocks_13_img_norm2_variance_keepdim']
    double_blocks_13_model_model_shape_0_output = cache['double_blocks_13_model_model_shape_0_output']
    double_blocks_13_model_model_shape_1_output = cache['double_blocks_13_model_model_shape_1_output']
    double_blocks_13_model_model_tensoritem_0_index = cache['double_blocks_13_model_model_tensoritem_0_index']
    double_blocks_13_model_model_tensoritem_1_index = cache['double_blocks_13_model_model_tensoritem_1_index']
    double_blocks_13_model_model_tensoritem_2_index = cache['double_blocks_13_model_model_tensoritem_2_index']
    double_blocks_13_model_model_tensoritem_3_index = cache['double_blocks_13_model_model_tensoritem_3_index']
    double_blocks_13_model_model_tensoritem_4_index = cache['double_blocks_13_model_model_tensoritem_4_index']
    double_blocks_13_model_model_tensoritem_5_index = cache['double_blocks_13_model_model_tensoritem_5_index']
    double_blocks_13_model_model_tensoritem_6_index = cache['double_blocks_13_model_model_tensoritem_6_index']
    double_blocks_13_model_model_tensoritem_7_index = cache['double_blocks_13_model_model_tensoritem_7_index']
    double_blocks_13_model_model_totuple_0_output = cache['double_blocks_13_model_model_totuple_0_output']
    double_blocks_13_model_model_totuple_1_output = cache['double_blocks_13_model_model_totuple_1_output']
    double_blocks_13_model_scaleddotproduct_attn_mask = cache['double_blocks_13_model_scaleddotproduct_attn_mask']
    double_blocks_13_model_totuple_output = cache['double_blocks_13_model_totuple_output']
    double_blocks_13_model_transpose_axes = cache['double_blocks_13_model_transpose_axes']
    double_blocks_13_tensoritem_0_index = cache['double_blocks_13_tensoritem_0_index']
    double_blocks_13_tensoritem_10_index = cache['double_blocks_13_tensoritem_10_index']
    double_blocks_13_tensoritem_11_index = cache['double_blocks_13_tensoritem_11_index']
    double_blocks_13_tensoritem_12_index = cache['double_blocks_13_tensoritem_12_index']
    double_blocks_13_tensoritem_13_index = cache['double_blocks_13_tensoritem_13_index']
    double_blocks_13_tensoritem_14_index = cache['double_blocks_13_tensoritem_14_index']
    double_blocks_13_tensoritem_15_index = cache['double_blocks_13_tensoritem_15_index']
    double_blocks_13_tensoritem_16_index = cache['double_blocks_13_tensoritem_16_index']
    double_blocks_13_tensoritem_17_index = cache['double_blocks_13_tensoritem_17_index']
    double_blocks_13_tensoritem_18_index = cache['double_blocks_13_tensoritem_18_index']
    double_blocks_13_tensoritem_19_index = cache['double_blocks_13_tensoritem_19_index']
    double_blocks_13_tensoritem_1_index = cache['double_blocks_13_tensoritem_1_index']
    double_blocks_13_tensoritem_2_index = cache['double_blocks_13_tensoritem_2_index']
    double_blocks_13_tensoritem_3_index = cache['double_blocks_13_tensoritem_3_index']
    double_blocks_13_tensoritem_4_index = cache['double_blocks_13_tensoritem_4_index']
    double_blocks_13_tensoritem_5_index = cache['double_blocks_13_tensoritem_5_index']
    double_blocks_13_tensoritem_6_index = cache['double_blocks_13_tensoritem_6_index']
    double_blocks_13_tensoritem_7_index = cache['double_blocks_13_tensoritem_7_index']
    double_blocks_13_tensoritem_8_index = cache['double_blocks_13_tensoritem_8_index']
    double_blocks_13_tensoritem_9_index = cache['double_blocks_13_tensoritem_9_index']
    double_blocks_13_totuple_0_output = cache['double_blocks_13_totuple_0_output']
    double_blocks_13_totuple_1_output = cache['double_blocks_13_totuple_1_output']
    double_blocks_13_transpose_0_axes = cache['double_blocks_13_transpose_0_axes']
    double_blocks_13_transpose_1_axes = cache['double_blocks_13_transpose_1_axes']
    double_blocks_13_txt_attn_norm_key_norm_add_right = cache['double_blocks_13_txt_attn_norm_key_norm_add_right']
    double_blocks_13_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_13_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_13_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_13_txt_attn_norm_key_norm_mean_axis']
    double_blocks_13_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_13_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_13_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_13_txt_attn_norm_key_norm_power_exponent']
    double_blocks_13_txt_attn_norm_key_norm_scale = params['double_blocks_13_txt_attn_norm_key_norm_scale']
    double_blocks_13_txt_attn_norm_query_norm_add_right = cache['double_blocks_13_txt_attn_norm_query_norm_add_right']
    double_blocks_13_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_13_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_13_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_13_txt_attn_norm_query_norm_mean_axis']
    double_blocks_13_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_13_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_13_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_13_txt_attn_norm_query_norm_power_exponent']
    double_blocks_13_txt_attn_norm_query_norm_scale = params['double_blocks_13_txt_attn_norm_query_norm_scale']
    double_blocks_13_txt_attn_proj_bias = params['double_blocks_13_txt_attn_proj_bias']
    double_blocks_13_txt_attn_proj_transpose_axes = cache['double_blocks_13_txt_attn_proj_transpose_axes']
    double_blocks_13_txt_attn_proj_weight = params['double_blocks_13_txt_attn_proj_weight']
    double_blocks_13_txt_attn_qkv_bias = params['double_blocks_13_txt_attn_qkv_bias']
    double_blocks_13_txt_attn_qkv_transpose_axes = cache['double_blocks_13_txt_attn_qkv_transpose_axes']
    double_blocks_13_txt_attn_qkv_weight = params['double_blocks_13_txt_attn_qkv_weight']
    double_blocks_13_txt_mlp_0_bias = params['double_blocks_13_txt_mlp_0_bias']
    double_blocks_13_txt_mlp_0_transpose_axes = cache['double_blocks_13_txt_mlp_0_transpose_axes']
    double_blocks_13_txt_mlp_0_weight = params['double_blocks_13_txt_mlp_0_weight']
    double_blocks_13_txt_mlp_2_bias = params['double_blocks_13_txt_mlp_2_bias']
    double_blocks_13_txt_mlp_2_transpose_axes = cache['double_blocks_13_txt_mlp_2_transpose_axes']
    double_blocks_13_txt_mlp_2_weight = params['double_blocks_13_txt_mlp_2_weight']
    double_blocks_13_txt_mlp_gelu_approximate = cache['double_blocks_13_txt_mlp_gelu_approximate']
    double_blocks_13_txt_mod_lin_bias = params['double_blocks_13_txt_mod_lin_bias']
    double_blocks_13_txt_mod_lin_transpose_axes = cache['double_blocks_13_txt_mod_lin_transpose_axes']
    double_blocks_13_txt_mod_lin_weight = params['double_blocks_13_txt_mod_lin_weight']
    double_blocks_13_txt_mod_silu_add_left = cache['double_blocks_13_txt_mod_silu_add_left']
    double_blocks_13_txt_mod_split_0_axis = cache['double_blocks_13_txt_mod_split_0_axis']
    double_blocks_13_txt_mod_split_0_split_size = cache['double_blocks_13_txt_mod_split_0_split_size']
    double_blocks_13_txt_mod_split_1_axis = cache['double_blocks_13_txt_mod_split_1_axis']
    double_blocks_13_txt_mod_split_1_split_size = cache['double_blocks_13_txt_mod_split_1_split_size']
    double_blocks_13_txt_mod_split_2_axis = cache['double_blocks_13_txt_mod_split_2_axis']
    double_blocks_13_txt_mod_split_2_split_size = cache['double_blocks_13_txt_mod_split_2_split_size']
    double_blocks_13_txt_mod_tensoritem_0_index = cache['double_blocks_13_txt_mod_tensoritem_0_index']
    double_blocks_13_txt_mod_tensoritem_1_index = cache['double_blocks_13_txt_mod_tensoritem_1_index']
    double_blocks_13_txt_mod_tensoritem_2_index = cache['double_blocks_13_txt_mod_tensoritem_2_index']
    double_blocks_13_txt_norm1_add_right = cache['double_blocks_13_txt_norm1_add_right']
    double_blocks_13_txt_norm1_mean_axis = cache['double_blocks_13_txt_norm1_mean_axis']
    double_blocks_13_txt_norm1_mean_keepdim = cache['double_blocks_13_txt_norm1_mean_keepdim']
    double_blocks_13_txt_norm1_variance_axis = cache['double_blocks_13_txt_norm1_variance_axis']
    double_blocks_13_txt_norm1_variance_correction = cache['double_blocks_13_txt_norm1_variance_correction']
    double_blocks_13_txt_norm1_variance_keepdim = cache['double_blocks_13_txt_norm1_variance_keepdim']
    double_blocks_13_txt_norm2_add_right = cache['double_blocks_13_txt_norm2_add_right']
    double_blocks_13_txt_norm2_mean_axis = cache['double_blocks_13_txt_norm2_mean_axis']
    double_blocks_13_txt_norm2_mean_keepdim = cache['double_blocks_13_txt_norm2_mean_keepdim']
    double_blocks_13_txt_norm2_variance_axis = cache['double_blocks_13_txt_norm2_variance_axis']
    double_blocks_13_txt_norm2_variance_correction = cache['double_blocks_13_txt_norm2_variance_correction']
    double_blocks_13_txt_norm2_variance_keepdim = cache['double_blocks_13_txt_norm2_variance_keepdim']
    double_blocks_14_add_0_left = cache['double_blocks_14_add_0_left']
    double_blocks_14_add_2_left = cache['double_blocks_14_add_2_left']
    double_blocks_14_add_5_left = cache['double_blocks_14_add_5_left']
    double_blocks_14_add_8_left = cache['double_blocks_14_add_8_left']
    double_blocks_14_concat_0_axis = cache['double_blocks_14_concat_0_axis']
    double_blocks_14_concat_1_axis = cache['double_blocks_14_concat_1_axis']
    double_blocks_14_concat_2_axis = cache['double_blocks_14_concat_2_axis']
    double_blocks_14_img_attn_norm_key_norm_add_right = cache['double_blocks_14_img_attn_norm_key_norm_add_right']
    double_blocks_14_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_14_img_attn_norm_key_norm_divide_numerator']
    double_blocks_14_img_attn_norm_key_norm_mean_axis = cache['double_blocks_14_img_attn_norm_key_norm_mean_axis']
    double_blocks_14_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_14_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_14_img_attn_norm_key_norm_power_exponent = cache['double_blocks_14_img_attn_norm_key_norm_power_exponent']
    double_blocks_14_img_attn_norm_key_norm_scale = params['double_blocks_14_img_attn_norm_key_norm_scale']
    double_blocks_14_img_attn_norm_query_norm_add_right = cache['double_blocks_14_img_attn_norm_query_norm_add_right']
    double_blocks_14_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_14_img_attn_norm_query_norm_divide_numerator']
    double_blocks_14_img_attn_norm_query_norm_mean_axis = cache['double_blocks_14_img_attn_norm_query_norm_mean_axis']
    double_blocks_14_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_14_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_14_img_attn_norm_query_norm_power_exponent = cache['double_blocks_14_img_attn_norm_query_norm_power_exponent']
    double_blocks_14_img_attn_norm_query_norm_scale = params['double_blocks_14_img_attn_norm_query_norm_scale']
    double_blocks_14_img_attn_proj_bias = params['double_blocks_14_img_attn_proj_bias']
    double_blocks_14_img_attn_proj_transpose_axes = cache['double_blocks_14_img_attn_proj_transpose_axes']
    double_blocks_14_img_attn_proj_weight = params['double_blocks_14_img_attn_proj_weight']
    double_blocks_14_img_attn_qkv_bias = params['double_blocks_14_img_attn_qkv_bias']
    double_blocks_14_img_attn_qkv_transpose_axes = cache['double_blocks_14_img_attn_qkv_transpose_axes']
    double_blocks_14_img_attn_qkv_weight = params['double_blocks_14_img_attn_qkv_weight']
    double_blocks_14_img_mlp_0_bias = params['double_blocks_14_img_mlp_0_bias']
    double_blocks_14_img_mlp_0_transpose_axes = cache['double_blocks_14_img_mlp_0_transpose_axes']
    double_blocks_14_img_mlp_0_weight = params['double_blocks_14_img_mlp_0_weight']
    double_blocks_14_img_mlp_2_bias = params['double_blocks_14_img_mlp_2_bias']
    double_blocks_14_img_mlp_2_transpose_axes = cache['double_blocks_14_img_mlp_2_transpose_axes']
    double_blocks_14_img_mlp_2_weight = params['double_blocks_14_img_mlp_2_weight']
    double_blocks_14_img_mlp_gelu_approximate = cache['double_blocks_14_img_mlp_gelu_approximate']
    double_blocks_14_img_mod_lin_bias = params['double_blocks_14_img_mod_lin_bias']
    double_blocks_14_img_mod_lin_transpose_axes = cache['double_blocks_14_img_mod_lin_transpose_axes']
    double_blocks_14_img_mod_lin_weight = params['double_blocks_14_img_mod_lin_weight']
    double_blocks_14_img_mod_silu_add_left = cache['double_blocks_14_img_mod_silu_add_left']
    double_blocks_14_img_mod_split_0_axis = cache['double_blocks_14_img_mod_split_0_axis']
    double_blocks_14_img_mod_split_0_split_size = cache['double_blocks_14_img_mod_split_0_split_size']
    double_blocks_14_img_mod_split_1_axis = cache['double_blocks_14_img_mod_split_1_axis']
    double_blocks_14_img_mod_split_1_split_size = cache['double_blocks_14_img_mod_split_1_split_size']
    double_blocks_14_img_mod_split_2_axis = cache['double_blocks_14_img_mod_split_2_axis']
    double_blocks_14_img_mod_split_2_split_size = cache['double_blocks_14_img_mod_split_2_split_size']
    double_blocks_14_img_mod_tensoritem_0_index = cache['double_blocks_14_img_mod_tensoritem_0_index']
    double_blocks_14_img_mod_tensoritem_1_index = cache['double_blocks_14_img_mod_tensoritem_1_index']
    double_blocks_14_img_mod_tensoritem_2_index = cache['double_blocks_14_img_mod_tensoritem_2_index']
    double_blocks_14_img_norm1_add_right = cache['double_blocks_14_img_norm1_add_right']
    double_blocks_14_img_norm1_mean_axis = cache['double_blocks_14_img_norm1_mean_axis']
    double_blocks_14_img_norm1_mean_keepdim = cache['double_blocks_14_img_norm1_mean_keepdim']
    double_blocks_14_img_norm1_variance_axis = cache['double_blocks_14_img_norm1_variance_axis']
    double_blocks_14_img_norm1_variance_correction = cache['double_blocks_14_img_norm1_variance_correction']
    double_blocks_14_img_norm1_variance_keepdim = cache['double_blocks_14_img_norm1_variance_keepdim']
    double_blocks_14_img_norm2_add_right = cache['double_blocks_14_img_norm2_add_right']
    double_blocks_14_img_norm2_mean_axis = cache['double_blocks_14_img_norm2_mean_axis']
    double_blocks_14_img_norm2_mean_keepdim = cache['double_blocks_14_img_norm2_mean_keepdim']
    double_blocks_14_img_norm2_variance_axis = cache['double_blocks_14_img_norm2_variance_axis']
    double_blocks_14_img_norm2_variance_correction = cache['double_blocks_14_img_norm2_variance_correction']
    double_blocks_14_img_norm2_variance_keepdim = cache['double_blocks_14_img_norm2_variance_keepdim']
    double_blocks_14_model_model_shape_0_output = cache['double_blocks_14_model_model_shape_0_output']
    double_blocks_14_model_model_shape_1_output = cache['double_blocks_14_model_model_shape_1_output']
    double_blocks_14_model_model_tensoritem_0_index = cache['double_blocks_14_model_model_tensoritem_0_index']
    double_blocks_14_model_model_tensoritem_1_index = cache['double_blocks_14_model_model_tensoritem_1_index']
    double_blocks_14_model_model_tensoritem_2_index = cache['double_blocks_14_model_model_tensoritem_2_index']
    double_blocks_14_model_model_tensoritem_3_index = cache['double_blocks_14_model_model_tensoritem_3_index']
    double_blocks_14_model_model_tensoritem_4_index = cache['double_blocks_14_model_model_tensoritem_4_index']
    double_blocks_14_model_model_tensoritem_5_index = cache['double_blocks_14_model_model_tensoritem_5_index']
    double_blocks_14_model_model_tensoritem_6_index = cache['double_blocks_14_model_model_tensoritem_6_index']
    double_blocks_14_model_model_tensoritem_7_index = cache['double_blocks_14_model_model_tensoritem_7_index']
    double_blocks_14_model_model_totuple_0_output = cache['double_blocks_14_model_model_totuple_0_output']
    double_blocks_14_model_model_totuple_1_output = cache['double_blocks_14_model_model_totuple_1_output']
    double_blocks_14_model_scaleddotproduct_attn_mask = cache['double_blocks_14_model_scaleddotproduct_attn_mask']
    double_blocks_14_model_totuple_output = cache['double_blocks_14_model_totuple_output']
    double_blocks_14_model_transpose_axes = cache['double_blocks_14_model_transpose_axes']
    double_blocks_14_tensoritem_0_index = cache['double_blocks_14_tensoritem_0_index']
    double_blocks_14_tensoritem_10_index = cache['double_blocks_14_tensoritem_10_index']
    double_blocks_14_tensoritem_11_index = cache['double_blocks_14_tensoritem_11_index']
    double_blocks_14_tensoritem_12_index = cache['double_blocks_14_tensoritem_12_index']
    double_blocks_14_tensoritem_13_index = cache['double_blocks_14_tensoritem_13_index']
    double_blocks_14_tensoritem_14_index = cache['double_blocks_14_tensoritem_14_index']
    double_blocks_14_tensoritem_15_index = cache['double_blocks_14_tensoritem_15_index']
    double_blocks_14_tensoritem_16_index = cache['double_blocks_14_tensoritem_16_index']
    double_blocks_14_tensoritem_17_index = cache['double_blocks_14_tensoritem_17_index']
    double_blocks_14_tensoritem_18_index = cache['double_blocks_14_tensoritem_18_index']
    double_blocks_14_tensoritem_19_index = cache['double_blocks_14_tensoritem_19_index']
    double_blocks_14_tensoritem_1_index = cache['double_blocks_14_tensoritem_1_index']
    double_blocks_14_tensoritem_2_index = cache['double_blocks_14_tensoritem_2_index']
    double_blocks_14_tensoritem_3_index = cache['double_blocks_14_tensoritem_3_index']
    double_blocks_14_tensoritem_4_index = cache['double_blocks_14_tensoritem_4_index']
    double_blocks_14_tensoritem_5_index = cache['double_blocks_14_tensoritem_5_index']
    double_blocks_14_tensoritem_6_index = cache['double_blocks_14_tensoritem_6_index']
    double_blocks_14_tensoritem_7_index = cache['double_blocks_14_tensoritem_7_index']
    double_blocks_14_tensoritem_8_index = cache['double_blocks_14_tensoritem_8_index']
    double_blocks_14_tensoritem_9_index = cache['double_blocks_14_tensoritem_9_index']
    double_blocks_14_totuple_0_output = cache['double_blocks_14_totuple_0_output']
    double_blocks_14_totuple_1_output = cache['double_blocks_14_totuple_1_output']
    double_blocks_14_transpose_0_axes = cache['double_blocks_14_transpose_0_axes']
    double_blocks_14_transpose_1_axes = cache['double_blocks_14_transpose_1_axes']
    double_blocks_14_txt_attn_norm_key_norm_add_right = cache['double_blocks_14_txt_attn_norm_key_norm_add_right']
    double_blocks_14_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_14_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_14_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_14_txt_attn_norm_key_norm_mean_axis']
    double_blocks_14_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_14_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_14_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_14_txt_attn_norm_key_norm_power_exponent']
    double_blocks_14_txt_attn_norm_key_norm_scale = params['double_blocks_14_txt_attn_norm_key_norm_scale']
    double_blocks_14_txt_attn_norm_query_norm_add_right = cache['double_blocks_14_txt_attn_norm_query_norm_add_right']
    double_blocks_14_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_14_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_14_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_14_txt_attn_norm_query_norm_mean_axis']
    double_blocks_14_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_14_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_14_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_14_txt_attn_norm_query_norm_power_exponent']
    double_blocks_14_txt_attn_norm_query_norm_scale = params['double_blocks_14_txt_attn_norm_query_norm_scale']
    double_blocks_14_txt_attn_proj_bias = params['double_blocks_14_txt_attn_proj_bias']
    double_blocks_14_txt_attn_proj_transpose_axes = cache['double_blocks_14_txt_attn_proj_transpose_axes']
    double_blocks_14_txt_attn_proj_weight = params['double_blocks_14_txt_attn_proj_weight']
    double_blocks_14_txt_attn_qkv_bias = params['double_blocks_14_txt_attn_qkv_bias']
    double_blocks_14_txt_attn_qkv_transpose_axes = cache['double_blocks_14_txt_attn_qkv_transpose_axes']
    double_blocks_14_txt_attn_qkv_weight = params['double_blocks_14_txt_attn_qkv_weight']
    double_blocks_14_txt_mlp_0_bias = params['double_blocks_14_txt_mlp_0_bias']
    double_blocks_14_txt_mlp_0_transpose_axes = cache['double_blocks_14_txt_mlp_0_transpose_axes']
    double_blocks_14_txt_mlp_0_weight = params['double_blocks_14_txt_mlp_0_weight']
    double_blocks_14_txt_mlp_2_bias = params['double_blocks_14_txt_mlp_2_bias']
    double_blocks_14_txt_mlp_2_transpose_axes = cache['double_blocks_14_txt_mlp_2_transpose_axes']
    double_blocks_14_txt_mlp_2_weight = params['double_blocks_14_txt_mlp_2_weight']
    double_blocks_14_txt_mlp_gelu_approximate = cache['double_blocks_14_txt_mlp_gelu_approximate']
    double_blocks_14_txt_mod_lin_bias = params['double_blocks_14_txt_mod_lin_bias']
    double_blocks_14_txt_mod_lin_transpose_axes = cache['double_blocks_14_txt_mod_lin_transpose_axes']
    double_blocks_14_txt_mod_lin_weight = params['double_blocks_14_txt_mod_lin_weight']
    double_blocks_14_txt_mod_silu_add_left = cache['double_blocks_14_txt_mod_silu_add_left']
    double_blocks_14_txt_mod_split_0_axis = cache['double_blocks_14_txt_mod_split_0_axis']
    double_blocks_14_txt_mod_split_0_split_size = cache['double_blocks_14_txt_mod_split_0_split_size']
    double_blocks_14_txt_mod_split_1_axis = cache['double_blocks_14_txt_mod_split_1_axis']
    double_blocks_14_txt_mod_split_1_split_size = cache['double_blocks_14_txt_mod_split_1_split_size']
    double_blocks_14_txt_mod_split_2_axis = cache['double_blocks_14_txt_mod_split_2_axis']
    double_blocks_14_txt_mod_split_2_split_size = cache['double_blocks_14_txt_mod_split_2_split_size']
    double_blocks_14_txt_mod_tensoritem_0_index = cache['double_blocks_14_txt_mod_tensoritem_0_index']
    double_blocks_14_txt_mod_tensoritem_1_index = cache['double_blocks_14_txt_mod_tensoritem_1_index']
    double_blocks_14_txt_mod_tensoritem_2_index = cache['double_blocks_14_txt_mod_tensoritem_2_index']
    double_blocks_14_txt_norm1_add_right = cache['double_blocks_14_txt_norm1_add_right']
    double_blocks_14_txt_norm1_mean_axis = cache['double_blocks_14_txt_norm1_mean_axis']
    double_blocks_14_txt_norm1_mean_keepdim = cache['double_blocks_14_txt_norm1_mean_keepdim']
    double_blocks_14_txt_norm1_variance_axis = cache['double_blocks_14_txt_norm1_variance_axis']
    double_blocks_14_txt_norm1_variance_correction = cache['double_blocks_14_txt_norm1_variance_correction']
    double_blocks_14_txt_norm1_variance_keepdim = cache['double_blocks_14_txt_norm1_variance_keepdim']
    double_blocks_14_txt_norm2_add_right = cache['double_blocks_14_txt_norm2_add_right']
    double_blocks_14_txt_norm2_mean_axis = cache['double_blocks_14_txt_norm2_mean_axis']
    double_blocks_14_txt_norm2_mean_keepdim = cache['double_blocks_14_txt_norm2_mean_keepdim']
    double_blocks_14_txt_norm2_variance_axis = cache['double_blocks_14_txt_norm2_variance_axis']
    double_blocks_14_txt_norm2_variance_correction = cache['double_blocks_14_txt_norm2_variance_correction']
    double_blocks_14_txt_norm2_variance_keepdim = cache['double_blocks_14_txt_norm2_variance_keepdim']
    double_blocks_15_add_0_left = cache['double_blocks_15_add_0_left']
    double_blocks_15_add_2_left = cache['double_blocks_15_add_2_left']
    double_blocks_15_add_5_left = cache['double_blocks_15_add_5_left']
    double_blocks_15_add_8_left = cache['double_blocks_15_add_8_left']
    double_blocks_15_concat_0_axis = cache['double_blocks_15_concat_0_axis']
    double_blocks_15_concat_1_axis = cache['double_blocks_15_concat_1_axis']
    double_blocks_15_concat_2_axis = cache['double_blocks_15_concat_2_axis']
    double_blocks_15_img_attn_norm_key_norm_add_right = cache['double_blocks_15_img_attn_norm_key_norm_add_right']
    double_blocks_15_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_15_img_attn_norm_key_norm_divide_numerator']
    double_blocks_15_img_attn_norm_key_norm_mean_axis = cache['double_blocks_15_img_attn_norm_key_norm_mean_axis']
    double_blocks_15_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_15_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_15_img_attn_norm_key_norm_power_exponent = cache['double_blocks_15_img_attn_norm_key_norm_power_exponent']
    double_blocks_15_img_attn_norm_key_norm_scale = params['double_blocks_15_img_attn_norm_key_norm_scale']
    double_blocks_15_img_attn_norm_query_norm_add_right = cache['double_blocks_15_img_attn_norm_query_norm_add_right']
    double_blocks_15_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_15_img_attn_norm_query_norm_divide_numerator']
    double_blocks_15_img_attn_norm_query_norm_mean_axis = cache['double_blocks_15_img_attn_norm_query_norm_mean_axis']
    double_blocks_15_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_15_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_15_img_attn_norm_query_norm_power_exponent = cache['double_blocks_15_img_attn_norm_query_norm_power_exponent']
    double_blocks_15_img_attn_norm_query_norm_scale = params['double_blocks_15_img_attn_norm_query_norm_scale']
    double_blocks_15_img_attn_proj_bias = params['double_blocks_15_img_attn_proj_bias']
    double_blocks_15_img_attn_proj_transpose_axes = cache['double_blocks_15_img_attn_proj_transpose_axes']
    double_blocks_15_img_attn_proj_weight = params['double_blocks_15_img_attn_proj_weight']
    double_blocks_15_img_attn_qkv_bias = params['double_blocks_15_img_attn_qkv_bias']
    double_blocks_15_img_attn_qkv_transpose_axes = cache['double_blocks_15_img_attn_qkv_transpose_axes']
    double_blocks_15_img_attn_qkv_weight = params['double_blocks_15_img_attn_qkv_weight']
    double_blocks_15_img_mlp_0_bias = params['double_blocks_15_img_mlp_0_bias']
    double_blocks_15_img_mlp_0_transpose_axes = cache['double_blocks_15_img_mlp_0_transpose_axes']
    double_blocks_15_img_mlp_0_weight = params['double_blocks_15_img_mlp_0_weight']
    double_blocks_15_img_mlp_2_bias = params['double_blocks_15_img_mlp_2_bias']
    double_blocks_15_img_mlp_2_transpose_axes = cache['double_blocks_15_img_mlp_2_transpose_axes']
    double_blocks_15_img_mlp_2_weight = params['double_blocks_15_img_mlp_2_weight']
    double_blocks_15_img_mlp_gelu_approximate = cache['double_blocks_15_img_mlp_gelu_approximate']
    double_blocks_15_img_mod_lin_bias = params['double_blocks_15_img_mod_lin_bias']
    double_blocks_15_img_mod_lin_transpose_axes = cache['double_blocks_15_img_mod_lin_transpose_axes']
    double_blocks_15_img_mod_lin_weight = params['double_blocks_15_img_mod_lin_weight']
    double_blocks_15_img_mod_silu_add_left = cache['double_blocks_15_img_mod_silu_add_left']
    double_blocks_15_img_mod_split_0_axis = cache['double_blocks_15_img_mod_split_0_axis']
    double_blocks_15_img_mod_split_0_split_size = cache['double_blocks_15_img_mod_split_0_split_size']
    double_blocks_15_img_mod_split_1_axis = cache['double_blocks_15_img_mod_split_1_axis']
    double_blocks_15_img_mod_split_1_split_size = cache['double_blocks_15_img_mod_split_1_split_size']
    double_blocks_15_img_mod_split_2_axis = cache['double_blocks_15_img_mod_split_2_axis']
    double_blocks_15_img_mod_split_2_split_size = cache['double_blocks_15_img_mod_split_2_split_size']
    double_blocks_15_img_mod_tensoritem_0_index = cache['double_blocks_15_img_mod_tensoritem_0_index']
    double_blocks_15_img_mod_tensoritem_1_index = cache['double_blocks_15_img_mod_tensoritem_1_index']
    double_blocks_15_img_mod_tensoritem_2_index = cache['double_blocks_15_img_mod_tensoritem_2_index']
    double_blocks_15_img_norm1_add_right = cache['double_blocks_15_img_norm1_add_right']
    double_blocks_15_img_norm1_mean_axis = cache['double_blocks_15_img_norm1_mean_axis']
    double_blocks_15_img_norm1_mean_keepdim = cache['double_blocks_15_img_norm1_mean_keepdim']
    double_blocks_15_img_norm1_variance_axis = cache['double_blocks_15_img_norm1_variance_axis']
    double_blocks_15_img_norm1_variance_correction = cache['double_blocks_15_img_norm1_variance_correction']
    double_blocks_15_img_norm1_variance_keepdim = cache['double_blocks_15_img_norm1_variance_keepdim']
    double_blocks_15_img_norm2_add_right = cache['double_blocks_15_img_norm2_add_right']
    double_blocks_15_img_norm2_mean_axis = cache['double_blocks_15_img_norm2_mean_axis']
    double_blocks_15_img_norm2_mean_keepdim = cache['double_blocks_15_img_norm2_mean_keepdim']
    double_blocks_15_img_norm2_variance_axis = cache['double_blocks_15_img_norm2_variance_axis']
    double_blocks_15_img_norm2_variance_correction = cache['double_blocks_15_img_norm2_variance_correction']
    double_blocks_15_img_norm2_variance_keepdim = cache['double_blocks_15_img_norm2_variance_keepdim']
    double_blocks_15_model_model_shape_0_output = cache['double_blocks_15_model_model_shape_0_output']
    double_blocks_15_model_model_shape_1_output = cache['double_blocks_15_model_model_shape_1_output']
    double_blocks_15_model_model_tensoritem_0_index = cache['double_blocks_15_model_model_tensoritem_0_index']
    double_blocks_15_model_model_tensoritem_1_index = cache['double_blocks_15_model_model_tensoritem_1_index']
    double_blocks_15_model_model_tensoritem_2_index = cache['double_blocks_15_model_model_tensoritem_2_index']
    double_blocks_15_model_model_tensoritem_3_index = cache['double_blocks_15_model_model_tensoritem_3_index']
    double_blocks_15_model_model_tensoritem_4_index = cache['double_blocks_15_model_model_tensoritem_4_index']
    double_blocks_15_model_model_tensoritem_5_index = cache['double_blocks_15_model_model_tensoritem_5_index']
    double_blocks_15_model_model_tensoritem_6_index = cache['double_blocks_15_model_model_tensoritem_6_index']
    double_blocks_15_model_model_tensoritem_7_index = cache['double_blocks_15_model_model_tensoritem_7_index']
    double_blocks_15_model_model_totuple_0_output = cache['double_blocks_15_model_model_totuple_0_output']
    double_blocks_15_model_model_totuple_1_output = cache['double_blocks_15_model_model_totuple_1_output']
    double_blocks_15_model_scaleddotproduct_attn_mask = cache['double_blocks_15_model_scaleddotproduct_attn_mask']
    double_blocks_15_model_totuple_output = cache['double_blocks_15_model_totuple_output']
    double_blocks_15_model_transpose_axes = cache['double_blocks_15_model_transpose_axes']
    double_blocks_15_tensoritem_0_index = cache['double_blocks_15_tensoritem_0_index']
    double_blocks_15_tensoritem_10_index = cache['double_blocks_15_tensoritem_10_index']
    double_blocks_15_tensoritem_11_index = cache['double_blocks_15_tensoritem_11_index']
    double_blocks_15_tensoritem_12_index = cache['double_blocks_15_tensoritem_12_index']
    double_blocks_15_tensoritem_13_index = cache['double_blocks_15_tensoritem_13_index']
    double_blocks_15_tensoritem_14_index = cache['double_blocks_15_tensoritem_14_index']
    double_blocks_15_tensoritem_15_index = cache['double_blocks_15_tensoritem_15_index']
    double_blocks_15_tensoritem_16_index = cache['double_blocks_15_tensoritem_16_index']
    double_blocks_15_tensoritem_17_index = cache['double_blocks_15_tensoritem_17_index']
    double_blocks_15_tensoritem_18_index = cache['double_blocks_15_tensoritem_18_index']
    double_blocks_15_tensoritem_19_index = cache['double_blocks_15_tensoritem_19_index']
    double_blocks_15_tensoritem_1_index = cache['double_blocks_15_tensoritem_1_index']
    double_blocks_15_tensoritem_2_index = cache['double_blocks_15_tensoritem_2_index']
    double_blocks_15_tensoritem_3_index = cache['double_blocks_15_tensoritem_3_index']
    double_blocks_15_tensoritem_4_index = cache['double_blocks_15_tensoritem_4_index']
    double_blocks_15_tensoritem_5_index = cache['double_blocks_15_tensoritem_5_index']
    double_blocks_15_tensoritem_6_index = cache['double_blocks_15_tensoritem_6_index']
    double_blocks_15_tensoritem_7_index = cache['double_blocks_15_tensoritem_7_index']
    double_blocks_15_tensoritem_8_index = cache['double_blocks_15_tensoritem_8_index']
    double_blocks_15_tensoritem_9_index = cache['double_blocks_15_tensoritem_9_index']
    double_blocks_15_totuple_0_output = cache['double_blocks_15_totuple_0_output']
    double_blocks_15_totuple_1_output = cache['double_blocks_15_totuple_1_output']
    double_blocks_15_transpose_0_axes = cache['double_blocks_15_transpose_0_axes']
    double_blocks_15_transpose_1_axes = cache['double_blocks_15_transpose_1_axes']
    double_blocks_15_txt_attn_norm_key_norm_add_right = cache['double_blocks_15_txt_attn_norm_key_norm_add_right']
    double_blocks_15_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_15_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_15_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_15_txt_attn_norm_key_norm_mean_axis']
    double_blocks_15_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_15_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_15_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_15_txt_attn_norm_key_norm_power_exponent']
    double_blocks_15_txt_attn_norm_key_norm_scale = params['double_blocks_15_txt_attn_norm_key_norm_scale']
    double_blocks_15_txt_attn_norm_query_norm_add_right = cache['double_blocks_15_txt_attn_norm_query_norm_add_right']
    double_blocks_15_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_15_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_15_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_15_txt_attn_norm_query_norm_mean_axis']
    double_blocks_15_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_15_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_15_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_15_txt_attn_norm_query_norm_power_exponent']
    double_blocks_15_txt_attn_norm_query_norm_scale = params['double_blocks_15_txt_attn_norm_query_norm_scale']
    double_blocks_15_txt_attn_proj_bias = params['double_blocks_15_txt_attn_proj_bias']
    double_blocks_15_txt_attn_proj_transpose_axes = cache['double_blocks_15_txt_attn_proj_transpose_axes']
    double_blocks_15_txt_attn_proj_weight = params['double_blocks_15_txt_attn_proj_weight']
    double_blocks_15_txt_attn_qkv_bias = params['double_blocks_15_txt_attn_qkv_bias']
    double_blocks_15_txt_attn_qkv_transpose_axes = cache['double_blocks_15_txt_attn_qkv_transpose_axes']
    double_blocks_15_txt_attn_qkv_weight = params['double_blocks_15_txt_attn_qkv_weight']
    double_blocks_15_txt_mlp_0_bias = params['double_blocks_15_txt_mlp_0_bias']
    double_blocks_15_txt_mlp_0_transpose_axes = cache['double_blocks_15_txt_mlp_0_transpose_axes']
    double_blocks_15_txt_mlp_0_weight = params['double_blocks_15_txt_mlp_0_weight']
    double_blocks_15_txt_mlp_2_bias = params['double_blocks_15_txt_mlp_2_bias']
    double_blocks_15_txt_mlp_2_transpose_axes = cache['double_blocks_15_txt_mlp_2_transpose_axes']
    double_blocks_15_txt_mlp_2_weight = params['double_blocks_15_txt_mlp_2_weight']
    double_blocks_15_txt_mlp_gelu_approximate = cache['double_blocks_15_txt_mlp_gelu_approximate']
    double_blocks_15_txt_mod_lin_bias = params['double_blocks_15_txt_mod_lin_bias']
    double_blocks_15_txt_mod_lin_transpose_axes = cache['double_blocks_15_txt_mod_lin_transpose_axes']
    double_blocks_15_txt_mod_lin_weight = params['double_blocks_15_txt_mod_lin_weight']
    double_blocks_15_txt_mod_silu_add_left = cache['double_blocks_15_txt_mod_silu_add_left']
    double_blocks_15_txt_mod_split_0_axis = cache['double_blocks_15_txt_mod_split_0_axis']
    double_blocks_15_txt_mod_split_0_split_size = cache['double_blocks_15_txt_mod_split_0_split_size']
    double_blocks_15_txt_mod_split_1_axis = cache['double_blocks_15_txt_mod_split_1_axis']
    double_blocks_15_txt_mod_split_1_split_size = cache['double_blocks_15_txt_mod_split_1_split_size']
    double_blocks_15_txt_mod_split_2_axis = cache['double_blocks_15_txt_mod_split_2_axis']
    double_blocks_15_txt_mod_split_2_split_size = cache['double_blocks_15_txt_mod_split_2_split_size']
    double_blocks_15_txt_mod_tensoritem_0_index = cache['double_blocks_15_txt_mod_tensoritem_0_index']
    double_blocks_15_txt_mod_tensoritem_1_index = cache['double_blocks_15_txt_mod_tensoritem_1_index']
    double_blocks_15_txt_mod_tensoritem_2_index = cache['double_blocks_15_txt_mod_tensoritem_2_index']
    double_blocks_15_txt_norm1_add_right = cache['double_blocks_15_txt_norm1_add_right']
    double_blocks_15_txt_norm1_mean_axis = cache['double_blocks_15_txt_norm1_mean_axis']
    double_blocks_15_txt_norm1_mean_keepdim = cache['double_blocks_15_txt_norm1_mean_keepdim']
    double_blocks_15_txt_norm1_variance_axis = cache['double_blocks_15_txt_norm1_variance_axis']
    double_blocks_15_txt_norm1_variance_correction = cache['double_blocks_15_txt_norm1_variance_correction']
    double_blocks_15_txt_norm1_variance_keepdim = cache['double_blocks_15_txt_norm1_variance_keepdim']
    double_blocks_15_txt_norm2_add_right = cache['double_blocks_15_txt_norm2_add_right']
    double_blocks_15_txt_norm2_mean_axis = cache['double_blocks_15_txt_norm2_mean_axis']
    double_blocks_15_txt_norm2_mean_keepdim = cache['double_blocks_15_txt_norm2_mean_keepdim']
    double_blocks_15_txt_norm2_variance_axis = cache['double_blocks_15_txt_norm2_variance_axis']
    double_blocks_15_txt_norm2_variance_correction = cache['double_blocks_15_txt_norm2_variance_correction']
    double_blocks_15_txt_norm2_variance_keepdim = cache['double_blocks_15_txt_norm2_variance_keepdim']
    double_blocks_16_add_0_left = cache['double_blocks_16_add_0_left']
    double_blocks_16_add_2_left = cache['double_blocks_16_add_2_left']
    double_blocks_16_add_5_left = cache['double_blocks_16_add_5_left']
    double_blocks_16_add_8_left = cache['double_blocks_16_add_8_left']
    double_blocks_16_concat_0_axis = cache['double_blocks_16_concat_0_axis']
    double_blocks_16_concat_1_axis = cache['double_blocks_16_concat_1_axis']
    double_blocks_16_concat_2_axis = cache['double_blocks_16_concat_2_axis']
    double_blocks_16_img_attn_norm_key_norm_add_right = cache['double_blocks_16_img_attn_norm_key_norm_add_right']
    double_blocks_16_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_16_img_attn_norm_key_norm_divide_numerator']
    double_blocks_16_img_attn_norm_key_norm_mean_axis = cache['double_blocks_16_img_attn_norm_key_norm_mean_axis']
    double_blocks_16_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_16_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_16_img_attn_norm_key_norm_power_exponent = cache['double_blocks_16_img_attn_norm_key_norm_power_exponent']
    double_blocks_16_img_attn_norm_key_norm_scale = params['double_blocks_16_img_attn_norm_key_norm_scale']
    double_blocks_16_img_attn_norm_query_norm_add_right = cache['double_blocks_16_img_attn_norm_query_norm_add_right']
    double_blocks_16_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_16_img_attn_norm_query_norm_divide_numerator']
    double_blocks_16_img_attn_norm_query_norm_mean_axis = cache['double_blocks_16_img_attn_norm_query_norm_mean_axis']
    double_blocks_16_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_16_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_16_img_attn_norm_query_norm_power_exponent = cache['double_blocks_16_img_attn_norm_query_norm_power_exponent']
    double_blocks_16_img_attn_norm_query_norm_scale = params['double_blocks_16_img_attn_norm_query_norm_scale']
    double_blocks_16_img_attn_proj_bias = params['double_blocks_16_img_attn_proj_bias']
    double_blocks_16_img_attn_proj_transpose_axes = cache['double_blocks_16_img_attn_proj_transpose_axes']
    double_blocks_16_img_attn_proj_weight = params['double_blocks_16_img_attn_proj_weight']
    double_blocks_16_img_attn_qkv_bias = params['double_blocks_16_img_attn_qkv_bias']
    double_blocks_16_img_attn_qkv_transpose_axes = cache['double_blocks_16_img_attn_qkv_transpose_axes']
    double_blocks_16_img_attn_qkv_weight = params['double_blocks_16_img_attn_qkv_weight']
    double_blocks_16_img_mlp_0_bias = params['double_blocks_16_img_mlp_0_bias']
    double_blocks_16_img_mlp_0_transpose_axes = cache['double_blocks_16_img_mlp_0_transpose_axes']
    double_blocks_16_img_mlp_0_weight = params['double_blocks_16_img_mlp_0_weight']
    double_blocks_16_img_mlp_2_bias = params['double_blocks_16_img_mlp_2_bias']
    double_blocks_16_img_mlp_2_transpose_axes = cache['double_blocks_16_img_mlp_2_transpose_axes']
    double_blocks_16_img_mlp_2_weight = params['double_blocks_16_img_mlp_2_weight']
    double_blocks_16_img_mlp_gelu_approximate = cache['double_blocks_16_img_mlp_gelu_approximate']
    double_blocks_16_img_mod_lin_bias = params['double_blocks_16_img_mod_lin_bias']
    double_blocks_16_img_mod_lin_transpose_axes = cache['double_blocks_16_img_mod_lin_transpose_axes']
    double_blocks_16_img_mod_lin_weight = params['double_blocks_16_img_mod_lin_weight']
    double_blocks_16_img_mod_silu_add_left = cache['double_blocks_16_img_mod_silu_add_left']
    double_blocks_16_img_mod_split_0_axis = cache['double_blocks_16_img_mod_split_0_axis']
    double_blocks_16_img_mod_split_0_split_size = cache['double_blocks_16_img_mod_split_0_split_size']
    double_blocks_16_img_mod_split_1_axis = cache['double_blocks_16_img_mod_split_1_axis']
    double_blocks_16_img_mod_split_1_split_size = cache['double_blocks_16_img_mod_split_1_split_size']
    double_blocks_16_img_mod_split_2_axis = cache['double_blocks_16_img_mod_split_2_axis']
    double_blocks_16_img_mod_split_2_split_size = cache['double_blocks_16_img_mod_split_2_split_size']
    double_blocks_16_img_mod_tensoritem_0_index = cache['double_blocks_16_img_mod_tensoritem_0_index']
    double_blocks_16_img_mod_tensoritem_1_index = cache['double_blocks_16_img_mod_tensoritem_1_index']
    double_blocks_16_img_mod_tensoritem_2_index = cache['double_blocks_16_img_mod_tensoritem_2_index']
    double_blocks_16_img_norm1_add_right = cache['double_blocks_16_img_norm1_add_right']
    double_blocks_16_img_norm1_mean_axis = cache['double_blocks_16_img_norm1_mean_axis']
    double_blocks_16_img_norm1_mean_keepdim = cache['double_blocks_16_img_norm1_mean_keepdim']
    double_blocks_16_img_norm1_variance_axis = cache['double_blocks_16_img_norm1_variance_axis']
    double_blocks_16_img_norm1_variance_correction = cache['double_blocks_16_img_norm1_variance_correction']
    double_blocks_16_img_norm1_variance_keepdim = cache['double_blocks_16_img_norm1_variance_keepdim']
    double_blocks_16_img_norm2_add_right = cache['double_blocks_16_img_norm2_add_right']
    double_blocks_16_img_norm2_mean_axis = cache['double_blocks_16_img_norm2_mean_axis']
    double_blocks_16_img_norm2_mean_keepdim = cache['double_blocks_16_img_norm2_mean_keepdim']
    double_blocks_16_img_norm2_variance_axis = cache['double_blocks_16_img_norm2_variance_axis']
    double_blocks_16_img_norm2_variance_correction = cache['double_blocks_16_img_norm2_variance_correction']
    double_blocks_16_img_norm2_variance_keepdim = cache['double_blocks_16_img_norm2_variance_keepdim']
    double_blocks_16_model_model_shape_0_output = cache['double_blocks_16_model_model_shape_0_output']
    double_blocks_16_model_model_shape_1_output = cache['double_blocks_16_model_model_shape_1_output']
    double_blocks_16_model_model_tensoritem_0_index = cache['double_blocks_16_model_model_tensoritem_0_index']
    double_blocks_16_model_model_tensoritem_1_index = cache['double_blocks_16_model_model_tensoritem_1_index']
    double_blocks_16_model_model_tensoritem_2_index = cache['double_blocks_16_model_model_tensoritem_2_index']
    double_blocks_16_model_model_tensoritem_3_index = cache['double_blocks_16_model_model_tensoritem_3_index']
    double_blocks_16_model_model_tensoritem_4_index = cache['double_blocks_16_model_model_tensoritem_4_index']
    double_blocks_16_model_model_tensoritem_5_index = cache['double_blocks_16_model_model_tensoritem_5_index']
    double_blocks_16_model_model_tensoritem_6_index = cache['double_blocks_16_model_model_tensoritem_6_index']
    double_blocks_16_model_model_tensoritem_7_index = cache['double_blocks_16_model_model_tensoritem_7_index']
    double_blocks_16_model_model_totuple_0_output = cache['double_blocks_16_model_model_totuple_0_output']
    double_blocks_16_model_model_totuple_1_output = cache['double_blocks_16_model_model_totuple_1_output']
    double_blocks_16_model_scaleddotproduct_attn_mask = cache['double_blocks_16_model_scaleddotproduct_attn_mask']
    double_blocks_16_model_totuple_output = cache['double_blocks_16_model_totuple_output']
    double_blocks_16_model_transpose_axes = cache['double_blocks_16_model_transpose_axes']
    double_blocks_16_tensoritem_0_index = cache['double_blocks_16_tensoritem_0_index']
    double_blocks_16_tensoritem_10_index = cache['double_blocks_16_tensoritem_10_index']
    double_blocks_16_tensoritem_11_index = cache['double_blocks_16_tensoritem_11_index']
    double_blocks_16_tensoritem_12_index = cache['double_blocks_16_tensoritem_12_index']
    double_blocks_16_tensoritem_13_index = cache['double_blocks_16_tensoritem_13_index']
    double_blocks_16_tensoritem_14_index = cache['double_blocks_16_tensoritem_14_index']
    double_blocks_16_tensoritem_15_index = cache['double_blocks_16_tensoritem_15_index']
    double_blocks_16_tensoritem_16_index = cache['double_blocks_16_tensoritem_16_index']
    double_blocks_16_tensoritem_17_index = cache['double_blocks_16_tensoritem_17_index']
    double_blocks_16_tensoritem_18_index = cache['double_blocks_16_tensoritem_18_index']
    double_blocks_16_tensoritem_19_index = cache['double_blocks_16_tensoritem_19_index']
    double_blocks_16_tensoritem_1_index = cache['double_blocks_16_tensoritem_1_index']
    double_blocks_16_tensoritem_2_index = cache['double_blocks_16_tensoritem_2_index']
    double_blocks_16_tensoritem_3_index = cache['double_blocks_16_tensoritem_3_index']
    double_blocks_16_tensoritem_4_index = cache['double_blocks_16_tensoritem_4_index']
    double_blocks_16_tensoritem_5_index = cache['double_blocks_16_tensoritem_5_index']
    double_blocks_16_tensoritem_6_index = cache['double_blocks_16_tensoritem_6_index']
    double_blocks_16_tensoritem_7_index = cache['double_blocks_16_tensoritem_7_index']
    double_blocks_16_tensoritem_8_index = cache['double_blocks_16_tensoritem_8_index']
    double_blocks_16_tensoritem_9_index = cache['double_blocks_16_tensoritem_9_index']
    double_blocks_16_totuple_0_output = cache['double_blocks_16_totuple_0_output']
    double_blocks_16_totuple_1_output = cache['double_blocks_16_totuple_1_output']
    double_blocks_16_transpose_0_axes = cache['double_blocks_16_transpose_0_axes']
    double_blocks_16_transpose_1_axes = cache['double_blocks_16_transpose_1_axes']
    double_blocks_16_txt_attn_norm_key_norm_add_right = cache['double_blocks_16_txt_attn_norm_key_norm_add_right']
    double_blocks_16_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_16_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_16_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_16_txt_attn_norm_key_norm_mean_axis']
    double_blocks_16_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_16_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_16_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_16_txt_attn_norm_key_norm_power_exponent']
    double_blocks_16_txt_attn_norm_key_norm_scale = params['double_blocks_16_txt_attn_norm_key_norm_scale']
    double_blocks_16_txt_attn_norm_query_norm_add_right = cache['double_blocks_16_txt_attn_norm_query_norm_add_right']
    double_blocks_16_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_16_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_16_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_16_txt_attn_norm_query_norm_mean_axis']
    double_blocks_16_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_16_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_16_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_16_txt_attn_norm_query_norm_power_exponent']
    double_blocks_16_txt_attn_norm_query_norm_scale = params['double_blocks_16_txt_attn_norm_query_norm_scale']
    double_blocks_16_txt_attn_proj_bias = params['double_blocks_16_txt_attn_proj_bias']
    double_blocks_16_txt_attn_proj_transpose_axes = cache['double_blocks_16_txt_attn_proj_transpose_axes']
    double_blocks_16_txt_attn_proj_weight = params['double_blocks_16_txt_attn_proj_weight']
    double_blocks_16_txt_attn_qkv_bias = params['double_blocks_16_txt_attn_qkv_bias']
    double_blocks_16_txt_attn_qkv_transpose_axes = cache['double_blocks_16_txt_attn_qkv_transpose_axes']
    double_blocks_16_txt_attn_qkv_weight = params['double_blocks_16_txt_attn_qkv_weight']
    double_blocks_16_txt_mlp_0_bias = params['double_blocks_16_txt_mlp_0_bias']
    double_blocks_16_txt_mlp_0_transpose_axes = cache['double_blocks_16_txt_mlp_0_transpose_axes']
    double_blocks_16_txt_mlp_0_weight = params['double_blocks_16_txt_mlp_0_weight']
    double_blocks_16_txt_mlp_2_bias = params['double_blocks_16_txt_mlp_2_bias']
    double_blocks_16_txt_mlp_2_transpose_axes = cache['double_blocks_16_txt_mlp_2_transpose_axes']
    double_blocks_16_txt_mlp_2_weight = params['double_blocks_16_txt_mlp_2_weight']
    double_blocks_16_txt_mlp_gelu_approximate = cache['double_blocks_16_txt_mlp_gelu_approximate']
    double_blocks_16_txt_mod_lin_bias = params['double_blocks_16_txt_mod_lin_bias']
    double_blocks_16_txt_mod_lin_transpose_axes = cache['double_blocks_16_txt_mod_lin_transpose_axes']
    double_blocks_16_txt_mod_lin_weight = params['double_blocks_16_txt_mod_lin_weight']
    double_blocks_16_txt_mod_silu_add_left = cache['double_blocks_16_txt_mod_silu_add_left']
    double_blocks_16_txt_mod_split_0_axis = cache['double_blocks_16_txt_mod_split_0_axis']
    double_blocks_16_txt_mod_split_0_split_size = cache['double_blocks_16_txt_mod_split_0_split_size']
    double_blocks_16_txt_mod_split_1_axis = cache['double_blocks_16_txt_mod_split_1_axis']
    double_blocks_16_txt_mod_split_1_split_size = cache['double_blocks_16_txt_mod_split_1_split_size']
    double_blocks_16_txt_mod_split_2_axis = cache['double_blocks_16_txt_mod_split_2_axis']
    double_blocks_16_txt_mod_split_2_split_size = cache['double_blocks_16_txt_mod_split_2_split_size']
    double_blocks_16_txt_mod_tensoritem_0_index = cache['double_blocks_16_txt_mod_tensoritem_0_index']
    double_blocks_16_txt_mod_tensoritem_1_index = cache['double_blocks_16_txt_mod_tensoritem_1_index']
    double_blocks_16_txt_mod_tensoritem_2_index = cache['double_blocks_16_txt_mod_tensoritem_2_index']
    double_blocks_16_txt_norm1_add_right = cache['double_blocks_16_txt_norm1_add_right']
    double_blocks_16_txt_norm1_mean_axis = cache['double_blocks_16_txt_norm1_mean_axis']
    double_blocks_16_txt_norm1_mean_keepdim = cache['double_blocks_16_txt_norm1_mean_keepdim']
    double_blocks_16_txt_norm1_variance_axis = cache['double_blocks_16_txt_norm1_variance_axis']
    double_blocks_16_txt_norm1_variance_correction = cache['double_blocks_16_txt_norm1_variance_correction']
    double_blocks_16_txt_norm1_variance_keepdim = cache['double_blocks_16_txt_norm1_variance_keepdim']
    double_blocks_16_txt_norm2_add_right = cache['double_blocks_16_txt_norm2_add_right']
    double_blocks_16_txt_norm2_mean_axis = cache['double_blocks_16_txt_norm2_mean_axis']
    double_blocks_16_txt_norm2_mean_keepdim = cache['double_blocks_16_txt_norm2_mean_keepdim']
    double_blocks_16_txt_norm2_variance_axis = cache['double_blocks_16_txt_norm2_variance_axis']
    double_blocks_16_txt_norm2_variance_correction = cache['double_blocks_16_txt_norm2_variance_correction']
    double_blocks_16_txt_norm2_variance_keepdim = cache['double_blocks_16_txt_norm2_variance_keepdim']
    double_blocks_17_add_0_left = cache['double_blocks_17_add_0_left']
    double_blocks_17_add_2_left = cache['double_blocks_17_add_2_left']
    double_blocks_17_add_5_left = cache['double_blocks_17_add_5_left']
    double_blocks_17_add_8_left = cache['double_blocks_17_add_8_left']
    double_blocks_17_concat_0_axis = cache['double_blocks_17_concat_0_axis']
    double_blocks_17_concat_1_axis = cache['double_blocks_17_concat_1_axis']
    double_blocks_17_concat_2_axis = cache['double_blocks_17_concat_2_axis']
    double_blocks_17_img_attn_norm_key_norm_add_right = cache['double_blocks_17_img_attn_norm_key_norm_add_right']
    double_blocks_17_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_17_img_attn_norm_key_norm_divide_numerator']
    double_blocks_17_img_attn_norm_key_norm_mean_axis = cache['double_blocks_17_img_attn_norm_key_norm_mean_axis']
    double_blocks_17_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_17_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_17_img_attn_norm_key_norm_power_exponent = cache['double_blocks_17_img_attn_norm_key_norm_power_exponent']
    double_blocks_17_img_attn_norm_key_norm_scale = params['double_blocks_17_img_attn_norm_key_norm_scale']
    double_blocks_17_img_attn_norm_query_norm_add_right = cache['double_blocks_17_img_attn_norm_query_norm_add_right']
    double_blocks_17_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_17_img_attn_norm_query_norm_divide_numerator']
    double_blocks_17_img_attn_norm_query_norm_mean_axis = cache['double_blocks_17_img_attn_norm_query_norm_mean_axis']
    double_blocks_17_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_17_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_17_img_attn_norm_query_norm_power_exponent = cache['double_blocks_17_img_attn_norm_query_norm_power_exponent']
    double_blocks_17_img_attn_norm_query_norm_scale = params['double_blocks_17_img_attn_norm_query_norm_scale']
    double_blocks_17_img_attn_proj_bias = params['double_blocks_17_img_attn_proj_bias']
    double_blocks_17_img_attn_proj_transpose_axes = cache['double_blocks_17_img_attn_proj_transpose_axes']
    double_blocks_17_img_attn_proj_weight = params['double_blocks_17_img_attn_proj_weight']
    double_blocks_17_img_attn_qkv_bias = params['double_blocks_17_img_attn_qkv_bias']
    double_blocks_17_img_attn_qkv_transpose_axes = cache['double_blocks_17_img_attn_qkv_transpose_axes']
    double_blocks_17_img_attn_qkv_weight = params['double_blocks_17_img_attn_qkv_weight']
    double_blocks_17_img_mlp_0_bias = params['double_blocks_17_img_mlp_0_bias']
    double_blocks_17_img_mlp_0_transpose_axes = cache['double_blocks_17_img_mlp_0_transpose_axes']
    double_blocks_17_img_mlp_0_weight = params['double_blocks_17_img_mlp_0_weight']
    double_blocks_17_img_mlp_2_bias = params['double_blocks_17_img_mlp_2_bias']
    double_blocks_17_img_mlp_2_transpose_axes = cache['double_blocks_17_img_mlp_2_transpose_axes']
    double_blocks_17_img_mlp_2_weight = params['double_blocks_17_img_mlp_2_weight']
    double_blocks_17_img_mlp_gelu_approximate = cache['double_blocks_17_img_mlp_gelu_approximate']
    double_blocks_17_img_mod_lin_bias = params['double_blocks_17_img_mod_lin_bias']
    double_blocks_17_img_mod_lin_transpose_axes = cache['double_blocks_17_img_mod_lin_transpose_axes']
    double_blocks_17_img_mod_lin_weight = params['double_blocks_17_img_mod_lin_weight']
    double_blocks_17_img_mod_silu_add_left = cache['double_blocks_17_img_mod_silu_add_left']
    double_blocks_17_img_mod_split_0_axis = cache['double_blocks_17_img_mod_split_0_axis']
    double_blocks_17_img_mod_split_0_split_size = cache['double_blocks_17_img_mod_split_0_split_size']
    double_blocks_17_img_mod_split_1_axis = cache['double_blocks_17_img_mod_split_1_axis']
    double_blocks_17_img_mod_split_1_split_size = cache['double_blocks_17_img_mod_split_1_split_size']
    double_blocks_17_img_mod_split_2_axis = cache['double_blocks_17_img_mod_split_2_axis']
    double_blocks_17_img_mod_split_2_split_size = cache['double_blocks_17_img_mod_split_2_split_size']
    double_blocks_17_img_mod_tensoritem_0_index = cache['double_blocks_17_img_mod_tensoritem_0_index']
    double_blocks_17_img_mod_tensoritem_1_index = cache['double_blocks_17_img_mod_tensoritem_1_index']
    double_blocks_17_img_mod_tensoritem_2_index = cache['double_blocks_17_img_mod_tensoritem_2_index']
    double_blocks_17_img_norm1_add_right = cache['double_blocks_17_img_norm1_add_right']
    double_blocks_17_img_norm1_mean_axis = cache['double_blocks_17_img_norm1_mean_axis']
    double_blocks_17_img_norm1_mean_keepdim = cache['double_blocks_17_img_norm1_mean_keepdim']
    double_blocks_17_img_norm1_variance_axis = cache['double_blocks_17_img_norm1_variance_axis']
    double_blocks_17_img_norm1_variance_correction = cache['double_blocks_17_img_norm1_variance_correction']
    double_blocks_17_img_norm1_variance_keepdim = cache['double_blocks_17_img_norm1_variance_keepdim']
    double_blocks_17_img_norm2_add_right = cache['double_blocks_17_img_norm2_add_right']
    double_blocks_17_img_norm2_mean_axis = cache['double_blocks_17_img_norm2_mean_axis']
    double_blocks_17_img_norm2_mean_keepdim = cache['double_blocks_17_img_norm2_mean_keepdim']
    double_blocks_17_img_norm2_variance_axis = cache['double_blocks_17_img_norm2_variance_axis']
    double_blocks_17_img_norm2_variance_correction = cache['double_blocks_17_img_norm2_variance_correction']
    double_blocks_17_img_norm2_variance_keepdim = cache['double_blocks_17_img_norm2_variance_keepdim']
    double_blocks_17_model_model_shape_0_output = cache['double_blocks_17_model_model_shape_0_output']
    double_blocks_17_model_model_shape_1_output = cache['double_blocks_17_model_model_shape_1_output']
    double_blocks_17_model_model_tensoritem_0_index = cache['double_blocks_17_model_model_tensoritem_0_index']
    double_blocks_17_model_model_tensoritem_1_index = cache['double_blocks_17_model_model_tensoritem_1_index']
    double_blocks_17_model_model_tensoritem_2_index = cache['double_blocks_17_model_model_tensoritem_2_index']
    double_blocks_17_model_model_tensoritem_3_index = cache['double_blocks_17_model_model_tensoritem_3_index']
    double_blocks_17_model_model_tensoritem_4_index = cache['double_blocks_17_model_model_tensoritem_4_index']
    double_blocks_17_model_model_tensoritem_5_index = cache['double_blocks_17_model_model_tensoritem_5_index']
    double_blocks_17_model_model_tensoritem_6_index = cache['double_blocks_17_model_model_tensoritem_6_index']
    double_blocks_17_model_model_tensoritem_7_index = cache['double_blocks_17_model_model_tensoritem_7_index']
    double_blocks_17_model_model_totuple_0_output = cache['double_blocks_17_model_model_totuple_0_output']
    double_blocks_17_model_model_totuple_1_output = cache['double_blocks_17_model_model_totuple_1_output']
    double_blocks_17_model_scaleddotproduct_attn_mask = cache['double_blocks_17_model_scaleddotproduct_attn_mask']
    double_blocks_17_model_totuple_output = cache['double_blocks_17_model_totuple_output']
    double_blocks_17_model_transpose_axes = cache['double_blocks_17_model_transpose_axes']
    double_blocks_17_tensoritem_0_index = cache['double_blocks_17_tensoritem_0_index']
    double_blocks_17_tensoritem_10_index = cache['double_blocks_17_tensoritem_10_index']
    double_blocks_17_tensoritem_11_index = cache['double_blocks_17_tensoritem_11_index']
    double_blocks_17_tensoritem_12_index = cache['double_blocks_17_tensoritem_12_index']
    double_blocks_17_tensoritem_13_index = cache['double_blocks_17_tensoritem_13_index']
    double_blocks_17_tensoritem_14_index = cache['double_blocks_17_tensoritem_14_index']
    double_blocks_17_tensoritem_15_index = cache['double_blocks_17_tensoritem_15_index']
    double_blocks_17_tensoritem_16_index = cache['double_blocks_17_tensoritem_16_index']
    double_blocks_17_tensoritem_17_index = cache['double_blocks_17_tensoritem_17_index']
    double_blocks_17_tensoritem_18_index = cache['double_blocks_17_tensoritem_18_index']
    double_blocks_17_tensoritem_19_index = cache['double_blocks_17_tensoritem_19_index']
    double_blocks_17_tensoritem_1_index = cache['double_blocks_17_tensoritem_1_index']
    double_blocks_17_tensoritem_2_index = cache['double_blocks_17_tensoritem_2_index']
    double_blocks_17_tensoritem_3_index = cache['double_blocks_17_tensoritem_3_index']
    double_blocks_17_tensoritem_4_index = cache['double_blocks_17_tensoritem_4_index']
    double_blocks_17_tensoritem_5_index = cache['double_blocks_17_tensoritem_5_index']
    double_blocks_17_tensoritem_6_index = cache['double_blocks_17_tensoritem_6_index']
    double_blocks_17_tensoritem_7_index = cache['double_blocks_17_tensoritem_7_index']
    double_blocks_17_tensoritem_8_index = cache['double_blocks_17_tensoritem_8_index']
    double_blocks_17_tensoritem_9_index = cache['double_blocks_17_tensoritem_9_index']
    double_blocks_17_totuple_0_output = cache['double_blocks_17_totuple_0_output']
    double_blocks_17_totuple_1_output = cache['double_blocks_17_totuple_1_output']
    double_blocks_17_transpose_0_axes = cache['double_blocks_17_transpose_0_axes']
    double_blocks_17_transpose_1_axes = cache['double_blocks_17_transpose_1_axes']
    double_blocks_17_txt_attn_norm_key_norm_add_right = cache['double_blocks_17_txt_attn_norm_key_norm_add_right']
    double_blocks_17_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_17_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_17_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_17_txt_attn_norm_key_norm_mean_axis']
    double_blocks_17_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_17_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_17_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_17_txt_attn_norm_key_norm_power_exponent']
    double_blocks_17_txt_attn_norm_key_norm_scale = params['double_blocks_17_txt_attn_norm_key_norm_scale']
    double_blocks_17_txt_attn_norm_query_norm_add_right = cache['double_blocks_17_txt_attn_norm_query_norm_add_right']
    double_blocks_17_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_17_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_17_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_17_txt_attn_norm_query_norm_mean_axis']
    double_blocks_17_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_17_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_17_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_17_txt_attn_norm_query_norm_power_exponent']
    double_blocks_17_txt_attn_norm_query_norm_scale = params['double_blocks_17_txt_attn_norm_query_norm_scale']
    double_blocks_17_txt_attn_proj_bias = params['double_blocks_17_txt_attn_proj_bias']
    double_blocks_17_txt_attn_proj_transpose_axes = cache['double_blocks_17_txt_attn_proj_transpose_axes']
    double_blocks_17_txt_attn_proj_weight = params['double_blocks_17_txt_attn_proj_weight']
    double_blocks_17_txt_attn_qkv_bias = params['double_blocks_17_txt_attn_qkv_bias']
    double_blocks_17_txt_attn_qkv_transpose_axes = cache['double_blocks_17_txt_attn_qkv_transpose_axes']
    double_blocks_17_txt_attn_qkv_weight = params['double_blocks_17_txt_attn_qkv_weight']
    double_blocks_17_txt_mlp_0_bias = params['double_blocks_17_txt_mlp_0_bias']
    double_blocks_17_txt_mlp_0_transpose_axes = cache['double_blocks_17_txt_mlp_0_transpose_axes']
    double_blocks_17_txt_mlp_0_weight = params['double_blocks_17_txt_mlp_0_weight']
    double_blocks_17_txt_mlp_2_bias = params['double_blocks_17_txt_mlp_2_bias']
    double_blocks_17_txt_mlp_2_transpose_axes = cache['double_blocks_17_txt_mlp_2_transpose_axes']
    double_blocks_17_txt_mlp_2_weight = params['double_blocks_17_txt_mlp_2_weight']
    double_blocks_17_txt_mlp_gelu_approximate = cache['double_blocks_17_txt_mlp_gelu_approximate']
    double_blocks_17_txt_mod_lin_bias = params['double_blocks_17_txt_mod_lin_bias']
    double_blocks_17_txt_mod_lin_transpose_axes = cache['double_blocks_17_txt_mod_lin_transpose_axes']
    double_blocks_17_txt_mod_lin_weight = params['double_blocks_17_txt_mod_lin_weight']
    double_blocks_17_txt_mod_silu_add_left = cache['double_blocks_17_txt_mod_silu_add_left']
    double_blocks_17_txt_mod_split_0_axis = cache['double_blocks_17_txt_mod_split_0_axis']
    double_blocks_17_txt_mod_split_0_split_size = cache['double_blocks_17_txt_mod_split_0_split_size']
    double_blocks_17_txt_mod_split_1_axis = cache['double_blocks_17_txt_mod_split_1_axis']
    double_blocks_17_txt_mod_split_1_split_size = cache['double_blocks_17_txt_mod_split_1_split_size']
    double_blocks_17_txt_mod_split_2_axis = cache['double_blocks_17_txt_mod_split_2_axis']
    double_blocks_17_txt_mod_split_2_split_size = cache['double_blocks_17_txt_mod_split_2_split_size']
    double_blocks_17_txt_mod_tensoritem_0_index = cache['double_blocks_17_txt_mod_tensoritem_0_index']
    double_blocks_17_txt_mod_tensoritem_1_index = cache['double_blocks_17_txt_mod_tensoritem_1_index']
    double_blocks_17_txt_mod_tensoritem_2_index = cache['double_blocks_17_txt_mod_tensoritem_2_index']
    double_blocks_17_txt_norm1_add_right = cache['double_blocks_17_txt_norm1_add_right']
    double_blocks_17_txt_norm1_mean_axis = cache['double_blocks_17_txt_norm1_mean_axis']
    double_blocks_17_txt_norm1_mean_keepdim = cache['double_blocks_17_txt_norm1_mean_keepdim']
    double_blocks_17_txt_norm1_variance_axis = cache['double_blocks_17_txt_norm1_variance_axis']
    double_blocks_17_txt_norm1_variance_correction = cache['double_blocks_17_txt_norm1_variance_correction']
    double_blocks_17_txt_norm1_variance_keepdim = cache['double_blocks_17_txt_norm1_variance_keepdim']
    double_blocks_17_txt_norm2_add_right = cache['double_blocks_17_txt_norm2_add_right']
    double_blocks_17_txt_norm2_mean_axis = cache['double_blocks_17_txt_norm2_mean_axis']
    double_blocks_17_txt_norm2_mean_keepdim = cache['double_blocks_17_txt_norm2_mean_keepdim']
    double_blocks_17_txt_norm2_variance_axis = cache['double_blocks_17_txt_norm2_variance_axis']
    double_blocks_17_txt_norm2_variance_correction = cache['double_blocks_17_txt_norm2_variance_correction']
    double_blocks_17_txt_norm2_variance_keepdim = cache['double_blocks_17_txt_norm2_variance_keepdim']
    double_blocks_18_add_0_left = cache['double_blocks_18_add_0_left']
    double_blocks_18_add_2_left = cache['double_blocks_18_add_2_left']
    double_blocks_18_add_5_left = cache['double_blocks_18_add_5_left']
    double_blocks_18_add_8_left = cache['double_blocks_18_add_8_left']
    double_blocks_18_concat_0_axis = cache['double_blocks_18_concat_0_axis']
    double_blocks_18_concat_1_axis = cache['double_blocks_18_concat_1_axis']
    double_blocks_18_concat_2_axis = cache['double_blocks_18_concat_2_axis']
    double_blocks_18_img_attn_norm_key_norm_add_right = cache['double_blocks_18_img_attn_norm_key_norm_add_right']
    double_blocks_18_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_18_img_attn_norm_key_norm_divide_numerator']
    double_blocks_18_img_attn_norm_key_norm_mean_axis = cache['double_blocks_18_img_attn_norm_key_norm_mean_axis']
    double_blocks_18_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_18_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_18_img_attn_norm_key_norm_power_exponent = cache['double_blocks_18_img_attn_norm_key_norm_power_exponent']
    double_blocks_18_img_attn_norm_key_norm_scale = params['double_blocks_18_img_attn_norm_key_norm_scale']
    double_blocks_18_img_attn_norm_query_norm_add_right = cache['double_blocks_18_img_attn_norm_query_norm_add_right']
    double_blocks_18_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_18_img_attn_norm_query_norm_divide_numerator']
    double_blocks_18_img_attn_norm_query_norm_mean_axis = cache['double_blocks_18_img_attn_norm_query_norm_mean_axis']
    double_blocks_18_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_18_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_18_img_attn_norm_query_norm_power_exponent = cache['double_blocks_18_img_attn_norm_query_norm_power_exponent']
    double_blocks_18_img_attn_norm_query_norm_scale = params['double_blocks_18_img_attn_norm_query_norm_scale']
    double_blocks_18_img_attn_proj_bias = params['double_blocks_18_img_attn_proj_bias']
    double_blocks_18_img_attn_proj_transpose_axes = cache['double_blocks_18_img_attn_proj_transpose_axes']
    double_blocks_18_img_attn_proj_weight = params['double_blocks_18_img_attn_proj_weight']
    double_blocks_18_img_attn_qkv_bias = params['double_blocks_18_img_attn_qkv_bias']
    double_blocks_18_img_attn_qkv_transpose_axes = cache['double_blocks_18_img_attn_qkv_transpose_axes']
    double_blocks_18_img_attn_qkv_weight = params['double_blocks_18_img_attn_qkv_weight']
    double_blocks_18_img_mlp_0_bias = params['double_blocks_18_img_mlp_0_bias']
    double_blocks_18_img_mlp_0_transpose_axes = cache['double_blocks_18_img_mlp_0_transpose_axes']
    double_blocks_18_img_mlp_0_weight = params['double_blocks_18_img_mlp_0_weight']
    double_blocks_18_img_mlp_2_bias = params['double_blocks_18_img_mlp_2_bias']
    double_blocks_18_img_mlp_2_transpose_axes = cache['double_blocks_18_img_mlp_2_transpose_axes']
    double_blocks_18_img_mlp_2_weight = params['double_blocks_18_img_mlp_2_weight']
    double_blocks_18_img_mlp_gelu_approximate = cache['double_blocks_18_img_mlp_gelu_approximate']
    double_blocks_18_img_mod_lin_bias = params['double_blocks_18_img_mod_lin_bias']
    double_blocks_18_img_mod_lin_transpose_axes = cache['double_blocks_18_img_mod_lin_transpose_axes']
    double_blocks_18_img_mod_lin_weight = params['double_blocks_18_img_mod_lin_weight']
    double_blocks_18_img_mod_silu_add_left = cache['double_blocks_18_img_mod_silu_add_left']
    double_blocks_18_img_mod_split_0_axis = cache['double_blocks_18_img_mod_split_0_axis']
    double_blocks_18_img_mod_split_0_split_size = cache['double_blocks_18_img_mod_split_0_split_size']
    double_blocks_18_img_mod_split_1_axis = cache['double_blocks_18_img_mod_split_1_axis']
    double_blocks_18_img_mod_split_1_split_size = cache['double_blocks_18_img_mod_split_1_split_size']
    double_blocks_18_img_mod_split_2_axis = cache['double_blocks_18_img_mod_split_2_axis']
    double_blocks_18_img_mod_split_2_split_size = cache['double_blocks_18_img_mod_split_2_split_size']
    double_blocks_18_img_mod_tensoritem_0_index = cache['double_blocks_18_img_mod_tensoritem_0_index']
    double_blocks_18_img_mod_tensoritem_1_index = cache['double_blocks_18_img_mod_tensoritem_1_index']
    double_blocks_18_img_mod_tensoritem_2_index = cache['double_blocks_18_img_mod_tensoritem_2_index']
    double_blocks_18_img_norm1_add_right = cache['double_blocks_18_img_norm1_add_right']
    double_blocks_18_img_norm1_mean_axis = cache['double_blocks_18_img_norm1_mean_axis']
    double_blocks_18_img_norm1_mean_keepdim = cache['double_blocks_18_img_norm1_mean_keepdim']
    double_blocks_18_img_norm1_variance_axis = cache['double_blocks_18_img_norm1_variance_axis']
    double_blocks_18_img_norm1_variance_correction = cache['double_blocks_18_img_norm1_variance_correction']
    double_blocks_18_img_norm1_variance_keepdim = cache['double_blocks_18_img_norm1_variance_keepdim']
    double_blocks_18_img_norm2_add_right = cache['double_blocks_18_img_norm2_add_right']
    double_blocks_18_img_norm2_mean_axis = cache['double_blocks_18_img_norm2_mean_axis']
    double_blocks_18_img_norm2_mean_keepdim = cache['double_blocks_18_img_norm2_mean_keepdim']
    double_blocks_18_img_norm2_variance_axis = cache['double_blocks_18_img_norm2_variance_axis']
    double_blocks_18_img_norm2_variance_correction = cache['double_blocks_18_img_norm2_variance_correction']
    double_blocks_18_img_norm2_variance_keepdim = cache['double_blocks_18_img_norm2_variance_keepdim']
    double_blocks_18_model_model_shape_0_output = cache['double_blocks_18_model_model_shape_0_output']
    double_blocks_18_model_model_shape_1_output = cache['double_blocks_18_model_model_shape_1_output']
    double_blocks_18_model_model_tensoritem_0_index = cache['double_blocks_18_model_model_tensoritem_0_index']
    double_blocks_18_model_model_tensoritem_1_index = cache['double_blocks_18_model_model_tensoritem_1_index']
    double_blocks_18_model_model_tensoritem_2_index = cache['double_blocks_18_model_model_tensoritem_2_index']
    double_blocks_18_model_model_tensoritem_3_index = cache['double_blocks_18_model_model_tensoritem_3_index']
    double_blocks_18_model_model_tensoritem_4_index = cache['double_blocks_18_model_model_tensoritem_4_index']
    double_blocks_18_model_model_tensoritem_5_index = cache['double_blocks_18_model_model_tensoritem_5_index']
    double_blocks_18_model_model_tensoritem_6_index = cache['double_blocks_18_model_model_tensoritem_6_index']
    double_blocks_18_model_model_tensoritem_7_index = cache['double_blocks_18_model_model_tensoritem_7_index']
    double_blocks_18_model_model_totuple_0_output = cache['double_blocks_18_model_model_totuple_0_output']
    double_blocks_18_model_model_totuple_1_output = cache['double_blocks_18_model_model_totuple_1_output']
    double_blocks_18_model_scaleddotproduct_attn_mask = cache['double_blocks_18_model_scaleddotproduct_attn_mask']
    double_blocks_18_model_totuple_output = cache['double_blocks_18_model_totuple_output']
    double_blocks_18_model_transpose_axes = cache['double_blocks_18_model_transpose_axes']
    double_blocks_18_tensoritem_0_index = cache['double_blocks_18_tensoritem_0_index']
    double_blocks_18_tensoritem_10_index = cache['double_blocks_18_tensoritem_10_index']
    double_blocks_18_tensoritem_11_index = cache['double_blocks_18_tensoritem_11_index']
    double_blocks_18_tensoritem_12_index = cache['double_blocks_18_tensoritem_12_index']
    double_blocks_18_tensoritem_13_index = cache['double_blocks_18_tensoritem_13_index']
    double_blocks_18_tensoritem_14_index = cache['double_blocks_18_tensoritem_14_index']
    double_blocks_18_tensoritem_15_index = cache['double_blocks_18_tensoritem_15_index']
    double_blocks_18_tensoritem_16_index = cache['double_blocks_18_tensoritem_16_index']
    double_blocks_18_tensoritem_17_index = cache['double_blocks_18_tensoritem_17_index']
    double_blocks_18_tensoritem_18_index = cache['double_blocks_18_tensoritem_18_index']
    double_blocks_18_tensoritem_19_index = cache['double_blocks_18_tensoritem_19_index']
    double_blocks_18_tensoritem_1_index = cache['double_blocks_18_tensoritem_1_index']
    double_blocks_18_tensoritem_2_index = cache['double_blocks_18_tensoritem_2_index']
    double_blocks_18_tensoritem_3_index = cache['double_blocks_18_tensoritem_3_index']
    double_blocks_18_tensoritem_4_index = cache['double_blocks_18_tensoritem_4_index']
    double_blocks_18_tensoritem_5_index = cache['double_blocks_18_tensoritem_5_index']
    double_blocks_18_tensoritem_6_index = cache['double_blocks_18_tensoritem_6_index']
    double_blocks_18_tensoritem_7_index = cache['double_blocks_18_tensoritem_7_index']
    double_blocks_18_tensoritem_8_index = cache['double_blocks_18_tensoritem_8_index']
    double_blocks_18_tensoritem_9_index = cache['double_blocks_18_tensoritem_9_index']
    double_blocks_18_totuple_0_output = cache['double_blocks_18_totuple_0_output']
    double_blocks_18_totuple_1_output = cache['double_blocks_18_totuple_1_output']
    double_blocks_18_transpose_0_axes = cache['double_blocks_18_transpose_0_axes']
    double_blocks_18_transpose_1_axes = cache['double_blocks_18_transpose_1_axes']
    double_blocks_18_txt_attn_norm_key_norm_add_right = cache['double_blocks_18_txt_attn_norm_key_norm_add_right']
    double_blocks_18_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_18_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_18_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_18_txt_attn_norm_key_norm_mean_axis']
    double_blocks_18_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_18_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_18_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_18_txt_attn_norm_key_norm_power_exponent']
    double_blocks_18_txt_attn_norm_key_norm_scale = params['double_blocks_18_txt_attn_norm_key_norm_scale']
    double_blocks_18_txt_attn_norm_query_norm_add_right = cache['double_blocks_18_txt_attn_norm_query_norm_add_right']
    double_blocks_18_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_18_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_18_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_18_txt_attn_norm_query_norm_mean_axis']
    double_blocks_18_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_18_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_18_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_18_txt_attn_norm_query_norm_power_exponent']
    double_blocks_18_txt_attn_norm_query_norm_scale = params['double_blocks_18_txt_attn_norm_query_norm_scale']
    double_blocks_18_txt_attn_proj_bias = params['double_blocks_18_txt_attn_proj_bias']
    double_blocks_18_txt_attn_proj_transpose_axes = cache['double_blocks_18_txt_attn_proj_transpose_axes']
    double_blocks_18_txt_attn_proj_weight = params['double_blocks_18_txt_attn_proj_weight']
    double_blocks_18_txt_attn_qkv_bias = params['double_blocks_18_txt_attn_qkv_bias']
    double_blocks_18_txt_attn_qkv_transpose_axes = cache['double_blocks_18_txt_attn_qkv_transpose_axes']
    double_blocks_18_txt_attn_qkv_weight = params['double_blocks_18_txt_attn_qkv_weight']
    double_blocks_18_txt_mlp_0_bias = params['double_blocks_18_txt_mlp_0_bias']
    double_blocks_18_txt_mlp_0_transpose_axes = cache['double_blocks_18_txt_mlp_0_transpose_axes']
    double_blocks_18_txt_mlp_0_weight = params['double_blocks_18_txt_mlp_0_weight']
    double_blocks_18_txt_mlp_2_bias = params['double_blocks_18_txt_mlp_2_bias']
    double_blocks_18_txt_mlp_2_transpose_axes = cache['double_blocks_18_txt_mlp_2_transpose_axes']
    double_blocks_18_txt_mlp_2_weight = params['double_blocks_18_txt_mlp_2_weight']
    double_blocks_18_txt_mlp_gelu_approximate = cache['double_blocks_18_txt_mlp_gelu_approximate']
    double_blocks_18_txt_mod_lin_bias = params['double_blocks_18_txt_mod_lin_bias']
    double_blocks_18_txt_mod_lin_transpose_axes = cache['double_blocks_18_txt_mod_lin_transpose_axes']
    double_blocks_18_txt_mod_lin_weight = params['double_blocks_18_txt_mod_lin_weight']
    double_blocks_18_txt_mod_silu_add_left = cache['double_blocks_18_txt_mod_silu_add_left']
    double_blocks_18_txt_mod_split_0_axis = cache['double_blocks_18_txt_mod_split_0_axis']
    double_blocks_18_txt_mod_split_0_split_size = cache['double_blocks_18_txt_mod_split_0_split_size']
    double_blocks_18_txt_mod_split_1_axis = cache['double_blocks_18_txt_mod_split_1_axis']
    double_blocks_18_txt_mod_split_1_split_size = cache['double_blocks_18_txt_mod_split_1_split_size']
    double_blocks_18_txt_mod_split_2_axis = cache['double_blocks_18_txt_mod_split_2_axis']
    double_blocks_18_txt_mod_split_2_split_size = cache['double_blocks_18_txt_mod_split_2_split_size']
    double_blocks_18_txt_mod_tensoritem_0_index = cache['double_blocks_18_txt_mod_tensoritem_0_index']
    double_blocks_18_txt_mod_tensoritem_1_index = cache['double_blocks_18_txt_mod_tensoritem_1_index']
    double_blocks_18_txt_mod_tensoritem_2_index = cache['double_blocks_18_txt_mod_tensoritem_2_index']
    double_blocks_18_txt_norm1_add_right = cache['double_blocks_18_txt_norm1_add_right']
    double_blocks_18_txt_norm1_mean_axis = cache['double_blocks_18_txt_norm1_mean_axis']
    double_blocks_18_txt_norm1_mean_keepdim = cache['double_blocks_18_txt_norm1_mean_keepdim']
    double_blocks_18_txt_norm1_variance_axis = cache['double_blocks_18_txt_norm1_variance_axis']
    double_blocks_18_txt_norm1_variance_correction = cache['double_blocks_18_txt_norm1_variance_correction']
    double_blocks_18_txt_norm1_variance_keepdim = cache['double_blocks_18_txt_norm1_variance_keepdim']
    double_blocks_18_txt_norm2_add_right = cache['double_blocks_18_txt_norm2_add_right']
    double_blocks_18_txt_norm2_mean_axis = cache['double_blocks_18_txt_norm2_mean_axis']
    double_blocks_18_txt_norm2_mean_keepdim = cache['double_blocks_18_txt_norm2_mean_keepdim']
    double_blocks_18_txt_norm2_variance_axis = cache['double_blocks_18_txt_norm2_variance_axis']
    double_blocks_18_txt_norm2_variance_correction = cache['double_blocks_18_txt_norm2_variance_correction']
    double_blocks_18_txt_norm2_variance_keepdim = cache['double_blocks_18_txt_norm2_variance_keepdim']
    double_blocks_1_add_0_left = cache['double_blocks_1_add_0_left']
    double_blocks_1_add_2_left = cache['double_blocks_1_add_2_left']
    double_blocks_1_add_5_left = cache['double_blocks_1_add_5_left']
    double_blocks_1_add_8_left = cache['double_blocks_1_add_8_left']
    double_blocks_1_concat_0_axis = cache['double_blocks_1_concat_0_axis']
    double_blocks_1_concat_1_axis = cache['double_blocks_1_concat_1_axis']
    double_blocks_1_concat_2_axis = cache['double_blocks_1_concat_2_axis']
    double_blocks_1_img_attn_norm_key_norm_add_right = cache['double_blocks_1_img_attn_norm_key_norm_add_right']
    double_blocks_1_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_1_img_attn_norm_key_norm_divide_numerator']
    double_blocks_1_img_attn_norm_key_norm_mean_axis = cache['double_blocks_1_img_attn_norm_key_norm_mean_axis']
    double_blocks_1_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_1_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_1_img_attn_norm_key_norm_power_exponent = cache['double_blocks_1_img_attn_norm_key_norm_power_exponent']
    double_blocks_1_img_attn_norm_key_norm_scale = params['double_blocks_1_img_attn_norm_key_norm_scale']
    double_blocks_1_img_attn_norm_query_norm_add_right = cache['double_blocks_1_img_attn_norm_query_norm_add_right']
    double_blocks_1_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_1_img_attn_norm_query_norm_divide_numerator']
    double_blocks_1_img_attn_norm_query_norm_mean_axis = cache['double_blocks_1_img_attn_norm_query_norm_mean_axis']
    double_blocks_1_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_1_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_1_img_attn_norm_query_norm_power_exponent = cache['double_blocks_1_img_attn_norm_query_norm_power_exponent']
    double_blocks_1_img_attn_norm_query_norm_scale = params['double_blocks_1_img_attn_norm_query_norm_scale']
    double_blocks_1_img_attn_proj_bias = params['double_blocks_1_img_attn_proj_bias']
    double_blocks_1_img_attn_proj_transpose_axes = cache['double_blocks_1_img_attn_proj_transpose_axes']
    double_blocks_1_img_attn_proj_weight = params['double_blocks_1_img_attn_proj_weight']
    double_blocks_1_img_attn_qkv_bias = params['double_blocks_1_img_attn_qkv_bias']
    double_blocks_1_img_attn_qkv_transpose_axes = cache['double_blocks_1_img_attn_qkv_transpose_axes']
    double_blocks_1_img_attn_qkv_weight = params['double_blocks_1_img_attn_qkv_weight']
    double_blocks_1_img_mlp_0_bias = params['double_blocks_1_img_mlp_0_bias']
    double_blocks_1_img_mlp_0_transpose_axes = cache['double_blocks_1_img_mlp_0_transpose_axes']
    double_blocks_1_img_mlp_0_weight = params['double_blocks_1_img_mlp_0_weight']
    double_blocks_1_img_mlp_2_bias = params['double_blocks_1_img_mlp_2_bias']
    double_blocks_1_img_mlp_2_transpose_axes = cache['double_blocks_1_img_mlp_2_transpose_axes']
    double_blocks_1_img_mlp_2_weight = params['double_blocks_1_img_mlp_2_weight']
    double_blocks_1_img_mlp_gelu_approximate = cache['double_blocks_1_img_mlp_gelu_approximate']
    double_blocks_1_img_mod_lin_bias = params['double_blocks_1_img_mod_lin_bias']
    double_blocks_1_img_mod_lin_transpose_axes = cache['double_blocks_1_img_mod_lin_transpose_axes']
    double_blocks_1_img_mod_lin_weight = params['double_blocks_1_img_mod_lin_weight']
    double_blocks_1_img_mod_silu_add_left = cache['double_blocks_1_img_mod_silu_add_left']
    double_blocks_1_img_mod_split_0_axis = cache['double_blocks_1_img_mod_split_0_axis']
    double_blocks_1_img_mod_split_0_split_size = cache['double_blocks_1_img_mod_split_0_split_size']
    double_blocks_1_img_mod_split_1_axis = cache['double_blocks_1_img_mod_split_1_axis']
    double_blocks_1_img_mod_split_1_split_size = cache['double_blocks_1_img_mod_split_1_split_size']
    double_blocks_1_img_mod_split_2_axis = cache['double_blocks_1_img_mod_split_2_axis']
    double_blocks_1_img_mod_split_2_split_size = cache['double_blocks_1_img_mod_split_2_split_size']
    double_blocks_1_img_mod_tensoritem_0_index = cache['double_blocks_1_img_mod_tensoritem_0_index']
    double_blocks_1_img_mod_tensoritem_1_index = cache['double_blocks_1_img_mod_tensoritem_1_index']
    double_blocks_1_img_mod_tensoritem_2_index = cache['double_blocks_1_img_mod_tensoritem_2_index']
    double_blocks_1_img_norm1_add_right = cache['double_blocks_1_img_norm1_add_right']
    double_blocks_1_img_norm1_mean_axis = cache['double_blocks_1_img_norm1_mean_axis']
    double_blocks_1_img_norm1_mean_keepdim = cache['double_blocks_1_img_norm1_mean_keepdim']
    double_blocks_1_img_norm1_variance_axis = cache['double_blocks_1_img_norm1_variance_axis']
    double_blocks_1_img_norm1_variance_correction = cache['double_blocks_1_img_norm1_variance_correction']
    double_blocks_1_img_norm1_variance_keepdim = cache['double_blocks_1_img_norm1_variance_keepdim']
    double_blocks_1_img_norm2_add_right = cache['double_blocks_1_img_norm2_add_right']
    double_blocks_1_img_norm2_mean_axis = cache['double_blocks_1_img_norm2_mean_axis']
    double_blocks_1_img_norm2_mean_keepdim = cache['double_blocks_1_img_norm2_mean_keepdim']
    double_blocks_1_img_norm2_variance_axis = cache['double_blocks_1_img_norm2_variance_axis']
    double_blocks_1_img_norm2_variance_correction = cache['double_blocks_1_img_norm2_variance_correction']
    double_blocks_1_img_norm2_variance_keepdim = cache['double_blocks_1_img_norm2_variance_keepdim']
    double_blocks_1_model_model_shape_0_output = cache['double_blocks_1_model_model_shape_0_output']
    double_blocks_1_model_model_shape_1_output = cache['double_blocks_1_model_model_shape_1_output']
    double_blocks_1_model_model_tensoritem_0_index = cache['double_blocks_1_model_model_tensoritem_0_index']
    double_blocks_1_model_model_tensoritem_1_index = cache['double_blocks_1_model_model_tensoritem_1_index']
    double_blocks_1_model_model_tensoritem_2_index = cache['double_blocks_1_model_model_tensoritem_2_index']
    double_blocks_1_model_model_tensoritem_3_index = cache['double_blocks_1_model_model_tensoritem_3_index']
    double_blocks_1_model_model_tensoritem_4_index = cache['double_blocks_1_model_model_tensoritem_4_index']
    double_blocks_1_model_model_tensoritem_5_index = cache['double_blocks_1_model_model_tensoritem_5_index']
    double_blocks_1_model_model_tensoritem_6_index = cache['double_blocks_1_model_model_tensoritem_6_index']
    double_blocks_1_model_model_tensoritem_7_index = cache['double_blocks_1_model_model_tensoritem_7_index']
    double_blocks_1_model_model_totuple_0_output = cache['double_blocks_1_model_model_totuple_0_output']
    double_blocks_1_model_model_totuple_1_output = cache['double_blocks_1_model_model_totuple_1_output']
    double_blocks_1_model_scaleddotproduct_attn_mask = cache['double_blocks_1_model_scaleddotproduct_attn_mask']
    double_blocks_1_model_totuple_output = cache['double_blocks_1_model_totuple_output']
    double_blocks_1_model_transpose_axes = cache['double_blocks_1_model_transpose_axes']
    double_blocks_1_tensoritem_0_index = cache['double_blocks_1_tensoritem_0_index']
    double_blocks_1_tensoritem_10_index = cache['double_blocks_1_tensoritem_10_index']
    double_blocks_1_tensoritem_11_index = cache['double_blocks_1_tensoritem_11_index']
    double_blocks_1_tensoritem_12_index = cache['double_blocks_1_tensoritem_12_index']
    double_blocks_1_tensoritem_13_index = cache['double_blocks_1_tensoritem_13_index']
    double_blocks_1_tensoritem_14_index = cache['double_blocks_1_tensoritem_14_index']
    double_blocks_1_tensoritem_15_index = cache['double_blocks_1_tensoritem_15_index']
    double_blocks_1_tensoritem_16_index = cache['double_blocks_1_tensoritem_16_index']
    double_blocks_1_tensoritem_17_index = cache['double_blocks_1_tensoritem_17_index']
    double_blocks_1_tensoritem_18_index = cache['double_blocks_1_tensoritem_18_index']
    double_blocks_1_tensoritem_19_index = cache['double_blocks_1_tensoritem_19_index']
    double_blocks_1_tensoritem_1_index = cache['double_blocks_1_tensoritem_1_index']
    double_blocks_1_tensoritem_2_index = cache['double_blocks_1_tensoritem_2_index']
    double_blocks_1_tensoritem_3_index = cache['double_blocks_1_tensoritem_3_index']
    double_blocks_1_tensoritem_4_index = cache['double_blocks_1_tensoritem_4_index']
    double_blocks_1_tensoritem_5_index = cache['double_blocks_1_tensoritem_5_index']
    double_blocks_1_tensoritem_6_index = cache['double_blocks_1_tensoritem_6_index']
    double_blocks_1_tensoritem_7_index = cache['double_blocks_1_tensoritem_7_index']
    double_blocks_1_tensoritem_8_index = cache['double_blocks_1_tensoritem_8_index']
    double_blocks_1_tensoritem_9_index = cache['double_blocks_1_tensoritem_9_index']
    double_blocks_1_totuple_0_output = cache['double_blocks_1_totuple_0_output']
    double_blocks_1_totuple_1_output = cache['double_blocks_1_totuple_1_output']
    double_blocks_1_transpose_0_axes = cache['double_blocks_1_transpose_0_axes']
    double_blocks_1_transpose_1_axes = cache['double_blocks_1_transpose_1_axes']
    double_blocks_1_txt_attn_norm_key_norm_add_right = cache['double_blocks_1_txt_attn_norm_key_norm_add_right']
    double_blocks_1_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_1_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_1_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_1_txt_attn_norm_key_norm_mean_axis']
    double_blocks_1_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_1_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_1_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_1_txt_attn_norm_key_norm_power_exponent']
    double_blocks_1_txt_attn_norm_key_norm_scale = params['double_blocks_1_txt_attn_norm_key_norm_scale']
    double_blocks_1_txt_attn_norm_query_norm_add_right = cache['double_blocks_1_txt_attn_norm_query_norm_add_right']
    double_blocks_1_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_1_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_1_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_1_txt_attn_norm_query_norm_mean_axis']
    double_blocks_1_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_1_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_1_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_1_txt_attn_norm_query_norm_power_exponent']
    double_blocks_1_txt_attn_norm_query_norm_scale = params['double_blocks_1_txt_attn_norm_query_norm_scale']
    double_blocks_1_txt_attn_proj_bias = params['double_blocks_1_txt_attn_proj_bias']
    double_blocks_1_txt_attn_proj_transpose_axes = cache['double_blocks_1_txt_attn_proj_transpose_axes']
    double_blocks_1_txt_attn_proj_weight = params['double_blocks_1_txt_attn_proj_weight']
    double_blocks_1_txt_attn_qkv_bias = params['double_blocks_1_txt_attn_qkv_bias']
    double_blocks_1_txt_attn_qkv_transpose_axes = cache['double_blocks_1_txt_attn_qkv_transpose_axes']
    double_blocks_1_txt_attn_qkv_weight = params['double_blocks_1_txt_attn_qkv_weight']
    double_blocks_1_txt_mlp_0_bias = params['double_blocks_1_txt_mlp_0_bias']
    double_blocks_1_txt_mlp_0_transpose_axes = cache['double_blocks_1_txt_mlp_0_transpose_axes']
    double_blocks_1_txt_mlp_0_weight = params['double_blocks_1_txt_mlp_0_weight']
    double_blocks_1_txt_mlp_2_bias = params['double_blocks_1_txt_mlp_2_bias']
    double_blocks_1_txt_mlp_2_transpose_axes = cache['double_blocks_1_txt_mlp_2_transpose_axes']
    double_blocks_1_txt_mlp_2_weight = params['double_blocks_1_txt_mlp_2_weight']
    double_blocks_1_txt_mlp_gelu_approximate = cache['double_blocks_1_txt_mlp_gelu_approximate']
    double_blocks_1_txt_mod_lin_bias = params['double_blocks_1_txt_mod_lin_bias']
    double_blocks_1_txt_mod_lin_transpose_axes = cache['double_blocks_1_txt_mod_lin_transpose_axes']
    double_blocks_1_txt_mod_lin_weight = params['double_blocks_1_txt_mod_lin_weight']
    double_blocks_1_txt_mod_silu_add_left = cache['double_blocks_1_txt_mod_silu_add_left']
    double_blocks_1_txt_mod_split_0_axis = cache['double_blocks_1_txt_mod_split_0_axis']
    double_blocks_1_txt_mod_split_0_split_size = cache['double_blocks_1_txt_mod_split_0_split_size']
    double_blocks_1_txt_mod_split_1_axis = cache['double_blocks_1_txt_mod_split_1_axis']
    double_blocks_1_txt_mod_split_1_split_size = cache['double_blocks_1_txt_mod_split_1_split_size']
    double_blocks_1_txt_mod_split_2_axis = cache['double_blocks_1_txt_mod_split_2_axis']
    double_blocks_1_txt_mod_split_2_split_size = cache['double_blocks_1_txt_mod_split_2_split_size']
    double_blocks_1_txt_mod_tensoritem_0_index = cache['double_blocks_1_txt_mod_tensoritem_0_index']
    double_blocks_1_txt_mod_tensoritem_1_index = cache['double_blocks_1_txt_mod_tensoritem_1_index']
    double_blocks_1_txt_mod_tensoritem_2_index = cache['double_blocks_1_txt_mod_tensoritem_2_index']
    double_blocks_1_txt_norm1_add_right = cache['double_blocks_1_txt_norm1_add_right']
    double_blocks_1_txt_norm1_mean_axis = cache['double_blocks_1_txt_norm1_mean_axis']
    double_blocks_1_txt_norm1_mean_keepdim = cache['double_blocks_1_txt_norm1_mean_keepdim']
    double_blocks_1_txt_norm1_variance_axis = cache['double_blocks_1_txt_norm1_variance_axis']
    double_blocks_1_txt_norm1_variance_correction = cache['double_blocks_1_txt_norm1_variance_correction']
    double_blocks_1_txt_norm1_variance_keepdim = cache['double_blocks_1_txt_norm1_variance_keepdim']
    double_blocks_1_txt_norm2_add_right = cache['double_blocks_1_txt_norm2_add_right']
    double_blocks_1_txt_norm2_mean_axis = cache['double_blocks_1_txt_norm2_mean_axis']
    double_blocks_1_txt_norm2_mean_keepdim = cache['double_blocks_1_txt_norm2_mean_keepdim']
    double_blocks_1_txt_norm2_variance_axis = cache['double_blocks_1_txt_norm2_variance_axis']
    double_blocks_1_txt_norm2_variance_correction = cache['double_blocks_1_txt_norm2_variance_correction']
    double_blocks_1_txt_norm2_variance_keepdim = cache['double_blocks_1_txt_norm2_variance_keepdim']
    double_blocks_2_add_0_left = cache['double_blocks_2_add_0_left']
    double_blocks_2_add_2_left = cache['double_blocks_2_add_2_left']
    double_blocks_2_add_5_left = cache['double_blocks_2_add_5_left']
    double_blocks_2_add_8_left = cache['double_blocks_2_add_8_left']
    double_blocks_2_concat_0_axis = cache['double_blocks_2_concat_0_axis']
    double_blocks_2_concat_1_axis = cache['double_blocks_2_concat_1_axis']
    double_blocks_2_concat_2_axis = cache['double_blocks_2_concat_2_axis']
    double_blocks_2_img_attn_norm_key_norm_add_right = cache['double_blocks_2_img_attn_norm_key_norm_add_right']
    double_blocks_2_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_2_img_attn_norm_key_norm_divide_numerator']
    double_blocks_2_img_attn_norm_key_norm_mean_axis = cache['double_blocks_2_img_attn_norm_key_norm_mean_axis']
    double_blocks_2_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_2_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_2_img_attn_norm_key_norm_power_exponent = cache['double_blocks_2_img_attn_norm_key_norm_power_exponent']
    double_blocks_2_img_attn_norm_key_norm_scale = params['double_blocks_2_img_attn_norm_key_norm_scale']
    double_blocks_2_img_attn_norm_query_norm_add_right = cache['double_blocks_2_img_attn_norm_query_norm_add_right']
    double_blocks_2_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_2_img_attn_norm_query_norm_divide_numerator']
    double_blocks_2_img_attn_norm_query_norm_mean_axis = cache['double_blocks_2_img_attn_norm_query_norm_mean_axis']
    double_blocks_2_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_2_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_2_img_attn_norm_query_norm_power_exponent = cache['double_blocks_2_img_attn_norm_query_norm_power_exponent']
    double_blocks_2_img_attn_norm_query_norm_scale = params['double_blocks_2_img_attn_norm_query_norm_scale']
    double_blocks_2_img_attn_proj_bias = params['double_blocks_2_img_attn_proj_bias']
    double_blocks_2_img_attn_proj_transpose_axes = cache['double_blocks_2_img_attn_proj_transpose_axes']
    double_blocks_2_img_attn_proj_weight = params['double_blocks_2_img_attn_proj_weight']
    double_blocks_2_img_attn_qkv_bias = params['double_blocks_2_img_attn_qkv_bias']
    double_blocks_2_img_attn_qkv_transpose_axes = cache['double_blocks_2_img_attn_qkv_transpose_axes']
    double_blocks_2_img_attn_qkv_weight = params['double_blocks_2_img_attn_qkv_weight']
    double_blocks_2_img_mlp_0_bias = params['double_blocks_2_img_mlp_0_bias']
    double_blocks_2_img_mlp_0_transpose_axes = cache['double_blocks_2_img_mlp_0_transpose_axes']
    double_blocks_2_img_mlp_0_weight = params['double_blocks_2_img_mlp_0_weight']
    double_blocks_2_img_mlp_2_bias = params['double_blocks_2_img_mlp_2_bias']
    double_blocks_2_img_mlp_2_transpose_axes = cache['double_blocks_2_img_mlp_2_transpose_axes']
    double_blocks_2_img_mlp_2_weight = params['double_blocks_2_img_mlp_2_weight']
    double_blocks_2_img_mlp_gelu_approximate = cache['double_blocks_2_img_mlp_gelu_approximate']
    double_blocks_2_img_mod_lin_bias = params['double_blocks_2_img_mod_lin_bias']
    double_blocks_2_img_mod_lin_transpose_axes = cache['double_blocks_2_img_mod_lin_transpose_axes']
    double_blocks_2_img_mod_lin_weight = params['double_blocks_2_img_mod_lin_weight']
    double_blocks_2_img_mod_silu_add_left = cache['double_blocks_2_img_mod_silu_add_left']
    double_blocks_2_img_mod_split_0_axis = cache['double_blocks_2_img_mod_split_0_axis']
    double_blocks_2_img_mod_split_0_split_size = cache['double_blocks_2_img_mod_split_0_split_size']
    double_blocks_2_img_mod_split_1_axis = cache['double_blocks_2_img_mod_split_1_axis']
    double_blocks_2_img_mod_split_1_split_size = cache['double_blocks_2_img_mod_split_1_split_size']
    double_blocks_2_img_mod_split_2_axis = cache['double_blocks_2_img_mod_split_2_axis']
    double_blocks_2_img_mod_split_2_split_size = cache['double_blocks_2_img_mod_split_2_split_size']
    double_blocks_2_img_mod_tensoritem_0_index = cache['double_blocks_2_img_mod_tensoritem_0_index']
    double_blocks_2_img_mod_tensoritem_1_index = cache['double_blocks_2_img_mod_tensoritem_1_index']
    double_blocks_2_img_mod_tensoritem_2_index = cache['double_blocks_2_img_mod_tensoritem_2_index']
    double_blocks_2_img_norm1_add_right = cache['double_blocks_2_img_norm1_add_right']
    double_blocks_2_img_norm1_mean_axis = cache['double_blocks_2_img_norm1_mean_axis']
    double_blocks_2_img_norm1_mean_keepdim = cache['double_blocks_2_img_norm1_mean_keepdim']
    double_blocks_2_img_norm1_variance_axis = cache['double_blocks_2_img_norm1_variance_axis']
    double_blocks_2_img_norm1_variance_correction = cache['double_blocks_2_img_norm1_variance_correction']
    double_blocks_2_img_norm1_variance_keepdim = cache['double_blocks_2_img_norm1_variance_keepdim']
    double_blocks_2_img_norm2_add_right = cache['double_blocks_2_img_norm2_add_right']
    double_blocks_2_img_norm2_mean_axis = cache['double_blocks_2_img_norm2_mean_axis']
    double_blocks_2_img_norm2_mean_keepdim = cache['double_blocks_2_img_norm2_mean_keepdim']
    double_blocks_2_img_norm2_variance_axis = cache['double_blocks_2_img_norm2_variance_axis']
    double_blocks_2_img_norm2_variance_correction = cache['double_blocks_2_img_norm2_variance_correction']
    double_blocks_2_img_norm2_variance_keepdim = cache['double_blocks_2_img_norm2_variance_keepdim']
    double_blocks_2_model_model_shape_0_output = cache['double_blocks_2_model_model_shape_0_output']
    double_blocks_2_model_model_shape_1_output = cache['double_blocks_2_model_model_shape_1_output']
    double_blocks_2_model_model_tensoritem_0_index = cache['double_blocks_2_model_model_tensoritem_0_index']
    double_blocks_2_model_model_tensoritem_1_index = cache['double_blocks_2_model_model_tensoritem_1_index']
    double_blocks_2_model_model_tensoritem_2_index = cache['double_blocks_2_model_model_tensoritem_2_index']
    double_blocks_2_model_model_tensoritem_3_index = cache['double_blocks_2_model_model_tensoritem_3_index']
    double_blocks_2_model_model_tensoritem_4_index = cache['double_blocks_2_model_model_tensoritem_4_index']
    double_blocks_2_model_model_tensoritem_5_index = cache['double_blocks_2_model_model_tensoritem_5_index']
    double_blocks_2_model_model_tensoritem_6_index = cache['double_blocks_2_model_model_tensoritem_6_index']
    double_blocks_2_model_model_tensoritem_7_index = cache['double_blocks_2_model_model_tensoritem_7_index']
    double_blocks_2_model_model_totuple_0_output = cache['double_blocks_2_model_model_totuple_0_output']
    double_blocks_2_model_model_totuple_1_output = cache['double_blocks_2_model_model_totuple_1_output']
    double_blocks_2_model_scaleddotproduct_attn_mask = cache['double_blocks_2_model_scaleddotproduct_attn_mask']
    double_blocks_2_model_totuple_output = cache['double_blocks_2_model_totuple_output']
    double_blocks_2_model_transpose_axes = cache['double_blocks_2_model_transpose_axes']
    double_blocks_2_tensoritem_0_index = cache['double_blocks_2_tensoritem_0_index']
    double_blocks_2_tensoritem_10_index = cache['double_blocks_2_tensoritem_10_index']
    double_blocks_2_tensoritem_11_index = cache['double_blocks_2_tensoritem_11_index']
    double_blocks_2_tensoritem_12_index = cache['double_blocks_2_tensoritem_12_index']
    double_blocks_2_tensoritem_13_index = cache['double_blocks_2_tensoritem_13_index']
    double_blocks_2_tensoritem_14_index = cache['double_blocks_2_tensoritem_14_index']
    double_blocks_2_tensoritem_15_index = cache['double_blocks_2_tensoritem_15_index']
    double_blocks_2_tensoritem_16_index = cache['double_blocks_2_tensoritem_16_index']
    double_blocks_2_tensoritem_17_index = cache['double_blocks_2_tensoritem_17_index']
    double_blocks_2_tensoritem_18_index = cache['double_blocks_2_tensoritem_18_index']
    double_blocks_2_tensoritem_19_index = cache['double_blocks_2_tensoritem_19_index']
    double_blocks_2_tensoritem_1_index = cache['double_blocks_2_tensoritem_1_index']
    double_blocks_2_tensoritem_2_index = cache['double_blocks_2_tensoritem_2_index']
    double_blocks_2_tensoritem_3_index = cache['double_blocks_2_tensoritem_3_index']
    double_blocks_2_tensoritem_4_index = cache['double_blocks_2_tensoritem_4_index']
    double_blocks_2_tensoritem_5_index = cache['double_blocks_2_tensoritem_5_index']
    double_blocks_2_tensoritem_6_index = cache['double_blocks_2_tensoritem_6_index']
    double_blocks_2_tensoritem_7_index = cache['double_blocks_2_tensoritem_7_index']
    double_blocks_2_tensoritem_8_index = cache['double_blocks_2_tensoritem_8_index']
    double_blocks_2_tensoritem_9_index = cache['double_blocks_2_tensoritem_9_index']
    double_blocks_2_totuple_0_output = cache['double_blocks_2_totuple_0_output']
    double_blocks_2_totuple_1_output = cache['double_blocks_2_totuple_1_output']
    double_blocks_2_transpose_0_axes = cache['double_blocks_2_transpose_0_axes']
    double_blocks_2_transpose_1_axes = cache['double_blocks_2_transpose_1_axes']
    double_blocks_2_txt_attn_norm_key_norm_add_right = cache['double_blocks_2_txt_attn_norm_key_norm_add_right']
    double_blocks_2_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_2_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_2_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_2_txt_attn_norm_key_norm_mean_axis']
    double_blocks_2_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_2_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_2_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_2_txt_attn_norm_key_norm_power_exponent']
    double_blocks_2_txt_attn_norm_key_norm_scale = params['double_blocks_2_txt_attn_norm_key_norm_scale']
    double_blocks_2_txt_attn_norm_query_norm_add_right = cache['double_blocks_2_txt_attn_norm_query_norm_add_right']
    double_blocks_2_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_2_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_2_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_2_txt_attn_norm_query_norm_mean_axis']
    double_blocks_2_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_2_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_2_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_2_txt_attn_norm_query_norm_power_exponent']
    double_blocks_2_txt_attn_norm_query_norm_scale = params['double_blocks_2_txt_attn_norm_query_norm_scale']
    double_blocks_2_txt_attn_proj_bias = params['double_blocks_2_txt_attn_proj_bias']
    double_blocks_2_txt_attn_proj_transpose_axes = cache['double_blocks_2_txt_attn_proj_transpose_axes']
    double_blocks_2_txt_attn_proj_weight = params['double_blocks_2_txt_attn_proj_weight']
    double_blocks_2_txt_attn_qkv_bias = params['double_blocks_2_txt_attn_qkv_bias']
    double_blocks_2_txt_attn_qkv_transpose_axes = cache['double_blocks_2_txt_attn_qkv_transpose_axes']
    double_blocks_2_txt_attn_qkv_weight = params['double_blocks_2_txt_attn_qkv_weight']
    double_blocks_2_txt_mlp_0_bias = params['double_blocks_2_txt_mlp_0_bias']
    double_blocks_2_txt_mlp_0_transpose_axes = cache['double_blocks_2_txt_mlp_0_transpose_axes']
    double_blocks_2_txt_mlp_0_weight = params['double_blocks_2_txt_mlp_0_weight']
    double_blocks_2_txt_mlp_2_bias = params['double_blocks_2_txt_mlp_2_bias']
    double_blocks_2_txt_mlp_2_transpose_axes = cache['double_blocks_2_txt_mlp_2_transpose_axes']
    double_blocks_2_txt_mlp_2_weight = params['double_blocks_2_txt_mlp_2_weight']
    double_blocks_2_txt_mlp_gelu_approximate = cache['double_blocks_2_txt_mlp_gelu_approximate']
    double_blocks_2_txt_mod_lin_bias = params['double_blocks_2_txt_mod_lin_bias']
    double_blocks_2_txt_mod_lin_transpose_axes = cache['double_blocks_2_txt_mod_lin_transpose_axes']
    double_blocks_2_txt_mod_lin_weight = params['double_blocks_2_txt_mod_lin_weight']
    double_blocks_2_txt_mod_silu_add_left = cache['double_blocks_2_txt_mod_silu_add_left']
    double_blocks_2_txt_mod_split_0_axis = cache['double_blocks_2_txt_mod_split_0_axis']
    double_blocks_2_txt_mod_split_0_split_size = cache['double_blocks_2_txt_mod_split_0_split_size']
    double_blocks_2_txt_mod_split_1_axis = cache['double_blocks_2_txt_mod_split_1_axis']
    double_blocks_2_txt_mod_split_1_split_size = cache['double_blocks_2_txt_mod_split_1_split_size']
    double_blocks_2_txt_mod_split_2_axis = cache['double_blocks_2_txt_mod_split_2_axis']
    double_blocks_2_txt_mod_split_2_split_size = cache['double_blocks_2_txt_mod_split_2_split_size']
    double_blocks_2_txt_mod_tensoritem_0_index = cache['double_blocks_2_txt_mod_tensoritem_0_index']
    double_blocks_2_txt_mod_tensoritem_1_index = cache['double_blocks_2_txt_mod_tensoritem_1_index']
    double_blocks_2_txt_mod_tensoritem_2_index = cache['double_blocks_2_txt_mod_tensoritem_2_index']
    double_blocks_2_txt_norm1_add_right = cache['double_blocks_2_txt_norm1_add_right']
    double_blocks_2_txt_norm1_mean_axis = cache['double_blocks_2_txt_norm1_mean_axis']
    double_blocks_2_txt_norm1_mean_keepdim = cache['double_blocks_2_txt_norm1_mean_keepdim']
    double_blocks_2_txt_norm1_variance_axis = cache['double_blocks_2_txt_norm1_variance_axis']
    double_blocks_2_txt_norm1_variance_correction = cache['double_blocks_2_txt_norm1_variance_correction']
    double_blocks_2_txt_norm1_variance_keepdim = cache['double_blocks_2_txt_norm1_variance_keepdim']
    double_blocks_2_txt_norm2_add_right = cache['double_blocks_2_txt_norm2_add_right']
    double_blocks_2_txt_norm2_mean_axis = cache['double_blocks_2_txt_norm2_mean_axis']
    double_blocks_2_txt_norm2_mean_keepdim = cache['double_blocks_2_txt_norm2_mean_keepdim']
    double_blocks_2_txt_norm2_variance_axis = cache['double_blocks_2_txt_norm2_variance_axis']
    double_blocks_2_txt_norm2_variance_correction = cache['double_blocks_2_txt_norm2_variance_correction']
    double_blocks_2_txt_norm2_variance_keepdim = cache['double_blocks_2_txt_norm2_variance_keepdim']
    double_blocks_3_add_0_left = cache['double_blocks_3_add_0_left']
    double_blocks_3_add_2_left = cache['double_blocks_3_add_2_left']
    double_blocks_3_add_5_left = cache['double_blocks_3_add_5_left']
    double_blocks_3_add_8_left = cache['double_blocks_3_add_8_left']
    double_blocks_3_concat_0_axis = cache['double_blocks_3_concat_0_axis']
    double_blocks_3_concat_1_axis = cache['double_blocks_3_concat_1_axis']
    double_blocks_3_concat_2_axis = cache['double_blocks_3_concat_2_axis']
    double_blocks_3_img_attn_norm_key_norm_add_right = cache['double_blocks_3_img_attn_norm_key_norm_add_right']
    double_blocks_3_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_3_img_attn_norm_key_norm_divide_numerator']
    double_blocks_3_img_attn_norm_key_norm_mean_axis = cache['double_blocks_3_img_attn_norm_key_norm_mean_axis']
    double_blocks_3_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_3_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_3_img_attn_norm_key_norm_power_exponent = cache['double_blocks_3_img_attn_norm_key_norm_power_exponent']
    double_blocks_3_img_attn_norm_key_norm_scale = params['double_blocks_3_img_attn_norm_key_norm_scale']
    double_blocks_3_img_attn_norm_query_norm_add_right = cache['double_blocks_3_img_attn_norm_query_norm_add_right']
    double_blocks_3_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_3_img_attn_norm_query_norm_divide_numerator']
    double_blocks_3_img_attn_norm_query_norm_mean_axis = cache['double_blocks_3_img_attn_norm_query_norm_mean_axis']
    double_blocks_3_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_3_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_3_img_attn_norm_query_norm_power_exponent = cache['double_blocks_3_img_attn_norm_query_norm_power_exponent']
    double_blocks_3_img_attn_norm_query_norm_scale = params['double_blocks_3_img_attn_norm_query_norm_scale']
    double_blocks_3_img_attn_proj_bias = params['double_blocks_3_img_attn_proj_bias']
    double_blocks_3_img_attn_proj_transpose_axes = cache['double_blocks_3_img_attn_proj_transpose_axes']
    double_blocks_3_img_attn_proj_weight = params['double_blocks_3_img_attn_proj_weight']
    double_blocks_3_img_attn_qkv_bias = params['double_blocks_3_img_attn_qkv_bias']
    double_blocks_3_img_attn_qkv_transpose_axes = cache['double_blocks_3_img_attn_qkv_transpose_axes']
    double_blocks_3_img_attn_qkv_weight = params['double_blocks_3_img_attn_qkv_weight']
    double_blocks_3_img_mlp_0_bias = params['double_blocks_3_img_mlp_0_bias']
    double_blocks_3_img_mlp_0_transpose_axes = cache['double_blocks_3_img_mlp_0_transpose_axes']
    double_blocks_3_img_mlp_0_weight = params['double_blocks_3_img_mlp_0_weight']
    double_blocks_3_img_mlp_2_bias = params['double_blocks_3_img_mlp_2_bias']
    double_blocks_3_img_mlp_2_transpose_axes = cache['double_blocks_3_img_mlp_2_transpose_axes']
    double_blocks_3_img_mlp_2_weight = params['double_blocks_3_img_mlp_2_weight']
    double_blocks_3_img_mlp_gelu_approximate = cache['double_blocks_3_img_mlp_gelu_approximate']
    double_blocks_3_img_mod_lin_bias = params['double_blocks_3_img_mod_lin_bias']
    double_blocks_3_img_mod_lin_transpose_axes = cache['double_blocks_3_img_mod_lin_transpose_axes']
    double_blocks_3_img_mod_lin_weight = params['double_blocks_3_img_mod_lin_weight']
    double_blocks_3_img_mod_silu_add_left = cache['double_blocks_3_img_mod_silu_add_left']
    double_blocks_3_img_mod_split_0_axis = cache['double_blocks_3_img_mod_split_0_axis']
    double_blocks_3_img_mod_split_0_split_size = cache['double_blocks_3_img_mod_split_0_split_size']
    double_blocks_3_img_mod_split_1_axis = cache['double_blocks_3_img_mod_split_1_axis']
    double_blocks_3_img_mod_split_1_split_size = cache['double_blocks_3_img_mod_split_1_split_size']
    double_blocks_3_img_mod_split_2_axis = cache['double_blocks_3_img_mod_split_2_axis']
    double_blocks_3_img_mod_split_2_split_size = cache['double_blocks_3_img_mod_split_2_split_size']
    double_blocks_3_img_mod_tensoritem_0_index = cache['double_blocks_3_img_mod_tensoritem_0_index']
    double_blocks_3_img_mod_tensoritem_1_index = cache['double_blocks_3_img_mod_tensoritem_1_index']
    double_blocks_3_img_mod_tensoritem_2_index = cache['double_blocks_3_img_mod_tensoritem_2_index']
    double_blocks_3_img_norm1_add_right = cache['double_blocks_3_img_norm1_add_right']
    double_blocks_3_img_norm1_mean_axis = cache['double_blocks_3_img_norm1_mean_axis']
    double_blocks_3_img_norm1_mean_keepdim = cache['double_blocks_3_img_norm1_mean_keepdim']
    double_blocks_3_img_norm1_variance_axis = cache['double_blocks_3_img_norm1_variance_axis']
    double_blocks_3_img_norm1_variance_correction = cache['double_blocks_3_img_norm1_variance_correction']
    double_blocks_3_img_norm1_variance_keepdim = cache['double_blocks_3_img_norm1_variance_keepdim']
    double_blocks_3_img_norm2_add_right = cache['double_blocks_3_img_norm2_add_right']
    double_blocks_3_img_norm2_mean_axis = cache['double_blocks_3_img_norm2_mean_axis']
    double_blocks_3_img_norm2_mean_keepdim = cache['double_blocks_3_img_norm2_mean_keepdim']
    double_blocks_3_img_norm2_variance_axis = cache['double_blocks_3_img_norm2_variance_axis']
    double_blocks_3_img_norm2_variance_correction = cache['double_blocks_3_img_norm2_variance_correction']
    double_blocks_3_img_norm2_variance_keepdim = cache['double_blocks_3_img_norm2_variance_keepdim']
    double_blocks_3_model_model_shape_0_output = cache['double_blocks_3_model_model_shape_0_output']
    double_blocks_3_model_model_shape_1_output = cache['double_blocks_3_model_model_shape_1_output']
    double_blocks_3_model_model_tensoritem_0_index = cache['double_blocks_3_model_model_tensoritem_0_index']
    double_blocks_3_model_model_tensoritem_1_index = cache['double_blocks_3_model_model_tensoritem_1_index']
    double_blocks_3_model_model_tensoritem_2_index = cache['double_blocks_3_model_model_tensoritem_2_index']
    double_blocks_3_model_model_tensoritem_3_index = cache['double_blocks_3_model_model_tensoritem_3_index']
    double_blocks_3_model_model_tensoritem_4_index = cache['double_blocks_3_model_model_tensoritem_4_index']
    double_blocks_3_model_model_tensoritem_5_index = cache['double_blocks_3_model_model_tensoritem_5_index']
    double_blocks_3_model_model_tensoritem_6_index = cache['double_blocks_3_model_model_tensoritem_6_index']
    double_blocks_3_model_model_tensoritem_7_index = cache['double_blocks_3_model_model_tensoritem_7_index']
    double_blocks_3_model_model_totuple_0_output = cache['double_blocks_3_model_model_totuple_0_output']
    double_blocks_3_model_model_totuple_1_output = cache['double_blocks_3_model_model_totuple_1_output']
    double_blocks_3_model_scaleddotproduct_attn_mask = cache['double_blocks_3_model_scaleddotproduct_attn_mask']
    double_blocks_3_model_totuple_output = cache['double_blocks_3_model_totuple_output']
    double_blocks_3_model_transpose_axes = cache['double_blocks_3_model_transpose_axes']
    double_blocks_3_tensoritem_0_index = cache['double_blocks_3_tensoritem_0_index']
    double_blocks_3_tensoritem_10_index = cache['double_blocks_3_tensoritem_10_index']
    double_blocks_3_tensoritem_11_index = cache['double_blocks_3_tensoritem_11_index']
    double_blocks_3_tensoritem_12_index = cache['double_blocks_3_tensoritem_12_index']
    double_blocks_3_tensoritem_13_index = cache['double_blocks_3_tensoritem_13_index']
    double_blocks_3_tensoritem_14_index = cache['double_blocks_3_tensoritem_14_index']
    double_blocks_3_tensoritem_15_index = cache['double_blocks_3_tensoritem_15_index']
    double_blocks_3_tensoritem_16_index = cache['double_blocks_3_tensoritem_16_index']
    double_blocks_3_tensoritem_17_index = cache['double_blocks_3_tensoritem_17_index']
    double_blocks_3_tensoritem_18_index = cache['double_blocks_3_tensoritem_18_index']
    double_blocks_3_tensoritem_19_index = cache['double_blocks_3_tensoritem_19_index']
    double_blocks_3_tensoritem_1_index = cache['double_blocks_3_tensoritem_1_index']
    double_blocks_3_tensoritem_2_index = cache['double_blocks_3_tensoritem_2_index']
    double_blocks_3_tensoritem_3_index = cache['double_blocks_3_tensoritem_3_index']
    double_blocks_3_tensoritem_4_index = cache['double_blocks_3_tensoritem_4_index']
    double_blocks_3_tensoritem_5_index = cache['double_blocks_3_tensoritem_5_index']
    double_blocks_3_tensoritem_6_index = cache['double_blocks_3_tensoritem_6_index']
    double_blocks_3_tensoritem_7_index = cache['double_blocks_3_tensoritem_7_index']
    double_blocks_3_tensoritem_8_index = cache['double_blocks_3_tensoritem_8_index']
    double_blocks_3_tensoritem_9_index = cache['double_blocks_3_tensoritem_9_index']
    double_blocks_3_totuple_0_output = cache['double_blocks_3_totuple_0_output']
    double_blocks_3_totuple_1_output = cache['double_blocks_3_totuple_1_output']
    double_blocks_3_transpose_0_axes = cache['double_blocks_3_transpose_0_axes']
    double_blocks_3_transpose_1_axes = cache['double_blocks_3_transpose_1_axes']
    double_blocks_3_txt_attn_norm_key_norm_add_right = cache['double_blocks_3_txt_attn_norm_key_norm_add_right']
    double_blocks_3_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_3_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_3_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_3_txt_attn_norm_key_norm_mean_axis']
    double_blocks_3_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_3_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_3_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_3_txt_attn_norm_key_norm_power_exponent']
    double_blocks_3_txt_attn_norm_key_norm_scale = params['double_blocks_3_txt_attn_norm_key_norm_scale']
    double_blocks_3_txt_attn_norm_query_norm_add_right = cache['double_blocks_3_txt_attn_norm_query_norm_add_right']
    double_blocks_3_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_3_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_3_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_3_txt_attn_norm_query_norm_mean_axis']
    double_blocks_3_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_3_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_3_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_3_txt_attn_norm_query_norm_power_exponent']
    double_blocks_3_txt_attn_norm_query_norm_scale = params['double_blocks_3_txt_attn_norm_query_norm_scale']
    double_blocks_3_txt_attn_proj_bias = params['double_blocks_3_txt_attn_proj_bias']
    double_blocks_3_txt_attn_proj_transpose_axes = cache['double_blocks_3_txt_attn_proj_transpose_axes']
    double_blocks_3_txt_attn_proj_weight = params['double_blocks_3_txt_attn_proj_weight']
    double_blocks_3_txt_attn_qkv_bias = params['double_blocks_3_txt_attn_qkv_bias']
    double_blocks_3_txt_attn_qkv_transpose_axes = cache['double_blocks_3_txt_attn_qkv_transpose_axes']
    double_blocks_3_txt_attn_qkv_weight = params['double_blocks_3_txt_attn_qkv_weight']
    double_blocks_3_txt_mlp_0_bias = params['double_blocks_3_txt_mlp_0_bias']
    double_blocks_3_txt_mlp_0_transpose_axes = cache['double_blocks_3_txt_mlp_0_transpose_axes']
    double_blocks_3_txt_mlp_0_weight = params['double_blocks_3_txt_mlp_0_weight']
    double_blocks_3_txt_mlp_2_bias = params['double_blocks_3_txt_mlp_2_bias']
    double_blocks_3_txt_mlp_2_transpose_axes = cache['double_blocks_3_txt_mlp_2_transpose_axes']
    double_blocks_3_txt_mlp_2_weight = params['double_blocks_3_txt_mlp_2_weight']
    double_blocks_3_txt_mlp_gelu_approximate = cache['double_blocks_3_txt_mlp_gelu_approximate']
    double_blocks_3_txt_mod_lin_bias = params['double_blocks_3_txt_mod_lin_bias']
    double_blocks_3_txt_mod_lin_transpose_axes = cache['double_blocks_3_txt_mod_lin_transpose_axes']
    double_blocks_3_txt_mod_lin_weight = params['double_blocks_3_txt_mod_lin_weight']
    double_blocks_3_txt_mod_silu_add_left = cache['double_blocks_3_txt_mod_silu_add_left']
    double_blocks_3_txt_mod_split_0_axis = cache['double_blocks_3_txt_mod_split_0_axis']
    double_blocks_3_txt_mod_split_0_split_size = cache['double_blocks_3_txt_mod_split_0_split_size']
    double_blocks_3_txt_mod_split_1_axis = cache['double_blocks_3_txt_mod_split_1_axis']
    double_blocks_3_txt_mod_split_1_split_size = cache['double_blocks_3_txt_mod_split_1_split_size']
    double_blocks_3_txt_mod_split_2_axis = cache['double_blocks_3_txt_mod_split_2_axis']
    double_blocks_3_txt_mod_split_2_split_size = cache['double_blocks_3_txt_mod_split_2_split_size']
    double_blocks_3_txt_mod_tensoritem_0_index = cache['double_blocks_3_txt_mod_tensoritem_0_index']
    double_blocks_3_txt_mod_tensoritem_1_index = cache['double_blocks_3_txt_mod_tensoritem_1_index']
    double_blocks_3_txt_mod_tensoritem_2_index = cache['double_blocks_3_txt_mod_tensoritem_2_index']
    double_blocks_3_txt_norm1_add_right = cache['double_blocks_3_txt_norm1_add_right']
    double_blocks_3_txt_norm1_mean_axis = cache['double_blocks_3_txt_norm1_mean_axis']
    double_blocks_3_txt_norm1_mean_keepdim = cache['double_blocks_3_txt_norm1_mean_keepdim']
    double_blocks_3_txt_norm1_variance_axis = cache['double_blocks_3_txt_norm1_variance_axis']
    double_blocks_3_txt_norm1_variance_correction = cache['double_blocks_3_txt_norm1_variance_correction']
    double_blocks_3_txt_norm1_variance_keepdim = cache['double_blocks_3_txt_norm1_variance_keepdim']
    double_blocks_3_txt_norm2_add_right = cache['double_blocks_3_txt_norm2_add_right']
    double_blocks_3_txt_norm2_mean_axis = cache['double_blocks_3_txt_norm2_mean_axis']
    double_blocks_3_txt_norm2_mean_keepdim = cache['double_blocks_3_txt_norm2_mean_keepdim']
    double_blocks_3_txt_norm2_variance_axis = cache['double_blocks_3_txt_norm2_variance_axis']
    double_blocks_3_txt_norm2_variance_correction = cache['double_blocks_3_txt_norm2_variance_correction']
    double_blocks_3_txt_norm2_variance_keepdim = cache['double_blocks_3_txt_norm2_variance_keepdim']
    double_blocks_4_add_0_left = cache['double_blocks_4_add_0_left']
    double_blocks_4_add_2_left = cache['double_blocks_4_add_2_left']
    double_blocks_4_add_5_left = cache['double_blocks_4_add_5_left']
    double_blocks_4_add_8_left = cache['double_blocks_4_add_8_left']
    double_blocks_4_concat_0_axis = cache['double_blocks_4_concat_0_axis']
    double_blocks_4_concat_1_axis = cache['double_blocks_4_concat_1_axis']
    double_blocks_4_concat_2_axis = cache['double_blocks_4_concat_2_axis']
    double_blocks_4_img_attn_norm_key_norm_add_right = cache['double_blocks_4_img_attn_norm_key_norm_add_right']
    double_blocks_4_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_4_img_attn_norm_key_norm_divide_numerator']
    double_blocks_4_img_attn_norm_key_norm_mean_axis = cache['double_blocks_4_img_attn_norm_key_norm_mean_axis']
    double_blocks_4_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_4_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_4_img_attn_norm_key_norm_power_exponent = cache['double_blocks_4_img_attn_norm_key_norm_power_exponent']
    double_blocks_4_img_attn_norm_key_norm_scale = params['double_blocks_4_img_attn_norm_key_norm_scale']
    double_blocks_4_img_attn_norm_query_norm_add_right = cache['double_blocks_4_img_attn_norm_query_norm_add_right']
    double_blocks_4_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_4_img_attn_norm_query_norm_divide_numerator']
    double_blocks_4_img_attn_norm_query_norm_mean_axis = cache['double_blocks_4_img_attn_norm_query_norm_mean_axis']
    double_blocks_4_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_4_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_4_img_attn_norm_query_norm_power_exponent = cache['double_blocks_4_img_attn_norm_query_norm_power_exponent']
    double_blocks_4_img_attn_norm_query_norm_scale = params['double_blocks_4_img_attn_norm_query_norm_scale']
    double_blocks_4_img_attn_proj_bias = params['double_blocks_4_img_attn_proj_bias']
    double_blocks_4_img_attn_proj_transpose_axes = cache['double_blocks_4_img_attn_proj_transpose_axes']
    double_blocks_4_img_attn_proj_weight = params['double_blocks_4_img_attn_proj_weight']
    double_blocks_4_img_attn_qkv_bias = params['double_blocks_4_img_attn_qkv_bias']
    double_blocks_4_img_attn_qkv_transpose_axes = cache['double_blocks_4_img_attn_qkv_transpose_axes']
    double_blocks_4_img_attn_qkv_weight = params['double_blocks_4_img_attn_qkv_weight']
    double_blocks_4_img_mlp_0_bias = params['double_blocks_4_img_mlp_0_bias']
    double_blocks_4_img_mlp_0_transpose_axes = cache['double_blocks_4_img_mlp_0_transpose_axes']
    double_blocks_4_img_mlp_0_weight = params['double_blocks_4_img_mlp_0_weight']
    double_blocks_4_img_mlp_2_bias = params['double_blocks_4_img_mlp_2_bias']
    double_blocks_4_img_mlp_2_transpose_axes = cache['double_blocks_4_img_mlp_2_transpose_axes']
    double_blocks_4_img_mlp_2_weight = params['double_blocks_4_img_mlp_2_weight']
    double_blocks_4_img_mlp_gelu_approximate = cache['double_blocks_4_img_mlp_gelu_approximate']
    double_blocks_4_img_mod_lin_bias = params['double_blocks_4_img_mod_lin_bias']
    double_blocks_4_img_mod_lin_transpose_axes = cache['double_blocks_4_img_mod_lin_transpose_axes']
    double_blocks_4_img_mod_lin_weight = params['double_blocks_4_img_mod_lin_weight']
    double_blocks_4_img_mod_silu_add_left = cache['double_blocks_4_img_mod_silu_add_left']
    double_blocks_4_img_mod_split_0_axis = cache['double_blocks_4_img_mod_split_0_axis']
    double_blocks_4_img_mod_split_0_split_size = cache['double_blocks_4_img_mod_split_0_split_size']
    double_blocks_4_img_mod_split_1_axis = cache['double_blocks_4_img_mod_split_1_axis']
    double_blocks_4_img_mod_split_1_split_size = cache['double_blocks_4_img_mod_split_1_split_size']
    double_blocks_4_img_mod_split_2_axis = cache['double_blocks_4_img_mod_split_2_axis']
    double_blocks_4_img_mod_split_2_split_size = cache['double_blocks_4_img_mod_split_2_split_size']
    double_blocks_4_img_mod_tensoritem_0_index = cache['double_blocks_4_img_mod_tensoritem_0_index']
    double_blocks_4_img_mod_tensoritem_1_index = cache['double_blocks_4_img_mod_tensoritem_1_index']
    double_blocks_4_img_mod_tensoritem_2_index = cache['double_blocks_4_img_mod_tensoritem_2_index']
    double_blocks_4_img_norm1_add_right = cache['double_blocks_4_img_norm1_add_right']
    double_blocks_4_img_norm1_mean_axis = cache['double_blocks_4_img_norm1_mean_axis']
    double_blocks_4_img_norm1_mean_keepdim = cache['double_blocks_4_img_norm1_mean_keepdim']
    double_blocks_4_img_norm1_variance_axis = cache['double_blocks_4_img_norm1_variance_axis']
    double_blocks_4_img_norm1_variance_correction = cache['double_blocks_4_img_norm1_variance_correction']
    double_blocks_4_img_norm1_variance_keepdim = cache['double_blocks_4_img_norm1_variance_keepdim']
    double_blocks_4_img_norm2_add_right = cache['double_blocks_4_img_norm2_add_right']
    double_blocks_4_img_norm2_mean_axis = cache['double_blocks_4_img_norm2_mean_axis']
    double_blocks_4_img_norm2_mean_keepdim = cache['double_blocks_4_img_norm2_mean_keepdim']
    double_blocks_4_img_norm2_variance_axis = cache['double_blocks_4_img_norm2_variance_axis']
    double_blocks_4_img_norm2_variance_correction = cache['double_blocks_4_img_norm2_variance_correction']
    double_blocks_4_img_norm2_variance_keepdim = cache['double_blocks_4_img_norm2_variance_keepdim']
    double_blocks_4_model_model_shape_0_output = cache['double_blocks_4_model_model_shape_0_output']
    double_blocks_4_model_model_shape_1_output = cache['double_blocks_4_model_model_shape_1_output']
    double_blocks_4_model_model_tensoritem_0_index = cache['double_blocks_4_model_model_tensoritem_0_index']
    double_blocks_4_model_model_tensoritem_1_index = cache['double_blocks_4_model_model_tensoritem_1_index']
    double_blocks_4_model_model_tensoritem_2_index = cache['double_blocks_4_model_model_tensoritem_2_index']
    double_blocks_4_model_model_tensoritem_3_index = cache['double_blocks_4_model_model_tensoritem_3_index']
    double_blocks_4_model_model_tensoritem_4_index = cache['double_blocks_4_model_model_tensoritem_4_index']
    double_blocks_4_model_model_tensoritem_5_index = cache['double_blocks_4_model_model_tensoritem_5_index']
    double_blocks_4_model_model_tensoritem_6_index = cache['double_blocks_4_model_model_tensoritem_6_index']
    double_blocks_4_model_model_tensoritem_7_index = cache['double_blocks_4_model_model_tensoritem_7_index']
    double_blocks_4_model_model_totuple_0_output = cache['double_blocks_4_model_model_totuple_0_output']
    double_blocks_4_model_model_totuple_1_output = cache['double_blocks_4_model_model_totuple_1_output']
    double_blocks_4_model_scaleddotproduct_attn_mask = cache['double_blocks_4_model_scaleddotproduct_attn_mask']
    double_blocks_4_model_totuple_output = cache['double_blocks_4_model_totuple_output']
    double_blocks_4_model_transpose_axes = cache['double_blocks_4_model_transpose_axes']
    double_blocks_4_tensoritem_0_index = cache['double_blocks_4_tensoritem_0_index']
    double_blocks_4_tensoritem_10_index = cache['double_blocks_4_tensoritem_10_index']
    double_blocks_4_tensoritem_11_index = cache['double_blocks_4_tensoritem_11_index']
    double_blocks_4_tensoritem_12_index = cache['double_blocks_4_tensoritem_12_index']
    double_blocks_4_tensoritem_13_index = cache['double_blocks_4_tensoritem_13_index']
    double_blocks_4_tensoritem_14_index = cache['double_blocks_4_tensoritem_14_index']
    double_blocks_4_tensoritem_15_index = cache['double_blocks_4_tensoritem_15_index']
    double_blocks_4_tensoritem_16_index = cache['double_blocks_4_tensoritem_16_index']
    double_blocks_4_tensoritem_17_index = cache['double_blocks_4_tensoritem_17_index']
    double_blocks_4_tensoritem_18_index = cache['double_blocks_4_tensoritem_18_index']
    double_blocks_4_tensoritem_19_index = cache['double_blocks_4_tensoritem_19_index']
    double_blocks_4_tensoritem_1_index = cache['double_blocks_4_tensoritem_1_index']
    double_blocks_4_tensoritem_2_index = cache['double_blocks_4_tensoritem_2_index']
    double_blocks_4_tensoritem_3_index = cache['double_blocks_4_tensoritem_3_index']
    double_blocks_4_tensoritem_4_index = cache['double_blocks_4_tensoritem_4_index']
    double_blocks_4_tensoritem_5_index = cache['double_blocks_4_tensoritem_5_index']
    double_blocks_4_tensoritem_6_index = cache['double_blocks_4_tensoritem_6_index']
    double_blocks_4_tensoritem_7_index = cache['double_blocks_4_tensoritem_7_index']
    double_blocks_4_tensoritem_8_index = cache['double_blocks_4_tensoritem_8_index']
    double_blocks_4_tensoritem_9_index = cache['double_blocks_4_tensoritem_9_index']
    double_blocks_4_totuple_0_output = cache['double_blocks_4_totuple_0_output']
    double_blocks_4_totuple_1_output = cache['double_blocks_4_totuple_1_output']
    double_blocks_4_transpose_0_axes = cache['double_blocks_4_transpose_0_axes']
    double_blocks_4_transpose_1_axes = cache['double_blocks_4_transpose_1_axes']
    double_blocks_4_txt_attn_norm_key_norm_add_right = cache['double_blocks_4_txt_attn_norm_key_norm_add_right']
    double_blocks_4_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_4_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_4_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_4_txt_attn_norm_key_norm_mean_axis']
    double_blocks_4_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_4_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_4_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_4_txt_attn_norm_key_norm_power_exponent']
    double_blocks_4_txt_attn_norm_key_norm_scale = params['double_blocks_4_txt_attn_norm_key_norm_scale']
    double_blocks_4_txt_attn_norm_query_norm_add_right = cache['double_blocks_4_txt_attn_norm_query_norm_add_right']
    double_blocks_4_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_4_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_4_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_4_txt_attn_norm_query_norm_mean_axis']
    double_blocks_4_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_4_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_4_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_4_txt_attn_norm_query_norm_power_exponent']
    double_blocks_4_txt_attn_norm_query_norm_scale = params['double_blocks_4_txt_attn_norm_query_norm_scale']
    double_blocks_4_txt_attn_proj_bias = params['double_blocks_4_txt_attn_proj_bias']
    double_blocks_4_txt_attn_proj_transpose_axes = cache['double_blocks_4_txt_attn_proj_transpose_axes']
    double_blocks_4_txt_attn_proj_weight = params['double_blocks_4_txt_attn_proj_weight']
    double_blocks_4_txt_attn_qkv_bias = params['double_blocks_4_txt_attn_qkv_bias']
    double_blocks_4_txt_attn_qkv_transpose_axes = cache['double_blocks_4_txt_attn_qkv_transpose_axes']
    double_blocks_4_txt_attn_qkv_weight = params['double_blocks_4_txt_attn_qkv_weight']
    double_blocks_4_txt_mlp_0_bias = params['double_blocks_4_txt_mlp_0_bias']
    double_blocks_4_txt_mlp_0_transpose_axes = cache['double_blocks_4_txt_mlp_0_transpose_axes']
    double_blocks_4_txt_mlp_0_weight = params['double_blocks_4_txt_mlp_0_weight']
    double_blocks_4_txt_mlp_2_bias = params['double_blocks_4_txt_mlp_2_bias']
    double_blocks_4_txt_mlp_2_transpose_axes = cache['double_blocks_4_txt_mlp_2_transpose_axes']
    double_blocks_4_txt_mlp_2_weight = params['double_blocks_4_txt_mlp_2_weight']
    double_blocks_4_txt_mlp_gelu_approximate = cache['double_blocks_4_txt_mlp_gelu_approximate']
    double_blocks_4_txt_mod_lin_bias = params['double_blocks_4_txt_mod_lin_bias']
    double_blocks_4_txt_mod_lin_transpose_axes = cache['double_blocks_4_txt_mod_lin_transpose_axes']
    double_blocks_4_txt_mod_lin_weight = params['double_blocks_4_txt_mod_lin_weight']
    double_blocks_4_txt_mod_silu_add_left = cache['double_blocks_4_txt_mod_silu_add_left']
    double_blocks_4_txt_mod_split_0_axis = cache['double_blocks_4_txt_mod_split_0_axis']
    double_blocks_4_txt_mod_split_0_split_size = cache['double_blocks_4_txt_mod_split_0_split_size']
    double_blocks_4_txt_mod_split_1_axis = cache['double_blocks_4_txt_mod_split_1_axis']
    double_blocks_4_txt_mod_split_1_split_size = cache['double_blocks_4_txt_mod_split_1_split_size']
    double_blocks_4_txt_mod_split_2_axis = cache['double_blocks_4_txt_mod_split_2_axis']
    double_blocks_4_txt_mod_split_2_split_size = cache['double_blocks_4_txt_mod_split_2_split_size']
    double_blocks_4_txt_mod_tensoritem_0_index = cache['double_blocks_4_txt_mod_tensoritem_0_index']
    double_blocks_4_txt_mod_tensoritem_1_index = cache['double_blocks_4_txt_mod_tensoritem_1_index']
    double_blocks_4_txt_mod_tensoritem_2_index = cache['double_blocks_4_txt_mod_tensoritem_2_index']
    double_blocks_4_txt_norm1_add_right = cache['double_blocks_4_txt_norm1_add_right']
    double_blocks_4_txt_norm1_mean_axis = cache['double_blocks_4_txt_norm1_mean_axis']
    double_blocks_4_txt_norm1_mean_keepdim = cache['double_blocks_4_txt_norm1_mean_keepdim']
    double_blocks_4_txt_norm1_variance_axis = cache['double_blocks_4_txt_norm1_variance_axis']
    double_blocks_4_txt_norm1_variance_correction = cache['double_blocks_4_txt_norm1_variance_correction']
    double_blocks_4_txt_norm1_variance_keepdim = cache['double_blocks_4_txt_norm1_variance_keepdim']
    double_blocks_4_txt_norm2_add_right = cache['double_blocks_4_txt_norm2_add_right']
    double_blocks_4_txt_norm2_mean_axis = cache['double_blocks_4_txt_norm2_mean_axis']
    double_blocks_4_txt_norm2_mean_keepdim = cache['double_blocks_4_txt_norm2_mean_keepdim']
    double_blocks_4_txt_norm2_variance_axis = cache['double_blocks_4_txt_norm2_variance_axis']
    double_blocks_4_txt_norm2_variance_correction = cache['double_blocks_4_txt_norm2_variance_correction']
    double_blocks_4_txt_norm2_variance_keepdim = cache['double_blocks_4_txt_norm2_variance_keepdim']
    double_blocks_5_add_0_left = cache['double_blocks_5_add_0_left']
    double_blocks_5_add_2_left = cache['double_blocks_5_add_2_left']
    double_blocks_5_add_5_left = cache['double_blocks_5_add_5_left']
    double_blocks_5_add_8_left = cache['double_blocks_5_add_8_left']
    double_blocks_5_concat_0_axis = cache['double_blocks_5_concat_0_axis']
    double_blocks_5_concat_1_axis = cache['double_blocks_5_concat_1_axis']
    double_blocks_5_concat_2_axis = cache['double_blocks_5_concat_2_axis']
    double_blocks_5_img_attn_norm_key_norm_add_right = cache['double_blocks_5_img_attn_norm_key_norm_add_right']
    double_blocks_5_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_5_img_attn_norm_key_norm_divide_numerator']
    double_blocks_5_img_attn_norm_key_norm_mean_axis = cache['double_blocks_5_img_attn_norm_key_norm_mean_axis']
    double_blocks_5_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_5_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_5_img_attn_norm_key_norm_power_exponent = cache['double_blocks_5_img_attn_norm_key_norm_power_exponent']
    double_blocks_5_img_attn_norm_key_norm_scale = params['double_blocks_5_img_attn_norm_key_norm_scale']
    double_blocks_5_img_attn_norm_query_norm_add_right = cache['double_blocks_5_img_attn_norm_query_norm_add_right']
    double_blocks_5_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_5_img_attn_norm_query_norm_divide_numerator']
    double_blocks_5_img_attn_norm_query_norm_mean_axis = cache['double_blocks_5_img_attn_norm_query_norm_mean_axis']
    double_blocks_5_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_5_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_5_img_attn_norm_query_norm_power_exponent = cache['double_blocks_5_img_attn_norm_query_norm_power_exponent']
    double_blocks_5_img_attn_norm_query_norm_scale = params['double_blocks_5_img_attn_norm_query_norm_scale']
    double_blocks_5_img_attn_proj_bias = params['double_blocks_5_img_attn_proj_bias']
    double_blocks_5_img_attn_proj_transpose_axes = cache['double_blocks_5_img_attn_proj_transpose_axes']
    double_blocks_5_img_attn_proj_weight = params['double_blocks_5_img_attn_proj_weight']
    double_blocks_5_img_attn_qkv_bias = params['double_blocks_5_img_attn_qkv_bias']
    double_blocks_5_img_attn_qkv_transpose_axes = cache['double_blocks_5_img_attn_qkv_transpose_axes']
    double_blocks_5_img_attn_qkv_weight = params['double_blocks_5_img_attn_qkv_weight']
    double_blocks_5_img_mlp_0_bias = params['double_blocks_5_img_mlp_0_bias']
    double_blocks_5_img_mlp_0_transpose_axes = cache['double_blocks_5_img_mlp_0_transpose_axes']
    double_blocks_5_img_mlp_0_weight = params['double_blocks_5_img_mlp_0_weight']
    double_blocks_5_img_mlp_2_bias = params['double_blocks_5_img_mlp_2_bias']
    double_blocks_5_img_mlp_2_transpose_axes = cache['double_blocks_5_img_mlp_2_transpose_axes']
    double_blocks_5_img_mlp_2_weight = params['double_blocks_5_img_mlp_2_weight']
    double_blocks_5_img_mlp_gelu_approximate = cache['double_blocks_5_img_mlp_gelu_approximate']
    double_blocks_5_img_mod_lin_bias = params['double_blocks_5_img_mod_lin_bias']
    double_blocks_5_img_mod_lin_transpose_axes = cache['double_blocks_5_img_mod_lin_transpose_axes']
    double_blocks_5_img_mod_lin_weight = params['double_blocks_5_img_mod_lin_weight']
    double_blocks_5_img_mod_silu_add_left = cache['double_blocks_5_img_mod_silu_add_left']
    double_blocks_5_img_mod_split_0_axis = cache['double_blocks_5_img_mod_split_0_axis']
    double_blocks_5_img_mod_split_0_split_size = cache['double_blocks_5_img_mod_split_0_split_size']
    double_blocks_5_img_mod_split_1_axis = cache['double_blocks_5_img_mod_split_1_axis']
    double_blocks_5_img_mod_split_1_split_size = cache['double_blocks_5_img_mod_split_1_split_size']
    double_blocks_5_img_mod_split_2_axis = cache['double_blocks_5_img_mod_split_2_axis']
    double_blocks_5_img_mod_split_2_split_size = cache['double_blocks_5_img_mod_split_2_split_size']
    double_blocks_5_img_mod_tensoritem_0_index = cache['double_blocks_5_img_mod_tensoritem_0_index']
    double_blocks_5_img_mod_tensoritem_1_index = cache['double_blocks_5_img_mod_tensoritem_1_index']
    double_blocks_5_img_mod_tensoritem_2_index = cache['double_blocks_5_img_mod_tensoritem_2_index']
    double_blocks_5_img_norm1_add_right = cache['double_blocks_5_img_norm1_add_right']
    double_blocks_5_img_norm1_mean_axis = cache['double_blocks_5_img_norm1_mean_axis']
    double_blocks_5_img_norm1_mean_keepdim = cache['double_blocks_5_img_norm1_mean_keepdim']
    double_blocks_5_img_norm1_variance_axis = cache['double_blocks_5_img_norm1_variance_axis']
    double_blocks_5_img_norm1_variance_correction = cache['double_blocks_5_img_norm1_variance_correction']
    double_blocks_5_img_norm1_variance_keepdim = cache['double_blocks_5_img_norm1_variance_keepdim']
    double_blocks_5_img_norm2_add_right = cache['double_blocks_5_img_norm2_add_right']
    double_blocks_5_img_norm2_mean_axis = cache['double_blocks_5_img_norm2_mean_axis']
    double_blocks_5_img_norm2_mean_keepdim = cache['double_blocks_5_img_norm2_mean_keepdim']
    double_blocks_5_img_norm2_variance_axis = cache['double_blocks_5_img_norm2_variance_axis']
    double_blocks_5_img_norm2_variance_correction = cache['double_blocks_5_img_norm2_variance_correction']
    double_blocks_5_img_norm2_variance_keepdim = cache['double_blocks_5_img_norm2_variance_keepdim']
    double_blocks_5_model_model_shape_0_output = cache['double_blocks_5_model_model_shape_0_output']
    double_blocks_5_model_model_shape_1_output = cache['double_blocks_5_model_model_shape_1_output']
    double_blocks_5_model_model_tensoritem_0_index = cache['double_blocks_5_model_model_tensoritem_0_index']
    double_blocks_5_model_model_tensoritem_1_index = cache['double_blocks_5_model_model_tensoritem_1_index']
    double_blocks_5_model_model_tensoritem_2_index = cache['double_blocks_5_model_model_tensoritem_2_index']
    double_blocks_5_model_model_tensoritem_3_index = cache['double_blocks_5_model_model_tensoritem_3_index']
    double_blocks_5_model_model_tensoritem_4_index = cache['double_blocks_5_model_model_tensoritem_4_index']
    double_blocks_5_model_model_tensoritem_5_index = cache['double_blocks_5_model_model_tensoritem_5_index']
    double_blocks_5_model_model_tensoritem_6_index = cache['double_blocks_5_model_model_tensoritem_6_index']
    double_blocks_5_model_model_tensoritem_7_index = cache['double_blocks_5_model_model_tensoritem_7_index']
    double_blocks_5_model_model_totuple_0_output = cache['double_blocks_5_model_model_totuple_0_output']
    double_blocks_5_model_model_totuple_1_output = cache['double_blocks_5_model_model_totuple_1_output']
    double_blocks_5_model_scaleddotproduct_attn_mask = cache['double_blocks_5_model_scaleddotproduct_attn_mask']
    double_blocks_5_model_totuple_output = cache['double_blocks_5_model_totuple_output']
    double_blocks_5_model_transpose_axes = cache['double_blocks_5_model_transpose_axes']
    double_blocks_5_tensoritem_0_index = cache['double_blocks_5_tensoritem_0_index']
    double_blocks_5_tensoritem_10_index = cache['double_blocks_5_tensoritem_10_index']
    double_blocks_5_tensoritem_11_index = cache['double_blocks_5_tensoritem_11_index']
    double_blocks_5_tensoritem_12_index = cache['double_blocks_5_tensoritem_12_index']
    double_blocks_5_tensoritem_13_index = cache['double_blocks_5_tensoritem_13_index']
    double_blocks_5_tensoritem_14_index = cache['double_blocks_5_tensoritem_14_index']
    double_blocks_5_tensoritem_15_index = cache['double_blocks_5_tensoritem_15_index']
    double_blocks_5_tensoritem_16_index = cache['double_blocks_5_tensoritem_16_index']
    double_blocks_5_tensoritem_17_index = cache['double_blocks_5_tensoritem_17_index']
    double_blocks_5_tensoritem_18_index = cache['double_blocks_5_tensoritem_18_index']
    double_blocks_5_tensoritem_19_index = cache['double_blocks_5_tensoritem_19_index']
    double_blocks_5_tensoritem_1_index = cache['double_blocks_5_tensoritem_1_index']
    double_blocks_5_tensoritem_2_index = cache['double_blocks_5_tensoritem_2_index']
    double_blocks_5_tensoritem_3_index = cache['double_blocks_5_tensoritem_3_index']
    double_blocks_5_tensoritem_4_index = cache['double_blocks_5_tensoritem_4_index']
    double_blocks_5_tensoritem_5_index = cache['double_blocks_5_tensoritem_5_index']
    double_blocks_5_tensoritem_6_index = cache['double_blocks_5_tensoritem_6_index']
    double_blocks_5_tensoritem_7_index = cache['double_blocks_5_tensoritem_7_index']
    double_blocks_5_tensoritem_8_index = cache['double_blocks_5_tensoritem_8_index']
    double_blocks_5_tensoritem_9_index = cache['double_blocks_5_tensoritem_9_index']
    double_blocks_5_totuple_0_output = cache['double_blocks_5_totuple_0_output']
    double_blocks_5_totuple_1_output = cache['double_blocks_5_totuple_1_output']
    double_blocks_5_transpose_0_axes = cache['double_blocks_5_transpose_0_axes']
    double_blocks_5_transpose_1_axes = cache['double_blocks_5_transpose_1_axes']
    double_blocks_5_txt_attn_norm_key_norm_add_right = cache['double_blocks_5_txt_attn_norm_key_norm_add_right']
    double_blocks_5_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_5_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_5_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_5_txt_attn_norm_key_norm_mean_axis']
    double_blocks_5_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_5_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_5_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_5_txt_attn_norm_key_norm_power_exponent']
    double_blocks_5_txt_attn_norm_key_norm_scale = params['double_blocks_5_txt_attn_norm_key_norm_scale']
    double_blocks_5_txt_attn_norm_query_norm_add_right = cache['double_blocks_5_txt_attn_norm_query_norm_add_right']
    double_blocks_5_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_5_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_5_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_5_txt_attn_norm_query_norm_mean_axis']
    double_blocks_5_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_5_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_5_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_5_txt_attn_norm_query_norm_power_exponent']
    double_blocks_5_txt_attn_norm_query_norm_scale = params['double_blocks_5_txt_attn_norm_query_norm_scale']
    double_blocks_5_txt_attn_proj_bias = params['double_blocks_5_txt_attn_proj_bias']
    double_blocks_5_txt_attn_proj_transpose_axes = cache['double_blocks_5_txt_attn_proj_transpose_axes']
    double_blocks_5_txt_attn_proj_weight = params['double_blocks_5_txt_attn_proj_weight']
    double_blocks_5_txt_attn_qkv_bias = params['double_blocks_5_txt_attn_qkv_bias']
    double_blocks_5_txt_attn_qkv_transpose_axes = cache['double_blocks_5_txt_attn_qkv_transpose_axes']
    double_blocks_5_txt_attn_qkv_weight = params['double_blocks_5_txt_attn_qkv_weight']
    double_blocks_5_txt_mlp_0_bias = params['double_blocks_5_txt_mlp_0_bias']
    double_blocks_5_txt_mlp_0_transpose_axes = cache['double_blocks_5_txt_mlp_0_transpose_axes']
    double_blocks_5_txt_mlp_0_weight = params['double_blocks_5_txt_mlp_0_weight']
    double_blocks_5_txt_mlp_2_bias = params['double_blocks_5_txt_mlp_2_bias']
    double_blocks_5_txt_mlp_2_transpose_axes = cache['double_blocks_5_txt_mlp_2_transpose_axes']
    double_blocks_5_txt_mlp_2_weight = params['double_blocks_5_txt_mlp_2_weight']
    double_blocks_5_txt_mlp_gelu_approximate = cache['double_blocks_5_txt_mlp_gelu_approximate']
    double_blocks_5_txt_mod_lin_bias = params['double_blocks_5_txt_mod_lin_bias']
    double_blocks_5_txt_mod_lin_transpose_axes = cache['double_blocks_5_txt_mod_lin_transpose_axes']
    double_blocks_5_txt_mod_lin_weight = params['double_blocks_5_txt_mod_lin_weight']
    double_blocks_5_txt_mod_silu_add_left = cache['double_blocks_5_txt_mod_silu_add_left']
    double_blocks_5_txt_mod_split_0_axis = cache['double_blocks_5_txt_mod_split_0_axis']
    double_blocks_5_txt_mod_split_0_split_size = cache['double_blocks_5_txt_mod_split_0_split_size']
    double_blocks_5_txt_mod_split_1_axis = cache['double_blocks_5_txt_mod_split_1_axis']
    double_blocks_5_txt_mod_split_1_split_size = cache['double_blocks_5_txt_mod_split_1_split_size']
    double_blocks_5_txt_mod_split_2_axis = cache['double_blocks_5_txt_mod_split_2_axis']
    double_blocks_5_txt_mod_split_2_split_size = cache['double_blocks_5_txt_mod_split_2_split_size']
    double_blocks_5_txt_mod_tensoritem_0_index = cache['double_blocks_5_txt_mod_tensoritem_0_index']
    double_blocks_5_txt_mod_tensoritem_1_index = cache['double_blocks_5_txt_mod_tensoritem_1_index']
    double_blocks_5_txt_mod_tensoritem_2_index = cache['double_blocks_5_txt_mod_tensoritem_2_index']
    double_blocks_5_txt_norm1_add_right = cache['double_blocks_5_txt_norm1_add_right']
    double_blocks_5_txt_norm1_mean_axis = cache['double_blocks_5_txt_norm1_mean_axis']
    double_blocks_5_txt_norm1_mean_keepdim = cache['double_blocks_5_txt_norm1_mean_keepdim']
    double_blocks_5_txt_norm1_variance_axis = cache['double_blocks_5_txt_norm1_variance_axis']
    double_blocks_5_txt_norm1_variance_correction = cache['double_blocks_5_txt_norm1_variance_correction']
    double_blocks_5_txt_norm1_variance_keepdim = cache['double_blocks_5_txt_norm1_variance_keepdim']
    double_blocks_5_txt_norm2_add_right = cache['double_blocks_5_txt_norm2_add_right']
    double_blocks_5_txt_norm2_mean_axis = cache['double_blocks_5_txt_norm2_mean_axis']
    double_blocks_5_txt_norm2_mean_keepdim = cache['double_blocks_5_txt_norm2_mean_keepdim']
    double_blocks_5_txt_norm2_variance_axis = cache['double_blocks_5_txt_norm2_variance_axis']
    double_blocks_5_txt_norm2_variance_correction = cache['double_blocks_5_txt_norm2_variance_correction']
    double_blocks_5_txt_norm2_variance_keepdim = cache['double_blocks_5_txt_norm2_variance_keepdim']
    double_blocks_6_add_0_left = cache['double_blocks_6_add_0_left']
    double_blocks_6_add_2_left = cache['double_blocks_6_add_2_left']
    double_blocks_6_add_5_left = cache['double_blocks_6_add_5_left']
    double_blocks_6_add_8_left = cache['double_blocks_6_add_8_left']
    double_blocks_6_concat_0_axis = cache['double_blocks_6_concat_0_axis']
    double_blocks_6_concat_1_axis = cache['double_blocks_6_concat_1_axis']
    double_blocks_6_concat_2_axis = cache['double_blocks_6_concat_2_axis']
    double_blocks_6_img_attn_norm_key_norm_add_right = cache['double_blocks_6_img_attn_norm_key_norm_add_right']
    double_blocks_6_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_6_img_attn_norm_key_norm_divide_numerator']
    double_blocks_6_img_attn_norm_key_norm_mean_axis = cache['double_blocks_6_img_attn_norm_key_norm_mean_axis']
    double_blocks_6_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_6_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_6_img_attn_norm_key_norm_power_exponent = cache['double_blocks_6_img_attn_norm_key_norm_power_exponent']
    double_blocks_6_img_attn_norm_key_norm_scale = params['double_blocks_6_img_attn_norm_key_norm_scale']
    double_blocks_6_img_attn_norm_query_norm_add_right = cache['double_blocks_6_img_attn_norm_query_norm_add_right']
    double_blocks_6_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_6_img_attn_norm_query_norm_divide_numerator']
    double_blocks_6_img_attn_norm_query_norm_mean_axis = cache['double_blocks_6_img_attn_norm_query_norm_mean_axis']
    double_blocks_6_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_6_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_6_img_attn_norm_query_norm_power_exponent = cache['double_blocks_6_img_attn_norm_query_norm_power_exponent']
    double_blocks_6_img_attn_norm_query_norm_scale = params['double_blocks_6_img_attn_norm_query_norm_scale']
    double_blocks_6_img_attn_proj_bias = params['double_blocks_6_img_attn_proj_bias']
    double_blocks_6_img_attn_proj_transpose_axes = cache['double_blocks_6_img_attn_proj_transpose_axes']
    double_blocks_6_img_attn_proj_weight = params['double_blocks_6_img_attn_proj_weight']
    double_blocks_6_img_attn_qkv_bias = params['double_blocks_6_img_attn_qkv_bias']
    double_blocks_6_img_attn_qkv_transpose_axes = cache['double_blocks_6_img_attn_qkv_transpose_axes']
    double_blocks_6_img_attn_qkv_weight = params['double_blocks_6_img_attn_qkv_weight']
    double_blocks_6_img_mlp_0_bias = params['double_blocks_6_img_mlp_0_bias']
    double_blocks_6_img_mlp_0_transpose_axes = cache['double_blocks_6_img_mlp_0_transpose_axes']
    double_blocks_6_img_mlp_0_weight = params['double_blocks_6_img_mlp_0_weight']
    double_blocks_6_img_mlp_2_bias = params['double_blocks_6_img_mlp_2_bias']
    double_blocks_6_img_mlp_2_transpose_axes = cache['double_blocks_6_img_mlp_2_transpose_axes']
    double_blocks_6_img_mlp_2_weight = params['double_blocks_6_img_mlp_2_weight']
    double_blocks_6_img_mlp_gelu_approximate = cache['double_blocks_6_img_mlp_gelu_approximate']
    double_blocks_6_img_mod_lin_bias = params['double_blocks_6_img_mod_lin_bias']
    double_blocks_6_img_mod_lin_transpose_axes = cache['double_blocks_6_img_mod_lin_transpose_axes']
    double_blocks_6_img_mod_lin_weight = params['double_blocks_6_img_mod_lin_weight']
    double_blocks_6_img_mod_silu_add_left = cache['double_blocks_6_img_mod_silu_add_left']
    double_blocks_6_img_mod_split_0_axis = cache['double_blocks_6_img_mod_split_0_axis']
    double_blocks_6_img_mod_split_0_split_size = cache['double_blocks_6_img_mod_split_0_split_size']
    double_blocks_6_img_mod_split_1_axis = cache['double_blocks_6_img_mod_split_1_axis']
    double_blocks_6_img_mod_split_1_split_size = cache['double_blocks_6_img_mod_split_1_split_size']
    double_blocks_6_img_mod_split_2_axis = cache['double_blocks_6_img_mod_split_2_axis']
    double_blocks_6_img_mod_split_2_split_size = cache['double_blocks_6_img_mod_split_2_split_size']
    double_blocks_6_img_mod_tensoritem_0_index = cache['double_blocks_6_img_mod_tensoritem_0_index']
    double_blocks_6_img_mod_tensoritem_1_index = cache['double_blocks_6_img_mod_tensoritem_1_index']
    double_blocks_6_img_mod_tensoritem_2_index = cache['double_blocks_6_img_mod_tensoritem_2_index']
    double_blocks_6_img_norm1_add_right = cache['double_blocks_6_img_norm1_add_right']
    double_blocks_6_img_norm1_mean_axis = cache['double_blocks_6_img_norm1_mean_axis']
    double_blocks_6_img_norm1_mean_keepdim = cache['double_blocks_6_img_norm1_mean_keepdim']
    double_blocks_6_img_norm1_variance_axis = cache['double_blocks_6_img_norm1_variance_axis']
    double_blocks_6_img_norm1_variance_correction = cache['double_blocks_6_img_norm1_variance_correction']
    double_blocks_6_img_norm1_variance_keepdim = cache['double_blocks_6_img_norm1_variance_keepdim']
    double_blocks_6_img_norm2_add_right = cache['double_blocks_6_img_norm2_add_right']
    double_blocks_6_img_norm2_mean_axis = cache['double_blocks_6_img_norm2_mean_axis']
    double_blocks_6_img_norm2_mean_keepdim = cache['double_blocks_6_img_norm2_mean_keepdim']
    double_blocks_6_img_norm2_variance_axis = cache['double_blocks_6_img_norm2_variance_axis']
    double_blocks_6_img_norm2_variance_correction = cache['double_blocks_6_img_norm2_variance_correction']
    double_blocks_6_img_norm2_variance_keepdim = cache['double_blocks_6_img_norm2_variance_keepdim']
    double_blocks_6_model_model_shape_0_output = cache['double_blocks_6_model_model_shape_0_output']
    double_blocks_6_model_model_shape_1_output = cache['double_blocks_6_model_model_shape_1_output']
    double_blocks_6_model_model_tensoritem_0_index = cache['double_blocks_6_model_model_tensoritem_0_index']
    double_blocks_6_model_model_tensoritem_1_index = cache['double_blocks_6_model_model_tensoritem_1_index']
    double_blocks_6_model_model_tensoritem_2_index = cache['double_blocks_6_model_model_tensoritem_2_index']
    double_blocks_6_model_model_tensoritem_3_index = cache['double_blocks_6_model_model_tensoritem_3_index']
    double_blocks_6_model_model_tensoritem_4_index = cache['double_blocks_6_model_model_tensoritem_4_index']
    double_blocks_6_model_model_tensoritem_5_index = cache['double_blocks_6_model_model_tensoritem_5_index']
    double_blocks_6_model_model_tensoritem_6_index = cache['double_blocks_6_model_model_tensoritem_6_index']
    double_blocks_6_model_model_tensoritem_7_index = cache['double_blocks_6_model_model_tensoritem_7_index']
    double_blocks_6_model_model_totuple_0_output = cache['double_blocks_6_model_model_totuple_0_output']
    double_blocks_6_model_model_totuple_1_output = cache['double_blocks_6_model_model_totuple_1_output']
    double_blocks_6_model_scaleddotproduct_attn_mask = cache['double_blocks_6_model_scaleddotproduct_attn_mask']
    double_blocks_6_model_totuple_output = cache['double_blocks_6_model_totuple_output']
    double_blocks_6_model_transpose_axes = cache['double_blocks_6_model_transpose_axes']
    double_blocks_6_tensoritem_0_index = cache['double_blocks_6_tensoritem_0_index']
    double_blocks_6_tensoritem_10_index = cache['double_blocks_6_tensoritem_10_index']
    double_blocks_6_tensoritem_11_index = cache['double_blocks_6_tensoritem_11_index']
    double_blocks_6_tensoritem_12_index = cache['double_blocks_6_tensoritem_12_index']
    double_blocks_6_tensoritem_13_index = cache['double_blocks_6_tensoritem_13_index']
    double_blocks_6_tensoritem_14_index = cache['double_blocks_6_tensoritem_14_index']
    double_blocks_6_tensoritem_15_index = cache['double_blocks_6_tensoritem_15_index']
    double_blocks_6_tensoritem_16_index = cache['double_blocks_6_tensoritem_16_index']
    double_blocks_6_tensoritem_17_index = cache['double_blocks_6_tensoritem_17_index']
    double_blocks_6_tensoritem_18_index = cache['double_blocks_6_tensoritem_18_index']
    double_blocks_6_tensoritem_19_index = cache['double_blocks_6_tensoritem_19_index']
    double_blocks_6_tensoritem_1_index = cache['double_blocks_6_tensoritem_1_index']
    double_blocks_6_tensoritem_2_index = cache['double_blocks_6_tensoritem_2_index']
    double_blocks_6_tensoritem_3_index = cache['double_blocks_6_tensoritem_3_index']
    double_blocks_6_tensoritem_4_index = cache['double_blocks_6_tensoritem_4_index']
    double_blocks_6_tensoritem_5_index = cache['double_blocks_6_tensoritem_5_index']
    double_blocks_6_tensoritem_6_index = cache['double_blocks_6_tensoritem_6_index']
    double_blocks_6_tensoritem_7_index = cache['double_blocks_6_tensoritem_7_index']
    double_blocks_6_tensoritem_8_index = cache['double_blocks_6_tensoritem_8_index']
    double_blocks_6_tensoritem_9_index = cache['double_blocks_6_tensoritem_9_index']
    double_blocks_6_totuple_0_output = cache['double_blocks_6_totuple_0_output']
    double_blocks_6_totuple_1_output = cache['double_blocks_6_totuple_1_output']
    double_blocks_6_transpose_0_axes = cache['double_blocks_6_transpose_0_axes']
    double_blocks_6_transpose_1_axes = cache['double_blocks_6_transpose_1_axes']
    double_blocks_6_txt_attn_norm_key_norm_add_right = cache['double_blocks_6_txt_attn_norm_key_norm_add_right']
    double_blocks_6_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_6_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_6_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_6_txt_attn_norm_key_norm_mean_axis']
    double_blocks_6_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_6_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_6_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_6_txt_attn_norm_key_norm_power_exponent']
    double_blocks_6_txt_attn_norm_key_norm_scale = params['double_blocks_6_txt_attn_norm_key_norm_scale']
    double_blocks_6_txt_attn_norm_query_norm_add_right = cache['double_blocks_6_txt_attn_norm_query_norm_add_right']
    double_blocks_6_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_6_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_6_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_6_txt_attn_norm_query_norm_mean_axis']
    double_blocks_6_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_6_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_6_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_6_txt_attn_norm_query_norm_power_exponent']
    double_blocks_6_txt_attn_norm_query_norm_scale = params['double_blocks_6_txt_attn_norm_query_norm_scale']
    double_blocks_6_txt_attn_proj_bias = params['double_blocks_6_txt_attn_proj_bias']
    double_blocks_6_txt_attn_proj_transpose_axes = cache['double_blocks_6_txt_attn_proj_transpose_axes']
    double_blocks_6_txt_attn_proj_weight = params['double_blocks_6_txt_attn_proj_weight']
    double_blocks_6_txt_attn_qkv_bias = params['double_blocks_6_txt_attn_qkv_bias']
    double_blocks_6_txt_attn_qkv_transpose_axes = cache['double_blocks_6_txt_attn_qkv_transpose_axes']
    double_blocks_6_txt_attn_qkv_weight = params['double_blocks_6_txt_attn_qkv_weight']
    double_blocks_6_txt_mlp_0_bias = params['double_blocks_6_txt_mlp_0_bias']
    double_blocks_6_txt_mlp_0_transpose_axes = cache['double_blocks_6_txt_mlp_0_transpose_axes']
    double_blocks_6_txt_mlp_0_weight = params['double_blocks_6_txt_mlp_0_weight']
    double_blocks_6_txt_mlp_2_bias = params['double_blocks_6_txt_mlp_2_bias']
    double_blocks_6_txt_mlp_2_transpose_axes = cache['double_blocks_6_txt_mlp_2_transpose_axes']
    double_blocks_6_txt_mlp_2_weight = params['double_blocks_6_txt_mlp_2_weight']
    double_blocks_6_txt_mlp_gelu_approximate = cache['double_blocks_6_txt_mlp_gelu_approximate']
    double_blocks_6_txt_mod_lin_bias = params['double_blocks_6_txt_mod_lin_bias']
    double_blocks_6_txt_mod_lin_transpose_axes = cache['double_blocks_6_txt_mod_lin_transpose_axes']
    double_blocks_6_txt_mod_lin_weight = params['double_blocks_6_txt_mod_lin_weight']
    double_blocks_6_txt_mod_silu_add_left = cache['double_blocks_6_txt_mod_silu_add_left']
    double_blocks_6_txt_mod_split_0_axis = cache['double_blocks_6_txt_mod_split_0_axis']
    double_blocks_6_txt_mod_split_0_split_size = cache['double_blocks_6_txt_mod_split_0_split_size']
    double_blocks_6_txt_mod_split_1_axis = cache['double_blocks_6_txt_mod_split_1_axis']
    double_blocks_6_txt_mod_split_1_split_size = cache['double_blocks_6_txt_mod_split_1_split_size']
    double_blocks_6_txt_mod_split_2_axis = cache['double_blocks_6_txt_mod_split_2_axis']
    double_blocks_6_txt_mod_split_2_split_size = cache['double_blocks_6_txt_mod_split_2_split_size']
    double_blocks_6_txt_mod_tensoritem_0_index = cache['double_blocks_6_txt_mod_tensoritem_0_index']
    double_blocks_6_txt_mod_tensoritem_1_index = cache['double_blocks_6_txt_mod_tensoritem_1_index']
    double_blocks_6_txt_mod_tensoritem_2_index = cache['double_blocks_6_txt_mod_tensoritem_2_index']
    double_blocks_6_txt_norm1_add_right = cache['double_blocks_6_txt_norm1_add_right']
    double_blocks_6_txt_norm1_mean_axis = cache['double_blocks_6_txt_norm1_mean_axis']
    double_blocks_6_txt_norm1_mean_keepdim = cache['double_blocks_6_txt_norm1_mean_keepdim']
    double_blocks_6_txt_norm1_variance_axis = cache['double_blocks_6_txt_norm1_variance_axis']
    double_blocks_6_txt_norm1_variance_correction = cache['double_blocks_6_txt_norm1_variance_correction']
    double_blocks_6_txt_norm1_variance_keepdim = cache['double_blocks_6_txt_norm1_variance_keepdim']
    double_blocks_6_txt_norm2_add_right = cache['double_blocks_6_txt_norm2_add_right']
    double_blocks_6_txt_norm2_mean_axis = cache['double_blocks_6_txt_norm2_mean_axis']
    double_blocks_6_txt_norm2_mean_keepdim = cache['double_blocks_6_txt_norm2_mean_keepdim']
    double_blocks_6_txt_norm2_variance_axis = cache['double_blocks_6_txt_norm2_variance_axis']
    double_blocks_6_txt_norm2_variance_correction = cache['double_blocks_6_txt_norm2_variance_correction']
    double_blocks_6_txt_norm2_variance_keepdim = cache['double_blocks_6_txt_norm2_variance_keepdim']
    double_blocks_7_add_0_left = cache['double_blocks_7_add_0_left']
    double_blocks_7_add_2_left = cache['double_blocks_7_add_2_left']
    double_blocks_7_add_5_left = cache['double_blocks_7_add_5_left']
    double_blocks_7_add_8_left = cache['double_blocks_7_add_8_left']
    double_blocks_7_concat_0_axis = cache['double_blocks_7_concat_0_axis']
    double_blocks_7_concat_1_axis = cache['double_blocks_7_concat_1_axis']
    double_blocks_7_concat_2_axis = cache['double_blocks_7_concat_2_axis']
    double_blocks_7_img_attn_norm_key_norm_add_right = cache['double_blocks_7_img_attn_norm_key_norm_add_right']
    double_blocks_7_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_7_img_attn_norm_key_norm_divide_numerator']
    double_blocks_7_img_attn_norm_key_norm_mean_axis = cache['double_blocks_7_img_attn_norm_key_norm_mean_axis']
    double_blocks_7_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_7_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_7_img_attn_norm_key_norm_power_exponent = cache['double_blocks_7_img_attn_norm_key_norm_power_exponent']
    double_blocks_7_img_attn_norm_key_norm_scale = params['double_blocks_7_img_attn_norm_key_norm_scale']
    double_blocks_7_img_attn_norm_query_norm_add_right = cache['double_blocks_7_img_attn_norm_query_norm_add_right']
    double_blocks_7_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_7_img_attn_norm_query_norm_divide_numerator']
    double_blocks_7_img_attn_norm_query_norm_mean_axis = cache['double_blocks_7_img_attn_norm_query_norm_mean_axis']
    double_blocks_7_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_7_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_7_img_attn_norm_query_norm_power_exponent = cache['double_blocks_7_img_attn_norm_query_norm_power_exponent']
    double_blocks_7_img_attn_norm_query_norm_scale = params['double_blocks_7_img_attn_norm_query_norm_scale']
    double_blocks_7_img_attn_proj_bias = params['double_blocks_7_img_attn_proj_bias']
    double_blocks_7_img_attn_proj_transpose_axes = cache['double_blocks_7_img_attn_proj_transpose_axes']
    double_blocks_7_img_attn_proj_weight = params['double_blocks_7_img_attn_proj_weight']
    double_blocks_7_img_attn_qkv_bias = params['double_blocks_7_img_attn_qkv_bias']
    double_blocks_7_img_attn_qkv_transpose_axes = cache['double_blocks_7_img_attn_qkv_transpose_axes']
    double_blocks_7_img_attn_qkv_weight = params['double_blocks_7_img_attn_qkv_weight']
    double_blocks_7_img_mlp_0_bias = params['double_blocks_7_img_mlp_0_bias']
    double_blocks_7_img_mlp_0_transpose_axes = cache['double_blocks_7_img_mlp_0_transpose_axes']
    double_blocks_7_img_mlp_0_weight = params['double_blocks_7_img_mlp_0_weight']
    double_blocks_7_img_mlp_2_bias = params['double_blocks_7_img_mlp_2_bias']
    double_blocks_7_img_mlp_2_transpose_axes = cache['double_blocks_7_img_mlp_2_transpose_axes']
    double_blocks_7_img_mlp_2_weight = params['double_blocks_7_img_mlp_2_weight']
    double_blocks_7_img_mlp_gelu_approximate = cache['double_blocks_7_img_mlp_gelu_approximate']
    double_blocks_7_img_mod_lin_bias = params['double_blocks_7_img_mod_lin_bias']
    double_blocks_7_img_mod_lin_transpose_axes = cache['double_blocks_7_img_mod_lin_transpose_axes']
    double_blocks_7_img_mod_lin_weight = params['double_blocks_7_img_mod_lin_weight']
    double_blocks_7_img_mod_silu_add_left = cache['double_blocks_7_img_mod_silu_add_left']
    double_blocks_7_img_mod_split_0_axis = cache['double_blocks_7_img_mod_split_0_axis']
    double_blocks_7_img_mod_split_0_split_size = cache['double_blocks_7_img_mod_split_0_split_size']
    double_blocks_7_img_mod_split_1_axis = cache['double_blocks_7_img_mod_split_1_axis']
    double_blocks_7_img_mod_split_1_split_size = cache['double_blocks_7_img_mod_split_1_split_size']
    double_blocks_7_img_mod_split_2_axis = cache['double_blocks_7_img_mod_split_2_axis']
    double_blocks_7_img_mod_split_2_split_size = cache['double_blocks_7_img_mod_split_2_split_size']
    double_blocks_7_img_mod_tensoritem_0_index = cache['double_blocks_7_img_mod_tensoritem_0_index']
    double_blocks_7_img_mod_tensoritem_1_index = cache['double_blocks_7_img_mod_tensoritem_1_index']
    double_blocks_7_img_mod_tensoritem_2_index = cache['double_blocks_7_img_mod_tensoritem_2_index']
    double_blocks_7_img_norm1_add_right = cache['double_blocks_7_img_norm1_add_right']
    double_blocks_7_img_norm1_mean_axis = cache['double_blocks_7_img_norm1_mean_axis']
    double_blocks_7_img_norm1_mean_keepdim = cache['double_blocks_7_img_norm1_mean_keepdim']
    double_blocks_7_img_norm1_variance_axis = cache['double_blocks_7_img_norm1_variance_axis']
    double_blocks_7_img_norm1_variance_correction = cache['double_blocks_7_img_norm1_variance_correction']
    double_blocks_7_img_norm1_variance_keepdim = cache['double_blocks_7_img_norm1_variance_keepdim']
    double_blocks_7_img_norm2_add_right = cache['double_blocks_7_img_norm2_add_right']
    double_blocks_7_img_norm2_mean_axis = cache['double_blocks_7_img_norm2_mean_axis']
    double_blocks_7_img_norm2_mean_keepdim = cache['double_blocks_7_img_norm2_mean_keepdim']
    double_blocks_7_img_norm2_variance_axis = cache['double_blocks_7_img_norm2_variance_axis']
    double_blocks_7_img_norm2_variance_correction = cache['double_blocks_7_img_norm2_variance_correction']
    double_blocks_7_img_norm2_variance_keepdim = cache['double_blocks_7_img_norm2_variance_keepdim']
    double_blocks_7_model_model_shape_0_output = cache['double_blocks_7_model_model_shape_0_output']
    double_blocks_7_model_model_shape_1_output = cache['double_blocks_7_model_model_shape_1_output']
    double_blocks_7_model_model_tensoritem_0_index = cache['double_blocks_7_model_model_tensoritem_0_index']
    double_blocks_7_model_model_tensoritem_1_index = cache['double_blocks_7_model_model_tensoritem_1_index']
    double_blocks_7_model_model_tensoritem_2_index = cache['double_blocks_7_model_model_tensoritem_2_index']
    double_blocks_7_model_model_tensoritem_3_index = cache['double_blocks_7_model_model_tensoritem_3_index']
    double_blocks_7_model_model_tensoritem_4_index = cache['double_blocks_7_model_model_tensoritem_4_index']
    double_blocks_7_model_model_tensoritem_5_index = cache['double_blocks_7_model_model_tensoritem_5_index']
    double_blocks_7_model_model_tensoritem_6_index = cache['double_blocks_7_model_model_tensoritem_6_index']
    double_blocks_7_model_model_tensoritem_7_index = cache['double_blocks_7_model_model_tensoritem_7_index']
    double_blocks_7_model_model_totuple_0_output = cache['double_blocks_7_model_model_totuple_0_output']
    double_blocks_7_model_model_totuple_1_output = cache['double_blocks_7_model_model_totuple_1_output']
    double_blocks_7_model_scaleddotproduct_attn_mask = cache['double_blocks_7_model_scaleddotproduct_attn_mask']
    double_blocks_7_model_totuple_output = cache['double_blocks_7_model_totuple_output']
    double_blocks_7_model_transpose_axes = cache['double_blocks_7_model_transpose_axes']
    double_blocks_7_tensoritem_0_index = cache['double_blocks_7_tensoritem_0_index']
    double_blocks_7_tensoritem_10_index = cache['double_blocks_7_tensoritem_10_index']
    double_blocks_7_tensoritem_11_index = cache['double_blocks_7_tensoritem_11_index']
    double_blocks_7_tensoritem_12_index = cache['double_blocks_7_tensoritem_12_index']
    double_blocks_7_tensoritem_13_index = cache['double_blocks_7_tensoritem_13_index']
    double_blocks_7_tensoritem_14_index = cache['double_blocks_7_tensoritem_14_index']
    double_blocks_7_tensoritem_15_index = cache['double_blocks_7_tensoritem_15_index']
    double_blocks_7_tensoritem_16_index = cache['double_blocks_7_tensoritem_16_index']
    double_blocks_7_tensoritem_17_index = cache['double_blocks_7_tensoritem_17_index']
    double_blocks_7_tensoritem_18_index = cache['double_blocks_7_tensoritem_18_index']
    double_blocks_7_tensoritem_19_index = cache['double_blocks_7_tensoritem_19_index']
    double_blocks_7_tensoritem_1_index = cache['double_blocks_7_tensoritem_1_index']
    double_blocks_7_tensoritem_2_index = cache['double_blocks_7_tensoritem_2_index']
    double_blocks_7_tensoritem_3_index = cache['double_blocks_7_tensoritem_3_index']
    double_blocks_7_tensoritem_4_index = cache['double_blocks_7_tensoritem_4_index']
    double_blocks_7_tensoritem_5_index = cache['double_blocks_7_tensoritem_5_index']
    double_blocks_7_tensoritem_6_index = cache['double_blocks_7_tensoritem_6_index']
    double_blocks_7_tensoritem_7_index = cache['double_blocks_7_tensoritem_7_index']
    double_blocks_7_tensoritem_8_index = cache['double_blocks_7_tensoritem_8_index']
    double_blocks_7_tensoritem_9_index = cache['double_blocks_7_tensoritem_9_index']
    double_blocks_7_totuple_0_output = cache['double_blocks_7_totuple_0_output']
    double_blocks_7_totuple_1_output = cache['double_blocks_7_totuple_1_output']
    double_blocks_7_transpose_0_axes = cache['double_blocks_7_transpose_0_axes']
    double_blocks_7_transpose_1_axes = cache['double_blocks_7_transpose_1_axes']
    double_blocks_7_txt_attn_norm_key_norm_add_right = cache['double_blocks_7_txt_attn_norm_key_norm_add_right']
    double_blocks_7_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_7_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_7_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_7_txt_attn_norm_key_norm_mean_axis']
    double_blocks_7_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_7_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_7_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_7_txt_attn_norm_key_norm_power_exponent']
    double_blocks_7_txt_attn_norm_key_norm_scale = params['double_blocks_7_txt_attn_norm_key_norm_scale']
    double_blocks_7_txt_attn_norm_query_norm_add_right = cache['double_blocks_7_txt_attn_norm_query_norm_add_right']
    double_blocks_7_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_7_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_7_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_7_txt_attn_norm_query_norm_mean_axis']
    double_blocks_7_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_7_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_7_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_7_txt_attn_norm_query_norm_power_exponent']
    double_blocks_7_txt_attn_norm_query_norm_scale = params['double_blocks_7_txt_attn_norm_query_norm_scale']
    double_blocks_7_txt_attn_proj_bias = params['double_blocks_7_txt_attn_proj_bias']
    double_blocks_7_txt_attn_proj_transpose_axes = cache['double_blocks_7_txt_attn_proj_transpose_axes']
    double_blocks_7_txt_attn_proj_weight = params['double_blocks_7_txt_attn_proj_weight']
    double_blocks_7_txt_attn_qkv_bias = params['double_blocks_7_txt_attn_qkv_bias']
    double_blocks_7_txt_attn_qkv_transpose_axes = cache['double_blocks_7_txt_attn_qkv_transpose_axes']
    double_blocks_7_txt_attn_qkv_weight = params['double_blocks_7_txt_attn_qkv_weight']
    double_blocks_7_txt_mlp_0_bias = params['double_blocks_7_txt_mlp_0_bias']
    double_blocks_7_txt_mlp_0_transpose_axes = cache['double_blocks_7_txt_mlp_0_transpose_axes']
    double_blocks_7_txt_mlp_0_weight = params['double_blocks_7_txt_mlp_0_weight']
    double_blocks_7_txt_mlp_2_bias = params['double_blocks_7_txt_mlp_2_bias']
    double_blocks_7_txt_mlp_2_transpose_axes = cache['double_blocks_7_txt_mlp_2_transpose_axes']
    double_blocks_7_txt_mlp_2_weight = params['double_blocks_7_txt_mlp_2_weight']
    double_blocks_7_txt_mlp_gelu_approximate = cache['double_blocks_7_txt_mlp_gelu_approximate']
    double_blocks_7_txt_mod_lin_bias = params['double_blocks_7_txt_mod_lin_bias']
    double_blocks_7_txt_mod_lin_transpose_axes = cache['double_blocks_7_txt_mod_lin_transpose_axes']
    double_blocks_7_txt_mod_lin_weight = params['double_blocks_7_txt_mod_lin_weight']
    double_blocks_7_txt_mod_silu_add_left = cache['double_blocks_7_txt_mod_silu_add_left']
    double_blocks_7_txt_mod_split_0_axis = cache['double_blocks_7_txt_mod_split_0_axis']
    double_blocks_7_txt_mod_split_0_split_size = cache['double_blocks_7_txt_mod_split_0_split_size']
    double_blocks_7_txt_mod_split_1_axis = cache['double_blocks_7_txt_mod_split_1_axis']
    double_blocks_7_txt_mod_split_1_split_size = cache['double_blocks_7_txt_mod_split_1_split_size']
    double_blocks_7_txt_mod_split_2_axis = cache['double_blocks_7_txt_mod_split_2_axis']
    double_blocks_7_txt_mod_split_2_split_size = cache['double_blocks_7_txt_mod_split_2_split_size']
    double_blocks_7_txt_mod_tensoritem_0_index = cache['double_blocks_7_txt_mod_tensoritem_0_index']
    double_blocks_7_txt_mod_tensoritem_1_index = cache['double_blocks_7_txt_mod_tensoritem_1_index']
    double_blocks_7_txt_mod_tensoritem_2_index = cache['double_blocks_7_txt_mod_tensoritem_2_index']
    double_blocks_7_txt_norm1_add_right = cache['double_blocks_7_txt_norm1_add_right']
    double_blocks_7_txt_norm1_mean_axis = cache['double_blocks_7_txt_norm1_mean_axis']
    double_blocks_7_txt_norm1_mean_keepdim = cache['double_blocks_7_txt_norm1_mean_keepdim']
    double_blocks_7_txt_norm1_variance_axis = cache['double_blocks_7_txt_norm1_variance_axis']
    double_blocks_7_txt_norm1_variance_correction = cache['double_blocks_7_txt_norm1_variance_correction']
    double_blocks_7_txt_norm1_variance_keepdim = cache['double_blocks_7_txt_norm1_variance_keepdim']
    double_blocks_7_txt_norm2_add_right = cache['double_blocks_7_txt_norm2_add_right']
    double_blocks_7_txt_norm2_mean_axis = cache['double_blocks_7_txt_norm2_mean_axis']
    double_blocks_7_txt_norm2_mean_keepdim = cache['double_blocks_7_txt_norm2_mean_keepdim']
    double_blocks_7_txt_norm2_variance_axis = cache['double_blocks_7_txt_norm2_variance_axis']
    double_blocks_7_txt_norm2_variance_correction = cache['double_blocks_7_txt_norm2_variance_correction']
    double_blocks_7_txt_norm2_variance_keepdim = cache['double_blocks_7_txt_norm2_variance_keepdim']
    double_blocks_8_add_0_left = cache['double_blocks_8_add_0_left']
    double_blocks_8_add_2_left = cache['double_blocks_8_add_2_left']
    double_blocks_8_add_5_left = cache['double_blocks_8_add_5_left']
    double_blocks_8_add_8_left = cache['double_blocks_8_add_8_left']
    double_blocks_8_concat_0_axis = cache['double_blocks_8_concat_0_axis']
    double_blocks_8_concat_1_axis = cache['double_blocks_8_concat_1_axis']
    double_blocks_8_concat_2_axis = cache['double_blocks_8_concat_2_axis']
    double_blocks_8_img_attn_norm_key_norm_add_right = cache['double_blocks_8_img_attn_norm_key_norm_add_right']
    double_blocks_8_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_8_img_attn_norm_key_norm_divide_numerator']
    double_blocks_8_img_attn_norm_key_norm_mean_axis = cache['double_blocks_8_img_attn_norm_key_norm_mean_axis']
    double_blocks_8_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_8_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_8_img_attn_norm_key_norm_power_exponent = cache['double_blocks_8_img_attn_norm_key_norm_power_exponent']
    double_blocks_8_img_attn_norm_key_norm_scale = params['double_blocks_8_img_attn_norm_key_norm_scale']
    double_blocks_8_img_attn_norm_query_norm_add_right = cache['double_blocks_8_img_attn_norm_query_norm_add_right']
    double_blocks_8_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_8_img_attn_norm_query_norm_divide_numerator']
    double_blocks_8_img_attn_norm_query_norm_mean_axis = cache['double_blocks_8_img_attn_norm_query_norm_mean_axis']
    double_blocks_8_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_8_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_8_img_attn_norm_query_norm_power_exponent = cache['double_blocks_8_img_attn_norm_query_norm_power_exponent']
    double_blocks_8_img_attn_norm_query_norm_scale = params['double_blocks_8_img_attn_norm_query_norm_scale']
    double_blocks_8_img_attn_proj_bias = params['double_blocks_8_img_attn_proj_bias']
    double_blocks_8_img_attn_proj_transpose_axes = cache['double_blocks_8_img_attn_proj_transpose_axes']
    double_blocks_8_img_attn_proj_weight = params['double_blocks_8_img_attn_proj_weight']
    double_blocks_8_img_attn_qkv_bias = params['double_blocks_8_img_attn_qkv_bias']
    double_blocks_8_img_attn_qkv_transpose_axes = cache['double_blocks_8_img_attn_qkv_transpose_axes']
    double_blocks_8_img_attn_qkv_weight = params['double_blocks_8_img_attn_qkv_weight']
    double_blocks_8_img_mlp_0_bias = params['double_blocks_8_img_mlp_0_bias']
    double_blocks_8_img_mlp_0_transpose_axes = cache['double_blocks_8_img_mlp_0_transpose_axes']
    double_blocks_8_img_mlp_0_weight = params['double_blocks_8_img_mlp_0_weight']
    double_blocks_8_img_mlp_2_bias = params['double_blocks_8_img_mlp_2_bias']
    double_blocks_8_img_mlp_2_transpose_axes = cache['double_blocks_8_img_mlp_2_transpose_axes']
    double_blocks_8_img_mlp_2_weight = params['double_blocks_8_img_mlp_2_weight']
    double_blocks_8_img_mlp_gelu_approximate = cache['double_blocks_8_img_mlp_gelu_approximate']
    double_blocks_8_img_mod_lin_bias = params['double_blocks_8_img_mod_lin_bias']
    double_blocks_8_img_mod_lin_transpose_axes = cache['double_blocks_8_img_mod_lin_transpose_axes']
    double_blocks_8_img_mod_lin_weight = params['double_blocks_8_img_mod_lin_weight']
    double_blocks_8_img_mod_silu_add_left = cache['double_blocks_8_img_mod_silu_add_left']
    double_blocks_8_img_mod_split_0_axis = cache['double_blocks_8_img_mod_split_0_axis']
    double_blocks_8_img_mod_split_0_split_size = cache['double_blocks_8_img_mod_split_0_split_size']
    double_blocks_8_img_mod_split_1_axis = cache['double_blocks_8_img_mod_split_1_axis']
    double_blocks_8_img_mod_split_1_split_size = cache['double_blocks_8_img_mod_split_1_split_size']
    double_blocks_8_img_mod_split_2_axis = cache['double_blocks_8_img_mod_split_2_axis']
    double_blocks_8_img_mod_split_2_split_size = cache['double_blocks_8_img_mod_split_2_split_size']
    double_blocks_8_img_mod_tensoritem_0_index = cache['double_blocks_8_img_mod_tensoritem_0_index']
    double_blocks_8_img_mod_tensoritem_1_index = cache['double_blocks_8_img_mod_tensoritem_1_index']
    double_blocks_8_img_mod_tensoritem_2_index = cache['double_blocks_8_img_mod_tensoritem_2_index']
    double_blocks_8_img_norm1_add_right = cache['double_blocks_8_img_norm1_add_right']
    double_blocks_8_img_norm1_mean_axis = cache['double_blocks_8_img_norm1_mean_axis']
    double_blocks_8_img_norm1_mean_keepdim = cache['double_blocks_8_img_norm1_mean_keepdim']
    double_blocks_8_img_norm1_variance_axis = cache['double_blocks_8_img_norm1_variance_axis']
    double_blocks_8_img_norm1_variance_correction = cache['double_blocks_8_img_norm1_variance_correction']
    double_blocks_8_img_norm1_variance_keepdim = cache['double_blocks_8_img_norm1_variance_keepdim']
    double_blocks_8_img_norm2_add_right = cache['double_blocks_8_img_norm2_add_right']
    double_blocks_8_img_norm2_mean_axis = cache['double_blocks_8_img_norm2_mean_axis']
    double_blocks_8_img_norm2_mean_keepdim = cache['double_blocks_8_img_norm2_mean_keepdim']
    double_blocks_8_img_norm2_variance_axis = cache['double_blocks_8_img_norm2_variance_axis']
    double_blocks_8_img_norm2_variance_correction = cache['double_blocks_8_img_norm2_variance_correction']
    double_blocks_8_img_norm2_variance_keepdim = cache['double_blocks_8_img_norm2_variance_keepdim']
    double_blocks_8_model_model_shape_0_output = cache['double_blocks_8_model_model_shape_0_output']
    double_blocks_8_model_model_shape_1_output = cache['double_blocks_8_model_model_shape_1_output']
    double_blocks_8_model_model_tensoritem_0_index = cache['double_blocks_8_model_model_tensoritem_0_index']
    double_blocks_8_model_model_tensoritem_1_index = cache['double_blocks_8_model_model_tensoritem_1_index']
    double_blocks_8_model_model_tensoritem_2_index = cache['double_blocks_8_model_model_tensoritem_2_index']
    double_blocks_8_model_model_tensoritem_3_index = cache['double_blocks_8_model_model_tensoritem_3_index']
    double_blocks_8_model_model_tensoritem_4_index = cache['double_blocks_8_model_model_tensoritem_4_index']
    double_blocks_8_model_model_tensoritem_5_index = cache['double_blocks_8_model_model_tensoritem_5_index']
    double_blocks_8_model_model_tensoritem_6_index = cache['double_blocks_8_model_model_tensoritem_6_index']
    double_blocks_8_model_model_tensoritem_7_index = cache['double_blocks_8_model_model_tensoritem_7_index']
    double_blocks_8_model_model_totuple_0_output = cache['double_blocks_8_model_model_totuple_0_output']
    double_blocks_8_model_model_totuple_1_output = cache['double_blocks_8_model_model_totuple_1_output']
    double_blocks_8_model_scaleddotproduct_attn_mask = cache['double_blocks_8_model_scaleddotproduct_attn_mask']
    double_blocks_8_model_totuple_output = cache['double_blocks_8_model_totuple_output']
    double_blocks_8_model_transpose_axes = cache['double_blocks_8_model_transpose_axes']
    double_blocks_8_tensoritem_0_index = cache['double_blocks_8_tensoritem_0_index']
    double_blocks_8_tensoritem_10_index = cache['double_blocks_8_tensoritem_10_index']
    double_blocks_8_tensoritem_11_index = cache['double_blocks_8_tensoritem_11_index']
    double_blocks_8_tensoritem_12_index = cache['double_blocks_8_tensoritem_12_index']
    double_blocks_8_tensoritem_13_index = cache['double_blocks_8_tensoritem_13_index']
    double_blocks_8_tensoritem_14_index = cache['double_blocks_8_tensoritem_14_index']
    double_blocks_8_tensoritem_15_index = cache['double_blocks_8_tensoritem_15_index']
    double_blocks_8_tensoritem_16_index = cache['double_blocks_8_tensoritem_16_index']
    double_blocks_8_tensoritem_17_index = cache['double_blocks_8_tensoritem_17_index']
    double_blocks_8_tensoritem_18_index = cache['double_blocks_8_tensoritem_18_index']
    double_blocks_8_tensoritem_19_index = cache['double_blocks_8_tensoritem_19_index']
    double_blocks_8_tensoritem_1_index = cache['double_blocks_8_tensoritem_1_index']
    double_blocks_8_tensoritem_2_index = cache['double_blocks_8_tensoritem_2_index']
    double_blocks_8_tensoritem_3_index = cache['double_blocks_8_tensoritem_3_index']
    double_blocks_8_tensoritem_4_index = cache['double_blocks_8_tensoritem_4_index']
    double_blocks_8_tensoritem_5_index = cache['double_blocks_8_tensoritem_5_index']
    double_blocks_8_tensoritem_6_index = cache['double_blocks_8_tensoritem_6_index']
    double_blocks_8_tensoritem_7_index = cache['double_blocks_8_tensoritem_7_index']
    double_blocks_8_tensoritem_8_index = cache['double_blocks_8_tensoritem_8_index']
    double_blocks_8_tensoritem_9_index = cache['double_blocks_8_tensoritem_9_index']
    double_blocks_8_totuple_0_output = cache['double_blocks_8_totuple_0_output']
    double_blocks_8_totuple_1_output = cache['double_blocks_8_totuple_1_output']
    double_blocks_8_transpose_0_axes = cache['double_blocks_8_transpose_0_axes']
    double_blocks_8_transpose_1_axes = cache['double_blocks_8_transpose_1_axes']
    double_blocks_8_txt_attn_norm_key_norm_add_right = cache['double_blocks_8_txt_attn_norm_key_norm_add_right']
    double_blocks_8_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_8_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_8_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_8_txt_attn_norm_key_norm_mean_axis']
    double_blocks_8_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_8_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_8_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_8_txt_attn_norm_key_norm_power_exponent']
    double_blocks_8_txt_attn_norm_key_norm_scale = params['double_blocks_8_txt_attn_norm_key_norm_scale']
    double_blocks_8_txt_attn_norm_query_norm_add_right = cache['double_blocks_8_txt_attn_norm_query_norm_add_right']
    double_blocks_8_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_8_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_8_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_8_txt_attn_norm_query_norm_mean_axis']
    double_blocks_8_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_8_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_8_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_8_txt_attn_norm_query_norm_power_exponent']
    double_blocks_8_txt_attn_norm_query_norm_scale = params['double_blocks_8_txt_attn_norm_query_norm_scale']
    double_blocks_8_txt_attn_proj_bias = params['double_blocks_8_txt_attn_proj_bias']
    double_blocks_8_txt_attn_proj_transpose_axes = cache['double_blocks_8_txt_attn_proj_transpose_axes']
    double_blocks_8_txt_attn_proj_weight = params['double_blocks_8_txt_attn_proj_weight']
    double_blocks_8_txt_attn_qkv_bias = params['double_blocks_8_txt_attn_qkv_bias']
    double_blocks_8_txt_attn_qkv_transpose_axes = cache['double_blocks_8_txt_attn_qkv_transpose_axes']
    double_blocks_8_txt_attn_qkv_weight = params['double_blocks_8_txt_attn_qkv_weight']
    double_blocks_8_txt_mlp_0_bias = params['double_blocks_8_txt_mlp_0_bias']
    double_blocks_8_txt_mlp_0_transpose_axes = cache['double_blocks_8_txt_mlp_0_transpose_axes']
    double_blocks_8_txt_mlp_0_weight = params['double_blocks_8_txt_mlp_0_weight']
    double_blocks_8_txt_mlp_2_bias = params['double_blocks_8_txt_mlp_2_bias']
    double_blocks_8_txt_mlp_2_transpose_axes = cache['double_blocks_8_txt_mlp_2_transpose_axes']
    double_blocks_8_txt_mlp_2_weight = params['double_blocks_8_txt_mlp_2_weight']
    double_blocks_8_txt_mlp_gelu_approximate = cache['double_blocks_8_txt_mlp_gelu_approximate']
    double_blocks_8_txt_mod_lin_bias = params['double_blocks_8_txt_mod_lin_bias']
    double_blocks_8_txt_mod_lin_transpose_axes = cache['double_blocks_8_txt_mod_lin_transpose_axes']
    double_blocks_8_txt_mod_lin_weight = params['double_blocks_8_txt_mod_lin_weight']
    double_blocks_8_txt_mod_silu_add_left = cache['double_blocks_8_txt_mod_silu_add_left']
    double_blocks_8_txt_mod_split_0_axis = cache['double_blocks_8_txt_mod_split_0_axis']
    double_blocks_8_txt_mod_split_0_split_size = cache['double_blocks_8_txt_mod_split_0_split_size']
    double_blocks_8_txt_mod_split_1_axis = cache['double_blocks_8_txt_mod_split_1_axis']
    double_blocks_8_txt_mod_split_1_split_size = cache['double_blocks_8_txt_mod_split_1_split_size']
    double_blocks_8_txt_mod_split_2_axis = cache['double_blocks_8_txt_mod_split_2_axis']
    double_blocks_8_txt_mod_split_2_split_size = cache['double_blocks_8_txt_mod_split_2_split_size']
    double_blocks_8_txt_mod_tensoritem_0_index = cache['double_blocks_8_txt_mod_tensoritem_0_index']
    double_blocks_8_txt_mod_tensoritem_1_index = cache['double_blocks_8_txt_mod_tensoritem_1_index']
    double_blocks_8_txt_mod_tensoritem_2_index = cache['double_blocks_8_txt_mod_tensoritem_2_index']
    double_blocks_8_txt_norm1_add_right = cache['double_blocks_8_txt_norm1_add_right']
    double_blocks_8_txt_norm1_mean_axis = cache['double_blocks_8_txt_norm1_mean_axis']
    double_blocks_8_txt_norm1_mean_keepdim = cache['double_blocks_8_txt_norm1_mean_keepdim']
    double_blocks_8_txt_norm1_variance_axis = cache['double_blocks_8_txt_norm1_variance_axis']
    double_blocks_8_txt_norm1_variance_correction = cache['double_blocks_8_txt_norm1_variance_correction']
    double_blocks_8_txt_norm1_variance_keepdim = cache['double_blocks_8_txt_norm1_variance_keepdim']
    double_blocks_8_txt_norm2_add_right = cache['double_blocks_8_txt_norm2_add_right']
    double_blocks_8_txt_norm2_mean_axis = cache['double_blocks_8_txt_norm2_mean_axis']
    double_blocks_8_txt_norm2_mean_keepdim = cache['double_blocks_8_txt_norm2_mean_keepdim']
    double_blocks_8_txt_norm2_variance_axis = cache['double_blocks_8_txt_norm2_variance_axis']
    double_blocks_8_txt_norm2_variance_correction = cache['double_blocks_8_txt_norm2_variance_correction']
    double_blocks_8_txt_norm2_variance_keepdim = cache['double_blocks_8_txt_norm2_variance_keepdim']
    double_blocks_9_add_0_left = cache['double_blocks_9_add_0_left']
    double_blocks_9_add_2_left = cache['double_blocks_9_add_2_left']
    double_blocks_9_add_5_left = cache['double_blocks_9_add_5_left']
    double_blocks_9_add_8_left = cache['double_blocks_9_add_8_left']
    double_blocks_9_concat_0_axis = cache['double_blocks_9_concat_0_axis']
    double_blocks_9_concat_1_axis = cache['double_blocks_9_concat_1_axis']
    double_blocks_9_concat_2_axis = cache['double_blocks_9_concat_2_axis']
    double_blocks_9_img_attn_norm_key_norm_add_right = cache['double_blocks_9_img_attn_norm_key_norm_add_right']
    double_blocks_9_img_attn_norm_key_norm_divide_numerator = cache['double_blocks_9_img_attn_norm_key_norm_divide_numerator']
    double_blocks_9_img_attn_norm_key_norm_mean_axis = cache['double_blocks_9_img_attn_norm_key_norm_mean_axis']
    double_blocks_9_img_attn_norm_key_norm_mean_keepdim = cache['double_blocks_9_img_attn_norm_key_norm_mean_keepdim']
    double_blocks_9_img_attn_norm_key_norm_power_exponent = cache['double_blocks_9_img_attn_norm_key_norm_power_exponent']
    double_blocks_9_img_attn_norm_key_norm_scale = params['double_blocks_9_img_attn_norm_key_norm_scale']
    double_blocks_9_img_attn_norm_query_norm_add_right = cache['double_blocks_9_img_attn_norm_query_norm_add_right']
    double_blocks_9_img_attn_norm_query_norm_divide_numerator = cache['double_blocks_9_img_attn_norm_query_norm_divide_numerator']
    double_blocks_9_img_attn_norm_query_norm_mean_axis = cache['double_blocks_9_img_attn_norm_query_norm_mean_axis']
    double_blocks_9_img_attn_norm_query_norm_mean_keepdim = cache['double_blocks_9_img_attn_norm_query_norm_mean_keepdim']
    double_blocks_9_img_attn_norm_query_norm_power_exponent = cache['double_blocks_9_img_attn_norm_query_norm_power_exponent']
    double_blocks_9_img_attn_norm_query_norm_scale = params['double_blocks_9_img_attn_norm_query_norm_scale']
    double_blocks_9_img_attn_proj_bias = params['double_blocks_9_img_attn_proj_bias']
    double_blocks_9_img_attn_proj_transpose_axes = cache['double_blocks_9_img_attn_proj_transpose_axes']
    double_blocks_9_img_attn_proj_weight = params['double_blocks_9_img_attn_proj_weight']
    double_blocks_9_img_attn_qkv_bias = params['double_blocks_9_img_attn_qkv_bias']
    double_blocks_9_img_attn_qkv_transpose_axes = cache['double_blocks_9_img_attn_qkv_transpose_axes']
    double_blocks_9_img_attn_qkv_weight = params['double_blocks_9_img_attn_qkv_weight']
    double_blocks_9_img_mlp_0_bias = params['double_blocks_9_img_mlp_0_bias']
    double_blocks_9_img_mlp_0_transpose_axes = cache['double_blocks_9_img_mlp_0_transpose_axes']
    double_blocks_9_img_mlp_0_weight = params['double_blocks_9_img_mlp_0_weight']
    double_blocks_9_img_mlp_2_bias = params['double_blocks_9_img_mlp_2_bias']
    double_blocks_9_img_mlp_2_transpose_axes = cache['double_blocks_9_img_mlp_2_transpose_axes']
    double_blocks_9_img_mlp_2_weight = params['double_blocks_9_img_mlp_2_weight']
    double_blocks_9_img_mlp_gelu_approximate = cache['double_blocks_9_img_mlp_gelu_approximate']
    double_blocks_9_img_mod_lin_bias = params['double_blocks_9_img_mod_lin_bias']
    double_blocks_9_img_mod_lin_transpose_axes = cache['double_blocks_9_img_mod_lin_transpose_axes']
    double_blocks_9_img_mod_lin_weight = params['double_blocks_9_img_mod_lin_weight']
    double_blocks_9_img_mod_silu_add_left = cache['double_blocks_9_img_mod_silu_add_left']
    double_blocks_9_img_mod_split_0_axis = cache['double_blocks_9_img_mod_split_0_axis']
    double_blocks_9_img_mod_split_0_split_size = cache['double_blocks_9_img_mod_split_0_split_size']
    double_blocks_9_img_mod_split_1_axis = cache['double_blocks_9_img_mod_split_1_axis']
    double_blocks_9_img_mod_split_1_split_size = cache['double_blocks_9_img_mod_split_1_split_size']
    double_blocks_9_img_mod_split_2_axis = cache['double_blocks_9_img_mod_split_2_axis']
    double_blocks_9_img_mod_split_2_split_size = cache['double_blocks_9_img_mod_split_2_split_size']
    double_blocks_9_img_mod_tensoritem_0_index = cache['double_blocks_9_img_mod_tensoritem_0_index']
    double_blocks_9_img_mod_tensoritem_1_index = cache['double_blocks_9_img_mod_tensoritem_1_index']
    double_blocks_9_img_mod_tensoritem_2_index = cache['double_blocks_9_img_mod_tensoritem_2_index']
    double_blocks_9_img_norm1_add_right = cache['double_blocks_9_img_norm1_add_right']
    double_blocks_9_img_norm1_mean_axis = cache['double_blocks_9_img_norm1_mean_axis']
    double_blocks_9_img_norm1_mean_keepdim = cache['double_blocks_9_img_norm1_mean_keepdim']
    double_blocks_9_img_norm1_variance_axis = cache['double_blocks_9_img_norm1_variance_axis']
    double_blocks_9_img_norm1_variance_correction = cache['double_blocks_9_img_norm1_variance_correction']
    double_blocks_9_img_norm1_variance_keepdim = cache['double_blocks_9_img_norm1_variance_keepdim']
    double_blocks_9_img_norm2_add_right = cache['double_blocks_9_img_norm2_add_right']
    double_blocks_9_img_norm2_mean_axis = cache['double_blocks_9_img_norm2_mean_axis']
    double_blocks_9_img_norm2_mean_keepdim = cache['double_blocks_9_img_norm2_mean_keepdim']
    double_blocks_9_img_norm2_variance_axis = cache['double_blocks_9_img_norm2_variance_axis']
    double_blocks_9_img_norm2_variance_correction = cache['double_blocks_9_img_norm2_variance_correction']
    double_blocks_9_img_norm2_variance_keepdim = cache['double_blocks_9_img_norm2_variance_keepdim']
    double_blocks_9_model_model_shape_0_output = cache['double_blocks_9_model_model_shape_0_output']
    double_blocks_9_model_model_shape_1_output = cache['double_blocks_9_model_model_shape_1_output']
    double_blocks_9_model_model_tensoritem_0_index = cache['double_blocks_9_model_model_tensoritem_0_index']
    double_blocks_9_model_model_tensoritem_1_index = cache['double_blocks_9_model_model_tensoritem_1_index']
    double_blocks_9_model_model_tensoritem_2_index = cache['double_blocks_9_model_model_tensoritem_2_index']
    double_blocks_9_model_model_tensoritem_3_index = cache['double_blocks_9_model_model_tensoritem_3_index']
    double_blocks_9_model_model_tensoritem_4_index = cache['double_blocks_9_model_model_tensoritem_4_index']
    double_blocks_9_model_model_tensoritem_5_index = cache['double_blocks_9_model_model_tensoritem_5_index']
    double_blocks_9_model_model_tensoritem_6_index = cache['double_blocks_9_model_model_tensoritem_6_index']
    double_blocks_9_model_model_tensoritem_7_index = cache['double_blocks_9_model_model_tensoritem_7_index']
    double_blocks_9_model_model_totuple_0_output = cache['double_blocks_9_model_model_totuple_0_output']
    double_blocks_9_model_model_totuple_1_output = cache['double_blocks_9_model_model_totuple_1_output']
    double_blocks_9_model_scaleddotproduct_attn_mask = cache['double_blocks_9_model_scaleddotproduct_attn_mask']
    double_blocks_9_model_totuple_output = cache['double_blocks_9_model_totuple_output']
    double_blocks_9_model_transpose_axes = cache['double_blocks_9_model_transpose_axes']
    double_blocks_9_tensoritem_0_index = cache['double_blocks_9_tensoritem_0_index']
    double_blocks_9_tensoritem_10_index = cache['double_blocks_9_tensoritem_10_index']
    double_blocks_9_tensoritem_11_index = cache['double_blocks_9_tensoritem_11_index']
    double_blocks_9_tensoritem_12_index = cache['double_blocks_9_tensoritem_12_index']
    double_blocks_9_tensoritem_13_index = cache['double_blocks_9_tensoritem_13_index']
    double_blocks_9_tensoritem_14_index = cache['double_blocks_9_tensoritem_14_index']
    double_blocks_9_tensoritem_15_index = cache['double_blocks_9_tensoritem_15_index']
    double_blocks_9_tensoritem_16_index = cache['double_blocks_9_tensoritem_16_index']
    double_blocks_9_tensoritem_17_index = cache['double_blocks_9_tensoritem_17_index']
    double_blocks_9_tensoritem_18_index = cache['double_blocks_9_tensoritem_18_index']
    double_blocks_9_tensoritem_19_index = cache['double_blocks_9_tensoritem_19_index']
    double_blocks_9_tensoritem_1_index = cache['double_blocks_9_tensoritem_1_index']
    double_blocks_9_tensoritem_2_index = cache['double_blocks_9_tensoritem_2_index']
    double_blocks_9_tensoritem_3_index = cache['double_blocks_9_tensoritem_3_index']
    double_blocks_9_tensoritem_4_index = cache['double_blocks_9_tensoritem_4_index']
    double_blocks_9_tensoritem_5_index = cache['double_blocks_9_tensoritem_5_index']
    double_blocks_9_tensoritem_6_index = cache['double_blocks_9_tensoritem_6_index']
    double_blocks_9_tensoritem_7_index = cache['double_blocks_9_tensoritem_7_index']
    double_blocks_9_tensoritem_8_index = cache['double_blocks_9_tensoritem_8_index']
    double_blocks_9_tensoritem_9_index = cache['double_blocks_9_tensoritem_9_index']
    double_blocks_9_totuple_0_output = cache['double_blocks_9_totuple_0_output']
    double_blocks_9_totuple_1_output = cache['double_blocks_9_totuple_1_output']
    double_blocks_9_transpose_0_axes = cache['double_blocks_9_transpose_0_axes']
    double_blocks_9_transpose_1_axes = cache['double_blocks_9_transpose_1_axes']
    double_blocks_9_txt_attn_norm_key_norm_add_right = cache['double_blocks_9_txt_attn_norm_key_norm_add_right']
    double_blocks_9_txt_attn_norm_key_norm_divide_numerator = cache['double_blocks_9_txt_attn_norm_key_norm_divide_numerator']
    double_blocks_9_txt_attn_norm_key_norm_mean_axis = cache['double_blocks_9_txt_attn_norm_key_norm_mean_axis']
    double_blocks_9_txt_attn_norm_key_norm_mean_keepdim = cache['double_blocks_9_txt_attn_norm_key_norm_mean_keepdim']
    double_blocks_9_txt_attn_norm_key_norm_power_exponent = cache['double_blocks_9_txt_attn_norm_key_norm_power_exponent']
    double_blocks_9_txt_attn_norm_key_norm_scale = params['double_blocks_9_txt_attn_norm_key_norm_scale']
    double_blocks_9_txt_attn_norm_query_norm_add_right = cache['double_blocks_9_txt_attn_norm_query_norm_add_right']
    double_blocks_9_txt_attn_norm_query_norm_divide_numerator = cache['double_blocks_9_txt_attn_norm_query_norm_divide_numerator']
    double_blocks_9_txt_attn_norm_query_norm_mean_axis = cache['double_blocks_9_txt_attn_norm_query_norm_mean_axis']
    double_blocks_9_txt_attn_norm_query_norm_mean_keepdim = cache['double_blocks_9_txt_attn_norm_query_norm_mean_keepdim']
    double_blocks_9_txt_attn_norm_query_norm_power_exponent = cache['double_blocks_9_txt_attn_norm_query_norm_power_exponent']
    double_blocks_9_txt_attn_norm_query_norm_scale = params['double_blocks_9_txt_attn_norm_query_norm_scale']
    double_blocks_9_txt_attn_proj_bias = params['double_blocks_9_txt_attn_proj_bias']
    double_blocks_9_txt_attn_proj_transpose_axes = cache['double_blocks_9_txt_attn_proj_transpose_axes']
    double_blocks_9_txt_attn_proj_weight = params['double_blocks_9_txt_attn_proj_weight']
    double_blocks_9_txt_attn_qkv_bias = params['double_blocks_9_txt_attn_qkv_bias']
    double_blocks_9_txt_attn_qkv_transpose_axes = cache['double_blocks_9_txt_attn_qkv_transpose_axes']
    double_blocks_9_txt_attn_qkv_weight = params['double_blocks_9_txt_attn_qkv_weight']
    double_blocks_9_txt_mlp_0_bias = params['double_blocks_9_txt_mlp_0_bias']
    double_blocks_9_txt_mlp_0_transpose_axes = cache['double_blocks_9_txt_mlp_0_transpose_axes']
    double_blocks_9_txt_mlp_0_weight = params['double_blocks_9_txt_mlp_0_weight']
    double_blocks_9_txt_mlp_2_bias = params['double_blocks_9_txt_mlp_2_bias']
    double_blocks_9_txt_mlp_2_transpose_axes = cache['double_blocks_9_txt_mlp_2_transpose_axes']
    double_blocks_9_txt_mlp_2_weight = params['double_blocks_9_txt_mlp_2_weight']
    double_blocks_9_txt_mlp_gelu_approximate = cache['double_blocks_9_txt_mlp_gelu_approximate']
    double_blocks_9_txt_mod_lin_bias = params['double_blocks_9_txt_mod_lin_bias']
    double_blocks_9_txt_mod_lin_transpose_axes = cache['double_blocks_9_txt_mod_lin_transpose_axes']
    double_blocks_9_txt_mod_lin_weight = params['double_blocks_9_txt_mod_lin_weight']
    double_blocks_9_txt_mod_silu_add_left = cache['double_blocks_9_txt_mod_silu_add_left']
    double_blocks_9_txt_mod_split_0_axis = cache['double_blocks_9_txt_mod_split_0_axis']
    double_blocks_9_txt_mod_split_0_split_size = cache['double_blocks_9_txt_mod_split_0_split_size']
    double_blocks_9_txt_mod_split_1_axis = cache['double_blocks_9_txt_mod_split_1_axis']
    double_blocks_9_txt_mod_split_1_split_size = cache['double_blocks_9_txt_mod_split_1_split_size']
    double_blocks_9_txt_mod_split_2_axis = cache['double_blocks_9_txt_mod_split_2_axis']
    double_blocks_9_txt_mod_split_2_split_size = cache['double_blocks_9_txt_mod_split_2_split_size']
    double_blocks_9_txt_mod_tensoritem_0_index = cache['double_blocks_9_txt_mod_tensoritem_0_index']
    double_blocks_9_txt_mod_tensoritem_1_index = cache['double_blocks_9_txt_mod_tensoritem_1_index']
    double_blocks_9_txt_mod_tensoritem_2_index = cache['double_blocks_9_txt_mod_tensoritem_2_index']
    double_blocks_9_txt_norm1_add_right = cache['double_blocks_9_txt_norm1_add_right']
    double_blocks_9_txt_norm1_mean_axis = cache['double_blocks_9_txt_norm1_mean_axis']
    double_blocks_9_txt_norm1_mean_keepdim = cache['double_blocks_9_txt_norm1_mean_keepdim']
    double_blocks_9_txt_norm1_variance_axis = cache['double_blocks_9_txt_norm1_variance_axis']
    double_blocks_9_txt_norm1_variance_correction = cache['double_blocks_9_txt_norm1_variance_correction']
    double_blocks_9_txt_norm1_variance_keepdim = cache['double_blocks_9_txt_norm1_variance_keepdim']
    double_blocks_9_txt_norm2_add_right = cache['double_blocks_9_txt_norm2_add_right']
    double_blocks_9_txt_norm2_mean_axis = cache['double_blocks_9_txt_norm2_mean_axis']
    double_blocks_9_txt_norm2_mean_keepdim = cache['double_blocks_9_txt_norm2_mean_keepdim']
    double_blocks_9_txt_norm2_variance_axis = cache['double_blocks_9_txt_norm2_variance_axis']
    double_blocks_9_txt_norm2_variance_correction = cache['double_blocks_9_txt_norm2_variance_correction']
    double_blocks_9_txt_norm2_variance_keepdim = cache['double_blocks_9_txt_norm2_variance_keepdim']
    final_layer_adaln_modulation_1_bias = params['final_layer_adaln_modulation_1_bias']
    final_layer_adaln_modulation_1_transpose_axes = cache['final_layer_adaln_modulation_1_transpose_axes']
    final_layer_adaln_modulation_1_weight = params['final_layer_adaln_modulation_1_weight']
    final_layer_add_0_left = cache['final_layer_add_0_left']
    final_layer_linear_bias = params['final_layer_linear_bias']
    final_layer_linear_transpose_axes = cache['final_layer_linear_transpose_axes']
    final_layer_linear_weight = params['final_layer_linear_weight']
    final_layer_norm_final_add_right = cache['final_layer_norm_final_add_right']
    final_layer_norm_final_mean_axis = cache['final_layer_norm_final_mean_axis']
    final_layer_norm_final_mean_keepdim = cache['final_layer_norm_final_mean_keepdim']
    final_layer_norm_final_variance_axis = cache['final_layer_norm_final_variance_axis']
    final_layer_norm_final_variance_correction = cache['final_layer_norm_final_variance_correction']
    final_layer_norm_final_variance_keepdim = cache['final_layer_norm_final_variance_keepdim']
    final_layer_split_axis = cache['final_layer_split_axis']
    final_layer_split_split_size = cache['final_layer_split_split_size']
    final_layer_tensoritem_0_index = cache['final_layer_tensoritem_0_index']
    final_layer_tensoritem_1_index = cache['final_layer_tensoritem_1_index']
    final_layer_tensoritem_2_index = cache['final_layer_tensoritem_2_index']
    final_layer_tensoritem_3_index = cache['final_layer_tensoritem_3_index']
    img = data['img']
    img_ids = data['img_ids']
    img_in_bias = params['img_in_bias']
    img_in_transpose_axes = cache['img_in_transpose_axes']
    img_in_weight = params['img_in_weight']
    model_0_concat_axis = cache['model_0_concat_axis']
    model_0_multiply_0_right = cache['model_0_multiply_0_right']
    model_0_tensoritem_0_index = cache['model_0_tensoritem_0_index']
    model_0_tensoritem_1_output = cache['model_0_tensoritem_1_output']
    model_1_concat_axis = cache['model_1_concat_axis']
    model_1_model_0_concat_axis = cache['model_1_model_0_concat_axis']
    model_1_model_0_divide_1_output = cache['model_1_model_0_divide_1_output']
    model_1_model_0_tensoritem_0_index = cache['model_1_model_0_tensoritem_0_index']
    model_1_model_0_tensoritem_1_index = cache['model_1_model_0_tensoritem_1_index']
    model_1_model_0_tensoritem_2_index = cache['model_1_model_0_tensoritem_2_index']
    model_1_model_0_tensoritem_3_index = cache['model_1_model_0_tensoritem_3_index']
    model_1_model_0_tensoritem_4_index = cache['model_1_model_0_tensoritem_4_index']
    model_1_model_0_totuple_output = cache['model_1_model_0_totuple_output']
    model_1_model_1_concat_axis = cache['model_1_model_1_concat_axis']
    model_1_model_1_divide_1_output = cache['model_1_model_1_divide_1_output']
    model_1_model_1_tensoritem_0_index = cache['model_1_model_1_tensoritem_0_index']
    model_1_model_1_tensoritem_1_index = cache['model_1_model_1_tensoritem_1_index']
    model_1_model_1_tensoritem_2_index = cache['model_1_model_1_tensoritem_2_index']
    model_1_model_1_tensoritem_3_index = cache['model_1_model_1_tensoritem_3_index']
    model_1_model_1_tensoritem_4_index = cache['model_1_model_1_tensoritem_4_index']
    model_1_model_1_totuple_output = cache['model_1_model_1_totuple_output']
    model_1_model_2_concat_axis = cache['model_1_model_2_concat_axis']
    model_1_model_2_divide_1_output = cache['model_1_model_2_divide_1_output']
    model_1_model_2_tensoritem_0_index = cache['model_1_model_2_tensoritem_0_index']
    model_1_model_2_tensoritem_1_index = cache['model_1_model_2_tensoritem_1_index']
    model_1_model_2_tensoritem_2_index = cache['model_1_model_2_tensoritem_2_index']
    model_1_model_2_tensoritem_3_index = cache['model_1_model_2_tensoritem_3_index']
    model_1_model_2_tensoritem_4_index = cache['model_1_model_2_tensoritem_4_index']
    model_1_model_2_totuple_output = cache['model_1_model_2_totuple_output']
    model_1_tensoritem_0_index = cache['model_1_tensoritem_0_index']
    model_1_tensoritem_1_index = cache['model_1_tensoritem_1_index']
    model_1_tensoritem_2_index = cache['model_1_tensoritem_2_index']
    model_1_tensoritem_3_index = cache['model_1_tensoritem_3_index']
    single_blocks_0_add_0_left = cache['single_blocks_0_add_0_left']
    single_blocks_0_concat_axis = cache['single_blocks_0_concat_axis']
    single_blocks_0_gelu_approximate = cache['single_blocks_0_gelu_approximate']
    single_blocks_0_linear1_bias = params['single_blocks_0_linear1_bias']
    single_blocks_0_linear1_transpose_axes = cache['single_blocks_0_linear1_transpose_axes']
    single_blocks_0_linear1_weight = params['single_blocks_0_linear1_weight']
    single_blocks_0_linear2_bias = params['single_blocks_0_linear2_bias']
    single_blocks_0_linear2_transpose_axes = cache['single_blocks_0_linear2_transpose_axes']
    single_blocks_0_linear2_weight = params['single_blocks_0_linear2_weight']
    single_blocks_0_model_model_shape_0_output = cache['single_blocks_0_model_model_shape_0_output']
    single_blocks_0_model_model_shape_1_output = cache['single_blocks_0_model_model_shape_1_output']
    single_blocks_0_model_model_tensoritem_0_index = cache['single_blocks_0_model_model_tensoritem_0_index']
    single_blocks_0_model_model_tensoritem_1_index = cache['single_blocks_0_model_model_tensoritem_1_index']
    single_blocks_0_model_model_tensoritem_2_index = cache['single_blocks_0_model_model_tensoritem_2_index']
    single_blocks_0_model_model_tensoritem_3_index = cache['single_blocks_0_model_model_tensoritem_3_index']
    single_blocks_0_model_model_tensoritem_4_index = cache['single_blocks_0_model_model_tensoritem_4_index']
    single_blocks_0_model_model_tensoritem_5_index = cache['single_blocks_0_model_model_tensoritem_5_index']
    single_blocks_0_model_model_tensoritem_6_index = cache['single_blocks_0_model_model_tensoritem_6_index']
    single_blocks_0_model_model_tensoritem_7_index = cache['single_blocks_0_model_model_tensoritem_7_index']
    single_blocks_0_model_model_totuple_0_output = cache['single_blocks_0_model_model_totuple_0_output']
    single_blocks_0_model_model_totuple_1_output = cache['single_blocks_0_model_model_totuple_1_output']
    single_blocks_0_model_scaleddotproduct_attn_mask = cache['single_blocks_0_model_scaleddotproduct_attn_mask']
    single_blocks_0_model_totuple_output = cache['single_blocks_0_model_totuple_output']
    single_blocks_0_model_transpose_axes = cache['single_blocks_0_model_transpose_axes']
    single_blocks_0_modulation_lin_bias = params['single_blocks_0_modulation_lin_bias']
    single_blocks_0_modulation_lin_transpose_axes = cache['single_blocks_0_modulation_lin_transpose_axes']
    single_blocks_0_modulation_lin_weight = params['single_blocks_0_modulation_lin_weight']
    single_blocks_0_modulation_silu_add_left = cache['single_blocks_0_modulation_silu_add_left']
    single_blocks_0_modulation_split_axis = cache['single_blocks_0_modulation_split_axis']
    single_blocks_0_modulation_split_split_size = cache['single_blocks_0_modulation_split_split_size']
    single_blocks_0_modulation_tensoritem_index = cache['single_blocks_0_modulation_tensoritem_index']
    single_blocks_0_norm_key_norm_add_right = cache['single_blocks_0_norm_key_norm_add_right']
    single_blocks_0_norm_key_norm_divide_numerator = cache['single_blocks_0_norm_key_norm_divide_numerator']
    single_blocks_0_norm_key_norm_mean_axis = cache['single_blocks_0_norm_key_norm_mean_axis']
    single_blocks_0_norm_key_norm_mean_keepdim = cache['single_blocks_0_norm_key_norm_mean_keepdim']
    single_blocks_0_norm_key_norm_power_exponent = cache['single_blocks_0_norm_key_norm_power_exponent']
    single_blocks_0_norm_key_norm_scale = params['single_blocks_0_norm_key_norm_scale']
    single_blocks_0_norm_query_norm_add_right = cache['single_blocks_0_norm_query_norm_add_right']
    single_blocks_0_norm_query_norm_divide_numerator = cache['single_blocks_0_norm_query_norm_divide_numerator']
    single_blocks_0_norm_query_norm_mean_axis = cache['single_blocks_0_norm_query_norm_mean_axis']
    single_blocks_0_norm_query_norm_mean_keepdim = cache['single_blocks_0_norm_query_norm_mean_keepdim']
    single_blocks_0_norm_query_norm_power_exponent = cache['single_blocks_0_norm_query_norm_power_exponent']
    single_blocks_0_norm_query_norm_scale = params['single_blocks_0_norm_query_norm_scale']
    single_blocks_0_pre_norm_add_right = cache['single_blocks_0_pre_norm_add_right']
    single_blocks_0_pre_norm_mean_axis = cache['single_blocks_0_pre_norm_mean_axis']
    single_blocks_0_pre_norm_mean_keepdim = cache['single_blocks_0_pre_norm_mean_keepdim']
    single_blocks_0_pre_norm_variance_axis = cache['single_blocks_0_pre_norm_variance_axis']
    single_blocks_0_pre_norm_variance_correction = cache['single_blocks_0_pre_norm_variance_correction']
    single_blocks_0_pre_norm_variance_keepdim = cache['single_blocks_0_pre_norm_variance_keepdim']
    single_blocks_0_tensoritem_0_index = cache['single_blocks_0_tensoritem_0_index']
    single_blocks_0_tensoritem_1_index = cache['single_blocks_0_tensoritem_1_index']
    single_blocks_0_tensoritem_2_index = cache['single_blocks_0_tensoritem_2_index']
    single_blocks_0_tensoritem_3_index = cache['single_blocks_0_tensoritem_3_index']
    single_blocks_0_tensoritem_4_index = cache['single_blocks_0_tensoritem_4_index']
    single_blocks_0_tensoritem_5_index = cache['single_blocks_0_tensoritem_5_index']
    single_blocks_0_tensoritem_6_index = cache['single_blocks_0_tensoritem_6_index']
    single_blocks_0_tensoritem_7_index = cache['single_blocks_0_tensoritem_7_index']
    single_blocks_0_totuple_output = cache['single_blocks_0_totuple_output']
    single_blocks_0_transpose_axes = cache['single_blocks_0_transpose_axes']
    single_blocks_10_add_0_left = cache['single_blocks_10_add_0_left']
    single_blocks_10_concat_axis = cache['single_blocks_10_concat_axis']
    single_blocks_10_gelu_approximate = cache['single_blocks_10_gelu_approximate']
    single_blocks_10_linear1_bias = params['single_blocks_10_linear1_bias']
    single_blocks_10_linear1_transpose_axes = cache['single_blocks_10_linear1_transpose_axes']
    single_blocks_10_linear1_weight = params['single_blocks_10_linear1_weight']
    single_blocks_10_linear2_bias = params['single_blocks_10_linear2_bias']
    single_blocks_10_linear2_transpose_axes = cache['single_blocks_10_linear2_transpose_axes']
    single_blocks_10_linear2_weight = params['single_blocks_10_linear2_weight']
    single_blocks_10_model_model_shape_0_output = cache['single_blocks_10_model_model_shape_0_output']
    single_blocks_10_model_model_shape_1_output = cache['single_blocks_10_model_model_shape_1_output']
    single_blocks_10_model_model_tensoritem_0_index = cache['single_blocks_10_model_model_tensoritem_0_index']
    single_blocks_10_model_model_tensoritem_1_index = cache['single_blocks_10_model_model_tensoritem_1_index']
    single_blocks_10_model_model_tensoritem_2_index = cache['single_blocks_10_model_model_tensoritem_2_index']
    single_blocks_10_model_model_tensoritem_3_index = cache['single_blocks_10_model_model_tensoritem_3_index']
    single_blocks_10_model_model_tensoritem_4_index = cache['single_blocks_10_model_model_tensoritem_4_index']
    single_blocks_10_model_model_tensoritem_5_index = cache['single_blocks_10_model_model_tensoritem_5_index']
    single_blocks_10_model_model_tensoritem_6_index = cache['single_blocks_10_model_model_tensoritem_6_index']
    single_blocks_10_model_model_tensoritem_7_index = cache['single_blocks_10_model_model_tensoritem_7_index']
    single_blocks_10_model_model_totuple_0_output = cache['single_blocks_10_model_model_totuple_0_output']
    single_blocks_10_model_model_totuple_1_output = cache['single_blocks_10_model_model_totuple_1_output']
    single_blocks_10_model_scaleddotproduct_attn_mask = cache['single_blocks_10_model_scaleddotproduct_attn_mask']
    single_blocks_10_model_totuple_output = cache['single_blocks_10_model_totuple_output']
    single_blocks_10_model_transpose_axes = cache['single_blocks_10_model_transpose_axes']
    single_blocks_10_modulation_lin_bias = params['single_blocks_10_modulation_lin_bias']
    single_blocks_10_modulation_lin_transpose_axes = cache['single_blocks_10_modulation_lin_transpose_axes']
    single_blocks_10_modulation_lin_weight = params['single_blocks_10_modulation_lin_weight']
    single_blocks_10_modulation_silu_add_left = cache['single_blocks_10_modulation_silu_add_left']
    single_blocks_10_modulation_split_axis = cache['single_blocks_10_modulation_split_axis']
    single_blocks_10_modulation_split_split_size = cache['single_blocks_10_modulation_split_split_size']
    single_blocks_10_modulation_tensoritem_index = cache['single_blocks_10_modulation_tensoritem_index']
    single_blocks_10_norm_key_norm_add_right = cache['single_blocks_10_norm_key_norm_add_right']
    single_blocks_10_norm_key_norm_divide_numerator = cache['single_blocks_10_norm_key_norm_divide_numerator']
    single_blocks_10_norm_key_norm_mean_axis = cache['single_blocks_10_norm_key_norm_mean_axis']
    single_blocks_10_norm_key_norm_mean_keepdim = cache['single_blocks_10_norm_key_norm_mean_keepdim']
    single_blocks_10_norm_key_norm_power_exponent = cache['single_blocks_10_norm_key_norm_power_exponent']
    single_blocks_10_norm_key_norm_scale = params['single_blocks_10_norm_key_norm_scale']
    single_blocks_10_norm_query_norm_add_right = cache['single_blocks_10_norm_query_norm_add_right']
    single_blocks_10_norm_query_norm_divide_numerator = cache['single_blocks_10_norm_query_norm_divide_numerator']
    single_blocks_10_norm_query_norm_mean_axis = cache['single_blocks_10_norm_query_norm_mean_axis']
    single_blocks_10_norm_query_norm_mean_keepdim = cache['single_blocks_10_norm_query_norm_mean_keepdim']
    single_blocks_10_norm_query_norm_power_exponent = cache['single_blocks_10_norm_query_norm_power_exponent']
    single_blocks_10_norm_query_norm_scale = params['single_blocks_10_norm_query_norm_scale']
    single_blocks_10_pre_norm_add_right = cache['single_blocks_10_pre_norm_add_right']
    single_blocks_10_pre_norm_mean_axis = cache['single_blocks_10_pre_norm_mean_axis']
    single_blocks_10_pre_norm_mean_keepdim = cache['single_blocks_10_pre_norm_mean_keepdim']
    single_blocks_10_pre_norm_variance_axis = cache['single_blocks_10_pre_norm_variance_axis']
    single_blocks_10_pre_norm_variance_correction = cache['single_blocks_10_pre_norm_variance_correction']
    single_blocks_10_pre_norm_variance_keepdim = cache['single_blocks_10_pre_norm_variance_keepdim']
    single_blocks_10_tensoritem_0_index = cache['single_blocks_10_tensoritem_0_index']
    single_blocks_10_tensoritem_1_index = cache['single_blocks_10_tensoritem_1_index']
    single_blocks_10_tensoritem_2_index = cache['single_blocks_10_tensoritem_2_index']
    single_blocks_10_tensoritem_3_index = cache['single_blocks_10_tensoritem_3_index']
    single_blocks_10_tensoritem_4_index = cache['single_blocks_10_tensoritem_4_index']
    single_blocks_10_tensoritem_5_index = cache['single_blocks_10_tensoritem_5_index']
    single_blocks_10_tensoritem_6_index = cache['single_blocks_10_tensoritem_6_index']
    single_blocks_10_tensoritem_7_index = cache['single_blocks_10_tensoritem_7_index']
    single_blocks_10_totuple_output = cache['single_blocks_10_totuple_output']
    single_blocks_10_transpose_axes = cache['single_blocks_10_transpose_axes']
    single_blocks_11_add_0_left = cache['single_blocks_11_add_0_left']
    single_blocks_11_concat_axis = cache['single_blocks_11_concat_axis']
    single_blocks_11_gelu_approximate = cache['single_blocks_11_gelu_approximate']
    single_blocks_11_linear1_bias = params['single_blocks_11_linear1_bias']
    single_blocks_11_linear1_transpose_axes = cache['single_blocks_11_linear1_transpose_axes']
    single_blocks_11_linear1_weight = params['single_blocks_11_linear1_weight']
    single_blocks_11_linear2_bias = params['single_blocks_11_linear2_bias']
    single_blocks_11_linear2_transpose_axes = cache['single_blocks_11_linear2_transpose_axes']
    single_blocks_11_linear2_weight = params['single_blocks_11_linear2_weight']
    single_blocks_11_model_model_shape_0_output = cache['single_blocks_11_model_model_shape_0_output']
    single_blocks_11_model_model_shape_1_output = cache['single_blocks_11_model_model_shape_1_output']
    single_blocks_11_model_model_tensoritem_0_index = cache['single_blocks_11_model_model_tensoritem_0_index']
    single_blocks_11_model_model_tensoritem_1_index = cache['single_blocks_11_model_model_tensoritem_1_index']
    single_blocks_11_model_model_tensoritem_2_index = cache['single_blocks_11_model_model_tensoritem_2_index']
    single_blocks_11_model_model_tensoritem_3_index = cache['single_blocks_11_model_model_tensoritem_3_index']
    single_blocks_11_model_model_tensoritem_4_index = cache['single_blocks_11_model_model_tensoritem_4_index']
    single_blocks_11_model_model_tensoritem_5_index = cache['single_blocks_11_model_model_tensoritem_5_index']
    single_blocks_11_model_model_tensoritem_6_index = cache['single_blocks_11_model_model_tensoritem_6_index']
    single_blocks_11_model_model_tensoritem_7_index = cache['single_blocks_11_model_model_tensoritem_7_index']
    single_blocks_11_model_model_totuple_0_output = cache['single_blocks_11_model_model_totuple_0_output']
    single_blocks_11_model_model_totuple_1_output = cache['single_blocks_11_model_model_totuple_1_output']
    single_blocks_11_model_scaleddotproduct_attn_mask = cache['single_blocks_11_model_scaleddotproduct_attn_mask']
    single_blocks_11_model_totuple_output = cache['single_blocks_11_model_totuple_output']
    single_blocks_11_model_transpose_axes = cache['single_blocks_11_model_transpose_axes']
    single_blocks_11_modulation_lin_bias = params['single_blocks_11_modulation_lin_bias']
    single_blocks_11_modulation_lin_transpose_axes = cache['single_blocks_11_modulation_lin_transpose_axes']
    single_blocks_11_modulation_lin_weight = params['single_blocks_11_modulation_lin_weight']
    single_blocks_11_modulation_silu_add_left = cache['single_blocks_11_modulation_silu_add_left']
    single_blocks_11_modulation_split_axis = cache['single_blocks_11_modulation_split_axis']
    single_blocks_11_modulation_split_split_size = cache['single_blocks_11_modulation_split_split_size']
    single_blocks_11_modulation_tensoritem_index = cache['single_blocks_11_modulation_tensoritem_index']
    single_blocks_11_norm_key_norm_add_right = cache['single_blocks_11_norm_key_norm_add_right']
    single_blocks_11_norm_key_norm_divide_numerator = cache['single_blocks_11_norm_key_norm_divide_numerator']
    single_blocks_11_norm_key_norm_mean_axis = cache['single_blocks_11_norm_key_norm_mean_axis']
    single_blocks_11_norm_key_norm_mean_keepdim = cache['single_blocks_11_norm_key_norm_mean_keepdim']
    single_blocks_11_norm_key_norm_power_exponent = cache['single_blocks_11_norm_key_norm_power_exponent']
    single_blocks_11_norm_key_norm_scale = params['single_blocks_11_norm_key_norm_scale']
    single_blocks_11_norm_query_norm_add_right = cache['single_blocks_11_norm_query_norm_add_right']
    single_blocks_11_norm_query_norm_divide_numerator = cache['single_blocks_11_norm_query_norm_divide_numerator']
    single_blocks_11_norm_query_norm_mean_axis = cache['single_blocks_11_norm_query_norm_mean_axis']
    single_blocks_11_norm_query_norm_mean_keepdim = cache['single_blocks_11_norm_query_norm_mean_keepdim']
    single_blocks_11_norm_query_norm_power_exponent = cache['single_blocks_11_norm_query_norm_power_exponent']
    single_blocks_11_norm_query_norm_scale = params['single_blocks_11_norm_query_norm_scale']
    single_blocks_11_pre_norm_add_right = cache['single_blocks_11_pre_norm_add_right']
    single_blocks_11_pre_norm_mean_axis = cache['single_blocks_11_pre_norm_mean_axis']
    single_blocks_11_pre_norm_mean_keepdim = cache['single_blocks_11_pre_norm_mean_keepdim']
    single_blocks_11_pre_norm_variance_axis = cache['single_blocks_11_pre_norm_variance_axis']
    single_blocks_11_pre_norm_variance_correction = cache['single_blocks_11_pre_norm_variance_correction']
    single_blocks_11_pre_norm_variance_keepdim = cache['single_blocks_11_pre_norm_variance_keepdim']
    single_blocks_11_tensoritem_0_index = cache['single_blocks_11_tensoritem_0_index']
    single_blocks_11_tensoritem_1_index = cache['single_blocks_11_tensoritem_1_index']
    single_blocks_11_tensoritem_2_index = cache['single_blocks_11_tensoritem_2_index']
    single_blocks_11_tensoritem_3_index = cache['single_blocks_11_tensoritem_3_index']
    single_blocks_11_tensoritem_4_index = cache['single_blocks_11_tensoritem_4_index']
    single_blocks_11_tensoritem_5_index = cache['single_blocks_11_tensoritem_5_index']
    single_blocks_11_tensoritem_6_index = cache['single_blocks_11_tensoritem_6_index']
    single_blocks_11_tensoritem_7_index = cache['single_blocks_11_tensoritem_7_index']
    single_blocks_11_totuple_output = cache['single_blocks_11_totuple_output']
    single_blocks_11_transpose_axes = cache['single_blocks_11_transpose_axes']
    single_blocks_12_add_0_left = cache['single_blocks_12_add_0_left']
    single_blocks_12_concat_axis = cache['single_blocks_12_concat_axis']
    single_blocks_12_gelu_approximate = cache['single_blocks_12_gelu_approximate']
    single_blocks_12_linear1_bias = params['single_blocks_12_linear1_bias']
    single_blocks_12_linear1_transpose_axes = cache['single_blocks_12_linear1_transpose_axes']
    single_blocks_12_linear1_weight = params['single_blocks_12_linear1_weight']
    single_blocks_12_linear2_bias = params['single_blocks_12_linear2_bias']
    single_blocks_12_linear2_transpose_axes = cache['single_blocks_12_linear2_transpose_axes']
    single_blocks_12_linear2_weight = params['single_blocks_12_linear2_weight']
    single_blocks_12_model_model_shape_0_output = cache['single_blocks_12_model_model_shape_0_output']
    single_blocks_12_model_model_shape_1_output = cache['single_blocks_12_model_model_shape_1_output']
    single_blocks_12_model_model_tensoritem_0_index = cache['single_blocks_12_model_model_tensoritem_0_index']
    single_blocks_12_model_model_tensoritem_1_index = cache['single_blocks_12_model_model_tensoritem_1_index']
    single_blocks_12_model_model_tensoritem_2_index = cache['single_blocks_12_model_model_tensoritem_2_index']
    single_blocks_12_model_model_tensoritem_3_index = cache['single_blocks_12_model_model_tensoritem_3_index']
    single_blocks_12_model_model_tensoritem_4_index = cache['single_blocks_12_model_model_tensoritem_4_index']
    single_blocks_12_model_model_tensoritem_5_index = cache['single_blocks_12_model_model_tensoritem_5_index']
    single_blocks_12_model_model_tensoritem_6_index = cache['single_blocks_12_model_model_tensoritem_6_index']
    single_blocks_12_model_model_tensoritem_7_index = cache['single_blocks_12_model_model_tensoritem_7_index']
    single_blocks_12_model_model_totuple_0_output = cache['single_blocks_12_model_model_totuple_0_output']
    single_blocks_12_model_model_totuple_1_output = cache['single_blocks_12_model_model_totuple_1_output']
    single_blocks_12_model_scaleddotproduct_attn_mask = cache['single_blocks_12_model_scaleddotproduct_attn_mask']
    single_blocks_12_model_totuple_output = cache['single_blocks_12_model_totuple_output']
    single_blocks_12_model_transpose_axes = cache['single_blocks_12_model_transpose_axes']
    single_blocks_12_modulation_lin_bias = params['single_blocks_12_modulation_lin_bias']
    single_blocks_12_modulation_lin_transpose_axes = cache['single_blocks_12_modulation_lin_transpose_axes']
    single_blocks_12_modulation_lin_weight = params['single_blocks_12_modulation_lin_weight']
    single_blocks_12_modulation_silu_add_left = cache['single_blocks_12_modulation_silu_add_left']
    single_blocks_12_modulation_split_axis = cache['single_blocks_12_modulation_split_axis']
    single_blocks_12_modulation_split_split_size = cache['single_blocks_12_modulation_split_split_size']
    single_blocks_12_modulation_tensoritem_index = cache['single_blocks_12_modulation_tensoritem_index']
    single_blocks_12_norm_key_norm_add_right = cache['single_blocks_12_norm_key_norm_add_right']
    single_blocks_12_norm_key_norm_divide_numerator = cache['single_blocks_12_norm_key_norm_divide_numerator']
    single_blocks_12_norm_key_norm_mean_axis = cache['single_blocks_12_norm_key_norm_mean_axis']
    single_blocks_12_norm_key_norm_mean_keepdim = cache['single_blocks_12_norm_key_norm_mean_keepdim']
    single_blocks_12_norm_key_norm_power_exponent = cache['single_blocks_12_norm_key_norm_power_exponent']
    single_blocks_12_norm_key_norm_scale = params['single_blocks_12_norm_key_norm_scale']
    single_blocks_12_norm_query_norm_add_right = cache['single_blocks_12_norm_query_norm_add_right']
    single_blocks_12_norm_query_norm_divide_numerator = cache['single_blocks_12_norm_query_norm_divide_numerator']
    single_blocks_12_norm_query_norm_mean_axis = cache['single_blocks_12_norm_query_norm_mean_axis']
    single_blocks_12_norm_query_norm_mean_keepdim = cache['single_blocks_12_norm_query_norm_mean_keepdim']
    single_blocks_12_norm_query_norm_power_exponent = cache['single_blocks_12_norm_query_norm_power_exponent']
    single_blocks_12_norm_query_norm_scale = params['single_blocks_12_norm_query_norm_scale']
    single_blocks_12_pre_norm_add_right = cache['single_blocks_12_pre_norm_add_right']
    single_blocks_12_pre_norm_mean_axis = cache['single_blocks_12_pre_norm_mean_axis']
    single_blocks_12_pre_norm_mean_keepdim = cache['single_blocks_12_pre_norm_mean_keepdim']
    single_blocks_12_pre_norm_variance_axis = cache['single_blocks_12_pre_norm_variance_axis']
    single_blocks_12_pre_norm_variance_correction = cache['single_blocks_12_pre_norm_variance_correction']
    single_blocks_12_pre_norm_variance_keepdim = cache['single_blocks_12_pre_norm_variance_keepdim']
    single_blocks_12_tensoritem_0_index = cache['single_blocks_12_tensoritem_0_index']
    single_blocks_12_tensoritem_1_index = cache['single_blocks_12_tensoritem_1_index']
    single_blocks_12_tensoritem_2_index = cache['single_blocks_12_tensoritem_2_index']
    single_blocks_12_tensoritem_3_index = cache['single_blocks_12_tensoritem_3_index']
    single_blocks_12_tensoritem_4_index = cache['single_blocks_12_tensoritem_4_index']
    single_blocks_12_tensoritem_5_index = cache['single_blocks_12_tensoritem_5_index']
    single_blocks_12_tensoritem_6_index = cache['single_blocks_12_tensoritem_6_index']
    single_blocks_12_tensoritem_7_index = cache['single_blocks_12_tensoritem_7_index']
    single_blocks_12_totuple_output = cache['single_blocks_12_totuple_output']
    single_blocks_12_transpose_axes = cache['single_blocks_12_transpose_axes']
    single_blocks_13_add_0_left = cache['single_blocks_13_add_0_left']
    single_blocks_13_concat_axis = cache['single_blocks_13_concat_axis']
    single_blocks_13_gelu_approximate = cache['single_blocks_13_gelu_approximate']
    single_blocks_13_linear1_bias = params['single_blocks_13_linear1_bias']
    single_blocks_13_linear1_transpose_axes = cache['single_blocks_13_linear1_transpose_axes']
    single_blocks_13_linear1_weight = params['single_blocks_13_linear1_weight']
    single_blocks_13_linear2_bias = params['single_blocks_13_linear2_bias']
    single_blocks_13_linear2_transpose_axes = cache['single_blocks_13_linear2_transpose_axes']
    single_blocks_13_linear2_weight = params['single_blocks_13_linear2_weight']
    single_blocks_13_model_model_shape_0_output = cache['single_blocks_13_model_model_shape_0_output']
    single_blocks_13_model_model_shape_1_output = cache['single_blocks_13_model_model_shape_1_output']
    single_blocks_13_model_model_tensoritem_0_index = cache['single_blocks_13_model_model_tensoritem_0_index']
    single_blocks_13_model_model_tensoritem_1_index = cache['single_blocks_13_model_model_tensoritem_1_index']
    single_blocks_13_model_model_tensoritem_2_index = cache['single_blocks_13_model_model_tensoritem_2_index']
    single_blocks_13_model_model_tensoritem_3_index = cache['single_blocks_13_model_model_tensoritem_3_index']
    single_blocks_13_model_model_tensoritem_4_index = cache['single_blocks_13_model_model_tensoritem_4_index']
    single_blocks_13_model_model_tensoritem_5_index = cache['single_blocks_13_model_model_tensoritem_5_index']
    single_blocks_13_model_model_tensoritem_6_index = cache['single_blocks_13_model_model_tensoritem_6_index']
    single_blocks_13_model_model_tensoritem_7_index = cache['single_blocks_13_model_model_tensoritem_7_index']
    single_blocks_13_model_model_totuple_0_output = cache['single_blocks_13_model_model_totuple_0_output']
    single_blocks_13_model_model_totuple_1_output = cache['single_blocks_13_model_model_totuple_1_output']
    single_blocks_13_model_scaleddotproduct_attn_mask = cache['single_blocks_13_model_scaleddotproduct_attn_mask']
    single_blocks_13_model_totuple_output = cache['single_blocks_13_model_totuple_output']
    single_blocks_13_model_transpose_axes = cache['single_blocks_13_model_transpose_axes']
    single_blocks_13_modulation_lin_bias = params['single_blocks_13_modulation_lin_bias']
    single_blocks_13_modulation_lin_transpose_axes = cache['single_blocks_13_modulation_lin_transpose_axes']
    single_blocks_13_modulation_lin_weight = params['single_blocks_13_modulation_lin_weight']
    single_blocks_13_modulation_silu_add_left = cache['single_blocks_13_modulation_silu_add_left']
    single_blocks_13_modulation_split_axis = cache['single_blocks_13_modulation_split_axis']
    single_blocks_13_modulation_split_split_size = cache['single_blocks_13_modulation_split_split_size']
    single_blocks_13_modulation_tensoritem_index = cache['single_blocks_13_modulation_tensoritem_index']
    single_blocks_13_norm_key_norm_add_right = cache['single_blocks_13_norm_key_norm_add_right']
    single_blocks_13_norm_key_norm_divide_numerator = cache['single_blocks_13_norm_key_norm_divide_numerator']
    single_blocks_13_norm_key_norm_mean_axis = cache['single_blocks_13_norm_key_norm_mean_axis']
    single_blocks_13_norm_key_norm_mean_keepdim = cache['single_blocks_13_norm_key_norm_mean_keepdim']
    single_blocks_13_norm_key_norm_power_exponent = cache['single_blocks_13_norm_key_norm_power_exponent']
    single_blocks_13_norm_key_norm_scale = params['single_blocks_13_norm_key_norm_scale']
    single_blocks_13_norm_query_norm_add_right = cache['single_blocks_13_norm_query_norm_add_right']
    single_blocks_13_norm_query_norm_divide_numerator = cache['single_blocks_13_norm_query_norm_divide_numerator']
    single_blocks_13_norm_query_norm_mean_axis = cache['single_blocks_13_norm_query_norm_mean_axis']
    single_blocks_13_norm_query_norm_mean_keepdim = cache['single_blocks_13_norm_query_norm_mean_keepdim']
    single_blocks_13_norm_query_norm_power_exponent = cache['single_blocks_13_norm_query_norm_power_exponent']
    single_blocks_13_norm_query_norm_scale = params['single_blocks_13_norm_query_norm_scale']
    single_blocks_13_pre_norm_add_right = cache['single_blocks_13_pre_norm_add_right']
    single_blocks_13_pre_norm_mean_axis = cache['single_blocks_13_pre_norm_mean_axis']
    single_blocks_13_pre_norm_mean_keepdim = cache['single_blocks_13_pre_norm_mean_keepdim']
    single_blocks_13_pre_norm_variance_axis = cache['single_blocks_13_pre_norm_variance_axis']
    single_blocks_13_pre_norm_variance_correction = cache['single_blocks_13_pre_norm_variance_correction']
    single_blocks_13_pre_norm_variance_keepdim = cache['single_blocks_13_pre_norm_variance_keepdim']
    single_blocks_13_tensoritem_0_index = cache['single_blocks_13_tensoritem_0_index']
    single_blocks_13_tensoritem_1_index = cache['single_blocks_13_tensoritem_1_index']
    single_blocks_13_tensoritem_2_index = cache['single_blocks_13_tensoritem_2_index']
    single_blocks_13_tensoritem_3_index = cache['single_blocks_13_tensoritem_3_index']
    single_blocks_13_tensoritem_4_index = cache['single_blocks_13_tensoritem_4_index']
    single_blocks_13_tensoritem_5_index = cache['single_blocks_13_tensoritem_5_index']
    single_blocks_13_tensoritem_6_index = cache['single_blocks_13_tensoritem_6_index']
    single_blocks_13_tensoritem_7_index = cache['single_blocks_13_tensoritem_7_index']
    single_blocks_13_totuple_output = cache['single_blocks_13_totuple_output']
    single_blocks_13_transpose_axes = cache['single_blocks_13_transpose_axes']
    single_blocks_14_add_0_left = cache['single_blocks_14_add_0_left']
    single_blocks_14_concat_axis = cache['single_blocks_14_concat_axis']
    single_blocks_14_gelu_approximate = cache['single_blocks_14_gelu_approximate']
    single_blocks_14_linear1_bias = params['single_blocks_14_linear1_bias']
    single_blocks_14_linear1_transpose_axes = cache['single_blocks_14_linear1_transpose_axes']
    single_blocks_14_linear1_weight = params['single_blocks_14_linear1_weight']
    single_blocks_14_linear2_bias = params['single_blocks_14_linear2_bias']
    single_blocks_14_linear2_transpose_axes = cache['single_blocks_14_linear2_transpose_axes']
    single_blocks_14_linear2_weight = params['single_blocks_14_linear2_weight']
    single_blocks_14_model_model_shape_0_output = cache['single_blocks_14_model_model_shape_0_output']
    single_blocks_14_model_model_shape_1_output = cache['single_blocks_14_model_model_shape_1_output']
    single_blocks_14_model_model_tensoritem_0_index = cache['single_blocks_14_model_model_tensoritem_0_index']
    single_blocks_14_model_model_tensoritem_1_index = cache['single_blocks_14_model_model_tensoritem_1_index']
    single_blocks_14_model_model_tensoritem_2_index = cache['single_blocks_14_model_model_tensoritem_2_index']
    single_blocks_14_model_model_tensoritem_3_index = cache['single_blocks_14_model_model_tensoritem_3_index']
    single_blocks_14_model_model_tensoritem_4_index = cache['single_blocks_14_model_model_tensoritem_4_index']
    single_blocks_14_model_model_tensoritem_5_index = cache['single_blocks_14_model_model_tensoritem_5_index']
    single_blocks_14_model_model_tensoritem_6_index = cache['single_blocks_14_model_model_tensoritem_6_index']
    single_blocks_14_model_model_tensoritem_7_index = cache['single_blocks_14_model_model_tensoritem_7_index']
    single_blocks_14_model_model_totuple_0_output = cache['single_blocks_14_model_model_totuple_0_output']
    single_blocks_14_model_model_totuple_1_output = cache['single_blocks_14_model_model_totuple_1_output']
    single_blocks_14_model_scaleddotproduct_attn_mask = cache['single_blocks_14_model_scaleddotproduct_attn_mask']
    single_blocks_14_model_totuple_output = cache['single_blocks_14_model_totuple_output']
    single_blocks_14_model_transpose_axes = cache['single_blocks_14_model_transpose_axes']
    single_blocks_14_modulation_lin_bias = params['single_blocks_14_modulation_lin_bias']
    single_blocks_14_modulation_lin_transpose_axes = cache['single_blocks_14_modulation_lin_transpose_axes']
    single_blocks_14_modulation_lin_weight = params['single_blocks_14_modulation_lin_weight']
    single_blocks_14_modulation_silu_add_left = cache['single_blocks_14_modulation_silu_add_left']
    single_blocks_14_modulation_split_axis = cache['single_blocks_14_modulation_split_axis']
    single_blocks_14_modulation_split_split_size = cache['single_blocks_14_modulation_split_split_size']
    single_blocks_14_modulation_tensoritem_index = cache['single_blocks_14_modulation_tensoritem_index']
    single_blocks_14_norm_key_norm_add_right = cache['single_blocks_14_norm_key_norm_add_right']
    single_blocks_14_norm_key_norm_divide_numerator = cache['single_blocks_14_norm_key_norm_divide_numerator']
    single_blocks_14_norm_key_norm_mean_axis = cache['single_blocks_14_norm_key_norm_mean_axis']
    single_blocks_14_norm_key_norm_mean_keepdim = cache['single_blocks_14_norm_key_norm_mean_keepdim']
    single_blocks_14_norm_key_norm_power_exponent = cache['single_blocks_14_norm_key_norm_power_exponent']
    single_blocks_14_norm_key_norm_scale = params['single_blocks_14_norm_key_norm_scale']
    single_blocks_14_norm_query_norm_add_right = cache['single_blocks_14_norm_query_norm_add_right']
    single_blocks_14_norm_query_norm_divide_numerator = cache['single_blocks_14_norm_query_norm_divide_numerator']
    single_blocks_14_norm_query_norm_mean_axis = cache['single_blocks_14_norm_query_norm_mean_axis']
    single_blocks_14_norm_query_norm_mean_keepdim = cache['single_blocks_14_norm_query_norm_mean_keepdim']
    single_blocks_14_norm_query_norm_power_exponent = cache['single_blocks_14_norm_query_norm_power_exponent']
    single_blocks_14_norm_query_norm_scale = params['single_blocks_14_norm_query_norm_scale']
    single_blocks_14_pre_norm_add_right = cache['single_blocks_14_pre_norm_add_right']
    single_blocks_14_pre_norm_mean_axis = cache['single_blocks_14_pre_norm_mean_axis']
    single_blocks_14_pre_norm_mean_keepdim = cache['single_blocks_14_pre_norm_mean_keepdim']
    single_blocks_14_pre_norm_variance_axis = cache['single_blocks_14_pre_norm_variance_axis']
    single_blocks_14_pre_norm_variance_correction = cache['single_blocks_14_pre_norm_variance_correction']
    single_blocks_14_pre_norm_variance_keepdim = cache['single_blocks_14_pre_norm_variance_keepdim']
    single_blocks_14_tensoritem_0_index = cache['single_blocks_14_tensoritem_0_index']
    single_blocks_14_tensoritem_1_index = cache['single_blocks_14_tensoritem_1_index']
    single_blocks_14_tensoritem_2_index = cache['single_blocks_14_tensoritem_2_index']
    single_blocks_14_tensoritem_3_index = cache['single_blocks_14_tensoritem_3_index']
    single_blocks_14_tensoritem_4_index = cache['single_blocks_14_tensoritem_4_index']
    single_blocks_14_tensoritem_5_index = cache['single_blocks_14_tensoritem_5_index']
    single_blocks_14_tensoritem_6_index = cache['single_blocks_14_tensoritem_6_index']
    single_blocks_14_tensoritem_7_index = cache['single_blocks_14_tensoritem_7_index']
    single_blocks_14_totuple_output = cache['single_blocks_14_totuple_output']
    single_blocks_14_transpose_axes = cache['single_blocks_14_transpose_axes']
    single_blocks_15_add_0_left = cache['single_blocks_15_add_0_left']
    single_blocks_15_concat_axis = cache['single_blocks_15_concat_axis']
    single_blocks_15_gelu_approximate = cache['single_blocks_15_gelu_approximate']
    single_blocks_15_linear1_bias = params['single_blocks_15_linear1_bias']
    single_blocks_15_linear1_transpose_axes = cache['single_blocks_15_linear1_transpose_axes']
    single_blocks_15_linear1_weight = params['single_blocks_15_linear1_weight']
    single_blocks_15_linear2_bias = params['single_blocks_15_linear2_bias']
    single_blocks_15_linear2_transpose_axes = cache['single_blocks_15_linear2_transpose_axes']
    single_blocks_15_linear2_weight = params['single_blocks_15_linear2_weight']
    single_blocks_15_model_model_shape_0_output = cache['single_blocks_15_model_model_shape_0_output']
    single_blocks_15_model_model_shape_1_output = cache['single_blocks_15_model_model_shape_1_output']
    single_blocks_15_model_model_tensoritem_0_index = cache['single_blocks_15_model_model_tensoritem_0_index']
    single_blocks_15_model_model_tensoritem_1_index = cache['single_blocks_15_model_model_tensoritem_1_index']
    single_blocks_15_model_model_tensoritem_2_index = cache['single_blocks_15_model_model_tensoritem_2_index']
    single_blocks_15_model_model_tensoritem_3_index = cache['single_blocks_15_model_model_tensoritem_3_index']
    single_blocks_15_model_model_tensoritem_4_index = cache['single_blocks_15_model_model_tensoritem_4_index']
    single_blocks_15_model_model_tensoritem_5_index = cache['single_blocks_15_model_model_tensoritem_5_index']
    single_blocks_15_model_model_tensoritem_6_index = cache['single_blocks_15_model_model_tensoritem_6_index']
    single_blocks_15_model_model_tensoritem_7_index = cache['single_blocks_15_model_model_tensoritem_7_index']
    single_blocks_15_model_model_totuple_0_output = cache['single_blocks_15_model_model_totuple_0_output']
    single_blocks_15_model_model_totuple_1_output = cache['single_blocks_15_model_model_totuple_1_output']
    single_blocks_15_model_scaleddotproduct_attn_mask = cache['single_blocks_15_model_scaleddotproduct_attn_mask']
    single_blocks_15_model_totuple_output = cache['single_blocks_15_model_totuple_output']
    single_blocks_15_model_transpose_axes = cache['single_blocks_15_model_transpose_axes']
    single_blocks_15_modulation_lin_bias = params['single_blocks_15_modulation_lin_bias']
    single_blocks_15_modulation_lin_transpose_axes = cache['single_blocks_15_modulation_lin_transpose_axes']
    single_blocks_15_modulation_lin_weight = params['single_blocks_15_modulation_lin_weight']
    single_blocks_15_modulation_silu_add_left = cache['single_blocks_15_modulation_silu_add_left']
    single_blocks_15_modulation_split_axis = cache['single_blocks_15_modulation_split_axis']
    single_blocks_15_modulation_split_split_size = cache['single_blocks_15_modulation_split_split_size']
    single_blocks_15_modulation_tensoritem_index = cache['single_blocks_15_modulation_tensoritem_index']
    single_blocks_15_norm_key_norm_add_right = cache['single_blocks_15_norm_key_norm_add_right']
    single_blocks_15_norm_key_norm_divide_numerator = cache['single_blocks_15_norm_key_norm_divide_numerator']
    single_blocks_15_norm_key_norm_mean_axis = cache['single_blocks_15_norm_key_norm_mean_axis']
    single_blocks_15_norm_key_norm_mean_keepdim = cache['single_blocks_15_norm_key_norm_mean_keepdim']
    single_blocks_15_norm_key_norm_power_exponent = cache['single_blocks_15_norm_key_norm_power_exponent']
    single_blocks_15_norm_key_norm_scale = params['single_blocks_15_norm_key_norm_scale']
    single_blocks_15_norm_query_norm_add_right = cache['single_blocks_15_norm_query_norm_add_right']
    single_blocks_15_norm_query_norm_divide_numerator = cache['single_blocks_15_norm_query_norm_divide_numerator']
    single_blocks_15_norm_query_norm_mean_axis = cache['single_blocks_15_norm_query_norm_mean_axis']
    single_blocks_15_norm_query_norm_mean_keepdim = cache['single_blocks_15_norm_query_norm_mean_keepdim']
    single_blocks_15_norm_query_norm_power_exponent = cache['single_blocks_15_norm_query_norm_power_exponent']
    single_blocks_15_norm_query_norm_scale = params['single_blocks_15_norm_query_norm_scale']
    single_blocks_15_pre_norm_add_right = cache['single_blocks_15_pre_norm_add_right']
    single_blocks_15_pre_norm_mean_axis = cache['single_blocks_15_pre_norm_mean_axis']
    single_blocks_15_pre_norm_mean_keepdim = cache['single_blocks_15_pre_norm_mean_keepdim']
    single_blocks_15_pre_norm_variance_axis = cache['single_blocks_15_pre_norm_variance_axis']
    single_blocks_15_pre_norm_variance_correction = cache['single_blocks_15_pre_norm_variance_correction']
    single_blocks_15_pre_norm_variance_keepdim = cache['single_blocks_15_pre_norm_variance_keepdim']
    single_blocks_15_tensoritem_0_index = cache['single_blocks_15_tensoritem_0_index']
    single_blocks_15_tensoritem_1_index = cache['single_blocks_15_tensoritem_1_index']
    single_blocks_15_tensoritem_2_index = cache['single_blocks_15_tensoritem_2_index']
    single_blocks_15_tensoritem_3_index = cache['single_blocks_15_tensoritem_3_index']
    single_blocks_15_tensoritem_4_index = cache['single_blocks_15_tensoritem_4_index']
    single_blocks_15_tensoritem_5_index = cache['single_blocks_15_tensoritem_5_index']
    single_blocks_15_tensoritem_6_index = cache['single_blocks_15_tensoritem_6_index']
    single_blocks_15_tensoritem_7_index = cache['single_blocks_15_tensoritem_7_index']
    single_blocks_15_totuple_output = cache['single_blocks_15_totuple_output']
    single_blocks_15_transpose_axes = cache['single_blocks_15_transpose_axes']
    single_blocks_16_add_0_left = cache['single_blocks_16_add_0_left']
    single_blocks_16_concat_axis = cache['single_blocks_16_concat_axis']
    single_blocks_16_gelu_approximate = cache['single_blocks_16_gelu_approximate']
    single_blocks_16_linear1_bias = params['single_blocks_16_linear1_bias']
    single_blocks_16_linear1_transpose_axes = cache['single_blocks_16_linear1_transpose_axes']
    single_blocks_16_linear1_weight = params['single_blocks_16_linear1_weight']
    single_blocks_16_linear2_bias = params['single_blocks_16_linear2_bias']
    single_blocks_16_linear2_transpose_axes = cache['single_blocks_16_linear2_transpose_axes']
    single_blocks_16_linear2_weight = params['single_blocks_16_linear2_weight']
    single_blocks_16_model_model_shape_0_output = cache['single_blocks_16_model_model_shape_0_output']
    single_blocks_16_model_model_shape_1_output = cache['single_blocks_16_model_model_shape_1_output']
    single_blocks_16_model_model_tensoritem_0_index = cache['single_blocks_16_model_model_tensoritem_0_index']
    single_blocks_16_model_model_tensoritem_1_index = cache['single_blocks_16_model_model_tensoritem_1_index']
    single_blocks_16_model_model_tensoritem_2_index = cache['single_blocks_16_model_model_tensoritem_2_index']
    single_blocks_16_model_model_tensoritem_3_index = cache['single_blocks_16_model_model_tensoritem_3_index']
    single_blocks_16_model_model_tensoritem_4_index = cache['single_blocks_16_model_model_tensoritem_4_index']
    single_blocks_16_model_model_tensoritem_5_index = cache['single_blocks_16_model_model_tensoritem_5_index']
    single_blocks_16_model_model_tensoritem_6_index = cache['single_blocks_16_model_model_tensoritem_6_index']
    single_blocks_16_model_model_tensoritem_7_index = cache['single_blocks_16_model_model_tensoritem_7_index']
    single_blocks_16_model_model_totuple_0_output = cache['single_blocks_16_model_model_totuple_0_output']
    single_blocks_16_model_model_totuple_1_output = cache['single_blocks_16_model_model_totuple_1_output']
    single_blocks_16_model_scaleddotproduct_attn_mask = cache['single_blocks_16_model_scaleddotproduct_attn_mask']
    single_blocks_16_model_totuple_output = cache['single_blocks_16_model_totuple_output']
    single_blocks_16_model_transpose_axes = cache['single_blocks_16_model_transpose_axes']
    single_blocks_16_modulation_lin_bias = params['single_blocks_16_modulation_lin_bias']
    single_blocks_16_modulation_lin_transpose_axes = cache['single_blocks_16_modulation_lin_transpose_axes']
    single_blocks_16_modulation_lin_weight = params['single_blocks_16_modulation_lin_weight']
    single_blocks_16_modulation_silu_add_left = cache['single_blocks_16_modulation_silu_add_left']
    single_blocks_16_modulation_split_axis = cache['single_blocks_16_modulation_split_axis']
    single_blocks_16_modulation_split_split_size = cache['single_blocks_16_modulation_split_split_size']
    single_blocks_16_modulation_tensoritem_index = cache['single_blocks_16_modulation_tensoritem_index']
    single_blocks_16_norm_key_norm_add_right = cache['single_blocks_16_norm_key_norm_add_right']
    single_blocks_16_norm_key_norm_divide_numerator = cache['single_blocks_16_norm_key_norm_divide_numerator']
    single_blocks_16_norm_key_norm_mean_axis = cache['single_blocks_16_norm_key_norm_mean_axis']
    single_blocks_16_norm_key_norm_mean_keepdim = cache['single_blocks_16_norm_key_norm_mean_keepdim']
    single_blocks_16_norm_key_norm_power_exponent = cache['single_blocks_16_norm_key_norm_power_exponent']
    single_blocks_16_norm_key_norm_scale = params['single_blocks_16_norm_key_norm_scale']
    single_blocks_16_norm_query_norm_add_right = cache['single_blocks_16_norm_query_norm_add_right']
    single_blocks_16_norm_query_norm_divide_numerator = cache['single_blocks_16_norm_query_norm_divide_numerator']
    single_blocks_16_norm_query_norm_mean_axis = cache['single_blocks_16_norm_query_norm_mean_axis']
    single_blocks_16_norm_query_norm_mean_keepdim = cache['single_blocks_16_norm_query_norm_mean_keepdim']
    single_blocks_16_norm_query_norm_power_exponent = cache['single_blocks_16_norm_query_norm_power_exponent']
    single_blocks_16_norm_query_norm_scale = params['single_blocks_16_norm_query_norm_scale']
    single_blocks_16_pre_norm_add_right = cache['single_blocks_16_pre_norm_add_right']
    single_blocks_16_pre_norm_mean_axis = cache['single_blocks_16_pre_norm_mean_axis']
    single_blocks_16_pre_norm_mean_keepdim = cache['single_blocks_16_pre_norm_mean_keepdim']
    single_blocks_16_pre_norm_variance_axis = cache['single_blocks_16_pre_norm_variance_axis']
    single_blocks_16_pre_norm_variance_correction = cache['single_blocks_16_pre_norm_variance_correction']
    single_blocks_16_pre_norm_variance_keepdim = cache['single_blocks_16_pre_norm_variance_keepdim']
    single_blocks_16_tensoritem_0_index = cache['single_blocks_16_tensoritem_0_index']
    single_blocks_16_tensoritem_1_index = cache['single_blocks_16_tensoritem_1_index']
    single_blocks_16_tensoritem_2_index = cache['single_blocks_16_tensoritem_2_index']
    single_blocks_16_tensoritem_3_index = cache['single_blocks_16_tensoritem_3_index']
    single_blocks_16_tensoritem_4_index = cache['single_blocks_16_tensoritem_4_index']
    single_blocks_16_tensoritem_5_index = cache['single_blocks_16_tensoritem_5_index']
    single_blocks_16_tensoritem_6_index = cache['single_blocks_16_tensoritem_6_index']
    single_blocks_16_tensoritem_7_index = cache['single_blocks_16_tensoritem_7_index']
    single_blocks_16_totuple_output = cache['single_blocks_16_totuple_output']
    single_blocks_16_transpose_axes = cache['single_blocks_16_transpose_axes']
    single_blocks_17_add_0_left = cache['single_blocks_17_add_0_left']
    single_blocks_17_concat_axis = cache['single_blocks_17_concat_axis']
    single_blocks_17_gelu_approximate = cache['single_blocks_17_gelu_approximate']
    single_blocks_17_linear1_bias = params['single_blocks_17_linear1_bias']
    single_blocks_17_linear1_transpose_axes = cache['single_blocks_17_linear1_transpose_axes']
    single_blocks_17_linear1_weight = params['single_blocks_17_linear1_weight']
    single_blocks_17_linear2_bias = params['single_blocks_17_linear2_bias']
    single_blocks_17_linear2_transpose_axes = cache['single_blocks_17_linear2_transpose_axes']
    single_blocks_17_linear2_weight = params['single_blocks_17_linear2_weight']
    single_blocks_17_model_model_shape_0_output = cache['single_blocks_17_model_model_shape_0_output']
    single_blocks_17_model_model_shape_1_output = cache['single_blocks_17_model_model_shape_1_output']
    single_blocks_17_model_model_tensoritem_0_index = cache['single_blocks_17_model_model_tensoritem_0_index']
    single_blocks_17_model_model_tensoritem_1_index = cache['single_blocks_17_model_model_tensoritem_1_index']
    single_blocks_17_model_model_tensoritem_2_index = cache['single_blocks_17_model_model_tensoritem_2_index']
    single_blocks_17_model_model_tensoritem_3_index = cache['single_blocks_17_model_model_tensoritem_3_index']
    single_blocks_17_model_model_tensoritem_4_index = cache['single_blocks_17_model_model_tensoritem_4_index']
    single_blocks_17_model_model_tensoritem_5_index = cache['single_blocks_17_model_model_tensoritem_5_index']
    single_blocks_17_model_model_tensoritem_6_index = cache['single_blocks_17_model_model_tensoritem_6_index']
    single_blocks_17_model_model_tensoritem_7_index = cache['single_blocks_17_model_model_tensoritem_7_index']
    single_blocks_17_model_model_totuple_0_output = cache['single_blocks_17_model_model_totuple_0_output']
    single_blocks_17_model_model_totuple_1_output = cache['single_blocks_17_model_model_totuple_1_output']
    single_blocks_17_model_scaleddotproduct_attn_mask = cache['single_blocks_17_model_scaleddotproduct_attn_mask']
    single_blocks_17_model_totuple_output = cache['single_blocks_17_model_totuple_output']
    single_blocks_17_model_transpose_axes = cache['single_blocks_17_model_transpose_axes']
    single_blocks_17_modulation_lin_bias = params['single_blocks_17_modulation_lin_bias']
    single_blocks_17_modulation_lin_transpose_axes = cache['single_blocks_17_modulation_lin_transpose_axes']
    single_blocks_17_modulation_lin_weight = params['single_blocks_17_modulation_lin_weight']
    single_blocks_17_modulation_silu_add_left = cache['single_blocks_17_modulation_silu_add_left']
    single_blocks_17_modulation_split_axis = cache['single_blocks_17_modulation_split_axis']
    single_blocks_17_modulation_split_split_size = cache['single_blocks_17_modulation_split_split_size']
    single_blocks_17_modulation_tensoritem_index = cache['single_blocks_17_modulation_tensoritem_index']
    single_blocks_17_norm_key_norm_add_right = cache['single_blocks_17_norm_key_norm_add_right']
    single_blocks_17_norm_key_norm_divide_numerator = cache['single_blocks_17_norm_key_norm_divide_numerator']
    single_blocks_17_norm_key_norm_mean_axis = cache['single_blocks_17_norm_key_norm_mean_axis']
    single_blocks_17_norm_key_norm_mean_keepdim = cache['single_blocks_17_norm_key_norm_mean_keepdim']
    single_blocks_17_norm_key_norm_power_exponent = cache['single_blocks_17_norm_key_norm_power_exponent']
    single_blocks_17_norm_key_norm_scale = params['single_blocks_17_norm_key_norm_scale']
    single_blocks_17_norm_query_norm_add_right = cache['single_blocks_17_norm_query_norm_add_right']
    single_blocks_17_norm_query_norm_divide_numerator = cache['single_blocks_17_norm_query_norm_divide_numerator']
    single_blocks_17_norm_query_norm_mean_axis = cache['single_blocks_17_norm_query_norm_mean_axis']
    single_blocks_17_norm_query_norm_mean_keepdim = cache['single_blocks_17_norm_query_norm_mean_keepdim']
    single_blocks_17_norm_query_norm_power_exponent = cache['single_blocks_17_norm_query_norm_power_exponent']
    single_blocks_17_norm_query_norm_scale = params['single_blocks_17_norm_query_norm_scale']
    single_blocks_17_pre_norm_add_right = cache['single_blocks_17_pre_norm_add_right']
    single_blocks_17_pre_norm_mean_axis = cache['single_blocks_17_pre_norm_mean_axis']
    single_blocks_17_pre_norm_mean_keepdim = cache['single_blocks_17_pre_norm_mean_keepdim']
    single_blocks_17_pre_norm_variance_axis = cache['single_blocks_17_pre_norm_variance_axis']
    single_blocks_17_pre_norm_variance_correction = cache['single_blocks_17_pre_norm_variance_correction']
    single_blocks_17_pre_norm_variance_keepdim = cache['single_blocks_17_pre_norm_variance_keepdim']
    single_blocks_17_tensoritem_0_index = cache['single_blocks_17_tensoritem_0_index']
    single_blocks_17_tensoritem_1_index = cache['single_blocks_17_tensoritem_1_index']
    single_blocks_17_tensoritem_2_index = cache['single_blocks_17_tensoritem_2_index']
    single_blocks_17_tensoritem_3_index = cache['single_blocks_17_tensoritem_3_index']
    single_blocks_17_tensoritem_4_index = cache['single_blocks_17_tensoritem_4_index']
    single_blocks_17_tensoritem_5_index = cache['single_blocks_17_tensoritem_5_index']
    single_blocks_17_tensoritem_6_index = cache['single_blocks_17_tensoritem_6_index']
    single_blocks_17_tensoritem_7_index = cache['single_blocks_17_tensoritem_7_index']
    single_blocks_17_totuple_output = cache['single_blocks_17_totuple_output']
    single_blocks_17_transpose_axes = cache['single_blocks_17_transpose_axes']
    single_blocks_18_add_0_left = cache['single_blocks_18_add_0_left']
    single_blocks_18_concat_axis = cache['single_blocks_18_concat_axis']
    single_blocks_18_gelu_approximate = cache['single_blocks_18_gelu_approximate']
    single_blocks_18_linear1_bias = params['single_blocks_18_linear1_bias']
    single_blocks_18_linear1_transpose_axes = cache['single_blocks_18_linear1_transpose_axes']
    single_blocks_18_linear1_weight = params['single_blocks_18_linear1_weight']
    single_blocks_18_linear2_bias = params['single_blocks_18_linear2_bias']
    single_blocks_18_linear2_transpose_axes = cache['single_blocks_18_linear2_transpose_axes']
    single_blocks_18_linear2_weight = params['single_blocks_18_linear2_weight']
    single_blocks_18_model_model_shape_0_output = cache['single_blocks_18_model_model_shape_0_output']
    single_blocks_18_model_model_shape_1_output = cache['single_blocks_18_model_model_shape_1_output']
    single_blocks_18_model_model_tensoritem_0_index = cache['single_blocks_18_model_model_tensoritem_0_index']
    single_blocks_18_model_model_tensoritem_1_index = cache['single_blocks_18_model_model_tensoritem_1_index']
    single_blocks_18_model_model_tensoritem_2_index = cache['single_blocks_18_model_model_tensoritem_2_index']
    single_blocks_18_model_model_tensoritem_3_index = cache['single_blocks_18_model_model_tensoritem_3_index']
    single_blocks_18_model_model_tensoritem_4_index = cache['single_blocks_18_model_model_tensoritem_4_index']
    single_blocks_18_model_model_tensoritem_5_index = cache['single_blocks_18_model_model_tensoritem_5_index']
    single_blocks_18_model_model_tensoritem_6_index = cache['single_blocks_18_model_model_tensoritem_6_index']
    single_blocks_18_model_model_tensoritem_7_index = cache['single_blocks_18_model_model_tensoritem_7_index']
    single_blocks_18_model_model_totuple_0_output = cache['single_blocks_18_model_model_totuple_0_output']
    single_blocks_18_model_model_totuple_1_output = cache['single_blocks_18_model_model_totuple_1_output']
    single_blocks_18_model_scaleddotproduct_attn_mask = cache['single_blocks_18_model_scaleddotproduct_attn_mask']
    single_blocks_18_model_totuple_output = cache['single_blocks_18_model_totuple_output']
    single_blocks_18_model_transpose_axes = cache['single_blocks_18_model_transpose_axes']
    single_blocks_18_modulation_lin_bias = params['single_blocks_18_modulation_lin_bias']
    single_blocks_18_modulation_lin_transpose_axes = cache['single_blocks_18_modulation_lin_transpose_axes']
    single_blocks_18_modulation_lin_weight = params['single_blocks_18_modulation_lin_weight']
    single_blocks_18_modulation_silu_add_left = cache['single_blocks_18_modulation_silu_add_left']
    single_blocks_18_modulation_split_axis = cache['single_blocks_18_modulation_split_axis']
    single_blocks_18_modulation_split_split_size = cache['single_blocks_18_modulation_split_split_size']
    single_blocks_18_modulation_tensoritem_index = cache['single_blocks_18_modulation_tensoritem_index']
    single_blocks_18_norm_key_norm_add_right = cache['single_blocks_18_norm_key_norm_add_right']
    single_blocks_18_norm_key_norm_divide_numerator = cache['single_blocks_18_norm_key_norm_divide_numerator']
    single_blocks_18_norm_key_norm_mean_axis = cache['single_blocks_18_norm_key_norm_mean_axis']
    single_blocks_18_norm_key_norm_mean_keepdim = cache['single_blocks_18_norm_key_norm_mean_keepdim']
    single_blocks_18_norm_key_norm_power_exponent = cache['single_blocks_18_norm_key_norm_power_exponent']
    single_blocks_18_norm_key_norm_scale = params['single_blocks_18_norm_key_norm_scale']
    single_blocks_18_norm_query_norm_add_right = cache['single_blocks_18_norm_query_norm_add_right']
    single_blocks_18_norm_query_norm_divide_numerator = cache['single_blocks_18_norm_query_norm_divide_numerator']
    single_blocks_18_norm_query_norm_mean_axis = cache['single_blocks_18_norm_query_norm_mean_axis']
    single_blocks_18_norm_query_norm_mean_keepdim = cache['single_blocks_18_norm_query_norm_mean_keepdim']
    single_blocks_18_norm_query_norm_power_exponent = cache['single_blocks_18_norm_query_norm_power_exponent']
    single_blocks_18_norm_query_norm_scale = params['single_blocks_18_norm_query_norm_scale']
    single_blocks_18_pre_norm_add_right = cache['single_blocks_18_pre_norm_add_right']
    single_blocks_18_pre_norm_mean_axis = cache['single_blocks_18_pre_norm_mean_axis']
    single_blocks_18_pre_norm_mean_keepdim = cache['single_blocks_18_pre_norm_mean_keepdim']
    single_blocks_18_pre_norm_variance_axis = cache['single_blocks_18_pre_norm_variance_axis']
    single_blocks_18_pre_norm_variance_correction = cache['single_blocks_18_pre_norm_variance_correction']
    single_blocks_18_pre_norm_variance_keepdim = cache['single_blocks_18_pre_norm_variance_keepdim']
    single_blocks_18_tensoritem_0_index = cache['single_blocks_18_tensoritem_0_index']
    single_blocks_18_tensoritem_1_index = cache['single_blocks_18_tensoritem_1_index']
    single_blocks_18_tensoritem_2_index = cache['single_blocks_18_tensoritem_2_index']
    single_blocks_18_tensoritem_3_index = cache['single_blocks_18_tensoritem_3_index']
    single_blocks_18_tensoritem_4_index = cache['single_blocks_18_tensoritem_4_index']
    single_blocks_18_tensoritem_5_index = cache['single_blocks_18_tensoritem_5_index']
    single_blocks_18_tensoritem_6_index = cache['single_blocks_18_tensoritem_6_index']
    single_blocks_18_tensoritem_7_index = cache['single_blocks_18_tensoritem_7_index']
    single_blocks_18_totuple_output = cache['single_blocks_18_totuple_output']
    single_blocks_18_transpose_axes = cache['single_blocks_18_transpose_axes']
    single_blocks_19_add_0_left = cache['single_blocks_19_add_0_left']
    single_blocks_19_concat_axis = cache['single_blocks_19_concat_axis']
    single_blocks_19_gelu_approximate = cache['single_blocks_19_gelu_approximate']
    single_blocks_19_linear1_bias = params['single_blocks_19_linear1_bias']
    single_blocks_19_linear1_transpose_axes = cache['single_blocks_19_linear1_transpose_axes']
    single_blocks_19_linear1_weight = params['single_blocks_19_linear1_weight']
    single_blocks_19_linear2_bias = params['single_blocks_19_linear2_bias']
    single_blocks_19_linear2_transpose_axes = cache['single_blocks_19_linear2_transpose_axes']
    single_blocks_19_linear2_weight = params['single_blocks_19_linear2_weight']
    single_blocks_19_model_model_shape_0_output = cache['single_blocks_19_model_model_shape_0_output']
    single_blocks_19_model_model_shape_1_output = cache['single_blocks_19_model_model_shape_1_output']
    single_blocks_19_model_model_tensoritem_0_index = cache['single_blocks_19_model_model_tensoritem_0_index']
    single_blocks_19_model_model_tensoritem_1_index = cache['single_blocks_19_model_model_tensoritem_1_index']
    single_blocks_19_model_model_tensoritem_2_index = cache['single_blocks_19_model_model_tensoritem_2_index']
    single_blocks_19_model_model_tensoritem_3_index = cache['single_blocks_19_model_model_tensoritem_3_index']
    single_blocks_19_model_model_tensoritem_4_index = cache['single_blocks_19_model_model_tensoritem_4_index']
    single_blocks_19_model_model_tensoritem_5_index = cache['single_blocks_19_model_model_tensoritem_5_index']
    single_blocks_19_model_model_tensoritem_6_index = cache['single_blocks_19_model_model_tensoritem_6_index']
    single_blocks_19_model_model_tensoritem_7_index = cache['single_blocks_19_model_model_tensoritem_7_index']
    single_blocks_19_model_model_totuple_0_output = cache['single_blocks_19_model_model_totuple_0_output']
    single_blocks_19_model_model_totuple_1_output = cache['single_blocks_19_model_model_totuple_1_output']
    single_blocks_19_model_scaleddotproduct_attn_mask = cache['single_blocks_19_model_scaleddotproduct_attn_mask']
    single_blocks_19_model_totuple_output = cache['single_blocks_19_model_totuple_output']
    single_blocks_19_model_transpose_axes = cache['single_blocks_19_model_transpose_axes']
    single_blocks_19_modulation_lin_bias = params['single_blocks_19_modulation_lin_bias']
    single_blocks_19_modulation_lin_transpose_axes = cache['single_blocks_19_modulation_lin_transpose_axes']
    single_blocks_19_modulation_lin_weight = params['single_blocks_19_modulation_lin_weight']
    single_blocks_19_modulation_silu_add_left = cache['single_blocks_19_modulation_silu_add_left']
    single_blocks_19_modulation_split_axis = cache['single_blocks_19_modulation_split_axis']
    single_blocks_19_modulation_split_split_size = cache['single_blocks_19_modulation_split_split_size']
    single_blocks_19_modulation_tensoritem_index = cache['single_blocks_19_modulation_tensoritem_index']
    single_blocks_19_norm_key_norm_add_right = cache['single_blocks_19_norm_key_norm_add_right']
    single_blocks_19_norm_key_norm_divide_numerator = cache['single_blocks_19_norm_key_norm_divide_numerator']
    single_blocks_19_norm_key_norm_mean_axis = cache['single_blocks_19_norm_key_norm_mean_axis']
    single_blocks_19_norm_key_norm_mean_keepdim = cache['single_blocks_19_norm_key_norm_mean_keepdim']
    single_blocks_19_norm_key_norm_power_exponent = cache['single_blocks_19_norm_key_norm_power_exponent']
    single_blocks_19_norm_key_norm_scale = params['single_blocks_19_norm_key_norm_scale']
    single_blocks_19_norm_query_norm_add_right = cache['single_blocks_19_norm_query_norm_add_right']
    single_blocks_19_norm_query_norm_divide_numerator = cache['single_blocks_19_norm_query_norm_divide_numerator']
    single_blocks_19_norm_query_norm_mean_axis = cache['single_blocks_19_norm_query_norm_mean_axis']
    single_blocks_19_norm_query_norm_mean_keepdim = cache['single_blocks_19_norm_query_norm_mean_keepdim']
    single_blocks_19_norm_query_norm_power_exponent = cache['single_blocks_19_norm_query_norm_power_exponent']
    single_blocks_19_norm_query_norm_scale = params['single_blocks_19_norm_query_norm_scale']
    single_blocks_19_pre_norm_add_right = cache['single_blocks_19_pre_norm_add_right']
    single_blocks_19_pre_norm_mean_axis = cache['single_blocks_19_pre_norm_mean_axis']
    single_blocks_19_pre_norm_mean_keepdim = cache['single_blocks_19_pre_norm_mean_keepdim']
    single_blocks_19_pre_norm_variance_axis = cache['single_blocks_19_pre_norm_variance_axis']
    single_blocks_19_pre_norm_variance_correction = cache['single_blocks_19_pre_norm_variance_correction']
    single_blocks_19_pre_norm_variance_keepdim = cache['single_blocks_19_pre_norm_variance_keepdim']
    single_blocks_19_tensoritem_0_index = cache['single_blocks_19_tensoritem_0_index']
    single_blocks_19_tensoritem_1_index = cache['single_blocks_19_tensoritem_1_index']
    single_blocks_19_tensoritem_2_index = cache['single_blocks_19_tensoritem_2_index']
    single_blocks_19_tensoritem_3_index = cache['single_blocks_19_tensoritem_3_index']
    single_blocks_19_tensoritem_4_index = cache['single_blocks_19_tensoritem_4_index']
    single_blocks_19_tensoritem_5_index = cache['single_blocks_19_tensoritem_5_index']
    single_blocks_19_tensoritem_6_index = cache['single_blocks_19_tensoritem_6_index']
    single_blocks_19_tensoritem_7_index = cache['single_blocks_19_tensoritem_7_index']
    single_blocks_19_totuple_output = cache['single_blocks_19_totuple_output']
    single_blocks_19_transpose_axes = cache['single_blocks_19_transpose_axes']
    single_blocks_1_add_0_left = cache['single_blocks_1_add_0_left']
    single_blocks_1_concat_axis = cache['single_blocks_1_concat_axis']
    single_blocks_1_gelu_approximate = cache['single_blocks_1_gelu_approximate']
    single_blocks_1_linear1_bias = params['single_blocks_1_linear1_bias']
    single_blocks_1_linear1_transpose_axes = cache['single_blocks_1_linear1_transpose_axes']
    single_blocks_1_linear1_weight = params['single_blocks_1_linear1_weight']
    single_blocks_1_linear2_bias = params['single_blocks_1_linear2_bias']
    single_blocks_1_linear2_transpose_axes = cache['single_blocks_1_linear2_transpose_axes']
    single_blocks_1_linear2_weight = params['single_blocks_1_linear2_weight']
    single_blocks_1_model_model_shape_0_output = cache['single_blocks_1_model_model_shape_0_output']
    single_blocks_1_model_model_shape_1_output = cache['single_blocks_1_model_model_shape_1_output']
    single_blocks_1_model_model_tensoritem_0_index = cache['single_blocks_1_model_model_tensoritem_0_index']
    single_blocks_1_model_model_tensoritem_1_index = cache['single_blocks_1_model_model_tensoritem_1_index']
    single_blocks_1_model_model_tensoritem_2_index = cache['single_blocks_1_model_model_tensoritem_2_index']
    single_blocks_1_model_model_tensoritem_3_index = cache['single_blocks_1_model_model_tensoritem_3_index']
    single_blocks_1_model_model_tensoritem_4_index = cache['single_blocks_1_model_model_tensoritem_4_index']
    single_blocks_1_model_model_tensoritem_5_index = cache['single_blocks_1_model_model_tensoritem_5_index']
    single_blocks_1_model_model_tensoritem_6_index = cache['single_blocks_1_model_model_tensoritem_6_index']
    single_blocks_1_model_model_tensoritem_7_index = cache['single_blocks_1_model_model_tensoritem_7_index']
    single_blocks_1_model_model_totuple_0_output = cache['single_blocks_1_model_model_totuple_0_output']
    single_blocks_1_model_model_totuple_1_output = cache['single_blocks_1_model_model_totuple_1_output']
    single_blocks_1_model_scaleddotproduct_attn_mask = cache['single_blocks_1_model_scaleddotproduct_attn_mask']
    single_blocks_1_model_totuple_output = cache['single_blocks_1_model_totuple_output']
    single_blocks_1_model_transpose_axes = cache['single_blocks_1_model_transpose_axes']
    single_blocks_1_modulation_lin_bias = params['single_blocks_1_modulation_lin_bias']
    single_blocks_1_modulation_lin_transpose_axes = cache['single_blocks_1_modulation_lin_transpose_axes']
    single_blocks_1_modulation_lin_weight = params['single_blocks_1_modulation_lin_weight']
    single_blocks_1_modulation_silu_add_left = cache['single_blocks_1_modulation_silu_add_left']
    single_blocks_1_modulation_split_axis = cache['single_blocks_1_modulation_split_axis']
    single_blocks_1_modulation_split_split_size = cache['single_blocks_1_modulation_split_split_size']
    single_blocks_1_modulation_tensoritem_index = cache['single_blocks_1_modulation_tensoritem_index']
    single_blocks_1_norm_key_norm_add_right = cache['single_blocks_1_norm_key_norm_add_right']
    single_blocks_1_norm_key_norm_divide_numerator = cache['single_blocks_1_norm_key_norm_divide_numerator']
    single_blocks_1_norm_key_norm_mean_axis = cache['single_blocks_1_norm_key_norm_mean_axis']
    single_blocks_1_norm_key_norm_mean_keepdim = cache['single_blocks_1_norm_key_norm_mean_keepdim']
    single_blocks_1_norm_key_norm_power_exponent = cache['single_blocks_1_norm_key_norm_power_exponent']
    single_blocks_1_norm_key_norm_scale = params['single_blocks_1_norm_key_norm_scale']
    single_blocks_1_norm_query_norm_add_right = cache['single_blocks_1_norm_query_norm_add_right']
    single_blocks_1_norm_query_norm_divide_numerator = cache['single_blocks_1_norm_query_norm_divide_numerator']
    single_blocks_1_norm_query_norm_mean_axis = cache['single_blocks_1_norm_query_norm_mean_axis']
    single_blocks_1_norm_query_norm_mean_keepdim = cache['single_blocks_1_norm_query_norm_mean_keepdim']
    single_blocks_1_norm_query_norm_power_exponent = cache['single_blocks_1_norm_query_norm_power_exponent']
    single_blocks_1_norm_query_norm_scale = params['single_blocks_1_norm_query_norm_scale']
    single_blocks_1_pre_norm_add_right = cache['single_blocks_1_pre_norm_add_right']
    single_blocks_1_pre_norm_mean_axis = cache['single_blocks_1_pre_norm_mean_axis']
    single_blocks_1_pre_norm_mean_keepdim = cache['single_blocks_1_pre_norm_mean_keepdim']
    single_blocks_1_pre_norm_variance_axis = cache['single_blocks_1_pre_norm_variance_axis']
    single_blocks_1_pre_norm_variance_correction = cache['single_blocks_1_pre_norm_variance_correction']
    single_blocks_1_pre_norm_variance_keepdim = cache['single_blocks_1_pre_norm_variance_keepdim']
    single_blocks_1_tensoritem_0_index = cache['single_blocks_1_tensoritem_0_index']
    single_blocks_1_tensoritem_1_index = cache['single_blocks_1_tensoritem_1_index']
    single_blocks_1_tensoritem_2_index = cache['single_blocks_1_tensoritem_2_index']
    single_blocks_1_tensoritem_3_index = cache['single_blocks_1_tensoritem_3_index']
    single_blocks_1_tensoritem_4_index = cache['single_blocks_1_tensoritem_4_index']
    single_blocks_1_tensoritem_5_index = cache['single_blocks_1_tensoritem_5_index']
    single_blocks_1_tensoritem_6_index = cache['single_blocks_1_tensoritem_6_index']
    single_blocks_1_tensoritem_7_index = cache['single_blocks_1_tensoritem_7_index']
    single_blocks_1_totuple_output = cache['single_blocks_1_totuple_output']
    single_blocks_1_transpose_axes = cache['single_blocks_1_transpose_axes']
    single_blocks_20_add_0_left = cache['single_blocks_20_add_0_left']
    single_blocks_20_concat_axis = cache['single_blocks_20_concat_axis']
    single_blocks_20_gelu_approximate = cache['single_blocks_20_gelu_approximate']
    single_blocks_20_linear1_bias = params['single_blocks_20_linear1_bias']
    single_blocks_20_linear1_transpose_axes = cache['single_blocks_20_linear1_transpose_axes']
    single_blocks_20_linear1_weight = params['single_blocks_20_linear1_weight']
    single_blocks_20_linear2_bias = params['single_blocks_20_linear2_bias']
    single_blocks_20_linear2_transpose_axes = cache['single_blocks_20_linear2_transpose_axes']
    single_blocks_20_linear2_weight = params['single_blocks_20_linear2_weight']
    single_blocks_20_model_model_shape_0_output = cache['single_blocks_20_model_model_shape_0_output']
    single_blocks_20_model_model_shape_1_output = cache['single_blocks_20_model_model_shape_1_output']
    single_blocks_20_model_model_tensoritem_0_index = cache['single_blocks_20_model_model_tensoritem_0_index']
    single_blocks_20_model_model_tensoritem_1_index = cache['single_blocks_20_model_model_tensoritem_1_index']
    single_blocks_20_model_model_tensoritem_2_index = cache['single_blocks_20_model_model_tensoritem_2_index']
    single_blocks_20_model_model_tensoritem_3_index = cache['single_blocks_20_model_model_tensoritem_3_index']
    single_blocks_20_model_model_tensoritem_4_index = cache['single_blocks_20_model_model_tensoritem_4_index']
    single_blocks_20_model_model_tensoritem_5_index = cache['single_blocks_20_model_model_tensoritem_5_index']
    single_blocks_20_model_model_tensoritem_6_index = cache['single_blocks_20_model_model_tensoritem_6_index']
    single_blocks_20_model_model_tensoritem_7_index = cache['single_blocks_20_model_model_tensoritem_7_index']
    single_blocks_20_model_model_totuple_0_output = cache['single_blocks_20_model_model_totuple_0_output']
    single_blocks_20_model_model_totuple_1_output = cache['single_blocks_20_model_model_totuple_1_output']
    single_blocks_20_model_scaleddotproduct_attn_mask = cache['single_blocks_20_model_scaleddotproduct_attn_mask']
    single_blocks_20_model_totuple_output = cache['single_blocks_20_model_totuple_output']
    single_blocks_20_model_transpose_axes = cache['single_blocks_20_model_transpose_axes']
    single_blocks_20_modulation_lin_bias = params['single_blocks_20_modulation_lin_bias']
    single_blocks_20_modulation_lin_transpose_axes = cache['single_blocks_20_modulation_lin_transpose_axes']
    single_blocks_20_modulation_lin_weight = params['single_blocks_20_modulation_lin_weight']
    single_blocks_20_modulation_silu_add_left = cache['single_blocks_20_modulation_silu_add_left']
    single_blocks_20_modulation_split_axis = cache['single_blocks_20_modulation_split_axis']
    single_blocks_20_modulation_split_split_size = cache['single_blocks_20_modulation_split_split_size']
    single_blocks_20_modulation_tensoritem_index = cache['single_blocks_20_modulation_tensoritem_index']
    single_blocks_20_norm_key_norm_add_right = cache['single_blocks_20_norm_key_norm_add_right']
    single_blocks_20_norm_key_norm_divide_numerator = cache['single_blocks_20_norm_key_norm_divide_numerator']
    single_blocks_20_norm_key_norm_mean_axis = cache['single_blocks_20_norm_key_norm_mean_axis']
    single_blocks_20_norm_key_norm_mean_keepdim = cache['single_blocks_20_norm_key_norm_mean_keepdim']
    single_blocks_20_norm_key_norm_power_exponent = cache['single_blocks_20_norm_key_norm_power_exponent']
    single_blocks_20_norm_key_norm_scale = params['single_blocks_20_norm_key_norm_scale']
    single_blocks_20_norm_query_norm_add_right = cache['single_blocks_20_norm_query_norm_add_right']
    single_blocks_20_norm_query_norm_divide_numerator = cache['single_blocks_20_norm_query_norm_divide_numerator']
    single_blocks_20_norm_query_norm_mean_axis = cache['single_blocks_20_norm_query_norm_mean_axis']
    single_blocks_20_norm_query_norm_mean_keepdim = cache['single_blocks_20_norm_query_norm_mean_keepdim']
    single_blocks_20_norm_query_norm_power_exponent = cache['single_blocks_20_norm_query_norm_power_exponent']
    single_blocks_20_norm_query_norm_scale = params['single_blocks_20_norm_query_norm_scale']
    single_blocks_20_pre_norm_add_right = cache['single_blocks_20_pre_norm_add_right']
    single_blocks_20_pre_norm_mean_axis = cache['single_blocks_20_pre_norm_mean_axis']
    single_blocks_20_pre_norm_mean_keepdim = cache['single_blocks_20_pre_norm_mean_keepdim']
    single_blocks_20_pre_norm_variance_axis = cache['single_blocks_20_pre_norm_variance_axis']
    single_blocks_20_pre_norm_variance_correction = cache['single_blocks_20_pre_norm_variance_correction']
    single_blocks_20_pre_norm_variance_keepdim = cache['single_blocks_20_pre_norm_variance_keepdim']
    single_blocks_20_tensoritem_0_index = cache['single_blocks_20_tensoritem_0_index']
    single_blocks_20_tensoritem_1_index = cache['single_blocks_20_tensoritem_1_index']
    single_blocks_20_tensoritem_2_index = cache['single_blocks_20_tensoritem_2_index']
    single_blocks_20_tensoritem_3_index = cache['single_blocks_20_tensoritem_3_index']
    single_blocks_20_tensoritem_4_index = cache['single_blocks_20_tensoritem_4_index']
    single_blocks_20_tensoritem_5_index = cache['single_blocks_20_tensoritem_5_index']
    single_blocks_20_tensoritem_6_index = cache['single_blocks_20_tensoritem_6_index']
    single_blocks_20_tensoritem_7_index = cache['single_blocks_20_tensoritem_7_index']
    single_blocks_20_totuple_output = cache['single_blocks_20_totuple_output']
    single_blocks_20_transpose_axes = cache['single_blocks_20_transpose_axes']
    single_blocks_21_add_0_left = cache['single_blocks_21_add_0_left']
    single_blocks_21_concat_axis = cache['single_blocks_21_concat_axis']
    single_blocks_21_gelu_approximate = cache['single_blocks_21_gelu_approximate']
    single_blocks_21_linear1_bias = params['single_blocks_21_linear1_bias']
    single_blocks_21_linear1_transpose_axes = cache['single_blocks_21_linear1_transpose_axes']
    single_blocks_21_linear1_weight = params['single_blocks_21_linear1_weight']
    single_blocks_21_linear2_bias = params['single_blocks_21_linear2_bias']
    single_blocks_21_linear2_transpose_axes = cache['single_blocks_21_linear2_transpose_axes']
    single_blocks_21_linear2_weight = params['single_blocks_21_linear2_weight']
    single_blocks_21_model_model_shape_0_output = cache['single_blocks_21_model_model_shape_0_output']
    single_blocks_21_model_model_shape_1_output = cache['single_blocks_21_model_model_shape_1_output']
    single_blocks_21_model_model_tensoritem_0_index = cache['single_blocks_21_model_model_tensoritem_0_index']
    single_blocks_21_model_model_tensoritem_1_index = cache['single_blocks_21_model_model_tensoritem_1_index']
    single_blocks_21_model_model_tensoritem_2_index = cache['single_blocks_21_model_model_tensoritem_2_index']
    single_blocks_21_model_model_tensoritem_3_index = cache['single_blocks_21_model_model_tensoritem_3_index']
    single_blocks_21_model_model_tensoritem_4_index = cache['single_blocks_21_model_model_tensoritem_4_index']
    single_blocks_21_model_model_tensoritem_5_index = cache['single_blocks_21_model_model_tensoritem_5_index']
    single_blocks_21_model_model_tensoritem_6_index = cache['single_blocks_21_model_model_tensoritem_6_index']
    single_blocks_21_model_model_tensoritem_7_index = cache['single_blocks_21_model_model_tensoritem_7_index']
    single_blocks_21_model_model_totuple_0_output = cache['single_blocks_21_model_model_totuple_0_output']
    single_blocks_21_model_model_totuple_1_output = cache['single_blocks_21_model_model_totuple_1_output']
    single_blocks_21_model_scaleddotproduct_attn_mask = cache['single_blocks_21_model_scaleddotproduct_attn_mask']
    single_blocks_21_model_totuple_output = cache['single_blocks_21_model_totuple_output']
    single_blocks_21_model_transpose_axes = cache['single_blocks_21_model_transpose_axes']
    single_blocks_21_modulation_lin_bias = params['single_blocks_21_modulation_lin_bias']
    single_blocks_21_modulation_lin_transpose_axes = cache['single_blocks_21_modulation_lin_transpose_axes']
    single_blocks_21_modulation_lin_weight = params['single_blocks_21_modulation_lin_weight']
    single_blocks_21_modulation_silu_add_left = cache['single_blocks_21_modulation_silu_add_left']
    single_blocks_21_modulation_split_axis = cache['single_blocks_21_modulation_split_axis']
    single_blocks_21_modulation_split_split_size = cache['single_blocks_21_modulation_split_split_size']
    single_blocks_21_modulation_tensoritem_index = cache['single_blocks_21_modulation_tensoritem_index']
    single_blocks_21_norm_key_norm_add_right = cache['single_blocks_21_norm_key_norm_add_right']
    single_blocks_21_norm_key_norm_divide_numerator = cache['single_blocks_21_norm_key_norm_divide_numerator']
    single_blocks_21_norm_key_norm_mean_axis = cache['single_blocks_21_norm_key_norm_mean_axis']
    single_blocks_21_norm_key_norm_mean_keepdim = cache['single_blocks_21_norm_key_norm_mean_keepdim']
    single_blocks_21_norm_key_norm_power_exponent = cache['single_blocks_21_norm_key_norm_power_exponent']
    single_blocks_21_norm_key_norm_scale = params['single_blocks_21_norm_key_norm_scale']
    single_blocks_21_norm_query_norm_add_right = cache['single_blocks_21_norm_query_norm_add_right']
    single_blocks_21_norm_query_norm_divide_numerator = cache['single_blocks_21_norm_query_norm_divide_numerator']
    single_blocks_21_norm_query_norm_mean_axis = cache['single_blocks_21_norm_query_norm_mean_axis']
    single_blocks_21_norm_query_norm_mean_keepdim = cache['single_blocks_21_norm_query_norm_mean_keepdim']
    single_blocks_21_norm_query_norm_power_exponent = cache['single_blocks_21_norm_query_norm_power_exponent']
    single_blocks_21_norm_query_norm_scale = params['single_blocks_21_norm_query_norm_scale']
    single_blocks_21_pre_norm_add_right = cache['single_blocks_21_pre_norm_add_right']
    single_blocks_21_pre_norm_mean_axis = cache['single_blocks_21_pre_norm_mean_axis']
    single_blocks_21_pre_norm_mean_keepdim = cache['single_blocks_21_pre_norm_mean_keepdim']
    single_blocks_21_pre_norm_variance_axis = cache['single_blocks_21_pre_norm_variance_axis']
    single_blocks_21_pre_norm_variance_correction = cache['single_blocks_21_pre_norm_variance_correction']
    single_blocks_21_pre_norm_variance_keepdim = cache['single_blocks_21_pre_norm_variance_keepdim']
    single_blocks_21_tensoritem_0_index = cache['single_blocks_21_tensoritem_0_index']
    single_blocks_21_tensoritem_1_index = cache['single_blocks_21_tensoritem_1_index']
    single_blocks_21_tensoritem_2_index = cache['single_blocks_21_tensoritem_2_index']
    single_blocks_21_tensoritem_3_index = cache['single_blocks_21_tensoritem_3_index']
    single_blocks_21_tensoritem_4_index = cache['single_blocks_21_tensoritem_4_index']
    single_blocks_21_tensoritem_5_index = cache['single_blocks_21_tensoritem_5_index']
    single_blocks_21_tensoritem_6_index = cache['single_blocks_21_tensoritem_6_index']
    single_blocks_21_tensoritem_7_index = cache['single_blocks_21_tensoritem_7_index']
    single_blocks_21_totuple_output = cache['single_blocks_21_totuple_output']
    single_blocks_21_transpose_axes = cache['single_blocks_21_transpose_axes']
    single_blocks_22_add_0_left = cache['single_blocks_22_add_0_left']
    single_blocks_22_concat_axis = cache['single_blocks_22_concat_axis']
    single_blocks_22_gelu_approximate = cache['single_blocks_22_gelu_approximate']
    single_blocks_22_linear1_bias = params['single_blocks_22_linear1_bias']
    single_blocks_22_linear1_transpose_axes = cache['single_blocks_22_linear1_transpose_axes']
    single_blocks_22_linear1_weight = params['single_blocks_22_linear1_weight']
    single_blocks_22_linear2_bias = params['single_blocks_22_linear2_bias']
    single_blocks_22_linear2_transpose_axes = cache['single_blocks_22_linear2_transpose_axes']
    single_blocks_22_linear2_weight = params['single_blocks_22_linear2_weight']
    single_blocks_22_model_model_shape_0_output = cache['single_blocks_22_model_model_shape_0_output']
    single_blocks_22_model_model_shape_1_output = cache['single_blocks_22_model_model_shape_1_output']
    single_blocks_22_model_model_tensoritem_0_index = cache['single_blocks_22_model_model_tensoritem_0_index']
    single_blocks_22_model_model_tensoritem_1_index = cache['single_blocks_22_model_model_tensoritem_1_index']
    single_blocks_22_model_model_tensoritem_2_index = cache['single_blocks_22_model_model_tensoritem_2_index']
    single_blocks_22_model_model_tensoritem_3_index = cache['single_blocks_22_model_model_tensoritem_3_index']
    single_blocks_22_model_model_tensoritem_4_index = cache['single_blocks_22_model_model_tensoritem_4_index']
    single_blocks_22_model_model_tensoritem_5_index = cache['single_blocks_22_model_model_tensoritem_5_index']
    single_blocks_22_model_model_tensoritem_6_index = cache['single_blocks_22_model_model_tensoritem_6_index']
    single_blocks_22_model_model_tensoritem_7_index = cache['single_blocks_22_model_model_tensoritem_7_index']
    single_blocks_22_model_model_totuple_0_output = cache['single_blocks_22_model_model_totuple_0_output']
    single_blocks_22_model_model_totuple_1_output = cache['single_blocks_22_model_model_totuple_1_output']
    single_blocks_22_model_scaleddotproduct_attn_mask = cache['single_blocks_22_model_scaleddotproduct_attn_mask']
    single_blocks_22_model_totuple_output = cache['single_blocks_22_model_totuple_output']
    single_blocks_22_model_transpose_axes = cache['single_blocks_22_model_transpose_axes']
    single_blocks_22_modulation_lin_bias = params['single_blocks_22_modulation_lin_bias']
    single_blocks_22_modulation_lin_transpose_axes = cache['single_blocks_22_modulation_lin_transpose_axes']
    single_blocks_22_modulation_lin_weight = params['single_blocks_22_modulation_lin_weight']
    single_blocks_22_modulation_silu_add_left = cache['single_blocks_22_modulation_silu_add_left']
    single_blocks_22_modulation_split_axis = cache['single_blocks_22_modulation_split_axis']
    single_blocks_22_modulation_split_split_size = cache['single_blocks_22_modulation_split_split_size']
    single_blocks_22_modulation_tensoritem_index = cache['single_blocks_22_modulation_tensoritem_index']
    single_blocks_22_norm_key_norm_add_right = cache['single_blocks_22_norm_key_norm_add_right']
    single_blocks_22_norm_key_norm_divide_numerator = cache['single_blocks_22_norm_key_norm_divide_numerator']
    single_blocks_22_norm_key_norm_mean_axis = cache['single_blocks_22_norm_key_norm_mean_axis']
    single_blocks_22_norm_key_norm_mean_keepdim = cache['single_blocks_22_norm_key_norm_mean_keepdim']
    single_blocks_22_norm_key_norm_power_exponent = cache['single_blocks_22_norm_key_norm_power_exponent']
    single_blocks_22_norm_key_norm_scale = params['single_blocks_22_norm_key_norm_scale']
    single_blocks_22_norm_query_norm_add_right = cache['single_blocks_22_norm_query_norm_add_right']
    single_blocks_22_norm_query_norm_divide_numerator = cache['single_blocks_22_norm_query_norm_divide_numerator']
    single_blocks_22_norm_query_norm_mean_axis = cache['single_blocks_22_norm_query_norm_mean_axis']
    single_blocks_22_norm_query_norm_mean_keepdim = cache['single_blocks_22_norm_query_norm_mean_keepdim']
    single_blocks_22_norm_query_norm_power_exponent = cache['single_blocks_22_norm_query_norm_power_exponent']
    single_blocks_22_norm_query_norm_scale = params['single_blocks_22_norm_query_norm_scale']
    single_blocks_22_pre_norm_add_right = cache['single_blocks_22_pre_norm_add_right']
    single_blocks_22_pre_norm_mean_axis = cache['single_blocks_22_pre_norm_mean_axis']
    single_blocks_22_pre_norm_mean_keepdim = cache['single_blocks_22_pre_norm_mean_keepdim']
    single_blocks_22_pre_norm_variance_axis = cache['single_blocks_22_pre_norm_variance_axis']
    single_blocks_22_pre_norm_variance_correction = cache['single_blocks_22_pre_norm_variance_correction']
    single_blocks_22_pre_norm_variance_keepdim = cache['single_blocks_22_pre_norm_variance_keepdim']
    single_blocks_22_tensoritem_0_index = cache['single_blocks_22_tensoritem_0_index']
    single_blocks_22_tensoritem_1_index = cache['single_blocks_22_tensoritem_1_index']
    single_blocks_22_tensoritem_2_index = cache['single_blocks_22_tensoritem_2_index']
    single_blocks_22_tensoritem_3_index = cache['single_blocks_22_tensoritem_3_index']
    single_blocks_22_tensoritem_4_index = cache['single_blocks_22_tensoritem_4_index']
    single_blocks_22_tensoritem_5_index = cache['single_blocks_22_tensoritem_5_index']
    single_blocks_22_tensoritem_6_index = cache['single_blocks_22_tensoritem_6_index']
    single_blocks_22_tensoritem_7_index = cache['single_blocks_22_tensoritem_7_index']
    single_blocks_22_totuple_output = cache['single_blocks_22_totuple_output']
    single_blocks_22_transpose_axes = cache['single_blocks_22_transpose_axes']
    single_blocks_23_add_0_left = cache['single_blocks_23_add_0_left']
    single_blocks_23_concat_axis = cache['single_blocks_23_concat_axis']
    single_blocks_23_gelu_approximate = cache['single_blocks_23_gelu_approximate']
    single_blocks_23_linear1_bias = params['single_blocks_23_linear1_bias']
    single_blocks_23_linear1_transpose_axes = cache['single_blocks_23_linear1_transpose_axes']
    single_blocks_23_linear1_weight = params['single_blocks_23_linear1_weight']
    single_blocks_23_linear2_bias = params['single_blocks_23_linear2_bias']
    single_blocks_23_linear2_transpose_axes = cache['single_blocks_23_linear2_transpose_axes']
    single_blocks_23_linear2_weight = params['single_blocks_23_linear2_weight']
    single_blocks_23_model_model_shape_0_output = cache['single_blocks_23_model_model_shape_0_output']
    single_blocks_23_model_model_shape_1_output = cache['single_blocks_23_model_model_shape_1_output']
    single_blocks_23_model_model_tensoritem_0_index = cache['single_blocks_23_model_model_tensoritem_0_index']
    single_blocks_23_model_model_tensoritem_1_index = cache['single_blocks_23_model_model_tensoritem_1_index']
    single_blocks_23_model_model_tensoritem_2_index = cache['single_blocks_23_model_model_tensoritem_2_index']
    single_blocks_23_model_model_tensoritem_3_index = cache['single_blocks_23_model_model_tensoritem_3_index']
    single_blocks_23_model_model_tensoritem_4_index = cache['single_blocks_23_model_model_tensoritem_4_index']
    single_blocks_23_model_model_tensoritem_5_index = cache['single_blocks_23_model_model_tensoritem_5_index']
    single_blocks_23_model_model_tensoritem_6_index = cache['single_blocks_23_model_model_tensoritem_6_index']
    single_blocks_23_model_model_tensoritem_7_index = cache['single_blocks_23_model_model_tensoritem_7_index']
    single_blocks_23_model_model_totuple_0_output = cache['single_blocks_23_model_model_totuple_0_output']
    single_blocks_23_model_model_totuple_1_output = cache['single_blocks_23_model_model_totuple_1_output']
    single_blocks_23_model_scaleddotproduct_attn_mask = cache['single_blocks_23_model_scaleddotproduct_attn_mask']
    single_blocks_23_model_totuple_output = cache['single_blocks_23_model_totuple_output']
    single_blocks_23_model_transpose_axes = cache['single_blocks_23_model_transpose_axes']
    single_blocks_23_modulation_lin_bias = params['single_blocks_23_modulation_lin_bias']
    single_blocks_23_modulation_lin_transpose_axes = cache['single_blocks_23_modulation_lin_transpose_axes']
    single_blocks_23_modulation_lin_weight = params['single_blocks_23_modulation_lin_weight']
    single_blocks_23_modulation_silu_add_left = cache['single_blocks_23_modulation_silu_add_left']
    single_blocks_23_modulation_split_axis = cache['single_blocks_23_modulation_split_axis']
    single_blocks_23_modulation_split_split_size = cache['single_blocks_23_modulation_split_split_size']
    single_blocks_23_modulation_tensoritem_index = cache['single_blocks_23_modulation_tensoritem_index']
    single_blocks_23_norm_key_norm_add_right = cache['single_blocks_23_norm_key_norm_add_right']
    single_blocks_23_norm_key_norm_divide_numerator = cache['single_blocks_23_norm_key_norm_divide_numerator']
    single_blocks_23_norm_key_norm_mean_axis = cache['single_blocks_23_norm_key_norm_mean_axis']
    single_blocks_23_norm_key_norm_mean_keepdim = cache['single_blocks_23_norm_key_norm_mean_keepdim']
    single_blocks_23_norm_key_norm_power_exponent = cache['single_blocks_23_norm_key_norm_power_exponent']
    single_blocks_23_norm_key_norm_scale = params['single_blocks_23_norm_key_norm_scale']
    single_blocks_23_norm_query_norm_add_right = cache['single_blocks_23_norm_query_norm_add_right']
    single_blocks_23_norm_query_norm_divide_numerator = cache['single_blocks_23_norm_query_norm_divide_numerator']
    single_blocks_23_norm_query_norm_mean_axis = cache['single_blocks_23_norm_query_norm_mean_axis']
    single_blocks_23_norm_query_norm_mean_keepdim = cache['single_blocks_23_norm_query_norm_mean_keepdim']
    single_blocks_23_norm_query_norm_power_exponent = cache['single_blocks_23_norm_query_norm_power_exponent']
    single_blocks_23_norm_query_norm_scale = params['single_blocks_23_norm_query_norm_scale']
    single_blocks_23_pre_norm_add_right = cache['single_blocks_23_pre_norm_add_right']
    single_blocks_23_pre_norm_mean_axis = cache['single_blocks_23_pre_norm_mean_axis']
    single_blocks_23_pre_norm_mean_keepdim = cache['single_blocks_23_pre_norm_mean_keepdim']
    single_blocks_23_pre_norm_variance_axis = cache['single_blocks_23_pre_norm_variance_axis']
    single_blocks_23_pre_norm_variance_correction = cache['single_blocks_23_pre_norm_variance_correction']
    single_blocks_23_pre_norm_variance_keepdim = cache['single_blocks_23_pre_norm_variance_keepdim']
    single_blocks_23_tensoritem_0_index = cache['single_blocks_23_tensoritem_0_index']
    single_blocks_23_tensoritem_1_index = cache['single_blocks_23_tensoritem_1_index']
    single_blocks_23_tensoritem_2_index = cache['single_blocks_23_tensoritem_2_index']
    single_blocks_23_tensoritem_3_index = cache['single_blocks_23_tensoritem_3_index']
    single_blocks_23_tensoritem_4_index = cache['single_blocks_23_tensoritem_4_index']
    single_blocks_23_tensoritem_5_index = cache['single_blocks_23_tensoritem_5_index']
    single_blocks_23_tensoritem_6_index = cache['single_blocks_23_tensoritem_6_index']
    single_blocks_23_tensoritem_7_index = cache['single_blocks_23_tensoritem_7_index']
    single_blocks_23_totuple_output = cache['single_blocks_23_totuple_output']
    single_blocks_23_transpose_axes = cache['single_blocks_23_transpose_axes']
    single_blocks_24_add_0_left = cache['single_blocks_24_add_0_left']
    single_blocks_24_concat_axis = cache['single_blocks_24_concat_axis']
    single_blocks_24_gelu_approximate = cache['single_blocks_24_gelu_approximate']
    single_blocks_24_linear1_bias = params['single_blocks_24_linear1_bias']
    single_blocks_24_linear1_transpose_axes = cache['single_blocks_24_linear1_transpose_axes']
    single_blocks_24_linear1_weight = params['single_blocks_24_linear1_weight']
    single_blocks_24_linear2_bias = params['single_blocks_24_linear2_bias']
    single_blocks_24_linear2_transpose_axes = cache['single_blocks_24_linear2_transpose_axes']
    single_blocks_24_linear2_weight = params['single_blocks_24_linear2_weight']
    single_blocks_24_model_model_shape_0_output = cache['single_blocks_24_model_model_shape_0_output']
    single_blocks_24_model_model_shape_1_output = cache['single_blocks_24_model_model_shape_1_output']
    single_blocks_24_model_model_tensoritem_0_index = cache['single_blocks_24_model_model_tensoritem_0_index']
    single_blocks_24_model_model_tensoritem_1_index = cache['single_blocks_24_model_model_tensoritem_1_index']
    single_blocks_24_model_model_tensoritem_2_index = cache['single_blocks_24_model_model_tensoritem_2_index']
    single_blocks_24_model_model_tensoritem_3_index = cache['single_blocks_24_model_model_tensoritem_3_index']
    single_blocks_24_model_model_tensoritem_4_index = cache['single_blocks_24_model_model_tensoritem_4_index']
    single_blocks_24_model_model_tensoritem_5_index = cache['single_blocks_24_model_model_tensoritem_5_index']
    single_blocks_24_model_model_tensoritem_6_index = cache['single_blocks_24_model_model_tensoritem_6_index']
    single_blocks_24_model_model_tensoritem_7_index = cache['single_blocks_24_model_model_tensoritem_7_index']
    single_blocks_24_model_model_totuple_0_output = cache['single_blocks_24_model_model_totuple_0_output']
    single_blocks_24_model_model_totuple_1_output = cache['single_blocks_24_model_model_totuple_1_output']
    single_blocks_24_model_scaleddotproduct_attn_mask = cache['single_blocks_24_model_scaleddotproduct_attn_mask']
    single_blocks_24_model_totuple_output = cache['single_blocks_24_model_totuple_output']
    single_blocks_24_model_transpose_axes = cache['single_blocks_24_model_transpose_axes']
    single_blocks_24_modulation_lin_bias = params['single_blocks_24_modulation_lin_bias']
    single_blocks_24_modulation_lin_transpose_axes = cache['single_blocks_24_modulation_lin_transpose_axes']
    single_blocks_24_modulation_lin_weight = params['single_blocks_24_modulation_lin_weight']
    single_blocks_24_modulation_silu_add_left = cache['single_blocks_24_modulation_silu_add_left']
    single_blocks_24_modulation_split_axis = cache['single_blocks_24_modulation_split_axis']
    single_blocks_24_modulation_split_split_size = cache['single_blocks_24_modulation_split_split_size']
    single_blocks_24_modulation_tensoritem_index = cache['single_blocks_24_modulation_tensoritem_index']
    single_blocks_24_norm_key_norm_add_right = cache['single_blocks_24_norm_key_norm_add_right']
    single_blocks_24_norm_key_norm_divide_numerator = cache['single_blocks_24_norm_key_norm_divide_numerator']
    single_blocks_24_norm_key_norm_mean_axis = cache['single_blocks_24_norm_key_norm_mean_axis']
    single_blocks_24_norm_key_norm_mean_keepdim = cache['single_blocks_24_norm_key_norm_mean_keepdim']
    single_blocks_24_norm_key_norm_power_exponent = cache['single_blocks_24_norm_key_norm_power_exponent']
    single_blocks_24_norm_key_norm_scale = params['single_blocks_24_norm_key_norm_scale']
    single_blocks_24_norm_query_norm_add_right = cache['single_blocks_24_norm_query_norm_add_right']
    single_blocks_24_norm_query_norm_divide_numerator = cache['single_blocks_24_norm_query_norm_divide_numerator']
    single_blocks_24_norm_query_norm_mean_axis = cache['single_blocks_24_norm_query_norm_mean_axis']
    single_blocks_24_norm_query_norm_mean_keepdim = cache['single_blocks_24_norm_query_norm_mean_keepdim']
    single_blocks_24_norm_query_norm_power_exponent = cache['single_blocks_24_norm_query_norm_power_exponent']
    single_blocks_24_norm_query_norm_scale = params['single_blocks_24_norm_query_norm_scale']
    single_blocks_24_pre_norm_add_right = cache['single_blocks_24_pre_norm_add_right']
    single_blocks_24_pre_norm_mean_axis = cache['single_blocks_24_pre_norm_mean_axis']
    single_blocks_24_pre_norm_mean_keepdim = cache['single_blocks_24_pre_norm_mean_keepdim']
    single_blocks_24_pre_norm_variance_axis = cache['single_blocks_24_pre_norm_variance_axis']
    single_blocks_24_pre_norm_variance_correction = cache['single_blocks_24_pre_norm_variance_correction']
    single_blocks_24_pre_norm_variance_keepdim = cache['single_blocks_24_pre_norm_variance_keepdim']
    single_blocks_24_tensoritem_0_index = cache['single_blocks_24_tensoritem_0_index']
    single_blocks_24_tensoritem_1_index = cache['single_blocks_24_tensoritem_1_index']
    single_blocks_24_tensoritem_2_index = cache['single_blocks_24_tensoritem_2_index']
    single_blocks_24_tensoritem_3_index = cache['single_blocks_24_tensoritem_3_index']
    single_blocks_24_tensoritem_4_index = cache['single_blocks_24_tensoritem_4_index']
    single_blocks_24_tensoritem_5_index = cache['single_blocks_24_tensoritem_5_index']
    single_blocks_24_tensoritem_6_index = cache['single_blocks_24_tensoritem_6_index']
    single_blocks_24_tensoritem_7_index = cache['single_blocks_24_tensoritem_7_index']
    single_blocks_24_totuple_output = cache['single_blocks_24_totuple_output']
    single_blocks_24_transpose_axes = cache['single_blocks_24_transpose_axes']
    single_blocks_25_add_0_left = cache['single_blocks_25_add_0_left']
    single_blocks_25_concat_axis = cache['single_blocks_25_concat_axis']
    single_blocks_25_gelu_approximate = cache['single_blocks_25_gelu_approximate']
    single_blocks_25_linear1_bias = params['single_blocks_25_linear1_bias']
    single_blocks_25_linear1_transpose_axes = cache['single_blocks_25_linear1_transpose_axes']
    single_blocks_25_linear1_weight = params['single_blocks_25_linear1_weight']
    single_blocks_25_linear2_bias = params['single_blocks_25_linear2_bias']
    single_blocks_25_linear2_transpose_axes = cache['single_blocks_25_linear2_transpose_axes']
    single_blocks_25_linear2_weight = params['single_blocks_25_linear2_weight']
    single_blocks_25_model_model_shape_0_output = cache['single_blocks_25_model_model_shape_0_output']
    single_blocks_25_model_model_shape_1_output = cache['single_blocks_25_model_model_shape_1_output']
    single_blocks_25_model_model_tensoritem_0_index = cache['single_blocks_25_model_model_tensoritem_0_index']
    single_blocks_25_model_model_tensoritem_1_index = cache['single_blocks_25_model_model_tensoritem_1_index']
    single_blocks_25_model_model_tensoritem_2_index = cache['single_blocks_25_model_model_tensoritem_2_index']
    single_blocks_25_model_model_tensoritem_3_index = cache['single_blocks_25_model_model_tensoritem_3_index']
    single_blocks_25_model_model_tensoritem_4_index = cache['single_blocks_25_model_model_tensoritem_4_index']
    single_blocks_25_model_model_tensoritem_5_index = cache['single_blocks_25_model_model_tensoritem_5_index']
    single_blocks_25_model_model_tensoritem_6_index = cache['single_blocks_25_model_model_tensoritem_6_index']
    single_blocks_25_model_model_tensoritem_7_index = cache['single_blocks_25_model_model_tensoritem_7_index']
    single_blocks_25_model_model_totuple_0_output = cache['single_blocks_25_model_model_totuple_0_output']
    single_blocks_25_model_model_totuple_1_output = cache['single_blocks_25_model_model_totuple_1_output']
    single_blocks_25_model_scaleddotproduct_attn_mask = cache['single_blocks_25_model_scaleddotproduct_attn_mask']
    single_blocks_25_model_totuple_output = cache['single_blocks_25_model_totuple_output']
    single_blocks_25_model_transpose_axes = cache['single_blocks_25_model_transpose_axes']
    single_blocks_25_modulation_lin_bias = params['single_blocks_25_modulation_lin_bias']
    single_blocks_25_modulation_lin_transpose_axes = cache['single_blocks_25_modulation_lin_transpose_axes']
    single_blocks_25_modulation_lin_weight = params['single_blocks_25_modulation_lin_weight']
    single_blocks_25_modulation_silu_add_left = cache['single_blocks_25_modulation_silu_add_left']
    single_blocks_25_modulation_split_axis = cache['single_blocks_25_modulation_split_axis']
    single_blocks_25_modulation_split_split_size = cache['single_blocks_25_modulation_split_split_size']
    single_blocks_25_modulation_tensoritem_index = cache['single_blocks_25_modulation_tensoritem_index']
    single_blocks_25_norm_key_norm_add_right = cache['single_blocks_25_norm_key_norm_add_right']
    single_blocks_25_norm_key_norm_divide_numerator = cache['single_blocks_25_norm_key_norm_divide_numerator']
    single_blocks_25_norm_key_norm_mean_axis = cache['single_blocks_25_norm_key_norm_mean_axis']
    single_blocks_25_norm_key_norm_mean_keepdim = cache['single_blocks_25_norm_key_norm_mean_keepdim']
    single_blocks_25_norm_key_norm_power_exponent = cache['single_blocks_25_norm_key_norm_power_exponent']
    single_blocks_25_norm_key_norm_scale = params['single_blocks_25_norm_key_norm_scale']
    single_blocks_25_norm_query_norm_add_right = cache['single_blocks_25_norm_query_norm_add_right']
    single_blocks_25_norm_query_norm_divide_numerator = cache['single_blocks_25_norm_query_norm_divide_numerator']
    single_blocks_25_norm_query_norm_mean_axis = cache['single_blocks_25_norm_query_norm_mean_axis']
    single_blocks_25_norm_query_norm_mean_keepdim = cache['single_blocks_25_norm_query_norm_mean_keepdim']
    single_blocks_25_norm_query_norm_power_exponent = cache['single_blocks_25_norm_query_norm_power_exponent']
    single_blocks_25_norm_query_norm_scale = params['single_blocks_25_norm_query_norm_scale']
    single_blocks_25_pre_norm_add_right = cache['single_blocks_25_pre_norm_add_right']
    single_blocks_25_pre_norm_mean_axis = cache['single_blocks_25_pre_norm_mean_axis']
    single_blocks_25_pre_norm_mean_keepdim = cache['single_blocks_25_pre_norm_mean_keepdim']
    single_blocks_25_pre_norm_variance_axis = cache['single_blocks_25_pre_norm_variance_axis']
    single_blocks_25_pre_norm_variance_correction = cache['single_blocks_25_pre_norm_variance_correction']
    single_blocks_25_pre_norm_variance_keepdim = cache['single_blocks_25_pre_norm_variance_keepdim']
    single_blocks_25_tensoritem_0_index = cache['single_blocks_25_tensoritem_0_index']
    single_blocks_25_tensoritem_1_index = cache['single_blocks_25_tensoritem_1_index']
    single_blocks_25_tensoritem_2_index = cache['single_blocks_25_tensoritem_2_index']
    single_blocks_25_tensoritem_3_index = cache['single_blocks_25_tensoritem_3_index']
    single_blocks_25_tensoritem_4_index = cache['single_blocks_25_tensoritem_4_index']
    single_blocks_25_tensoritem_5_index = cache['single_blocks_25_tensoritem_5_index']
    single_blocks_25_tensoritem_6_index = cache['single_blocks_25_tensoritem_6_index']
    single_blocks_25_tensoritem_7_index = cache['single_blocks_25_tensoritem_7_index']
    single_blocks_25_totuple_output = cache['single_blocks_25_totuple_output']
    single_blocks_25_transpose_axes = cache['single_blocks_25_transpose_axes']
    single_blocks_26_add_0_left = cache['single_blocks_26_add_0_left']
    single_blocks_26_concat_axis = cache['single_blocks_26_concat_axis']
    single_blocks_26_gelu_approximate = cache['single_blocks_26_gelu_approximate']
    single_blocks_26_linear1_bias = params['single_blocks_26_linear1_bias']
    single_blocks_26_linear1_transpose_axes = cache['single_blocks_26_linear1_transpose_axes']
    single_blocks_26_linear1_weight = params['single_blocks_26_linear1_weight']
    single_blocks_26_linear2_bias = params['single_blocks_26_linear2_bias']
    single_blocks_26_linear2_transpose_axes = cache['single_blocks_26_linear2_transpose_axes']
    single_blocks_26_linear2_weight = params['single_blocks_26_linear2_weight']
    single_blocks_26_model_model_shape_0_output = cache['single_blocks_26_model_model_shape_0_output']
    single_blocks_26_model_model_shape_1_output = cache['single_blocks_26_model_model_shape_1_output']
    single_blocks_26_model_model_tensoritem_0_index = cache['single_blocks_26_model_model_tensoritem_0_index']
    single_blocks_26_model_model_tensoritem_1_index = cache['single_blocks_26_model_model_tensoritem_1_index']
    single_blocks_26_model_model_tensoritem_2_index = cache['single_blocks_26_model_model_tensoritem_2_index']
    single_blocks_26_model_model_tensoritem_3_index = cache['single_blocks_26_model_model_tensoritem_3_index']
    single_blocks_26_model_model_tensoritem_4_index = cache['single_blocks_26_model_model_tensoritem_4_index']
    single_blocks_26_model_model_tensoritem_5_index = cache['single_blocks_26_model_model_tensoritem_5_index']
    single_blocks_26_model_model_tensoritem_6_index = cache['single_blocks_26_model_model_tensoritem_6_index']
    single_blocks_26_model_model_tensoritem_7_index = cache['single_blocks_26_model_model_tensoritem_7_index']
    single_blocks_26_model_model_totuple_0_output = cache['single_blocks_26_model_model_totuple_0_output']
    single_blocks_26_model_model_totuple_1_output = cache['single_blocks_26_model_model_totuple_1_output']
    single_blocks_26_model_scaleddotproduct_attn_mask = cache['single_blocks_26_model_scaleddotproduct_attn_mask']
    single_blocks_26_model_totuple_output = cache['single_blocks_26_model_totuple_output']
    single_blocks_26_model_transpose_axes = cache['single_blocks_26_model_transpose_axes']
    single_blocks_26_modulation_lin_bias = params['single_blocks_26_modulation_lin_bias']
    single_blocks_26_modulation_lin_transpose_axes = cache['single_blocks_26_modulation_lin_transpose_axes']
    single_blocks_26_modulation_lin_weight = params['single_blocks_26_modulation_lin_weight']
    single_blocks_26_modulation_silu_add_left = cache['single_blocks_26_modulation_silu_add_left']
    single_blocks_26_modulation_split_axis = cache['single_blocks_26_modulation_split_axis']
    single_blocks_26_modulation_split_split_size = cache['single_blocks_26_modulation_split_split_size']
    single_blocks_26_modulation_tensoritem_index = cache['single_blocks_26_modulation_tensoritem_index']
    single_blocks_26_norm_key_norm_add_right = cache['single_blocks_26_norm_key_norm_add_right']
    single_blocks_26_norm_key_norm_divide_numerator = cache['single_blocks_26_norm_key_norm_divide_numerator']
    single_blocks_26_norm_key_norm_mean_axis = cache['single_blocks_26_norm_key_norm_mean_axis']
    single_blocks_26_norm_key_norm_mean_keepdim = cache['single_blocks_26_norm_key_norm_mean_keepdim']
    single_blocks_26_norm_key_norm_power_exponent = cache['single_blocks_26_norm_key_norm_power_exponent']
    single_blocks_26_norm_key_norm_scale = params['single_blocks_26_norm_key_norm_scale']
    single_blocks_26_norm_query_norm_add_right = cache['single_blocks_26_norm_query_norm_add_right']
    single_blocks_26_norm_query_norm_divide_numerator = cache['single_blocks_26_norm_query_norm_divide_numerator']
    single_blocks_26_norm_query_norm_mean_axis = cache['single_blocks_26_norm_query_norm_mean_axis']
    single_blocks_26_norm_query_norm_mean_keepdim = cache['single_blocks_26_norm_query_norm_mean_keepdim']
    single_blocks_26_norm_query_norm_power_exponent = cache['single_blocks_26_norm_query_norm_power_exponent']
    single_blocks_26_norm_query_norm_scale = params['single_blocks_26_norm_query_norm_scale']
    single_blocks_26_pre_norm_add_right = cache['single_blocks_26_pre_norm_add_right']
    single_blocks_26_pre_norm_mean_axis = cache['single_blocks_26_pre_norm_mean_axis']
    single_blocks_26_pre_norm_mean_keepdim = cache['single_blocks_26_pre_norm_mean_keepdim']
    single_blocks_26_pre_norm_variance_axis = cache['single_blocks_26_pre_norm_variance_axis']
    single_blocks_26_pre_norm_variance_correction = cache['single_blocks_26_pre_norm_variance_correction']
    single_blocks_26_pre_norm_variance_keepdim = cache['single_blocks_26_pre_norm_variance_keepdim']
    single_blocks_26_tensoritem_0_index = cache['single_blocks_26_tensoritem_0_index']
    single_blocks_26_tensoritem_1_index = cache['single_blocks_26_tensoritem_1_index']
    single_blocks_26_tensoritem_2_index = cache['single_blocks_26_tensoritem_2_index']
    single_blocks_26_tensoritem_3_index = cache['single_blocks_26_tensoritem_3_index']
    single_blocks_26_tensoritem_4_index = cache['single_blocks_26_tensoritem_4_index']
    single_blocks_26_tensoritem_5_index = cache['single_blocks_26_tensoritem_5_index']
    single_blocks_26_tensoritem_6_index = cache['single_blocks_26_tensoritem_6_index']
    single_blocks_26_tensoritem_7_index = cache['single_blocks_26_tensoritem_7_index']
    single_blocks_26_totuple_output = cache['single_blocks_26_totuple_output']
    single_blocks_26_transpose_axes = cache['single_blocks_26_transpose_axes']
    single_blocks_27_add_0_left = cache['single_blocks_27_add_0_left']
    single_blocks_27_concat_axis = cache['single_blocks_27_concat_axis']
    single_blocks_27_gelu_approximate = cache['single_blocks_27_gelu_approximate']
    single_blocks_27_linear1_bias = params['single_blocks_27_linear1_bias']
    single_blocks_27_linear1_transpose_axes = cache['single_blocks_27_linear1_transpose_axes']
    single_blocks_27_linear1_weight = params['single_blocks_27_linear1_weight']
    single_blocks_27_linear2_bias = params['single_blocks_27_linear2_bias']
    single_blocks_27_linear2_transpose_axes = cache['single_blocks_27_linear2_transpose_axes']
    single_blocks_27_linear2_weight = params['single_blocks_27_linear2_weight']
    single_blocks_27_model_model_shape_0_output = cache['single_blocks_27_model_model_shape_0_output']
    single_blocks_27_model_model_shape_1_output = cache['single_blocks_27_model_model_shape_1_output']
    single_blocks_27_model_model_tensoritem_0_index = cache['single_blocks_27_model_model_tensoritem_0_index']
    single_blocks_27_model_model_tensoritem_1_index = cache['single_blocks_27_model_model_tensoritem_1_index']
    single_blocks_27_model_model_tensoritem_2_index = cache['single_blocks_27_model_model_tensoritem_2_index']
    single_blocks_27_model_model_tensoritem_3_index = cache['single_blocks_27_model_model_tensoritem_3_index']
    single_blocks_27_model_model_tensoritem_4_index = cache['single_blocks_27_model_model_tensoritem_4_index']
    single_blocks_27_model_model_tensoritem_5_index = cache['single_blocks_27_model_model_tensoritem_5_index']
    single_blocks_27_model_model_tensoritem_6_index = cache['single_blocks_27_model_model_tensoritem_6_index']
    single_blocks_27_model_model_tensoritem_7_index = cache['single_blocks_27_model_model_tensoritem_7_index']
    single_blocks_27_model_model_totuple_0_output = cache['single_blocks_27_model_model_totuple_0_output']
    single_blocks_27_model_model_totuple_1_output = cache['single_blocks_27_model_model_totuple_1_output']
    single_blocks_27_model_scaleddotproduct_attn_mask = cache['single_blocks_27_model_scaleddotproduct_attn_mask']
    single_blocks_27_model_totuple_output = cache['single_blocks_27_model_totuple_output']
    single_blocks_27_model_transpose_axes = cache['single_blocks_27_model_transpose_axes']
    single_blocks_27_modulation_lin_bias = params['single_blocks_27_modulation_lin_bias']
    single_blocks_27_modulation_lin_transpose_axes = cache['single_blocks_27_modulation_lin_transpose_axes']
    single_blocks_27_modulation_lin_weight = params['single_blocks_27_modulation_lin_weight']
    single_blocks_27_modulation_silu_add_left = cache['single_blocks_27_modulation_silu_add_left']
    single_blocks_27_modulation_split_axis = cache['single_blocks_27_modulation_split_axis']
    single_blocks_27_modulation_split_split_size = cache['single_blocks_27_modulation_split_split_size']
    single_blocks_27_modulation_tensoritem_index = cache['single_blocks_27_modulation_tensoritem_index']
    single_blocks_27_norm_key_norm_add_right = cache['single_blocks_27_norm_key_norm_add_right']
    single_blocks_27_norm_key_norm_divide_numerator = cache['single_blocks_27_norm_key_norm_divide_numerator']
    single_blocks_27_norm_key_norm_mean_axis = cache['single_blocks_27_norm_key_norm_mean_axis']
    single_blocks_27_norm_key_norm_mean_keepdim = cache['single_blocks_27_norm_key_norm_mean_keepdim']
    single_blocks_27_norm_key_norm_power_exponent = cache['single_blocks_27_norm_key_norm_power_exponent']
    single_blocks_27_norm_key_norm_scale = params['single_blocks_27_norm_key_norm_scale']
    single_blocks_27_norm_query_norm_add_right = cache['single_blocks_27_norm_query_norm_add_right']
    single_blocks_27_norm_query_norm_divide_numerator = cache['single_blocks_27_norm_query_norm_divide_numerator']
    single_blocks_27_norm_query_norm_mean_axis = cache['single_blocks_27_norm_query_norm_mean_axis']
    single_blocks_27_norm_query_norm_mean_keepdim = cache['single_blocks_27_norm_query_norm_mean_keepdim']
    single_blocks_27_norm_query_norm_power_exponent = cache['single_blocks_27_norm_query_norm_power_exponent']
    single_blocks_27_norm_query_norm_scale = params['single_blocks_27_norm_query_norm_scale']
    single_blocks_27_pre_norm_add_right = cache['single_blocks_27_pre_norm_add_right']
    single_blocks_27_pre_norm_mean_axis = cache['single_blocks_27_pre_norm_mean_axis']
    single_blocks_27_pre_norm_mean_keepdim = cache['single_blocks_27_pre_norm_mean_keepdim']
    single_blocks_27_pre_norm_variance_axis = cache['single_blocks_27_pre_norm_variance_axis']
    single_blocks_27_pre_norm_variance_correction = cache['single_blocks_27_pre_norm_variance_correction']
    single_blocks_27_pre_norm_variance_keepdim = cache['single_blocks_27_pre_norm_variance_keepdim']
    single_blocks_27_tensoritem_0_index = cache['single_blocks_27_tensoritem_0_index']
    single_blocks_27_tensoritem_1_index = cache['single_blocks_27_tensoritem_1_index']
    single_blocks_27_tensoritem_2_index = cache['single_blocks_27_tensoritem_2_index']
    single_blocks_27_tensoritem_3_index = cache['single_blocks_27_tensoritem_3_index']
    single_blocks_27_tensoritem_4_index = cache['single_blocks_27_tensoritem_4_index']
    single_blocks_27_tensoritem_5_index = cache['single_blocks_27_tensoritem_5_index']
    single_blocks_27_tensoritem_6_index = cache['single_blocks_27_tensoritem_6_index']
    single_blocks_27_tensoritem_7_index = cache['single_blocks_27_tensoritem_7_index']
    single_blocks_27_totuple_output = cache['single_blocks_27_totuple_output']
    single_blocks_27_transpose_axes = cache['single_blocks_27_transpose_axes']
    single_blocks_28_add_0_left = cache['single_blocks_28_add_0_left']
    single_blocks_28_concat_axis = cache['single_blocks_28_concat_axis']
    single_blocks_28_gelu_approximate = cache['single_blocks_28_gelu_approximate']
    single_blocks_28_linear1_bias = params['single_blocks_28_linear1_bias']
    single_blocks_28_linear1_transpose_axes = cache['single_blocks_28_linear1_transpose_axes']
    single_blocks_28_linear1_weight = params['single_blocks_28_linear1_weight']
    single_blocks_28_linear2_bias = params['single_blocks_28_linear2_bias']
    single_blocks_28_linear2_transpose_axes = cache['single_blocks_28_linear2_transpose_axes']
    single_blocks_28_linear2_weight = params['single_blocks_28_linear2_weight']
    single_blocks_28_model_model_shape_0_output = cache['single_blocks_28_model_model_shape_0_output']
    single_blocks_28_model_model_shape_1_output = cache['single_blocks_28_model_model_shape_1_output']
    single_blocks_28_model_model_tensoritem_0_index = cache['single_blocks_28_model_model_tensoritem_0_index']
    single_blocks_28_model_model_tensoritem_1_index = cache['single_blocks_28_model_model_tensoritem_1_index']
    single_blocks_28_model_model_tensoritem_2_index = cache['single_blocks_28_model_model_tensoritem_2_index']
    single_blocks_28_model_model_tensoritem_3_index = cache['single_blocks_28_model_model_tensoritem_3_index']
    single_blocks_28_model_model_tensoritem_4_index = cache['single_blocks_28_model_model_tensoritem_4_index']
    single_blocks_28_model_model_tensoritem_5_index = cache['single_blocks_28_model_model_tensoritem_5_index']
    single_blocks_28_model_model_tensoritem_6_index = cache['single_blocks_28_model_model_tensoritem_6_index']
    single_blocks_28_model_model_tensoritem_7_index = cache['single_blocks_28_model_model_tensoritem_7_index']
    single_blocks_28_model_model_totuple_0_output = cache['single_blocks_28_model_model_totuple_0_output']
    single_blocks_28_model_model_totuple_1_output = cache['single_blocks_28_model_model_totuple_1_output']
    single_blocks_28_model_scaleddotproduct_attn_mask = cache['single_blocks_28_model_scaleddotproduct_attn_mask']
    single_blocks_28_model_totuple_output = cache['single_blocks_28_model_totuple_output']
    single_blocks_28_model_transpose_axes = cache['single_blocks_28_model_transpose_axes']
    single_blocks_28_modulation_lin_bias = params['single_blocks_28_modulation_lin_bias']
    single_blocks_28_modulation_lin_transpose_axes = cache['single_blocks_28_modulation_lin_transpose_axes']
    single_blocks_28_modulation_lin_weight = params['single_blocks_28_modulation_lin_weight']
    single_blocks_28_modulation_silu_add_left = cache['single_blocks_28_modulation_silu_add_left']
    single_blocks_28_modulation_split_axis = cache['single_blocks_28_modulation_split_axis']
    single_blocks_28_modulation_split_split_size = cache['single_blocks_28_modulation_split_split_size']
    single_blocks_28_modulation_tensoritem_index = cache['single_blocks_28_modulation_tensoritem_index']
    single_blocks_28_norm_key_norm_add_right = cache['single_blocks_28_norm_key_norm_add_right']
    single_blocks_28_norm_key_norm_divide_numerator = cache['single_blocks_28_norm_key_norm_divide_numerator']
    single_blocks_28_norm_key_norm_mean_axis = cache['single_blocks_28_norm_key_norm_mean_axis']
    single_blocks_28_norm_key_norm_mean_keepdim = cache['single_blocks_28_norm_key_norm_mean_keepdim']
    single_blocks_28_norm_key_norm_power_exponent = cache['single_blocks_28_norm_key_norm_power_exponent']
    single_blocks_28_norm_key_norm_scale = params['single_blocks_28_norm_key_norm_scale']
    single_blocks_28_norm_query_norm_add_right = cache['single_blocks_28_norm_query_norm_add_right']
    single_blocks_28_norm_query_norm_divide_numerator = cache['single_blocks_28_norm_query_norm_divide_numerator']
    single_blocks_28_norm_query_norm_mean_axis = cache['single_blocks_28_norm_query_norm_mean_axis']
    single_blocks_28_norm_query_norm_mean_keepdim = cache['single_blocks_28_norm_query_norm_mean_keepdim']
    single_blocks_28_norm_query_norm_power_exponent = cache['single_blocks_28_norm_query_norm_power_exponent']
    single_blocks_28_norm_query_norm_scale = params['single_blocks_28_norm_query_norm_scale']
    single_blocks_28_pre_norm_add_right = cache['single_blocks_28_pre_norm_add_right']
    single_blocks_28_pre_norm_mean_axis = cache['single_blocks_28_pre_norm_mean_axis']
    single_blocks_28_pre_norm_mean_keepdim = cache['single_blocks_28_pre_norm_mean_keepdim']
    single_blocks_28_pre_norm_variance_axis = cache['single_blocks_28_pre_norm_variance_axis']
    single_blocks_28_pre_norm_variance_correction = cache['single_blocks_28_pre_norm_variance_correction']
    single_blocks_28_pre_norm_variance_keepdim = cache['single_blocks_28_pre_norm_variance_keepdim']
    single_blocks_28_tensoritem_0_index = cache['single_blocks_28_tensoritem_0_index']
    single_blocks_28_tensoritem_1_index = cache['single_blocks_28_tensoritem_1_index']
    single_blocks_28_tensoritem_2_index = cache['single_blocks_28_tensoritem_2_index']
    single_blocks_28_tensoritem_3_index = cache['single_blocks_28_tensoritem_3_index']
    single_blocks_28_tensoritem_4_index = cache['single_blocks_28_tensoritem_4_index']
    single_blocks_28_tensoritem_5_index = cache['single_blocks_28_tensoritem_5_index']
    single_blocks_28_tensoritem_6_index = cache['single_blocks_28_tensoritem_6_index']
    single_blocks_28_tensoritem_7_index = cache['single_blocks_28_tensoritem_7_index']
    single_blocks_28_totuple_output = cache['single_blocks_28_totuple_output']
    single_blocks_28_transpose_axes = cache['single_blocks_28_transpose_axes']
    single_blocks_29_add_0_left = cache['single_blocks_29_add_0_left']
    single_blocks_29_concat_axis = cache['single_blocks_29_concat_axis']
    single_blocks_29_gelu_approximate = cache['single_blocks_29_gelu_approximate']
    single_blocks_29_linear1_bias = params['single_blocks_29_linear1_bias']
    single_blocks_29_linear1_transpose_axes = cache['single_blocks_29_linear1_transpose_axes']
    single_blocks_29_linear1_weight = params['single_blocks_29_linear1_weight']
    single_blocks_29_linear2_bias = params['single_blocks_29_linear2_bias']
    single_blocks_29_linear2_transpose_axes = cache['single_blocks_29_linear2_transpose_axes']
    single_blocks_29_linear2_weight = params['single_blocks_29_linear2_weight']
    single_blocks_29_model_model_shape_0_output = cache['single_blocks_29_model_model_shape_0_output']
    single_blocks_29_model_model_shape_1_output = cache['single_blocks_29_model_model_shape_1_output']
    single_blocks_29_model_model_tensoritem_0_index = cache['single_blocks_29_model_model_tensoritem_0_index']
    single_blocks_29_model_model_tensoritem_1_index = cache['single_blocks_29_model_model_tensoritem_1_index']
    single_blocks_29_model_model_tensoritem_2_index = cache['single_blocks_29_model_model_tensoritem_2_index']
    single_blocks_29_model_model_tensoritem_3_index = cache['single_blocks_29_model_model_tensoritem_3_index']
    single_blocks_29_model_model_tensoritem_4_index = cache['single_blocks_29_model_model_tensoritem_4_index']
    single_blocks_29_model_model_tensoritem_5_index = cache['single_blocks_29_model_model_tensoritem_5_index']
    single_blocks_29_model_model_tensoritem_6_index = cache['single_blocks_29_model_model_tensoritem_6_index']
    single_blocks_29_model_model_tensoritem_7_index = cache['single_blocks_29_model_model_tensoritem_7_index']
    single_blocks_29_model_model_totuple_0_output = cache['single_blocks_29_model_model_totuple_0_output']
    single_blocks_29_model_model_totuple_1_output = cache['single_blocks_29_model_model_totuple_1_output']
    single_blocks_29_model_scaleddotproduct_attn_mask = cache['single_blocks_29_model_scaleddotproduct_attn_mask']
    single_blocks_29_model_totuple_output = cache['single_blocks_29_model_totuple_output']
    single_blocks_29_model_transpose_axes = cache['single_blocks_29_model_transpose_axes']
    single_blocks_29_modulation_lin_bias = params['single_blocks_29_modulation_lin_bias']
    single_blocks_29_modulation_lin_transpose_axes = cache['single_blocks_29_modulation_lin_transpose_axes']
    single_blocks_29_modulation_lin_weight = params['single_blocks_29_modulation_lin_weight']
    single_blocks_29_modulation_silu_add_left = cache['single_blocks_29_modulation_silu_add_left']
    single_blocks_29_modulation_split_axis = cache['single_blocks_29_modulation_split_axis']
    single_blocks_29_modulation_split_split_size = cache['single_blocks_29_modulation_split_split_size']
    single_blocks_29_modulation_tensoritem_index = cache['single_blocks_29_modulation_tensoritem_index']
    single_blocks_29_norm_key_norm_add_right = cache['single_blocks_29_norm_key_norm_add_right']
    single_blocks_29_norm_key_norm_divide_numerator = cache['single_blocks_29_norm_key_norm_divide_numerator']
    single_blocks_29_norm_key_norm_mean_axis = cache['single_blocks_29_norm_key_norm_mean_axis']
    single_blocks_29_norm_key_norm_mean_keepdim = cache['single_blocks_29_norm_key_norm_mean_keepdim']
    single_blocks_29_norm_key_norm_power_exponent = cache['single_blocks_29_norm_key_norm_power_exponent']
    single_blocks_29_norm_key_norm_scale = params['single_blocks_29_norm_key_norm_scale']
    single_blocks_29_norm_query_norm_add_right = cache['single_blocks_29_norm_query_norm_add_right']
    single_blocks_29_norm_query_norm_divide_numerator = cache['single_blocks_29_norm_query_norm_divide_numerator']
    single_blocks_29_norm_query_norm_mean_axis = cache['single_blocks_29_norm_query_norm_mean_axis']
    single_blocks_29_norm_query_norm_mean_keepdim = cache['single_blocks_29_norm_query_norm_mean_keepdim']
    single_blocks_29_norm_query_norm_power_exponent = cache['single_blocks_29_norm_query_norm_power_exponent']
    single_blocks_29_norm_query_norm_scale = params['single_blocks_29_norm_query_norm_scale']
    single_blocks_29_pre_norm_add_right = cache['single_blocks_29_pre_norm_add_right']
    single_blocks_29_pre_norm_mean_axis = cache['single_blocks_29_pre_norm_mean_axis']
    single_blocks_29_pre_norm_mean_keepdim = cache['single_blocks_29_pre_norm_mean_keepdim']
    single_blocks_29_pre_norm_variance_axis = cache['single_blocks_29_pre_norm_variance_axis']
    single_blocks_29_pre_norm_variance_correction = cache['single_blocks_29_pre_norm_variance_correction']
    single_blocks_29_pre_norm_variance_keepdim = cache['single_blocks_29_pre_norm_variance_keepdim']
    single_blocks_29_tensoritem_0_index = cache['single_blocks_29_tensoritem_0_index']
    single_blocks_29_tensoritem_1_index = cache['single_blocks_29_tensoritem_1_index']
    single_blocks_29_tensoritem_2_index = cache['single_blocks_29_tensoritem_2_index']
    single_blocks_29_tensoritem_3_index = cache['single_blocks_29_tensoritem_3_index']
    single_blocks_29_tensoritem_4_index = cache['single_blocks_29_tensoritem_4_index']
    single_blocks_29_tensoritem_5_index = cache['single_blocks_29_tensoritem_5_index']
    single_blocks_29_tensoritem_6_index = cache['single_blocks_29_tensoritem_6_index']
    single_blocks_29_tensoritem_7_index = cache['single_blocks_29_tensoritem_7_index']
    single_blocks_29_totuple_output = cache['single_blocks_29_totuple_output']
    single_blocks_29_transpose_axes = cache['single_blocks_29_transpose_axes']
    single_blocks_2_add_0_left = cache['single_blocks_2_add_0_left']
    single_blocks_2_concat_axis = cache['single_blocks_2_concat_axis']
    single_blocks_2_gelu_approximate = cache['single_blocks_2_gelu_approximate']
    single_blocks_2_linear1_bias = params['single_blocks_2_linear1_bias']
    single_blocks_2_linear1_transpose_axes = cache['single_blocks_2_linear1_transpose_axes']
    single_blocks_2_linear1_weight = params['single_blocks_2_linear1_weight']
    single_blocks_2_linear2_bias = params['single_blocks_2_linear2_bias']
    single_blocks_2_linear2_transpose_axes = cache['single_blocks_2_linear2_transpose_axes']
    single_blocks_2_linear2_weight = params['single_blocks_2_linear2_weight']
    single_blocks_2_model_model_shape_0_output = cache['single_blocks_2_model_model_shape_0_output']
    single_blocks_2_model_model_shape_1_output = cache['single_blocks_2_model_model_shape_1_output']
    single_blocks_2_model_model_tensoritem_0_index = cache['single_blocks_2_model_model_tensoritem_0_index']
    single_blocks_2_model_model_tensoritem_1_index = cache['single_blocks_2_model_model_tensoritem_1_index']
    single_blocks_2_model_model_tensoritem_2_index = cache['single_blocks_2_model_model_tensoritem_2_index']
    single_blocks_2_model_model_tensoritem_3_index = cache['single_blocks_2_model_model_tensoritem_3_index']
    single_blocks_2_model_model_tensoritem_4_index = cache['single_blocks_2_model_model_tensoritem_4_index']
    single_blocks_2_model_model_tensoritem_5_index = cache['single_blocks_2_model_model_tensoritem_5_index']
    single_blocks_2_model_model_tensoritem_6_index = cache['single_blocks_2_model_model_tensoritem_6_index']
    single_blocks_2_model_model_tensoritem_7_index = cache['single_blocks_2_model_model_tensoritem_7_index']
    single_blocks_2_model_model_totuple_0_output = cache['single_blocks_2_model_model_totuple_0_output']
    single_blocks_2_model_model_totuple_1_output = cache['single_blocks_2_model_model_totuple_1_output']
    single_blocks_2_model_scaleddotproduct_attn_mask = cache['single_blocks_2_model_scaleddotproduct_attn_mask']
    single_blocks_2_model_totuple_output = cache['single_blocks_2_model_totuple_output']
    single_blocks_2_model_transpose_axes = cache['single_blocks_2_model_transpose_axes']
    single_blocks_2_modulation_lin_bias = params['single_blocks_2_modulation_lin_bias']
    single_blocks_2_modulation_lin_transpose_axes = cache['single_blocks_2_modulation_lin_transpose_axes']
    single_blocks_2_modulation_lin_weight = params['single_blocks_2_modulation_lin_weight']
    single_blocks_2_modulation_silu_add_left = cache['single_blocks_2_modulation_silu_add_left']
    single_blocks_2_modulation_split_axis = cache['single_blocks_2_modulation_split_axis']
    single_blocks_2_modulation_split_split_size = cache['single_blocks_2_modulation_split_split_size']
    single_blocks_2_modulation_tensoritem_index = cache['single_blocks_2_modulation_tensoritem_index']
    single_blocks_2_norm_key_norm_add_right = cache['single_blocks_2_norm_key_norm_add_right']
    single_blocks_2_norm_key_norm_divide_numerator = cache['single_blocks_2_norm_key_norm_divide_numerator']
    single_blocks_2_norm_key_norm_mean_axis = cache['single_blocks_2_norm_key_norm_mean_axis']
    single_blocks_2_norm_key_norm_mean_keepdim = cache['single_blocks_2_norm_key_norm_mean_keepdim']
    single_blocks_2_norm_key_norm_power_exponent = cache['single_blocks_2_norm_key_norm_power_exponent']
    single_blocks_2_norm_key_norm_scale = params['single_blocks_2_norm_key_norm_scale']
    single_blocks_2_norm_query_norm_add_right = cache['single_blocks_2_norm_query_norm_add_right']
    single_blocks_2_norm_query_norm_divide_numerator = cache['single_blocks_2_norm_query_norm_divide_numerator']
    single_blocks_2_norm_query_norm_mean_axis = cache['single_blocks_2_norm_query_norm_mean_axis']
    single_blocks_2_norm_query_norm_mean_keepdim = cache['single_blocks_2_norm_query_norm_mean_keepdim']
    single_blocks_2_norm_query_norm_power_exponent = cache['single_blocks_2_norm_query_norm_power_exponent']
    single_blocks_2_norm_query_norm_scale = params['single_blocks_2_norm_query_norm_scale']
    single_blocks_2_pre_norm_add_right = cache['single_blocks_2_pre_norm_add_right']
    single_blocks_2_pre_norm_mean_axis = cache['single_blocks_2_pre_norm_mean_axis']
    single_blocks_2_pre_norm_mean_keepdim = cache['single_blocks_2_pre_norm_mean_keepdim']
    single_blocks_2_pre_norm_variance_axis = cache['single_blocks_2_pre_norm_variance_axis']
    single_blocks_2_pre_norm_variance_correction = cache['single_blocks_2_pre_norm_variance_correction']
    single_blocks_2_pre_norm_variance_keepdim = cache['single_blocks_2_pre_norm_variance_keepdim']
    single_blocks_2_tensoritem_0_index = cache['single_blocks_2_tensoritem_0_index']
    single_blocks_2_tensoritem_1_index = cache['single_blocks_2_tensoritem_1_index']
    single_blocks_2_tensoritem_2_index = cache['single_blocks_2_tensoritem_2_index']
    single_blocks_2_tensoritem_3_index = cache['single_blocks_2_tensoritem_3_index']
    single_blocks_2_tensoritem_4_index = cache['single_blocks_2_tensoritem_4_index']
    single_blocks_2_tensoritem_5_index = cache['single_blocks_2_tensoritem_5_index']
    single_blocks_2_tensoritem_6_index = cache['single_blocks_2_tensoritem_6_index']
    single_blocks_2_tensoritem_7_index = cache['single_blocks_2_tensoritem_7_index']
    single_blocks_2_totuple_output = cache['single_blocks_2_totuple_output']
    single_blocks_2_transpose_axes = cache['single_blocks_2_transpose_axes']
    single_blocks_30_add_0_left = cache['single_blocks_30_add_0_left']
    single_blocks_30_concat_axis = cache['single_blocks_30_concat_axis']
    single_blocks_30_gelu_approximate = cache['single_blocks_30_gelu_approximate']
    single_blocks_30_linear1_bias = params['single_blocks_30_linear1_bias']
    single_blocks_30_linear1_transpose_axes = cache['single_blocks_30_linear1_transpose_axes']
    single_blocks_30_linear1_weight = params['single_blocks_30_linear1_weight']
    single_blocks_30_linear2_bias = params['single_blocks_30_linear2_bias']
    single_blocks_30_linear2_transpose_axes = cache['single_blocks_30_linear2_transpose_axes']
    single_blocks_30_linear2_weight = params['single_blocks_30_linear2_weight']
    single_blocks_30_model_model_shape_0_output = cache['single_blocks_30_model_model_shape_0_output']
    single_blocks_30_model_model_shape_1_output = cache['single_blocks_30_model_model_shape_1_output']
    single_blocks_30_model_model_tensoritem_0_index = cache['single_blocks_30_model_model_tensoritem_0_index']
    single_blocks_30_model_model_tensoritem_1_index = cache['single_blocks_30_model_model_tensoritem_1_index']
    single_blocks_30_model_model_tensoritem_2_index = cache['single_blocks_30_model_model_tensoritem_2_index']
    single_blocks_30_model_model_tensoritem_3_index = cache['single_blocks_30_model_model_tensoritem_3_index']
    single_blocks_30_model_model_tensoritem_4_index = cache['single_blocks_30_model_model_tensoritem_4_index']
    single_blocks_30_model_model_tensoritem_5_index = cache['single_blocks_30_model_model_tensoritem_5_index']
    single_blocks_30_model_model_tensoritem_6_index = cache['single_blocks_30_model_model_tensoritem_6_index']
    single_blocks_30_model_model_tensoritem_7_index = cache['single_blocks_30_model_model_tensoritem_7_index']
    single_blocks_30_model_model_totuple_0_output = cache['single_blocks_30_model_model_totuple_0_output']
    single_blocks_30_model_model_totuple_1_output = cache['single_blocks_30_model_model_totuple_1_output']
    single_blocks_30_model_scaleddotproduct_attn_mask = cache['single_blocks_30_model_scaleddotproduct_attn_mask']
    single_blocks_30_model_totuple_output = cache['single_blocks_30_model_totuple_output']
    single_blocks_30_model_transpose_axes = cache['single_blocks_30_model_transpose_axes']
    single_blocks_30_modulation_lin_bias = params['single_blocks_30_modulation_lin_bias']
    single_blocks_30_modulation_lin_transpose_axes = cache['single_blocks_30_modulation_lin_transpose_axes']
    single_blocks_30_modulation_lin_weight = params['single_blocks_30_modulation_lin_weight']
    single_blocks_30_modulation_silu_add_left = cache['single_blocks_30_modulation_silu_add_left']
    single_blocks_30_modulation_split_axis = cache['single_blocks_30_modulation_split_axis']
    single_blocks_30_modulation_split_split_size = cache['single_blocks_30_modulation_split_split_size']
    single_blocks_30_modulation_tensoritem_index = cache['single_blocks_30_modulation_tensoritem_index']
    single_blocks_30_norm_key_norm_add_right = cache['single_blocks_30_norm_key_norm_add_right']
    single_blocks_30_norm_key_norm_divide_numerator = cache['single_blocks_30_norm_key_norm_divide_numerator']
    single_blocks_30_norm_key_norm_mean_axis = cache['single_blocks_30_norm_key_norm_mean_axis']
    single_blocks_30_norm_key_norm_mean_keepdim = cache['single_blocks_30_norm_key_norm_mean_keepdim']
    single_blocks_30_norm_key_norm_power_exponent = cache['single_blocks_30_norm_key_norm_power_exponent']
    single_blocks_30_norm_key_norm_scale = params['single_blocks_30_norm_key_norm_scale']
    single_blocks_30_norm_query_norm_add_right = cache['single_blocks_30_norm_query_norm_add_right']
    single_blocks_30_norm_query_norm_divide_numerator = cache['single_blocks_30_norm_query_norm_divide_numerator']
    single_blocks_30_norm_query_norm_mean_axis = cache['single_blocks_30_norm_query_norm_mean_axis']
    single_blocks_30_norm_query_norm_mean_keepdim = cache['single_blocks_30_norm_query_norm_mean_keepdim']
    single_blocks_30_norm_query_norm_power_exponent = cache['single_blocks_30_norm_query_norm_power_exponent']
    single_blocks_30_norm_query_norm_scale = params['single_blocks_30_norm_query_norm_scale']
    single_blocks_30_pre_norm_add_right = cache['single_blocks_30_pre_norm_add_right']
    single_blocks_30_pre_norm_mean_axis = cache['single_blocks_30_pre_norm_mean_axis']
    single_blocks_30_pre_norm_mean_keepdim = cache['single_blocks_30_pre_norm_mean_keepdim']
    single_blocks_30_pre_norm_variance_axis = cache['single_blocks_30_pre_norm_variance_axis']
    single_blocks_30_pre_norm_variance_correction = cache['single_blocks_30_pre_norm_variance_correction']
    single_blocks_30_pre_norm_variance_keepdim = cache['single_blocks_30_pre_norm_variance_keepdim']
    single_blocks_30_tensoritem_0_index = cache['single_blocks_30_tensoritem_0_index']
    single_blocks_30_tensoritem_1_index = cache['single_blocks_30_tensoritem_1_index']
    single_blocks_30_tensoritem_2_index = cache['single_blocks_30_tensoritem_2_index']
    single_blocks_30_tensoritem_3_index = cache['single_blocks_30_tensoritem_3_index']
    single_blocks_30_tensoritem_4_index = cache['single_blocks_30_tensoritem_4_index']
    single_blocks_30_tensoritem_5_index = cache['single_blocks_30_tensoritem_5_index']
    single_blocks_30_tensoritem_6_index = cache['single_blocks_30_tensoritem_6_index']
    single_blocks_30_tensoritem_7_index = cache['single_blocks_30_tensoritem_7_index']
    single_blocks_30_totuple_output = cache['single_blocks_30_totuple_output']
    single_blocks_30_transpose_axes = cache['single_blocks_30_transpose_axes']
    single_blocks_31_add_0_left = cache['single_blocks_31_add_0_left']
    single_blocks_31_concat_axis = cache['single_blocks_31_concat_axis']
    single_blocks_31_gelu_approximate = cache['single_blocks_31_gelu_approximate']
    single_blocks_31_linear1_bias = params['single_blocks_31_linear1_bias']
    single_blocks_31_linear1_transpose_axes = cache['single_blocks_31_linear1_transpose_axes']
    single_blocks_31_linear1_weight = params['single_blocks_31_linear1_weight']
    single_blocks_31_linear2_bias = params['single_blocks_31_linear2_bias']
    single_blocks_31_linear2_transpose_axes = cache['single_blocks_31_linear2_transpose_axes']
    single_blocks_31_linear2_weight = params['single_blocks_31_linear2_weight']
    single_blocks_31_model_model_shape_0_output = cache['single_blocks_31_model_model_shape_0_output']
    single_blocks_31_model_model_shape_1_output = cache['single_blocks_31_model_model_shape_1_output']
    single_blocks_31_model_model_tensoritem_0_index = cache['single_blocks_31_model_model_tensoritem_0_index']
    single_blocks_31_model_model_tensoritem_1_index = cache['single_blocks_31_model_model_tensoritem_1_index']
    single_blocks_31_model_model_tensoritem_2_index = cache['single_blocks_31_model_model_tensoritem_2_index']
    single_blocks_31_model_model_tensoritem_3_index = cache['single_blocks_31_model_model_tensoritem_3_index']
    single_blocks_31_model_model_tensoritem_4_index = cache['single_blocks_31_model_model_tensoritem_4_index']
    single_blocks_31_model_model_tensoritem_5_index = cache['single_blocks_31_model_model_tensoritem_5_index']
    single_blocks_31_model_model_tensoritem_6_index = cache['single_blocks_31_model_model_tensoritem_6_index']
    single_blocks_31_model_model_tensoritem_7_index = cache['single_blocks_31_model_model_tensoritem_7_index']
    single_blocks_31_model_model_totuple_0_output = cache['single_blocks_31_model_model_totuple_0_output']
    single_blocks_31_model_model_totuple_1_output = cache['single_blocks_31_model_model_totuple_1_output']
    single_blocks_31_model_scaleddotproduct_attn_mask = cache['single_blocks_31_model_scaleddotproduct_attn_mask']
    single_blocks_31_model_totuple_output = cache['single_blocks_31_model_totuple_output']
    single_blocks_31_model_transpose_axes = cache['single_blocks_31_model_transpose_axes']
    single_blocks_31_modulation_lin_bias = params['single_blocks_31_modulation_lin_bias']
    single_blocks_31_modulation_lin_transpose_axes = cache['single_blocks_31_modulation_lin_transpose_axes']
    single_blocks_31_modulation_lin_weight = params['single_blocks_31_modulation_lin_weight']
    single_blocks_31_modulation_silu_add_left = cache['single_blocks_31_modulation_silu_add_left']
    single_blocks_31_modulation_split_axis = cache['single_blocks_31_modulation_split_axis']
    single_blocks_31_modulation_split_split_size = cache['single_blocks_31_modulation_split_split_size']
    single_blocks_31_modulation_tensoritem_index = cache['single_blocks_31_modulation_tensoritem_index']
    single_blocks_31_norm_key_norm_add_right = cache['single_blocks_31_norm_key_norm_add_right']
    single_blocks_31_norm_key_norm_divide_numerator = cache['single_blocks_31_norm_key_norm_divide_numerator']
    single_blocks_31_norm_key_norm_mean_axis = cache['single_blocks_31_norm_key_norm_mean_axis']
    single_blocks_31_norm_key_norm_mean_keepdim = cache['single_blocks_31_norm_key_norm_mean_keepdim']
    single_blocks_31_norm_key_norm_power_exponent = cache['single_blocks_31_norm_key_norm_power_exponent']
    single_blocks_31_norm_key_norm_scale = params['single_blocks_31_norm_key_norm_scale']
    single_blocks_31_norm_query_norm_add_right = cache['single_blocks_31_norm_query_norm_add_right']
    single_blocks_31_norm_query_norm_divide_numerator = cache['single_blocks_31_norm_query_norm_divide_numerator']
    single_blocks_31_norm_query_norm_mean_axis = cache['single_blocks_31_norm_query_norm_mean_axis']
    single_blocks_31_norm_query_norm_mean_keepdim = cache['single_blocks_31_norm_query_norm_mean_keepdim']
    single_blocks_31_norm_query_norm_power_exponent = cache['single_blocks_31_norm_query_norm_power_exponent']
    single_blocks_31_norm_query_norm_scale = params['single_blocks_31_norm_query_norm_scale']
    single_blocks_31_pre_norm_add_right = cache['single_blocks_31_pre_norm_add_right']
    single_blocks_31_pre_norm_mean_axis = cache['single_blocks_31_pre_norm_mean_axis']
    single_blocks_31_pre_norm_mean_keepdim = cache['single_blocks_31_pre_norm_mean_keepdim']
    single_blocks_31_pre_norm_variance_axis = cache['single_blocks_31_pre_norm_variance_axis']
    single_blocks_31_pre_norm_variance_correction = cache['single_blocks_31_pre_norm_variance_correction']
    single_blocks_31_pre_norm_variance_keepdim = cache['single_blocks_31_pre_norm_variance_keepdim']
    single_blocks_31_tensoritem_0_index = cache['single_blocks_31_tensoritem_0_index']
    single_blocks_31_tensoritem_1_index = cache['single_blocks_31_tensoritem_1_index']
    single_blocks_31_tensoritem_2_index = cache['single_blocks_31_tensoritem_2_index']
    single_blocks_31_tensoritem_3_index = cache['single_blocks_31_tensoritem_3_index']
    single_blocks_31_tensoritem_4_index = cache['single_blocks_31_tensoritem_4_index']
    single_blocks_31_tensoritem_5_index = cache['single_blocks_31_tensoritem_5_index']
    single_blocks_31_tensoritem_6_index = cache['single_blocks_31_tensoritem_6_index']
    single_blocks_31_tensoritem_7_index = cache['single_blocks_31_tensoritem_7_index']
    single_blocks_31_totuple_output = cache['single_blocks_31_totuple_output']
    single_blocks_31_transpose_axes = cache['single_blocks_31_transpose_axes']
    single_blocks_32_add_0_left = cache['single_blocks_32_add_0_left']
    single_blocks_32_concat_axis = cache['single_blocks_32_concat_axis']
    single_blocks_32_gelu_approximate = cache['single_blocks_32_gelu_approximate']
    single_blocks_32_linear1_bias = params['single_blocks_32_linear1_bias']
    single_blocks_32_linear1_transpose_axes = cache['single_blocks_32_linear1_transpose_axes']
    single_blocks_32_linear1_weight = params['single_blocks_32_linear1_weight']
    single_blocks_32_linear2_bias = params['single_blocks_32_linear2_bias']
    single_blocks_32_linear2_transpose_axes = cache['single_blocks_32_linear2_transpose_axes']
    single_blocks_32_linear2_weight = params['single_blocks_32_linear2_weight']
    single_blocks_32_model_model_shape_0_output = cache['single_blocks_32_model_model_shape_0_output']
    single_blocks_32_model_model_shape_1_output = cache['single_blocks_32_model_model_shape_1_output']
    single_blocks_32_model_model_tensoritem_0_index = cache['single_blocks_32_model_model_tensoritem_0_index']
    single_blocks_32_model_model_tensoritem_1_index = cache['single_blocks_32_model_model_tensoritem_1_index']
    single_blocks_32_model_model_tensoritem_2_index = cache['single_blocks_32_model_model_tensoritem_2_index']
    single_blocks_32_model_model_tensoritem_3_index = cache['single_blocks_32_model_model_tensoritem_3_index']
    single_blocks_32_model_model_tensoritem_4_index = cache['single_blocks_32_model_model_tensoritem_4_index']
    single_blocks_32_model_model_tensoritem_5_index = cache['single_blocks_32_model_model_tensoritem_5_index']
    single_blocks_32_model_model_tensoritem_6_index = cache['single_blocks_32_model_model_tensoritem_6_index']
    single_blocks_32_model_model_tensoritem_7_index = cache['single_blocks_32_model_model_tensoritem_7_index']
    single_blocks_32_model_model_totuple_0_output = cache['single_blocks_32_model_model_totuple_0_output']
    single_blocks_32_model_model_totuple_1_output = cache['single_blocks_32_model_model_totuple_1_output']
    single_blocks_32_model_scaleddotproduct_attn_mask = cache['single_blocks_32_model_scaleddotproduct_attn_mask']
    single_blocks_32_model_totuple_output = cache['single_blocks_32_model_totuple_output']
    single_blocks_32_model_transpose_axes = cache['single_blocks_32_model_transpose_axes']
    single_blocks_32_modulation_lin_bias = params['single_blocks_32_modulation_lin_bias']
    single_blocks_32_modulation_lin_transpose_axes = cache['single_blocks_32_modulation_lin_transpose_axes']
    single_blocks_32_modulation_lin_weight = params['single_blocks_32_modulation_lin_weight']
    single_blocks_32_modulation_silu_add_left = cache['single_blocks_32_modulation_silu_add_left']
    single_blocks_32_modulation_split_axis = cache['single_blocks_32_modulation_split_axis']
    single_blocks_32_modulation_split_split_size = cache['single_blocks_32_modulation_split_split_size']
    single_blocks_32_modulation_tensoritem_index = cache['single_blocks_32_modulation_tensoritem_index']
    single_blocks_32_norm_key_norm_add_right = cache['single_blocks_32_norm_key_norm_add_right']
    single_blocks_32_norm_key_norm_divide_numerator = cache['single_blocks_32_norm_key_norm_divide_numerator']
    single_blocks_32_norm_key_norm_mean_axis = cache['single_blocks_32_norm_key_norm_mean_axis']
    single_blocks_32_norm_key_norm_mean_keepdim = cache['single_blocks_32_norm_key_norm_mean_keepdim']
    single_blocks_32_norm_key_norm_power_exponent = cache['single_blocks_32_norm_key_norm_power_exponent']
    single_blocks_32_norm_key_norm_scale = params['single_blocks_32_norm_key_norm_scale']
    single_blocks_32_norm_query_norm_add_right = cache['single_blocks_32_norm_query_norm_add_right']
    single_blocks_32_norm_query_norm_divide_numerator = cache['single_blocks_32_norm_query_norm_divide_numerator']
    single_blocks_32_norm_query_norm_mean_axis = cache['single_blocks_32_norm_query_norm_mean_axis']
    single_blocks_32_norm_query_norm_mean_keepdim = cache['single_blocks_32_norm_query_norm_mean_keepdim']
    single_blocks_32_norm_query_norm_power_exponent = cache['single_blocks_32_norm_query_norm_power_exponent']
    single_blocks_32_norm_query_norm_scale = params['single_blocks_32_norm_query_norm_scale']
    single_blocks_32_pre_norm_add_right = cache['single_blocks_32_pre_norm_add_right']
    single_blocks_32_pre_norm_mean_axis = cache['single_blocks_32_pre_norm_mean_axis']
    single_blocks_32_pre_norm_mean_keepdim = cache['single_blocks_32_pre_norm_mean_keepdim']
    single_blocks_32_pre_norm_variance_axis = cache['single_blocks_32_pre_norm_variance_axis']
    single_blocks_32_pre_norm_variance_correction = cache['single_blocks_32_pre_norm_variance_correction']
    single_blocks_32_pre_norm_variance_keepdim = cache['single_blocks_32_pre_norm_variance_keepdim']
    single_blocks_32_tensoritem_0_index = cache['single_blocks_32_tensoritem_0_index']
    single_blocks_32_tensoritem_1_index = cache['single_blocks_32_tensoritem_1_index']
    single_blocks_32_tensoritem_2_index = cache['single_blocks_32_tensoritem_2_index']
    single_blocks_32_tensoritem_3_index = cache['single_blocks_32_tensoritem_3_index']
    single_blocks_32_tensoritem_4_index = cache['single_blocks_32_tensoritem_4_index']
    single_blocks_32_tensoritem_5_index = cache['single_blocks_32_tensoritem_5_index']
    single_blocks_32_tensoritem_6_index = cache['single_blocks_32_tensoritem_6_index']
    single_blocks_32_tensoritem_7_index = cache['single_blocks_32_tensoritem_7_index']
    single_blocks_32_totuple_output = cache['single_blocks_32_totuple_output']
    single_blocks_32_transpose_axes = cache['single_blocks_32_transpose_axes']
    single_blocks_33_add_0_left = cache['single_blocks_33_add_0_left']
    single_blocks_33_concat_axis = cache['single_blocks_33_concat_axis']
    single_blocks_33_gelu_approximate = cache['single_blocks_33_gelu_approximate']
    single_blocks_33_linear1_bias = params['single_blocks_33_linear1_bias']
    single_blocks_33_linear1_transpose_axes = cache['single_blocks_33_linear1_transpose_axes']
    single_blocks_33_linear1_weight = params['single_blocks_33_linear1_weight']
    single_blocks_33_linear2_bias = params['single_blocks_33_linear2_bias']
    single_blocks_33_linear2_transpose_axes = cache['single_blocks_33_linear2_transpose_axes']
    single_blocks_33_linear2_weight = params['single_blocks_33_linear2_weight']
    single_blocks_33_model_model_shape_0_output = cache['single_blocks_33_model_model_shape_0_output']
    single_blocks_33_model_model_shape_1_output = cache['single_blocks_33_model_model_shape_1_output']
    single_blocks_33_model_model_tensoritem_0_index = cache['single_blocks_33_model_model_tensoritem_0_index']
    single_blocks_33_model_model_tensoritem_1_index = cache['single_blocks_33_model_model_tensoritem_1_index']
    single_blocks_33_model_model_tensoritem_2_index = cache['single_blocks_33_model_model_tensoritem_2_index']
    single_blocks_33_model_model_tensoritem_3_index = cache['single_blocks_33_model_model_tensoritem_3_index']
    single_blocks_33_model_model_tensoritem_4_index = cache['single_blocks_33_model_model_tensoritem_4_index']
    single_blocks_33_model_model_tensoritem_5_index = cache['single_blocks_33_model_model_tensoritem_5_index']
    single_blocks_33_model_model_tensoritem_6_index = cache['single_blocks_33_model_model_tensoritem_6_index']
    single_blocks_33_model_model_tensoritem_7_index = cache['single_blocks_33_model_model_tensoritem_7_index']
    single_blocks_33_model_model_totuple_0_output = cache['single_blocks_33_model_model_totuple_0_output']
    single_blocks_33_model_model_totuple_1_output = cache['single_blocks_33_model_model_totuple_1_output']
    single_blocks_33_model_scaleddotproduct_attn_mask = cache['single_blocks_33_model_scaleddotproduct_attn_mask']
    single_blocks_33_model_totuple_output = cache['single_blocks_33_model_totuple_output']
    single_blocks_33_model_transpose_axes = cache['single_blocks_33_model_transpose_axes']
    single_blocks_33_modulation_lin_bias = params['single_blocks_33_modulation_lin_bias']
    single_blocks_33_modulation_lin_transpose_axes = cache['single_blocks_33_modulation_lin_transpose_axes']
    single_blocks_33_modulation_lin_weight = params['single_blocks_33_modulation_lin_weight']
    single_blocks_33_modulation_silu_add_left = cache['single_blocks_33_modulation_silu_add_left']
    single_blocks_33_modulation_split_axis = cache['single_blocks_33_modulation_split_axis']
    single_blocks_33_modulation_split_split_size = cache['single_blocks_33_modulation_split_split_size']
    single_blocks_33_modulation_tensoritem_index = cache['single_blocks_33_modulation_tensoritem_index']
    single_blocks_33_norm_key_norm_add_right = cache['single_blocks_33_norm_key_norm_add_right']
    single_blocks_33_norm_key_norm_divide_numerator = cache['single_blocks_33_norm_key_norm_divide_numerator']
    single_blocks_33_norm_key_norm_mean_axis = cache['single_blocks_33_norm_key_norm_mean_axis']
    single_blocks_33_norm_key_norm_mean_keepdim = cache['single_blocks_33_norm_key_norm_mean_keepdim']
    single_blocks_33_norm_key_norm_power_exponent = cache['single_blocks_33_norm_key_norm_power_exponent']
    single_blocks_33_norm_key_norm_scale = params['single_blocks_33_norm_key_norm_scale']
    single_blocks_33_norm_query_norm_add_right = cache['single_blocks_33_norm_query_norm_add_right']
    single_blocks_33_norm_query_norm_divide_numerator = cache['single_blocks_33_norm_query_norm_divide_numerator']
    single_blocks_33_norm_query_norm_mean_axis = cache['single_blocks_33_norm_query_norm_mean_axis']
    single_blocks_33_norm_query_norm_mean_keepdim = cache['single_blocks_33_norm_query_norm_mean_keepdim']
    single_blocks_33_norm_query_norm_power_exponent = cache['single_blocks_33_norm_query_norm_power_exponent']
    single_blocks_33_norm_query_norm_scale = params['single_blocks_33_norm_query_norm_scale']
    single_blocks_33_pre_norm_add_right = cache['single_blocks_33_pre_norm_add_right']
    single_blocks_33_pre_norm_mean_axis = cache['single_blocks_33_pre_norm_mean_axis']
    single_blocks_33_pre_norm_mean_keepdim = cache['single_blocks_33_pre_norm_mean_keepdim']
    single_blocks_33_pre_norm_variance_axis = cache['single_blocks_33_pre_norm_variance_axis']
    single_blocks_33_pre_norm_variance_correction = cache['single_blocks_33_pre_norm_variance_correction']
    single_blocks_33_pre_norm_variance_keepdim = cache['single_blocks_33_pre_norm_variance_keepdim']
    single_blocks_33_tensoritem_0_index = cache['single_blocks_33_tensoritem_0_index']
    single_blocks_33_tensoritem_1_index = cache['single_blocks_33_tensoritem_1_index']
    single_blocks_33_tensoritem_2_index = cache['single_blocks_33_tensoritem_2_index']
    single_blocks_33_tensoritem_3_index = cache['single_blocks_33_tensoritem_3_index']
    single_blocks_33_tensoritem_4_index = cache['single_blocks_33_tensoritem_4_index']
    single_blocks_33_tensoritem_5_index = cache['single_blocks_33_tensoritem_5_index']
    single_blocks_33_tensoritem_6_index = cache['single_blocks_33_tensoritem_6_index']
    single_blocks_33_tensoritem_7_index = cache['single_blocks_33_tensoritem_7_index']
    single_blocks_33_totuple_output = cache['single_blocks_33_totuple_output']
    single_blocks_33_transpose_axes = cache['single_blocks_33_transpose_axes']
    single_blocks_34_add_0_left = cache['single_blocks_34_add_0_left']
    single_blocks_34_concat_axis = cache['single_blocks_34_concat_axis']
    single_blocks_34_gelu_approximate = cache['single_blocks_34_gelu_approximate']
    single_blocks_34_linear1_bias = params['single_blocks_34_linear1_bias']
    single_blocks_34_linear1_transpose_axes = cache['single_blocks_34_linear1_transpose_axes']
    single_blocks_34_linear1_weight = params['single_blocks_34_linear1_weight']
    single_blocks_34_linear2_bias = params['single_blocks_34_linear2_bias']
    single_blocks_34_linear2_transpose_axes = cache['single_blocks_34_linear2_transpose_axes']
    single_blocks_34_linear2_weight = params['single_blocks_34_linear2_weight']
    single_blocks_34_model_model_shape_0_output = cache['single_blocks_34_model_model_shape_0_output']
    single_blocks_34_model_model_shape_1_output = cache['single_blocks_34_model_model_shape_1_output']
    single_blocks_34_model_model_tensoritem_0_index = cache['single_blocks_34_model_model_tensoritem_0_index']
    single_blocks_34_model_model_tensoritem_1_index = cache['single_blocks_34_model_model_tensoritem_1_index']
    single_blocks_34_model_model_tensoritem_2_index = cache['single_blocks_34_model_model_tensoritem_2_index']
    single_blocks_34_model_model_tensoritem_3_index = cache['single_blocks_34_model_model_tensoritem_3_index']
    single_blocks_34_model_model_tensoritem_4_index = cache['single_blocks_34_model_model_tensoritem_4_index']
    single_blocks_34_model_model_tensoritem_5_index = cache['single_blocks_34_model_model_tensoritem_5_index']
    single_blocks_34_model_model_tensoritem_6_index = cache['single_blocks_34_model_model_tensoritem_6_index']
    single_blocks_34_model_model_tensoritem_7_index = cache['single_blocks_34_model_model_tensoritem_7_index']
    single_blocks_34_model_model_totuple_0_output = cache['single_blocks_34_model_model_totuple_0_output']
    single_blocks_34_model_model_totuple_1_output = cache['single_blocks_34_model_model_totuple_1_output']
    single_blocks_34_model_scaleddotproduct_attn_mask = cache['single_blocks_34_model_scaleddotproduct_attn_mask']
    single_blocks_34_model_totuple_output = cache['single_blocks_34_model_totuple_output']
    single_blocks_34_model_transpose_axes = cache['single_blocks_34_model_transpose_axes']
    single_blocks_34_modulation_lin_bias = params['single_blocks_34_modulation_lin_bias']
    single_blocks_34_modulation_lin_transpose_axes = cache['single_blocks_34_modulation_lin_transpose_axes']
    single_blocks_34_modulation_lin_weight = params['single_blocks_34_modulation_lin_weight']
    single_blocks_34_modulation_silu_add_left = cache['single_blocks_34_modulation_silu_add_left']
    single_blocks_34_modulation_split_axis = cache['single_blocks_34_modulation_split_axis']
    single_blocks_34_modulation_split_split_size = cache['single_blocks_34_modulation_split_split_size']
    single_blocks_34_modulation_tensoritem_index = cache['single_blocks_34_modulation_tensoritem_index']
    single_blocks_34_norm_key_norm_add_right = cache['single_blocks_34_norm_key_norm_add_right']
    single_blocks_34_norm_key_norm_divide_numerator = cache['single_blocks_34_norm_key_norm_divide_numerator']
    single_blocks_34_norm_key_norm_mean_axis = cache['single_blocks_34_norm_key_norm_mean_axis']
    single_blocks_34_norm_key_norm_mean_keepdim = cache['single_blocks_34_norm_key_norm_mean_keepdim']
    single_blocks_34_norm_key_norm_power_exponent = cache['single_blocks_34_norm_key_norm_power_exponent']
    single_blocks_34_norm_key_norm_scale = params['single_blocks_34_norm_key_norm_scale']
    single_blocks_34_norm_query_norm_add_right = cache['single_blocks_34_norm_query_norm_add_right']
    single_blocks_34_norm_query_norm_divide_numerator = cache['single_blocks_34_norm_query_norm_divide_numerator']
    single_blocks_34_norm_query_norm_mean_axis = cache['single_blocks_34_norm_query_norm_mean_axis']
    single_blocks_34_norm_query_norm_mean_keepdim = cache['single_blocks_34_norm_query_norm_mean_keepdim']
    single_blocks_34_norm_query_norm_power_exponent = cache['single_blocks_34_norm_query_norm_power_exponent']
    single_blocks_34_norm_query_norm_scale = params['single_blocks_34_norm_query_norm_scale']
    single_blocks_34_pre_norm_add_right = cache['single_blocks_34_pre_norm_add_right']
    single_blocks_34_pre_norm_mean_axis = cache['single_blocks_34_pre_norm_mean_axis']
    single_blocks_34_pre_norm_mean_keepdim = cache['single_blocks_34_pre_norm_mean_keepdim']
    single_blocks_34_pre_norm_variance_axis = cache['single_blocks_34_pre_norm_variance_axis']
    single_blocks_34_pre_norm_variance_correction = cache['single_blocks_34_pre_norm_variance_correction']
    single_blocks_34_pre_norm_variance_keepdim = cache['single_blocks_34_pre_norm_variance_keepdim']
    single_blocks_34_tensoritem_0_index = cache['single_blocks_34_tensoritem_0_index']
    single_blocks_34_tensoritem_1_index = cache['single_blocks_34_tensoritem_1_index']
    single_blocks_34_tensoritem_2_index = cache['single_blocks_34_tensoritem_2_index']
    single_blocks_34_tensoritem_3_index = cache['single_blocks_34_tensoritem_3_index']
    single_blocks_34_tensoritem_4_index = cache['single_blocks_34_tensoritem_4_index']
    single_blocks_34_tensoritem_5_index = cache['single_blocks_34_tensoritem_5_index']
    single_blocks_34_tensoritem_6_index = cache['single_blocks_34_tensoritem_6_index']
    single_blocks_34_tensoritem_7_index = cache['single_blocks_34_tensoritem_7_index']
    single_blocks_34_totuple_output = cache['single_blocks_34_totuple_output']
    single_blocks_34_transpose_axes = cache['single_blocks_34_transpose_axes']
    single_blocks_35_add_0_left = cache['single_blocks_35_add_0_left']
    single_blocks_35_concat_axis = cache['single_blocks_35_concat_axis']
    single_blocks_35_gelu_approximate = cache['single_blocks_35_gelu_approximate']
    single_blocks_35_linear1_bias = params['single_blocks_35_linear1_bias']
    single_blocks_35_linear1_transpose_axes = cache['single_blocks_35_linear1_transpose_axes']
    single_blocks_35_linear1_weight = params['single_blocks_35_linear1_weight']
    single_blocks_35_linear2_bias = params['single_blocks_35_linear2_bias']
    single_blocks_35_linear2_transpose_axes = cache['single_blocks_35_linear2_transpose_axes']
    single_blocks_35_linear2_weight = params['single_blocks_35_linear2_weight']
    single_blocks_35_model_model_shape_0_output = cache['single_blocks_35_model_model_shape_0_output']
    single_blocks_35_model_model_shape_1_output = cache['single_blocks_35_model_model_shape_1_output']
    single_blocks_35_model_model_tensoritem_0_index = cache['single_blocks_35_model_model_tensoritem_0_index']
    single_blocks_35_model_model_tensoritem_1_index = cache['single_blocks_35_model_model_tensoritem_1_index']
    single_blocks_35_model_model_tensoritem_2_index = cache['single_blocks_35_model_model_tensoritem_2_index']
    single_blocks_35_model_model_tensoritem_3_index = cache['single_blocks_35_model_model_tensoritem_3_index']
    single_blocks_35_model_model_tensoritem_4_index = cache['single_blocks_35_model_model_tensoritem_4_index']
    single_blocks_35_model_model_tensoritem_5_index = cache['single_blocks_35_model_model_tensoritem_5_index']
    single_blocks_35_model_model_tensoritem_6_index = cache['single_blocks_35_model_model_tensoritem_6_index']
    single_blocks_35_model_model_tensoritem_7_index = cache['single_blocks_35_model_model_tensoritem_7_index']
    single_blocks_35_model_model_totuple_0_output = cache['single_blocks_35_model_model_totuple_0_output']
    single_blocks_35_model_model_totuple_1_output = cache['single_blocks_35_model_model_totuple_1_output']
    single_blocks_35_model_scaleddotproduct_attn_mask = cache['single_blocks_35_model_scaleddotproduct_attn_mask']
    single_blocks_35_model_totuple_output = cache['single_blocks_35_model_totuple_output']
    single_blocks_35_model_transpose_axes = cache['single_blocks_35_model_transpose_axes']
    single_blocks_35_modulation_lin_bias = params['single_blocks_35_modulation_lin_bias']
    single_blocks_35_modulation_lin_transpose_axes = cache['single_blocks_35_modulation_lin_transpose_axes']
    single_blocks_35_modulation_lin_weight = params['single_blocks_35_modulation_lin_weight']
    single_blocks_35_modulation_silu_add_left = cache['single_blocks_35_modulation_silu_add_left']
    single_blocks_35_modulation_split_axis = cache['single_blocks_35_modulation_split_axis']
    single_blocks_35_modulation_split_split_size = cache['single_blocks_35_modulation_split_split_size']
    single_blocks_35_modulation_tensoritem_index = cache['single_blocks_35_modulation_tensoritem_index']
    single_blocks_35_norm_key_norm_add_right = cache['single_blocks_35_norm_key_norm_add_right']
    single_blocks_35_norm_key_norm_divide_numerator = cache['single_blocks_35_norm_key_norm_divide_numerator']
    single_blocks_35_norm_key_norm_mean_axis = cache['single_blocks_35_norm_key_norm_mean_axis']
    single_blocks_35_norm_key_norm_mean_keepdim = cache['single_blocks_35_norm_key_norm_mean_keepdim']
    single_blocks_35_norm_key_norm_power_exponent = cache['single_blocks_35_norm_key_norm_power_exponent']
    single_blocks_35_norm_key_norm_scale = params['single_blocks_35_norm_key_norm_scale']
    single_blocks_35_norm_query_norm_add_right = cache['single_blocks_35_norm_query_norm_add_right']
    single_blocks_35_norm_query_norm_divide_numerator = cache['single_blocks_35_norm_query_norm_divide_numerator']
    single_blocks_35_norm_query_norm_mean_axis = cache['single_blocks_35_norm_query_norm_mean_axis']
    single_blocks_35_norm_query_norm_mean_keepdim = cache['single_blocks_35_norm_query_norm_mean_keepdim']
    single_blocks_35_norm_query_norm_power_exponent = cache['single_blocks_35_norm_query_norm_power_exponent']
    single_blocks_35_norm_query_norm_scale = params['single_blocks_35_norm_query_norm_scale']
    single_blocks_35_pre_norm_add_right = cache['single_blocks_35_pre_norm_add_right']
    single_blocks_35_pre_norm_mean_axis = cache['single_blocks_35_pre_norm_mean_axis']
    single_blocks_35_pre_norm_mean_keepdim = cache['single_blocks_35_pre_norm_mean_keepdim']
    single_blocks_35_pre_norm_variance_axis = cache['single_blocks_35_pre_norm_variance_axis']
    single_blocks_35_pre_norm_variance_correction = cache['single_blocks_35_pre_norm_variance_correction']
    single_blocks_35_pre_norm_variance_keepdim = cache['single_blocks_35_pre_norm_variance_keepdim']
    single_blocks_35_tensoritem_0_index = cache['single_blocks_35_tensoritem_0_index']
    single_blocks_35_tensoritem_1_index = cache['single_blocks_35_tensoritem_1_index']
    single_blocks_35_tensoritem_2_index = cache['single_blocks_35_tensoritem_2_index']
    single_blocks_35_tensoritem_3_index = cache['single_blocks_35_tensoritem_3_index']
    single_blocks_35_tensoritem_4_index = cache['single_blocks_35_tensoritem_4_index']
    single_blocks_35_tensoritem_5_index = cache['single_blocks_35_tensoritem_5_index']
    single_blocks_35_tensoritem_6_index = cache['single_blocks_35_tensoritem_6_index']
    single_blocks_35_tensoritem_7_index = cache['single_blocks_35_tensoritem_7_index']
    single_blocks_35_totuple_output = cache['single_blocks_35_totuple_output']
    single_blocks_35_transpose_axes = cache['single_blocks_35_transpose_axes']
    single_blocks_36_add_0_left = cache['single_blocks_36_add_0_left']
    single_blocks_36_concat_axis = cache['single_blocks_36_concat_axis']
    single_blocks_36_gelu_approximate = cache['single_blocks_36_gelu_approximate']
    single_blocks_36_linear1_bias = params['single_blocks_36_linear1_bias']
    single_blocks_36_linear1_transpose_axes = cache['single_blocks_36_linear1_transpose_axes']
    single_blocks_36_linear1_weight = params['single_blocks_36_linear1_weight']
    single_blocks_36_linear2_bias = params['single_blocks_36_linear2_bias']
    single_blocks_36_linear2_transpose_axes = cache['single_blocks_36_linear2_transpose_axes']
    single_blocks_36_linear2_weight = params['single_blocks_36_linear2_weight']
    single_blocks_36_model_model_shape_0_output = cache['single_blocks_36_model_model_shape_0_output']
    single_blocks_36_model_model_shape_1_output = cache['single_blocks_36_model_model_shape_1_output']
    single_blocks_36_model_model_tensoritem_0_index = cache['single_blocks_36_model_model_tensoritem_0_index']
    single_blocks_36_model_model_tensoritem_1_index = cache['single_blocks_36_model_model_tensoritem_1_index']
    single_blocks_36_model_model_tensoritem_2_index = cache['single_blocks_36_model_model_tensoritem_2_index']
    single_blocks_36_model_model_tensoritem_3_index = cache['single_blocks_36_model_model_tensoritem_3_index']
    single_blocks_36_model_model_tensoritem_4_index = cache['single_blocks_36_model_model_tensoritem_4_index']
    single_blocks_36_model_model_tensoritem_5_index = cache['single_blocks_36_model_model_tensoritem_5_index']
    single_blocks_36_model_model_tensoritem_6_index = cache['single_blocks_36_model_model_tensoritem_6_index']
    single_blocks_36_model_model_tensoritem_7_index = cache['single_blocks_36_model_model_tensoritem_7_index']
    single_blocks_36_model_model_totuple_0_output = cache['single_blocks_36_model_model_totuple_0_output']
    single_blocks_36_model_model_totuple_1_output = cache['single_blocks_36_model_model_totuple_1_output']
    single_blocks_36_model_scaleddotproduct_attn_mask = cache['single_blocks_36_model_scaleddotproduct_attn_mask']
    single_blocks_36_model_totuple_output = cache['single_blocks_36_model_totuple_output']
    single_blocks_36_model_transpose_axes = cache['single_blocks_36_model_transpose_axes']
    single_blocks_36_modulation_lin_bias = params['single_blocks_36_modulation_lin_bias']
    single_blocks_36_modulation_lin_transpose_axes = cache['single_blocks_36_modulation_lin_transpose_axes']
    single_blocks_36_modulation_lin_weight = params['single_blocks_36_modulation_lin_weight']
    single_blocks_36_modulation_silu_add_left = cache['single_blocks_36_modulation_silu_add_left']
    single_blocks_36_modulation_split_axis = cache['single_blocks_36_modulation_split_axis']
    single_blocks_36_modulation_split_split_size = cache['single_blocks_36_modulation_split_split_size']
    single_blocks_36_modulation_tensoritem_index = cache['single_blocks_36_modulation_tensoritem_index']
    single_blocks_36_norm_key_norm_add_right = cache['single_blocks_36_norm_key_norm_add_right']
    single_blocks_36_norm_key_norm_divide_numerator = cache['single_blocks_36_norm_key_norm_divide_numerator']
    single_blocks_36_norm_key_norm_mean_axis = cache['single_blocks_36_norm_key_norm_mean_axis']
    single_blocks_36_norm_key_norm_mean_keepdim = cache['single_blocks_36_norm_key_norm_mean_keepdim']
    single_blocks_36_norm_key_norm_power_exponent = cache['single_blocks_36_norm_key_norm_power_exponent']
    single_blocks_36_norm_key_norm_scale = params['single_blocks_36_norm_key_norm_scale']
    single_blocks_36_norm_query_norm_add_right = cache['single_blocks_36_norm_query_norm_add_right']
    single_blocks_36_norm_query_norm_divide_numerator = cache['single_blocks_36_norm_query_norm_divide_numerator']
    single_blocks_36_norm_query_norm_mean_axis = cache['single_blocks_36_norm_query_norm_mean_axis']
    single_blocks_36_norm_query_norm_mean_keepdim = cache['single_blocks_36_norm_query_norm_mean_keepdim']
    single_blocks_36_norm_query_norm_power_exponent = cache['single_blocks_36_norm_query_norm_power_exponent']
    single_blocks_36_norm_query_norm_scale = params['single_blocks_36_norm_query_norm_scale']
    single_blocks_36_pre_norm_add_right = cache['single_blocks_36_pre_norm_add_right']
    single_blocks_36_pre_norm_mean_axis = cache['single_blocks_36_pre_norm_mean_axis']
    single_blocks_36_pre_norm_mean_keepdim = cache['single_blocks_36_pre_norm_mean_keepdim']
    single_blocks_36_pre_norm_variance_axis = cache['single_blocks_36_pre_norm_variance_axis']
    single_blocks_36_pre_norm_variance_correction = cache['single_blocks_36_pre_norm_variance_correction']
    single_blocks_36_pre_norm_variance_keepdim = cache['single_blocks_36_pre_norm_variance_keepdim']
    single_blocks_36_tensoritem_0_index = cache['single_blocks_36_tensoritem_0_index']
    single_blocks_36_tensoritem_1_index = cache['single_blocks_36_tensoritem_1_index']
    single_blocks_36_tensoritem_2_index = cache['single_blocks_36_tensoritem_2_index']
    single_blocks_36_tensoritem_3_index = cache['single_blocks_36_tensoritem_3_index']
    single_blocks_36_tensoritem_4_index = cache['single_blocks_36_tensoritem_4_index']
    single_blocks_36_tensoritem_5_index = cache['single_blocks_36_tensoritem_5_index']
    single_blocks_36_tensoritem_6_index = cache['single_blocks_36_tensoritem_6_index']
    single_blocks_36_tensoritem_7_index = cache['single_blocks_36_tensoritem_7_index']
    single_blocks_36_totuple_output = cache['single_blocks_36_totuple_output']
    single_blocks_36_transpose_axes = cache['single_blocks_36_transpose_axes']
    single_blocks_37_add_0_left = cache['single_blocks_37_add_0_left']
    single_blocks_37_concat_axis = cache['single_blocks_37_concat_axis']
    single_blocks_37_gelu_approximate = cache['single_blocks_37_gelu_approximate']
    single_blocks_37_linear1_bias = params['single_blocks_37_linear1_bias']
    single_blocks_37_linear1_transpose_axes = cache['single_blocks_37_linear1_transpose_axes']
    single_blocks_37_linear1_weight = params['single_blocks_37_linear1_weight']
    single_blocks_37_linear2_bias = params['single_blocks_37_linear2_bias']
    single_blocks_37_linear2_transpose_axes = cache['single_blocks_37_linear2_transpose_axes']
    single_blocks_37_linear2_weight = params['single_blocks_37_linear2_weight']
    single_blocks_37_model_model_shape_0_output = cache['single_blocks_37_model_model_shape_0_output']
    single_blocks_37_model_model_shape_1_output = cache['single_blocks_37_model_model_shape_1_output']
    single_blocks_37_model_model_tensoritem_0_index = cache['single_blocks_37_model_model_tensoritem_0_index']
    single_blocks_37_model_model_tensoritem_1_index = cache['single_blocks_37_model_model_tensoritem_1_index']
    single_blocks_37_model_model_tensoritem_2_index = cache['single_blocks_37_model_model_tensoritem_2_index']
    single_blocks_37_model_model_tensoritem_3_index = cache['single_blocks_37_model_model_tensoritem_3_index']
    single_blocks_37_model_model_tensoritem_4_index = cache['single_blocks_37_model_model_tensoritem_4_index']
    single_blocks_37_model_model_tensoritem_5_index = cache['single_blocks_37_model_model_tensoritem_5_index']
    single_blocks_37_model_model_tensoritem_6_index = cache['single_blocks_37_model_model_tensoritem_6_index']
    single_blocks_37_model_model_tensoritem_7_index = cache['single_blocks_37_model_model_tensoritem_7_index']
    single_blocks_37_model_model_totuple_0_output = cache['single_blocks_37_model_model_totuple_0_output']
    single_blocks_37_model_model_totuple_1_output = cache['single_blocks_37_model_model_totuple_1_output']
    single_blocks_37_model_scaleddotproduct_attn_mask = cache['single_blocks_37_model_scaleddotproduct_attn_mask']
    single_blocks_37_model_totuple_output = cache['single_blocks_37_model_totuple_output']
    single_blocks_37_model_transpose_axes = cache['single_blocks_37_model_transpose_axes']
    single_blocks_37_modulation_lin_bias = params['single_blocks_37_modulation_lin_bias']
    single_blocks_37_modulation_lin_transpose_axes = cache['single_blocks_37_modulation_lin_transpose_axes']
    single_blocks_37_modulation_lin_weight = params['single_blocks_37_modulation_lin_weight']
    single_blocks_37_modulation_silu_add_left = cache['single_blocks_37_modulation_silu_add_left']
    single_blocks_37_modulation_split_axis = cache['single_blocks_37_modulation_split_axis']
    single_blocks_37_modulation_split_split_size = cache['single_blocks_37_modulation_split_split_size']
    single_blocks_37_modulation_tensoritem_index = cache['single_blocks_37_modulation_tensoritem_index']
    single_blocks_37_norm_key_norm_add_right = cache['single_blocks_37_norm_key_norm_add_right']
    single_blocks_37_norm_key_norm_divide_numerator = cache['single_blocks_37_norm_key_norm_divide_numerator']
    single_blocks_37_norm_key_norm_mean_axis = cache['single_blocks_37_norm_key_norm_mean_axis']
    single_blocks_37_norm_key_norm_mean_keepdim = cache['single_blocks_37_norm_key_norm_mean_keepdim']
    single_blocks_37_norm_key_norm_power_exponent = cache['single_blocks_37_norm_key_norm_power_exponent']
    single_blocks_37_norm_key_norm_scale = params['single_blocks_37_norm_key_norm_scale']
    single_blocks_37_norm_query_norm_add_right = cache['single_blocks_37_norm_query_norm_add_right']
    single_blocks_37_norm_query_norm_divide_numerator = cache['single_blocks_37_norm_query_norm_divide_numerator']
    single_blocks_37_norm_query_norm_mean_axis = cache['single_blocks_37_norm_query_norm_mean_axis']
    single_blocks_37_norm_query_norm_mean_keepdim = cache['single_blocks_37_norm_query_norm_mean_keepdim']
    single_blocks_37_norm_query_norm_power_exponent = cache['single_blocks_37_norm_query_norm_power_exponent']
    single_blocks_37_norm_query_norm_scale = params['single_blocks_37_norm_query_norm_scale']
    single_blocks_37_pre_norm_add_right = cache['single_blocks_37_pre_norm_add_right']
    single_blocks_37_pre_norm_mean_axis = cache['single_blocks_37_pre_norm_mean_axis']
    single_blocks_37_pre_norm_mean_keepdim = cache['single_blocks_37_pre_norm_mean_keepdim']
    single_blocks_37_pre_norm_variance_axis = cache['single_blocks_37_pre_norm_variance_axis']
    single_blocks_37_pre_norm_variance_correction = cache['single_blocks_37_pre_norm_variance_correction']
    single_blocks_37_pre_norm_variance_keepdim = cache['single_blocks_37_pre_norm_variance_keepdim']
    single_blocks_37_tensoritem_0_index = cache['single_blocks_37_tensoritem_0_index']
    single_blocks_37_tensoritem_1_index = cache['single_blocks_37_tensoritem_1_index']
    single_blocks_37_tensoritem_2_index = cache['single_blocks_37_tensoritem_2_index']
    single_blocks_37_tensoritem_3_index = cache['single_blocks_37_tensoritem_3_index']
    single_blocks_37_tensoritem_4_index = cache['single_blocks_37_tensoritem_4_index']
    single_blocks_37_tensoritem_5_index = cache['single_blocks_37_tensoritem_5_index']
    single_blocks_37_tensoritem_6_index = cache['single_blocks_37_tensoritem_6_index']
    single_blocks_37_tensoritem_7_index = cache['single_blocks_37_tensoritem_7_index']
    single_blocks_37_totuple_output = cache['single_blocks_37_totuple_output']
    single_blocks_37_transpose_axes = cache['single_blocks_37_transpose_axes']
    single_blocks_3_add_0_left = cache['single_blocks_3_add_0_left']
    single_blocks_3_concat_axis = cache['single_blocks_3_concat_axis']
    single_blocks_3_gelu_approximate = cache['single_blocks_3_gelu_approximate']
    single_blocks_3_linear1_bias = params['single_blocks_3_linear1_bias']
    single_blocks_3_linear1_transpose_axes = cache['single_blocks_3_linear1_transpose_axes']
    single_blocks_3_linear1_weight = params['single_blocks_3_linear1_weight']
    single_blocks_3_linear2_bias = params['single_blocks_3_linear2_bias']
    single_blocks_3_linear2_transpose_axes = cache['single_blocks_3_linear2_transpose_axes']
    single_blocks_3_linear2_weight = params['single_blocks_3_linear2_weight']
    single_blocks_3_model_model_shape_0_output = cache['single_blocks_3_model_model_shape_0_output']
    single_blocks_3_model_model_shape_1_output = cache['single_blocks_3_model_model_shape_1_output']
    single_blocks_3_model_model_tensoritem_0_index = cache['single_blocks_3_model_model_tensoritem_0_index']
    single_blocks_3_model_model_tensoritem_1_index = cache['single_blocks_3_model_model_tensoritem_1_index']
    single_blocks_3_model_model_tensoritem_2_index = cache['single_blocks_3_model_model_tensoritem_2_index']
    single_blocks_3_model_model_tensoritem_3_index = cache['single_blocks_3_model_model_tensoritem_3_index']
    single_blocks_3_model_model_tensoritem_4_index = cache['single_blocks_3_model_model_tensoritem_4_index']
    single_blocks_3_model_model_tensoritem_5_index = cache['single_blocks_3_model_model_tensoritem_5_index']
    single_blocks_3_model_model_tensoritem_6_index = cache['single_blocks_3_model_model_tensoritem_6_index']
    single_blocks_3_model_model_tensoritem_7_index = cache['single_blocks_3_model_model_tensoritem_7_index']
    single_blocks_3_model_model_totuple_0_output = cache['single_blocks_3_model_model_totuple_0_output']
    single_blocks_3_model_model_totuple_1_output = cache['single_blocks_3_model_model_totuple_1_output']
    single_blocks_3_model_scaleddotproduct_attn_mask = cache['single_blocks_3_model_scaleddotproduct_attn_mask']
    single_blocks_3_model_totuple_output = cache['single_blocks_3_model_totuple_output']
    single_blocks_3_model_transpose_axes = cache['single_blocks_3_model_transpose_axes']
    single_blocks_3_modulation_lin_bias = params['single_blocks_3_modulation_lin_bias']
    single_blocks_3_modulation_lin_transpose_axes = cache['single_blocks_3_modulation_lin_transpose_axes']
    single_blocks_3_modulation_lin_weight = params['single_blocks_3_modulation_lin_weight']
    single_blocks_3_modulation_silu_add_left = cache['single_blocks_3_modulation_silu_add_left']
    single_blocks_3_modulation_split_axis = cache['single_blocks_3_modulation_split_axis']
    single_blocks_3_modulation_split_split_size = cache['single_blocks_3_modulation_split_split_size']
    single_blocks_3_modulation_tensoritem_index = cache['single_blocks_3_modulation_tensoritem_index']
    single_blocks_3_norm_key_norm_add_right = cache['single_blocks_3_norm_key_norm_add_right']
    single_blocks_3_norm_key_norm_divide_numerator = cache['single_blocks_3_norm_key_norm_divide_numerator']
    single_blocks_3_norm_key_norm_mean_axis = cache['single_blocks_3_norm_key_norm_mean_axis']
    single_blocks_3_norm_key_norm_mean_keepdim = cache['single_blocks_3_norm_key_norm_mean_keepdim']
    single_blocks_3_norm_key_norm_power_exponent = cache['single_blocks_3_norm_key_norm_power_exponent']
    single_blocks_3_norm_key_norm_scale = params['single_blocks_3_norm_key_norm_scale']
    single_blocks_3_norm_query_norm_add_right = cache['single_blocks_3_norm_query_norm_add_right']
    single_blocks_3_norm_query_norm_divide_numerator = cache['single_blocks_3_norm_query_norm_divide_numerator']
    single_blocks_3_norm_query_norm_mean_axis = cache['single_blocks_3_norm_query_norm_mean_axis']
    single_blocks_3_norm_query_norm_mean_keepdim = cache['single_blocks_3_norm_query_norm_mean_keepdim']
    single_blocks_3_norm_query_norm_power_exponent = cache['single_blocks_3_norm_query_norm_power_exponent']
    single_blocks_3_norm_query_norm_scale = params['single_blocks_3_norm_query_norm_scale']
    single_blocks_3_pre_norm_add_right = cache['single_blocks_3_pre_norm_add_right']
    single_blocks_3_pre_norm_mean_axis = cache['single_blocks_3_pre_norm_mean_axis']
    single_blocks_3_pre_norm_mean_keepdim = cache['single_blocks_3_pre_norm_mean_keepdim']
    single_blocks_3_pre_norm_variance_axis = cache['single_blocks_3_pre_norm_variance_axis']
    single_blocks_3_pre_norm_variance_correction = cache['single_blocks_3_pre_norm_variance_correction']
    single_blocks_3_pre_norm_variance_keepdim = cache['single_blocks_3_pre_norm_variance_keepdim']
    single_blocks_3_tensoritem_0_index = cache['single_blocks_3_tensoritem_0_index']
    single_blocks_3_tensoritem_1_index = cache['single_blocks_3_tensoritem_1_index']
    single_blocks_3_tensoritem_2_index = cache['single_blocks_3_tensoritem_2_index']
    single_blocks_3_tensoritem_3_index = cache['single_blocks_3_tensoritem_3_index']
    single_blocks_3_tensoritem_4_index = cache['single_blocks_3_tensoritem_4_index']
    single_blocks_3_tensoritem_5_index = cache['single_blocks_3_tensoritem_5_index']
    single_blocks_3_tensoritem_6_index = cache['single_blocks_3_tensoritem_6_index']
    single_blocks_3_tensoritem_7_index = cache['single_blocks_3_tensoritem_7_index']
    single_blocks_3_totuple_output = cache['single_blocks_3_totuple_output']
    single_blocks_3_transpose_axes = cache['single_blocks_3_transpose_axes']
    single_blocks_4_add_0_left = cache['single_blocks_4_add_0_left']
    single_blocks_4_concat_axis = cache['single_blocks_4_concat_axis']
    single_blocks_4_gelu_approximate = cache['single_blocks_4_gelu_approximate']
    single_blocks_4_linear1_bias = params['single_blocks_4_linear1_bias']
    single_blocks_4_linear1_transpose_axes = cache['single_blocks_4_linear1_transpose_axes']
    single_blocks_4_linear1_weight = params['single_blocks_4_linear1_weight']
    single_blocks_4_linear2_bias = params['single_blocks_4_linear2_bias']
    single_blocks_4_linear2_transpose_axes = cache['single_blocks_4_linear2_transpose_axes']
    single_blocks_4_linear2_weight = params['single_blocks_4_linear2_weight']
    single_blocks_4_model_model_shape_0_output = cache['single_blocks_4_model_model_shape_0_output']
    single_blocks_4_model_model_shape_1_output = cache['single_blocks_4_model_model_shape_1_output']
    single_blocks_4_model_model_tensoritem_0_index = cache['single_blocks_4_model_model_tensoritem_0_index']
    single_blocks_4_model_model_tensoritem_1_index = cache['single_blocks_4_model_model_tensoritem_1_index']
    single_blocks_4_model_model_tensoritem_2_index = cache['single_blocks_4_model_model_tensoritem_2_index']
    single_blocks_4_model_model_tensoritem_3_index = cache['single_blocks_4_model_model_tensoritem_3_index']
    single_blocks_4_model_model_tensoritem_4_index = cache['single_blocks_4_model_model_tensoritem_4_index']
    single_blocks_4_model_model_tensoritem_5_index = cache['single_blocks_4_model_model_tensoritem_5_index']
    single_blocks_4_model_model_tensoritem_6_index = cache['single_blocks_4_model_model_tensoritem_6_index']
    single_blocks_4_model_model_tensoritem_7_index = cache['single_blocks_4_model_model_tensoritem_7_index']
    single_blocks_4_model_model_totuple_0_output = cache['single_blocks_4_model_model_totuple_0_output']
    single_blocks_4_model_model_totuple_1_output = cache['single_blocks_4_model_model_totuple_1_output']
    single_blocks_4_model_scaleddotproduct_attn_mask = cache['single_blocks_4_model_scaleddotproduct_attn_mask']
    single_blocks_4_model_totuple_output = cache['single_blocks_4_model_totuple_output']
    single_blocks_4_model_transpose_axes = cache['single_blocks_4_model_transpose_axes']
    single_blocks_4_modulation_lin_bias = params['single_blocks_4_modulation_lin_bias']
    single_blocks_4_modulation_lin_transpose_axes = cache['single_blocks_4_modulation_lin_transpose_axes']
    single_blocks_4_modulation_lin_weight = params['single_blocks_4_modulation_lin_weight']
    single_blocks_4_modulation_silu_add_left = cache['single_blocks_4_modulation_silu_add_left']
    single_blocks_4_modulation_split_axis = cache['single_blocks_4_modulation_split_axis']
    single_blocks_4_modulation_split_split_size = cache['single_blocks_4_modulation_split_split_size']
    single_blocks_4_modulation_tensoritem_index = cache['single_blocks_4_modulation_tensoritem_index']
    single_blocks_4_norm_key_norm_add_right = cache['single_blocks_4_norm_key_norm_add_right']
    single_blocks_4_norm_key_norm_divide_numerator = cache['single_blocks_4_norm_key_norm_divide_numerator']
    single_blocks_4_norm_key_norm_mean_axis = cache['single_blocks_4_norm_key_norm_mean_axis']
    single_blocks_4_norm_key_norm_mean_keepdim = cache['single_blocks_4_norm_key_norm_mean_keepdim']
    single_blocks_4_norm_key_norm_power_exponent = cache['single_blocks_4_norm_key_norm_power_exponent']
    single_blocks_4_norm_key_norm_scale = params['single_blocks_4_norm_key_norm_scale']
    single_blocks_4_norm_query_norm_add_right = cache['single_blocks_4_norm_query_norm_add_right']
    single_blocks_4_norm_query_norm_divide_numerator = cache['single_blocks_4_norm_query_norm_divide_numerator']
    single_blocks_4_norm_query_norm_mean_axis = cache['single_blocks_4_norm_query_norm_mean_axis']
    single_blocks_4_norm_query_norm_mean_keepdim = cache['single_blocks_4_norm_query_norm_mean_keepdim']
    single_blocks_4_norm_query_norm_power_exponent = cache['single_blocks_4_norm_query_norm_power_exponent']
    single_blocks_4_norm_query_norm_scale = params['single_blocks_4_norm_query_norm_scale']
    single_blocks_4_pre_norm_add_right = cache['single_blocks_4_pre_norm_add_right']
    single_blocks_4_pre_norm_mean_axis = cache['single_blocks_4_pre_norm_mean_axis']
    single_blocks_4_pre_norm_mean_keepdim = cache['single_blocks_4_pre_norm_mean_keepdim']
    single_blocks_4_pre_norm_variance_axis = cache['single_blocks_4_pre_norm_variance_axis']
    single_blocks_4_pre_norm_variance_correction = cache['single_blocks_4_pre_norm_variance_correction']
    single_blocks_4_pre_norm_variance_keepdim = cache['single_blocks_4_pre_norm_variance_keepdim']
    single_blocks_4_tensoritem_0_index = cache['single_blocks_4_tensoritem_0_index']
    single_blocks_4_tensoritem_1_index = cache['single_blocks_4_tensoritem_1_index']
    single_blocks_4_tensoritem_2_index = cache['single_blocks_4_tensoritem_2_index']
    single_blocks_4_tensoritem_3_index = cache['single_blocks_4_tensoritem_3_index']
    single_blocks_4_tensoritem_4_index = cache['single_blocks_4_tensoritem_4_index']
    single_blocks_4_tensoritem_5_index = cache['single_blocks_4_tensoritem_5_index']
    single_blocks_4_tensoritem_6_index = cache['single_blocks_4_tensoritem_6_index']
    single_blocks_4_tensoritem_7_index = cache['single_blocks_4_tensoritem_7_index']
    single_blocks_4_totuple_output = cache['single_blocks_4_totuple_output']
    single_blocks_4_transpose_axes = cache['single_blocks_4_transpose_axes']
    single_blocks_5_add_0_left = cache['single_blocks_5_add_0_left']
    single_blocks_5_concat_axis = cache['single_blocks_5_concat_axis']
    single_blocks_5_gelu_approximate = cache['single_blocks_5_gelu_approximate']
    single_blocks_5_linear1_bias = params['single_blocks_5_linear1_bias']
    single_blocks_5_linear1_transpose_axes = cache['single_blocks_5_linear1_transpose_axes']
    single_blocks_5_linear1_weight = params['single_blocks_5_linear1_weight']
    single_blocks_5_linear2_bias = params['single_blocks_5_linear2_bias']
    single_blocks_5_linear2_transpose_axes = cache['single_blocks_5_linear2_transpose_axes']
    single_blocks_5_linear2_weight = params['single_blocks_5_linear2_weight']
    single_blocks_5_model_model_shape_0_output = cache['single_blocks_5_model_model_shape_0_output']
    single_blocks_5_model_model_shape_1_output = cache['single_blocks_5_model_model_shape_1_output']
    single_blocks_5_model_model_tensoritem_0_index = cache['single_blocks_5_model_model_tensoritem_0_index']
    single_blocks_5_model_model_tensoritem_1_index = cache['single_blocks_5_model_model_tensoritem_1_index']
    single_blocks_5_model_model_tensoritem_2_index = cache['single_blocks_5_model_model_tensoritem_2_index']
    single_blocks_5_model_model_tensoritem_3_index = cache['single_blocks_5_model_model_tensoritem_3_index']
    single_blocks_5_model_model_tensoritem_4_index = cache['single_blocks_5_model_model_tensoritem_4_index']
    single_blocks_5_model_model_tensoritem_5_index = cache['single_blocks_5_model_model_tensoritem_5_index']
    single_blocks_5_model_model_tensoritem_6_index = cache['single_blocks_5_model_model_tensoritem_6_index']
    single_blocks_5_model_model_tensoritem_7_index = cache['single_blocks_5_model_model_tensoritem_7_index']
    single_blocks_5_model_model_totuple_0_output = cache['single_blocks_5_model_model_totuple_0_output']
    single_blocks_5_model_model_totuple_1_output = cache['single_blocks_5_model_model_totuple_1_output']
    single_blocks_5_model_scaleddotproduct_attn_mask = cache['single_blocks_5_model_scaleddotproduct_attn_mask']
    single_blocks_5_model_totuple_output = cache['single_blocks_5_model_totuple_output']
    single_blocks_5_model_transpose_axes = cache['single_blocks_5_model_transpose_axes']
    single_blocks_5_modulation_lin_bias = params['single_blocks_5_modulation_lin_bias']
    single_blocks_5_modulation_lin_transpose_axes = cache['single_blocks_5_modulation_lin_transpose_axes']
    single_blocks_5_modulation_lin_weight = params['single_blocks_5_modulation_lin_weight']
    single_blocks_5_modulation_silu_add_left = cache['single_blocks_5_modulation_silu_add_left']
    single_blocks_5_modulation_split_axis = cache['single_blocks_5_modulation_split_axis']
    single_blocks_5_modulation_split_split_size = cache['single_blocks_5_modulation_split_split_size']
    single_blocks_5_modulation_tensoritem_index = cache['single_blocks_5_modulation_tensoritem_index']
    single_blocks_5_norm_key_norm_add_right = cache['single_blocks_5_norm_key_norm_add_right']
    single_blocks_5_norm_key_norm_divide_numerator = cache['single_blocks_5_norm_key_norm_divide_numerator']
    single_blocks_5_norm_key_norm_mean_axis = cache['single_blocks_5_norm_key_norm_mean_axis']
    single_blocks_5_norm_key_norm_mean_keepdim = cache['single_blocks_5_norm_key_norm_mean_keepdim']
    single_blocks_5_norm_key_norm_power_exponent = cache['single_blocks_5_norm_key_norm_power_exponent']
    single_blocks_5_norm_key_norm_scale = params['single_blocks_5_norm_key_norm_scale']
    single_blocks_5_norm_query_norm_add_right = cache['single_blocks_5_norm_query_norm_add_right']
    single_blocks_5_norm_query_norm_divide_numerator = cache['single_blocks_5_norm_query_norm_divide_numerator']
    single_blocks_5_norm_query_norm_mean_axis = cache['single_blocks_5_norm_query_norm_mean_axis']
    single_blocks_5_norm_query_norm_mean_keepdim = cache['single_blocks_5_norm_query_norm_mean_keepdim']
    single_blocks_5_norm_query_norm_power_exponent = cache['single_blocks_5_norm_query_norm_power_exponent']
    single_blocks_5_norm_query_norm_scale = params['single_blocks_5_norm_query_norm_scale']
    single_blocks_5_pre_norm_add_right = cache['single_blocks_5_pre_norm_add_right']
    single_blocks_5_pre_norm_mean_axis = cache['single_blocks_5_pre_norm_mean_axis']
    single_blocks_5_pre_norm_mean_keepdim = cache['single_blocks_5_pre_norm_mean_keepdim']
    single_blocks_5_pre_norm_variance_axis = cache['single_blocks_5_pre_norm_variance_axis']
    single_blocks_5_pre_norm_variance_correction = cache['single_blocks_5_pre_norm_variance_correction']
    single_blocks_5_pre_norm_variance_keepdim = cache['single_blocks_5_pre_norm_variance_keepdim']
    single_blocks_5_tensoritem_0_index = cache['single_blocks_5_tensoritem_0_index']
    single_blocks_5_tensoritem_1_index = cache['single_blocks_5_tensoritem_1_index']
    single_blocks_5_tensoritem_2_index = cache['single_blocks_5_tensoritem_2_index']
    single_blocks_5_tensoritem_3_index = cache['single_blocks_5_tensoritem_3_index']
    single_blocks_5_tensoritem_4_index = cache['single_blocks_5_tensoritem_4_index']
    single_blocks_5_tensoritem_5_index = cache['single_blocks_5_tensoritem_5_index']
    single_blocks_5_tensoritem_6_index = cache['single_blocks_5_tensoritem_6_index']
    single_blocks_5_tensoritem_7_index = cache['single_blocks_5_tensoritem_7_index']
    single_blocks_5_totuple_output = cache['single_blocks_5_totuple_output']
    single_blocks_5_transpose_axes = cache['single_blocks_5_transpose_axes']
    single_blocks_6_add_0_left = cache['single_blocks_6_add_0_left']
    single_blocks_6_concat_axis = cache['single_blocks_6_concat_axis']
    single_blocks_6_gelu_approximate = cache['single_blocks_6_gelu_approximate']
    single_blocks_6_linear1_bias = params['single_blocks_6_linear1_bias']
    single_blocks_6_linear1_transpose_axes = cache['single_blocks_6_linear1_transpose_axes']
    single_blocks_6_linear1_weight = params['single_blocks_6_linear1_weight']
    single_blocks_6_linear2_bias = params['single_blocks_6_linear2_bias']
    single_blocks_6_linear2_transpose_axes = cache['single_blocks_6_linear2_transpose_axes']
    single_blocks_6_linear2_weight = params['single_blocks_6_linear2_weight']
    single_blocks_6_model_model_shape_0_output = cache['single_blocks_6_model_model_shape_0_output']
    single_blocks_6_model_model_shape_1_output = cache['single_blocks_6_model_model_shape_1_output']
    single_blocks_6_model_model_tensoritem_0_index = cache['single_blocks_6_model_model_tensoritem_0_index']
    single_blocks_6_model_model_tensoritem_1_index = cache['single_blocks_6_model_model_tensoritem_1_index']
    single_blocks_6_model_model_tensoritem_2_index = cache['single_blocks_6_model_model_tensoritem_2_index']
    single_blocks_6_model_model_tensoritem_3_index = cache['single_blocks_6_model_model_tensoritem_3_index']
    single_blocks_6_model_model_tensoritem_4_index = cache['single_blocks_6_model_model_tensoritem_4_index']
    single_blocks_6_model_model_tensoritem_5_index = cache['single_blocks_6_model_model_tensoritem_5_index']
    single_blocks_6_model_model_tensoritem_6_index = cache['single_blocks_6_model_model_tensoritem_6_index']
    single_blocks_6_model_model_tensoritem_7_index = cache['single_blocks_6_model_model_tensoritem_7_index']
    single_blocks_6_model_model_totuple_0_output = cache['single_blocks_6_model_model_totuple_0_output']
    single_blocks_6_model_model_totuple_1_output = cache['single_blocks_6_model_model_totuple_1_output']
    single_blocks_6_model_scaleddotproduct_attn_mask = cache['single_blocks_6_model_scaleddotproduct_attn_mask']
    single_blocks_6_model_totuple_output = cache['single_blocks_6_model_totuple_output']
    single_blocks_6_model_transpose_axes = cache['single_blocks_6_model_transpose_axes']
    single_blocks_6_modulation_lin_bias = params['single_blocks_6_modulation_lin_bias']
    single_blocks_6_modulation_lin_transpose_axes = cache['single_blocks_6_modulation_lin_transpose_axes']
    single_blocks_6_modulation_lin_weight = params['single_blocks_6_modulation_lin_weight']
    single_blocks_6_modulation_silu_add_left = cache['single_blocks_6_modulation_silu_add_left']
    single_blocks_6_modulation_split_axis = cache['single_blocks_6_modulation_split_axis']
    single_blocks_6_modulation_split_split_size = cache['single_blocks_6_modulation_split_split_size']
    single_blocks_6_modulation_tensoritem_index = cache['single_blocks_6_modulation_tensoritem_index']
    single_blocks_6_norm_key_norm_add_right = cache['single_blocks_6_norm_key_norm_add_right']
    single_blocks_6_norm_key_norm_divide_numerator = cache['single_blocks_6_norm_key_norm_divide_numerator']
    single_blocks_6_norm_key_norm_mean_axis = cache['single_blocks_6_norm_key_norm_mean_axis']
    single_blocks_6_norm_key_norm_mean_keepdim = cache['single_blocks_6_norm_key_norm_mean_keepdim']
    single_blocks_6_norm_key_norm_power_exponent = cache['single_blocks_6_norm_key_norm_power_exponent']
    single_blocks_6_norm_key_norm_scale = params['single_blocks_6_norm_key_norm_scale']
    single_blocks_6_norm_query_norm_add_right = cache['single_blocks_6_norm_query_norm_add_right']
    single_blocks_6_norm_query_norm_divide_numerator = cache['single_blocks_6_norm_query_norm_divide_numerator']
    single_blocks_6_norm_query_norm_mean_axis = cache['single_blocks_6_norm_query_norm_mean_axis']
    single_blocks_6_norm_query_norm_mean_keepdim = cache['single_blocks_6_norm_query_norm_mean_keepdim']
    single_blocks_6_norm_query_norm_power_exponent = cache['single_blocks_6_norm_query_norm_power_exponent']
    single_blocks_6_norm_query_norm_scale = params['single_blocks_6_norm_query_norm_scale']
    single_blocks_6_pre_norm_add_right = cache['single_blocks_6_pre_norm_add_right']
    single_blocks_6_pre_norm_mean_axis = cache['single_blocks_6_pre_norm_mean_axis']
    single_blocks_6_pre_norm_mean_keepdim = cache['single_blocks_6_pre_norm_mean_keepdim']
    single_blocks_6_pre_norm_variance_axis = cache['single_blocks_6_pre_norm_variance_axis']
    single_blocks_6_pre_norm_variance_correction = cache['single_blocks_6_pre_norm_variance_correction']
    single_blocks_6_pre_norm_variance_keepdim = cache['single_blocks_6_pre_norm_variance_keepdim']
    single_blocks_6_tensoritem_0_index = cache['single_blocks_6_tensoritem_0_index']
    single_blocks_6_tensoritem_1_index = cache['single_blocks_6_tensoritem_1_index']
    single_blocks_6_tensoritem_2_index = cache['single_blocks_6_tensoritem_2_index']
    single_blocks_6_tensoritem_3_index = cache['single_blocks_6_tensoritem_3_index']
    single_blocks_6_tensoritem_4_index = cache['single_blocks_6_tensoritem_4_index']
    single_blocks_6_tensoritem_5_index = cache['single_blocks_6_tensoritem_5_index']
    single_blocks_6_tensoritem_6_index = cache['single_blocks_6_tensoritem_6_index']
    single_blocks_6_tensoritem_7_index = cache['single_blocks_6_tensoritem_7_index']
    single_blocks_6_totuple_output = cache['single_blocks_6_totuple_output']
    single_blocks_6_transpose_axes = cache['single_blocks_6_transpose_axes']
    single_blocks_7_add_0_left = cache['single_blocks_7_add_0_left']
    single_blocks_7_concat_axis = cache['single_blocks_7_concat_axis']
    single_blocks_7_gelu_approximate = cache['single_blocks_7_gelu_approximate']
    single_blocks_7_linear1_bias = params['single_blocks_7_linear1_bias']
    single_blocks_7_linear1_transpose_axes = cache['single_blocks_7_linear1_transpose_axes']
    single_blocks_7_linear1_weight = params['single_blocks_7_linear1_weight']
    single_blocks_7_linear2_bias = params['single_blocks_7_linear2_bias']
    single_blocks_7_linear2_transpose_axes = cache['single_blocks_7_linear2_transpose_axes']
    single_blocks_7_linear2_weight = params['single_blocks_7_linear2_weight']
    single_blocks_7_model_model_shape_0_output = cache['single_blocks_7_model_model_shape_0_output']
    single_blocks_7_model_model_shape_1_output = cache['single_blocks_7_model_model_shape_1_output']
    single_blocks_7_model_model_tensoritem_0_index = cache['single_blocks_7_model_model_tensoritem_0_index']
    single_blocks_7_model_model_tensoritem_1_index = cache['single_blocks_7_model_model_tensoritem_1_index']
    single_blocks_7_model_model_tensoritem_2_index = cache['single_blocks_7_model_model_tensoritem_2_index']
    single_blocks_7_model_model_tensoritem_3_index = cache['single_blocks_7_model_model_tensoritem_3_index']
    single_blocks_7_model_model_tensoritem_4_index = cache['single_blocks_7_model_model_tensoritem_4_index']
    single_blocks_7_model_model_tensoritem_5_index = cache['single_blocks_7_model_model_tensoritem_5_index']
    single_blocks_7_model_model_tensoritem_6_index = cache['single_blocks_7_model_model_tensoritem_6_index']
    single_blocks_7_model_model_tensoritem_7_index = cache['single_blocks_7_model_model_tensoritem_7_index']
    single_blocks_7_model_model_totuple_0_output = cache['single_blocks_7_model_model_totuple_0_output']
    single_blocks_7_model_model_totuple_1_output = cache['single_blocks_7_model_model_totuple_1_output']
    single_blocks_7_model_scaleddotproduct_attn_mask = cache['single_blocks_7_model_scaleddotproduct_attn_mask']
    single_blocks_7_model_totuple_output = cache['single_blocks_7_model_totuple_output']
    single_blocks_7_model_transpose_axes = cache['single_blocks_7_model_transpose_axes']
    single_blocks_7_modulation_lin_bias = params['single_blocks_7_modulation_lin_bias']
    single_blocks_7_modulation_lin_transpose_axes = cache['single_blocks_7_modulation_lin_transpose_axes']
    single_blocks_7_modulation_lin_weight = params['single_blocks_7_modulation_lin_weight']
    single_blocks_7_modulation_silu_add_left = cache['single_blocks_7_modulation_silu_add_left']
    single_blocks_7_modulation_split_axis = cache['single_blocks_7_modulation_split_axis']
    single_blocks_7_modulation_split_split_size = cache['single_blocks_7_modulation_split_split_size']
    single_blocks_7_modulation_tensoritem_index = cache['single_blocks_7_modulation_tensoritem_index']
    single_blocks_7_norm_key_norm_add_right = cache['single_blocks_7_norm_key_norm_add_right']
    single_blocks_7_norm_key_norm_divide_numerator = cache['single_blocks_7_norm_key_norm_divide_numerator']
    single_blocks_7_norm_key_norm_mean_axis = cache['single_blocks_7_norm_key_norm_mean_axis']
    single_blocks_7_norm_key_norm_mean_keepdim = cache['single_blocks_7_norm_key_norm_mean_keepdim']
    single_blocks_7_norm_key_norm_power_exponent = cache['single_blocks_7_norm_key_norm_power_exponent']
    single_blocks_7_norm_key_norm_scale = params['single_blocks_7_norm_key_norm_scale']
    single_blocks_7_norm_query_norm_add_right = cache['single_blocks_7_norm_query_norm_add_right']
    single_blocks_7_norm_query_norm_divide_numerator = cache['single_blocks_7_norm_query_norm_divide_numerator']
    single_blocks_7_norm_query_norm_mean_axis = cache['single_blocks_7_norm_query_norm_mean_axis']
    single_blocks_7_norm_query_norm_mean_keepdim = cache['single_blocks_7_norm_query_norm_mean_keepdim']
    single_blocks_7_norm_query_norm_power_exponent = cache['single_blocks_7_norm_query_norm_power_exponent']
    single_blocks_7_norm_query_norm_scale = params['single_blocks_7_norm_query_norm_scale']
    single_blocks_7_pre_norm_add_right = cache['single_blocks_7_pre_norm_add_right']
    single_blocks_7_pre_norm_mean_axis = cache['single_blocks_7_pre_norm_mean_axis']
    single_blocks_7_pre_norm_mean_keepdim = cache['single_blocks_7_pre_norm_mean_keepdim']
    single_blocks_7_pre_norm_variance_axis = cache['single_blocks_7_pre_norm_variance_axis']
    single_blocks_7_pre_norm_variance_correction = cache['single_blocks_7_pre_norm_variance_correction']
    single_blocks_7_pre_norm_variance_keepdim = cache['single_blocks_7_pre_norm_variance_keepdim']
    single_blocks_7_tensoritem_0_index = cache['single_blocks_7_tensoritem_0_index']
    single_blocks_7_tensoritem_1_index = cache['single_blocks_7_tensoritem_1_index']
    single_blocks_7_tensoritem_2_index = cache['single_blocks_7_tensoritem_2_index']
    single_blocks_7_tensoritem_3_index = cache['single_blocks_7_tensoritem_3_index']
    single_blocks_7_tensoritem_4_index = cache['single_blocks_7_tensoritem_4_index']
    single_blocks_7_tensoritem_5_index = cache['single_blocks_7_tensoritem_5_index']
    single_blocks_7_tensoritem_6_index = cache['single_blocks_7_tensoritem_6_index']
    single_blocks_7_tensoritem_7_index = cache['single_blocks_7_tensoritem_7_index']
    single_blocks_7_totuple_output = cache['single_blocks_7_totuple_output']
    single_blocks_7_transpose_axes = cache['single_blocks_7_transpose_axes']
    single_blocks_8_add_0_left = cache['single_blocks_8_add_0_left']
    single_blocks_8_concat_axis = cache['single_blocks_8_concat_axis']
    single_blocks_8_gelu_approximate = cache['single_blocks_8_gelu_approximate']
    single_blocks_8_linear1_bias = params['single_blocks_8_linear1_bias']
    single_blocks_8_linear1_transpose_axes = cache['single_blocks_8_linear1_transpose_axes']
    single_blocks_8_linear1_weight = params['single_blocks_8_linear1_weight']
    single_blocks_8_linear2_bias = params['single_blocks_8_linear2_bias']
    single_blocks_8_linear2_transpose_axes = cache['single_blocks_8_linear2_transpose_axes']
    single_blocks_8_linear2_weight = params['single_blocks_8_linear2_weight']
    single_blocks_8_model_model_shape_0_output = cache['single_blocks_8_model_model_shape_0_output']
    single_blocks_8_model_model_shape_1_output = cache['single_blocks_8_model_model_shape_1_output']
    single_blocks_8_model_model_tensoritem_0_index = cache['single_blocks_8_model_model_tensoritem_0_index']
    single_blocks_8_model_model_tensoritem_1_index = cache['single_blocks_8_model_model_tensoritem_1_index']
    single_blocks_8_model_model_tensoritem_2_index = cache['single_blocks_8_model_model_tensoritem_2_index']
    single_blocks_8_model_model_tensoritem_3_index = cache['single_blocks_8_model_model_tensoritem_3_index']
    single_blocks_8_model_model_tensoritem_4_index = cache['single_blocks_8_model_model_tensoritem_4_index']
    single_blocks_8_model_model_tensoritem_5_index = cache['single_blocks_8_model_model_tensoritem_5_index']
    single_blocks_8_model_model_tensoritem_6_index = cache['single_blocks_8_model_model_tensoritem_6_index']
    single_blocks_8_model_model_tensoritem_7_index = cache['single_blocks_8_model_model_tensoritem_7_index']
    single_blocks_8_model_model_totuple_0_output = cache['single_blocks_8_model_model_totuple_0_output']
    single_blocks_8_model_model_totuple_1_output = cache['single_blocks_8_model_model_totuple_1_output']
    single_blocks_8_model_scaleddotproduct_attn_mask = cache['single_blocks_8_model_scaleddotproduct_attn_mask']
    single_blocks_8_model_totuple_output = cache['single_blocks_8_model_totuple_output']
    single_blocks_8_model_transpose_axes = cache['single_blocks_8_model_transpose_axes']
    single_blocks_8_modulation_lin_bias = params['single_blocks_8_modulation_lin_bias']
    single_blocks_8_modulation_lin_transpose_axes = cache['single_blocks_8_modulation_lin_transpose_axes']
    single_blocks_8_modulation_lin_weight = params['single_blocks_8_modulation_lin_weight']
    single_blocks_8_modulation_silu_add_left = cache['single_blocks_8_modulation_silu_add_left']
    single_blocks_8_modulation_split_axis = cache['single_blocks_8_modulation_split_axis']
    single_blocks_8_modulation_split_split_size = cache['single_blocks_8_modulation_split_split_size']
    single_blocks_8_modulation_tensoritem_index = cache['single_blocks_8_modulation_tensoritem_index']
    single_blocks_8_norm_key_norm_add_right = cache['single_blocks_8_norm_key_norm_add_right']
    single_blocks_8_norm_key_norm_divide_numerator = cache['single_blocks_8_norm_key_norm_divide_numerator']
    single_blocks_8_norm_key_norm_mean_axis = cache['single_blocks_8_norm_key_norm_mean_axis']
    single_blocks_8_norm_key_norm_mean_keepdim = cache['single_blocks_8_norm_key_norm_mean_keepdim']
    single_blocks_8_norm_key_norm_power_exponent = cache['single_blocks_8_norm_key_norm_power_exponent']
    single_blocks_8_norm_key_norm_scale = params['single_blocks_8_norm_key_norm_scale']
    single_blocks_8_norm_query_norm_add_right = cache['single_blocks_8_norm_query_norm_add_right']
    single_blocks_8_norm_query_norm_divide_numerator = cache['single_blocks_8_norm_query_norm_divide_numerator']
    single_blocks_8_norm_query_norm_mean_axis = cache['single_blocks_8_norm_query_norm_mean_axis']
    single_blocks_8_norm_query_norm_mean_keepdim = cache['single_blocks_8_norm_query_norm_mean_keepdim']
    single_blocks_8_norm_query_norm_power_exponent = cache['single_blocks_8_norm_query_norm_power_exponent']
    single_blocks_8_norm_query_norm_scale = params['single_blocks_8_norm_query_norm_scale']
    single_blocks_8_pre_norm_add_right = cache['single_blocks_8_pre_norm_add_right']
    single_blocks_8_pre_norm_mean_axis = cache['single_blocks_8_pre_norm_mean_axis']
    single_blocks_8_pre_norm_mean_keepdim = cache['single_blocks_8_pre_norm_mean_keepdim']
    single_blocks_8_pre_norm_variance_axis = cache['single_blocks_8_pre_norm_variance_axis']
    single_blocks_8_pre_norm_variance_correction = cache['single_blocks_8_pre_norm_variance_correction']
    single_blocks_8_pre_norm_variance_keepdim = cache['single_blocks_8_pre_norm_variance_keepdim']
    single_blocks_8_tensoritem_0_index = cache['single_blocks_8_tensoritem_0_index']
    single_blocks_8_tensoritem_1_index = cache['single_blocks_8_tensoritem_1_index']
    single_blocks_8_tensoritem_2_index = cache['single_blocks_8_tensoritem_2_index']
    single_blocks_8_tensoritem_3_index = cache['single_blocks_8_tensoritem_3_index']
    single_blocks_8_tensoritem_4_index = cache['single_blocks_8_tensoritem_4_index']
    single_blocks_8_tensoritem_5_index = cache['single_blocks_8_tensoritem_5_index']
    single_blocks_8_tensoritem_6_index = cache['single_blocks_8_tensoritem_6_index']
    single_blocks_8_tensoritem_7_index = cache['single_blocks_8_tensoritem_7_index']
    single_blocks_8_totuple_output = cache['single_blocks_8_totuple_output']
    single_blocks_8_transpose_axes = cache['single_blocks_8_transpose_axes']
    single_blocks_9_add_0_left = cache['single_blocks_9_add_0_left']
    single_blocks_9_concat_axis = cache['single_blocks_9_concat_axis']
    single_blocks_9_gelu_approximate = cache['single_blocks_9_gelu_approximate']
    single_blocks_9_linear1_bias = params['single_blocks_9_linear1_bias']
    single_blocks_9_linear1_transpose_axes = cache['single_blocks_9_linear1_transpose_axes']
    single_blocks_9_linear1_weight = params['single_blocks_9_linear1_weight']
    single_blocks_9_linear2_bias = params['single_blocks_9_linear2_bias']
    single_blocks_9_linear2_transpose_axes = cache['single_blocks_9_linear2_transpose_axes']
    single_blocks_9_linear2_weight = params['single_blocks_9_linear2_weight']
    single_blocks_9_model_model_shape_0_output = cache['single_blocks_9_model_model_shape_0_output']
    single_blocks_9_model_model_shape_1_output = cache['single_blocks_9_model_model_shape_1_output']
    single_blocks_9_model_model_tensoritem_0_index = cache['single_blocks_9_model_model_tensoritem_0_index']
    single_blocks_9_model_model_tensoritem_1_index = cache['single_blocks_9_model_model_tensoritem_1_index']
    single_blocks_9_model_model_tensoritem_2_index = cache['single_blocks_9_model_model_tensoritem_2_index']
    single_blocks_9_model_model_tensoritem_3_index = cache['single_blocks_9_model_model_tensoritem_3_index']
    single_blocks_9_model_model_tensoritem_4_index = cache['single_blocks_9_model_model_tensoritem_4_index']
    single_blocks_9_model_model_tensoritem_5_index = cache['single_blocks_9_model_model_tensoritem_5_index']
    single_blocks_9_model_model_tensoritem_6_index = cache['single_blocks_9_model_model_tensoritem_6_index']
    single_blocks_9_model_model_tensoritem_7_index = cache['single_blocks_9_model_model_tensoritem_7_index']
    single_blocks_9_model_model_totuple_0_output = cache['single_blocks_9_model_model_totuple_0_output']
    single_blocks_9_model_model_totuple_1_output = cache['single_blocks_9_model_model_totuple_1_output']
    single_blocks_9_model_scaleddotproduct_attn_mask = cache['single_blocks_9_model_scaleddotproduct_attn_mask']
    single_blocks_9_model_totuple_output = cache['single_blocks_9_model_totuple_output']
    single_blocks_9_model_transpose_axes = cache['single_blocks_9_model_transpose_axes']
    single_blocks_9_modulation_lin_bias = params['single_blocks_9_modulation_lin_bias']
    single_blocks_9_modulation_lin_transpose_axes = cache['single_blocks_9_modulation_lin_transpose_axes']
    single_blocks_9_modulation_lin_weight = params['single_blocks_9_modulation_lin_weight']
    single_blocks_9_modulation_silu_add_left = cache['single_blocks_9_modulation_silu_add_left']
    single_blocks_9_modulation_split_axis = cache['single_blocks_9_modulation_split_axis']
    single_blocks_9_modulation_split_split_size = cache['single_blocks_9_modulation_split_split_size']
    single_blocks_9_modulation_tensoritem_index = cache['single_blocks_9_modulation_tensoritem_index']
    single_blocks_9_norm_key_norm_add_right = cache['single_blocks_9_norm_key_norm_add_right']
    single_blocks_9_norm_key_norm_divide_numerator = cache['single_blocks_9_norm_key_norm_divide_numerator']
    single_blocks_9_norm_key_norm_mean_axis = cache['single_blocks_9_norm_key_norm_mean_axis']
    single_blocks_9_norm_key_norm_mean_keepdim = cache['single_blocks_9_norm_key_norm_mean_keepdim']
    single_blocks_9_norm_key_norm_power_exponent = cache['single_blocks_9_norm_key_norm_power_exponent']
    single_blocks_9_norm_key_norm_scale = params['single_blocks_9_norm_key_norm_scale']
    single_blocks_9_norm_query_norm_add_right = cache['single_blocks_9_norm_query_norm_add_right']
    single_blocks_9_norm_query_norm_divide_numerator = cache['single_blocks_9_norm_query_norm_divide_numerator']
    single_blocks_9_norm_query_norm_mean_axis = cache['single_blocks_9_norm_query_norm_mean_axis']
    single_blocks_9_norm_query_norm_mean_keepdim = cache['single_blocks_9_norm_query_norm_mean_keepdim']
    single_blocks_9_norm_query_norm_power_exponent = cache['single_blocks_9_norm_query_norm_power_exponent']
    single_blocks_9_norm_query_norm_scale = params['single_blocks_9_norm_query_norm_scale']
    single_blocks_9_pre_norm_add_right = cache['single_blocks_9_pre_norm_add_right']
    single_blocks_9_pre_norm_mean_axis = cache['single_blocks_9_pre_norm_mean_axis']
    single_blocks_9_pre_norm_mean_keepdim = cache['single_blocks_9_pre_norm_mean_keepdim']
    single_blocks_9_pre_norm_variance_axis = cache['single_blocks_9_pre_norm_variance_axis']
    single_blocks_9_pre_norm_variance_correction = cache['single_blocks_9_pre_norm_variance_correction']
    single_blocks_9_pre_norm_variance_keepdim = cache['single_blocks_9_pre_norm_variance_keepdim']
    single_blocks_9_tensoritem_0_index = cache['single_blocks_9_tensoritem_0_index']
    single_blocks_9_tensoritem_1_index = cache['single_blocks_9_tensoritem_1_index']
    single_blocks_9_tensoritem_2_index = cache['single_blocks_9_tensoritem_2_index']
    single_blocks_9_tensoritem_3_index = cache['single_blocks_9_tensoritem_3_index']
    single_blocks_9_tensoritem_4_index = cache['single_blocks_9_tensoritem_4_index']
    single_blocks_9_tensoritem_5_index = cache['single_blocks_9_tensoritem_5_index']
    single_blocks_9_tensoritem_6_index = cache['single_blocks_9_tensoritem_6_index']
    single_blocks_9_tensoritem_7_index = cache['single_blocks_9_tensoritem_7_index']
    single_blocks_9_totuple_output = cache['single_blocks_9_totuple_output']
    single_blocks_9_transpose_axes = cache['single_blocks_9_transpose_axes']
    tensoritem_index = cache['tensoritem_index']
    time_in_in_layer_bias = params['time_in_in_layer_bias']
    time_in_in_layer_transpose_axes = cache['time_in_in_layer_transpose_axes']
    time_in_in_layer_weight = params['time_in_in_layer_weight']
    time_in_out_layer_bias = params['time_in_out_layer_bias']
    time_in_out_layer_transpose_axes = cache['time_in_out_layer_transpose_axes']
    time_in_out_layer_weight = params['time_in_out_layer_weight']
    time_in_silu_add_left = cache['time_in_silu_add_left']
    timesteps = data['timesteps']
    txt = data['txt']
    txt_ids = data['txt_ids']
    txt_in_bias = params['txt_in_bias']
    txt_in_transpose_axes = cache['txt_in_transpose_axes']
    txt_in_weight = params['txt_in_weight']
    vector_in_in_layer_bias = params['vector_in_in_layer_bias']
    vector_in_in_layer_transpose_axes = cache['vector_in_in_layer_transpose_axes']
    vector_in_in_layer_weight = params['vector_in_in_layer_weight']
    vector_in_out_layer_bias = params['vector_in_out_layer_bias']
    vector_in_out_layer_transpose_axes = cache['vector_in_out_layer_transpose_axes']
    vector_in_out_layer_weight = params['vector_in_out_layer_weight']
    vector_in_silu_add_left = cache['vector_in_silu_add_left']
    y = data['y']
    model_0_multiply_0_output = multiplication(timesteps, model_0_multiply_0_right)
    model_0_tensoritem_0_output = tensor_item(model_0_multiply_0_output, model_0_tensoritem_0_index)
    model_0_multiply_2_output = multiplication(model_0_tensoritem_0_output, model_0_tensoritem_1_output)
    model_0_cos = cos(model_0_multiply_2_output)
    model_0_sin = sin(model_0_multiply_2_output)
    model_0_embedding = concat(model_0_cos, model_0_sin, axis=model_0_concat_axis)
    time_in_in_layer_transpose_output = transpose(time_in_in_layer_weight, time_in_in_layer_transpose_axes)
    time_in_in_layer_matrixmultiply_output = matrix_multiplication(model_0_embedding, time_in_in_layer_transpose_output)
    time_in_in_layer_output = add(time_in_in_layer_matrixmultiply_output, time_in_in_layer_bias)
    time_in_silu_minus = minus(time_in_in_layer_output)
    time_in_silu_exp = exp(time_in_silu_minus)
    time_in_silu_add = add(time_in_silu_add_left, time_in_silu_exp)
    time_in_silu_output = divide(time_in_in_layer_output, time_in_silu_add)
    time_in_out_layer_transpose_output = transpose(time_in_out_layer_weight, time_in_out_layer_transpose_axes)
    time_in_out_layer_matrixmultiply_output = matrix_multiplication(time_in_silu_output, time_in_out_layer_transpose_output)
    time_vec = add(time_in_out_layer_matrixmultiply_output, time_in_out_layer_bias)
    vector_in_in_layer_transpose_output = transpose(vector_in_in_layer_weight, vector_in_in_layer_transpose_axes)
    vector_in_in_layer_matrixmultiply_output = matrix_multiplication(y, vector_in_in_layer_transpose_output)
    vector_in_in_layer_output = add(vector_in_in_layer_matrixmultiply_output, vector_in_in_layer_bias)
    vector_in_silu_minus = minus(vector_in_in_layer_output)
    vector_in_silu_exp = exp(vector_in_silu_minus)
    vector_in_silu_add = add(vector_in_silu_add_left, vector_in_silu_exp)
    vector_in_silu_output = divide(vector_in_in_layer_output, vector_in_silu_add)
    vector_in_out_layer_transpose_output = transpose(vector_in_out_layer_weight, vector_in_out_layer_transpose_axes)
    vector_in_out_layer_matrixmultiply_output = matrix_multiplication(vector_in_silu_output, vector_in_out_layer_transpose_output)
    y_vec = add(vector_in_out_layer_matrixmultiply_output, vector_in_out_layer_bias)
    vec = add(time_vec, y_vec)
    img_in_transpose_output = transpose(img_in_weight, img_in_transpose_axes)
    img_in_matrixmultiply_output = matrix_multiplication(img, img_in_transpose_output)
    img_vec = add(img_in_matrixmultiply_output, img_in_bias)
    txt_in_transpose_output = transpose(txt_in_weight, txt_in_transpose_axes)
    txt_in_matrixmultiply_output = matrix_multiplication(txt, txt_in_transpose_output)
    txt_vec = add(txt_in_matrixmultiply_output, txt_in_bias)
    ids = concat(txt_ids, img_ids, axis=concat_0_axis)
    model_1_tensoritem_0_output = tensor_item(ids, model_1_tensoritem_0_index)
    model_1_model_0_tensoritem_0_output = tensor_item(model_1_tensoritem_0_output, model_1_model_0_tensoritem_0_index)
    model_1_model_0_multiply_output = multiplication(model_1_model_0_tensoritem_0_output, model_1_model_0_divide_1_output)
    model_1_model_0_cos = cos(model_1_model_0_multiply_output)
    model_1_model_0_sin = sin(model_1_model_0_multiply_output)
    model_1_model_0_tensoritem_1_output = tensor_item(model_1_model_0_cos, model_1_model_0_tensoritem_1_index)
    model_1_model_0_tensoritem_2_output = tensor_item(model_1_model_0_sin, model_1_model_0_tensoritem_2_index)
    model_1_model_0_minus_output = minus(model_1_model_0_tensoritem_2_output)
    model_1_model_0_tensoritem_3_output = tensor_item(model_1_model_0_sin, model_1_model_0_tensoritem_3_index)
    model_1_model_0_tensoritem_4_output = tensor_item(model_1_model_0_cos, model_1_model_0_tensoritem_4_index)
    model_1_model_0_concat_output = concat(model_1_model_0_tensoritem_1_output, model_1_model_0_minus_output, model_1_model_0_tensoritem_3_output, model_1_model_0_tensoritem_4_output, axis=model_1_model_0_concat_axis)
    model_1_out0 = reshape(model_1_model_0_concat_output, model_1_model_0_totuple_output)
    model_1_tensoritem_1_output = tensor_item(ids, model_1_tensoritem_1_index)
    model_1_model_1_tensoritem_0_output = tensor_item(model_1_tensoritem_1_output, model_1_model_1_tensoritem_0_index)
    model_1_model_1_multiply_output = multiplication(model_1_model_1_tensoritem_0_output, model_1_model_1_divide_1_output)
    model_1_model_1_cos = cos(model_1_model_1_multiply_output)
    model_1_model_1_sin = sin(model_1_model_1_multiply_output)
    model_1_model_1_tensoritem_1_output = tensor_item(model_1_model_1_cos, model_1_model_1_tensoritem_1_index)
    model_1_model_1_tensoritem_2_output = tensor_item(model_1_model_1_sin, model_1_model_1_tensoritem_2_index)
    model_1_model_1_minus_output = minus(model_1_model_1_tensoritem_2_output)
    model_1_model_1_tensoritem_3_output = tensor_item(model_1_model_1_sin, model_1_model_1_tensoritem_3_index)
    model_1_model_1_tensoritem_4_output = tensor_item(model_1_model_1_cos, model_1_model_1_tensoritem_4_index)
    model_1_model_1_concat_output = concat(model_1_model_1_tensoritem_1_output, model_1_model_1_minus_output, model_1_model_1_tensoritem_3_output, model_1_model_1_tensoritem_4_output, axis=model_1_model_1_concat_axis)
    model_1_out1 = reshape(model_1_model_1_concat_output, model_1_model_1_totuple_output)
    model_1_tensoritem_2_output = tensor_item(ids, model_1_tensoritem_2_index)
    model_1_model_2_tensoritem_0_output = tensor_item(model_1_tensoritem_2_output, model_1_model_2_tensoritem_0_index)
    model_1_model_2_multiply_output = multiplication(model_1_model_2_tensoritem_0_output, model_1_model_2_divide_1_output)
    model_1_model_2_cos = cos(model_1_model_2_multiply_output)
    model_1_model_2_sin = sin(model_1_model_2_multiply_output)
    model_1_model_2_tensoritem_1_output = tensor_item(model_1_model_2_cos, model_1_model_2_tensoritem_1_index)
    model_1_model_2_tensoritem_2_output = tensor_item(model_1_model_2_sin, model_1_model_2_tensoritem_2_index)
    model_1_model_2_minus_output = minus(model_1_model_2_tensoritem_2_output)
    model_1_model_2_tensoritem_3_output = tensor_item(model_1_model_2_sin, model_1_model_2_tensoritem_3_index)
    model_1_model_2_tensoritem_4_output = tensor_item(model_1_model_2_cos, model_1_model_2_tensoritem_4_index)
    model_1_model_2_concat_output = concat(model_1_model_2_tensoritem_1_output, model_1_model_2_minus_output, model_1_model_2_tensoritem_3_output, model_1_model_2_tensoritem_4_output, axis=model_1_model_2_concat_axis)
    model_1_out2 = reshape(model_1_model_2_concat_output, model_1_model_2_totuple_output)
    model_1_concat_out = concat(model_1_out0, model_1_out1, model_1_out2, axis=model_1_concat_axis)
    model_1_tensoritem_3_output = tensor_item(model_1_concat_out, model_1_tensoritem_3_index)
    double_blocks_0_img_mod_silu_minus = minus(vec)
    double_blocks_0_img_mod_silu_exp = exp(double_blocks_0_img_mod_silu_minus)
    double_blocks_0_img_mod_silu_add = add(double_blocks_0_img_mod_silu_add_left, double_blocks_0_img_mod_silu_exp)
    double_blocks_0_img_mod_silu_output = divide(vec, double_blocks_0_img_mod_silu_add)
    double_blocks_0_img_mod_lin_transpose_output = transpose(double_blocks_0_img_mod_lin_weight, double_blocks_0_img_mod_lin_transpose_axes)
    double_blocks_0_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_0_img_mod_silu_output, double_blocks_0_img_mod_lin_transpose_output)
    double_blocks_0_img_mod_lin_out = add(double_blocks_0_img_mod_lin_matrixmultiply_output, double_blocks_0_img_mod_lin_bias)
    double_blocks_0_img_mod_tensoritem_0_output = tensor_item(double_blocks_0_img_mod_lin_out, double_blocks_0_img_mod_tensoritem_0_index)
    double_blocks_0_img_mod_split_0_output = split(double_blocks_0_img_mod_tensoritem_0_output, double_blocks_0_img_mod_split_0_split_size, double_blocks_0_img_mod_split_0_axis)
    double_blocks_0_img_mod_tensoritem_1_output = tensor_item(double_blocks_0_img_mod_split_0_output, double_blocks_0_img_mod_tensoritem_1_index)
    double_blocks_0_img_mod_split_1_output = split(double_blocks_0_img_mod_tensoritem_1_output, double_blocks_0_img_mod_split_1_split_size, double_blocks_0_img_mod_split_1_axis)
    double_blocks_0_img_mod_tensoritem_2_output = tensor_item(double_blocks_0_img_mod_split_0_output, double_blocks_0_img_mod_tensoritem_2_index)
    double_blocks_0_img_mod_split_2_output = split(double_blocks_0_img_mod_tensoritem_2_output, double_blocks_0_img_mod_split_2_split_size, double_blocks_0_img_mod_split_2_axis)
    double_blocks_0_img_norm1_mean_output = reduce_mean(img_vec, axis=double_blocks_0_img_norm1_mean_axis, keepdim=double_blocks_0_img_norm1_mean_keepdim)
    double_blocks_0_img_norm1_subtract_output = subtract(img_vec, double_blocks_0_img_norm1_mean_output)
    double_blocks_0_img_norm1_variance_output = variance(img_vec, axis=double_blocks_0_img_norm1_variance_axis, keepdim=double_blocks_0_img_norm1_variance_keepdim, correction=double_blocks_0_img_norm1_variance_correction)
    double_blocks_0_img_norm1_add_output = add(double_blocks_0_img_norm1_variance_output, double_blocks_0_img_norm1_add_right)
    double_blocks_0_img_norm1_sqrt_output = sqrt(double_blocks_0_img_norm1_add_output)
    double_blocks_0_img_norm1_divide_output = divide(double_blocks_0_img_norm1_subtract_output, double_blocks_0_img_norm1_sqrt_output)
    double_blocks_0_tensoritem_0_output = tensor_item(double_blocks_0_img_mod_split_1_output, double_blocks_0_tensoritem_0_index)
    double_blocks_0_add_0_output = add(double_blocks_0_add_0_left, double_blocks_0_tensoritem_0_output)
    double_blocks_0_multiply_0_output = multiplication(double_blocks_0_add_0_output, double_blocks_0_img_norm1_divide_output)
    double_blocks_0_tensoritem_1_output = tensor_item(double_blocks_0_img_mod_split_1_output, double_blocks_0_tensoritem_1_index)
    double_blocks_0_add_1_output = add(double_blocks_0_multiply_0_output, double_blocks_0_tensoritem_1_output)
    double_blocks_0_img_attn_qkv_transpose_output = transpose(double_blocks_0_img_attn_qkv_weight, double_blocks_0_img_attn_qkv_transpose_axes)
    double_blocks_0_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_0_add_1_output, double_blocks_0_img_attn_qkv_transpose_output)
    double_blocks_0_img_qkv = add(double_blocks_0_img_attn_qkv_matrixmultiply_output, double_blocks_0_img_attn_qkv_bias)
    double_blocks_0_reshape_0_output = reshape(double_blocks_0_img_qkv, double_blocks_0_totuple_0_output)
    double_blocks_0_transpose_out = transpose(double_blocks_0_reshape_0_output, double_blocks_0_transpose_0_axes)
    double_blocks_0_tensoritem_2_output = tensor_item(double_blocks_0_transpose_out, double_blocks_0_tensoritem_2_index)
    double_blocks_0_tensoritem_3_output = tensor_item(double_blocks_0_transpose_out, double_blocks_0_tensoritem_3_index)
    double_blocks_0_img_attn_norm_query_norm_power_output = power(double_blocks_0_tensoritem_2_output, double_blocks_0_img_attn_norm_query_norm_power_exponent)
    double_blocks_0_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_0_img_attn_norm_query_norm_power_output, axis=double_blocks_0_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_0_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_0_img_attn_norm_query_norm_add_output = add(double_blocks_0_img_attn_norm_query_norm_mean_output, double_blocks_0_img_attn_norm_query_norm_add_right)
    double_blocks_0_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_0_img_attn_norm_query_norm_add_output)
    double_blocks_0_img_attn_norm_query_norm_divide_output = divide(double_blocks_0_img_attn_norm_query_norm_divide_numerator, double_blocks_0_img_attn_norm_query_norm_sqrt_output)
    double_blocks_0_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_0_tensoritem_2_output, double_blocks_0_img_attn_norm_query_norm_divide_output)
    double_blocks_0_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_0_img_attn_norm_query_norm_multiply_0_output, double_blocks_0_img_attn_norm_query_norm_scale)
    double_blocks_0_img_attn_norm_key_norm_power_output = power(double_blocks_0_tensoritem_3_output, double_blocks_0_img_attn_norm_key_norm_power_exponent)
    double_blocks_0_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_0_img_attn_norm_key_norm_power_output, axis=double_blocks_0_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_0_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_0_img_attn_norm_key_norm_add_output = add(double_blocks_0_img_attn_norm_key_norm_mean_output, double_blocks_0_img_attn_norm_key_norm_add_right)
    double_blocks_0_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_0_img_attn_norm_key_norm_add_output)
    double_blocks_0_img_attn_norm_key_norm_divide_output = divide(double_blocks_0_img_attn_norm_key_norm_divide_numerator, double_blocks_0_img_attn_norm_key_norm_sqrt_output)
    double_blocks_0_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_0_tensoritem_3_output, double_blocks_0_img_attn_norm_key_norm_divide_output)
    double_blocks_0_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_0_img_attn_norm_key_norm_multiply_0_output, double_blocks_0_img_attn_norm_key_norm_scale)
    double_blocks_0_txt_mod_silu_minus = minus(vec)
    double_blocks_0_txt_mod_silu_exp = exp(double_blocks_0_txt_mod_silu_minus)
    double_blocks_0_txt_mod_silu_add = add(double_blocks_0_txt_mod_silu_add_left, double_blocks_0_txt_mod_silu_exp)
    double_blocks_0_txt_mod_silu_output = divide(vec, double_blocks_0_txt_mod_silu_add)
    double_blocks_0_txt_mod_lin_transpose_output = transpose(double_blocks_0_txt_mod_lin_weight, double_blocks_0_txt_mod_lin_transpose_axes)
    double_blocks_0_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_0_txt_mod_silu_output, double_blocks_0_txt_mod_lin_transpose_output)
    double_blocks_0_txt_mod_lin_out = add(double_blocks_0_txt_mod_lin_matrixmultiply_output, double_blocks_0_txt_mod_lin_bias)
    double_blocks_0_txt_mod_tensoritem_0_output = tensor_item(double_blocks_0_txt_mod_lin_out, double_blocks_0_txt_mod_tensoritem_0_index)
    double_blocks_0_txt_mod_split_0_output = split(double_blocks_0_txt_mod_tensoritem_0_output, double_blocks_0_txt_mod_split_0_split_size, double_blocks_0_txt_mod_split_0_axis)
    double_blocks_0_txt_mod_tensoritem_1_output = tensor_item(double_blocks_0_txt_mod_split_0_output, double_blocks_0_txt_mod_tensoritem_1_index)
    double_blocks_0_txt_mod_split_1_output = split(double_blocks_0_txt_mod_tensoritem_1_output, double_blocks_0_txt_mod_split_1_split_size, double_blocks_0_txt_mod_split_1_axis)
    double_blocks_0_txt_mod_tensoritem_2_output = tensor_item(double_blocks_0_txt_mod_split_0_output, double_blocks_0_txt_mod_tensoritem_2_index)
    double_blocks_0_txt_mod_split_2_output = split(double_blocks_0_txt_mod_tensoritem_2_output, double_blocks_0_txt_mod_split_2_split_size, double_blocks_0_txt_mod_split_2_axis)
    double_blocks_0_txt_norm1_mean_output = reduce_mean(txt_vec, axis=double_blocks_0_txt_norm1_mean_axis, keepdim=double_blocks_0_txt_norm1_mean_keepdim)
    double_blocks_0_txt_norm1_subtract_output = subtract(txt_vec, double_blocks_0_txt_norm1_mean_output)
    double_blocks_0_txt_norm1_variance_output = variance(txt_vec, axis=double_blocks_0_txt_norm1_variance_axis, keepdim=double_blocks_0_txt_norm1_variance_keepdim, correction=double_blocks_0_txt_norm1_variance_correction)
    double_blocks_0_txt_norm1_add_output = add(double_blocks_0_txt_norm1_variance_output, double_blocks_0_txt_norm1_add_right)
    double_blocks_0_txt_norm1_sqrt_output = sqrt(double_blocks_0_txt_norm1_add_output)
    double_blocks_0_txt_norm1_divide_output = divide(double_blocks_0_txt_norm1_subtract_output, double_blocks_0_txt_norm1_sqrt_output)
    double_blocks_0_tensoritem_4_output = tensor_item(double_blocks_0_txt_mod_split_1_output, double_blocks_0_tensoritem_4_index)
    double_blocks_0_add_2_output = add(double_blocks_0_add_2_left, double_blocks_0_tensoritem_4_output)
    double_blocks_0_multiply_1_output = multiplication(double_blocks_0_add_2_output, double_blocks_0_txt_norm1_divide_output)
    double_blocks_0_tensoritem_5_output = tensor_item(double_blocks_0_txt_mod_split_1_output, double_blocks_0_tensoritem_5_index)
    double_blocks_0_add_3_output = add(double_blocks_0_multiply_1_output, double_blocks_0_tensoritem_5_output)
    double_blocks_0_txt_attn_qkv_transpose_output = transpose(double_blocks_0_txt_attn_qkv_weight, double_blocks_0_txt_attn_qkv_transpose_axes)
    double_blocks_0_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_0_add_3_output, double_blocks_0_txt_attn_qkv_transpose_output)
    double_blocks_0_txt_qkv = add(double_blocks_0_txt_attn_qkv_matrixmultiply_output, double_blocks_0_txt_attn_qkv_bias)
    double_blocks_0_reshape_1_output = reshape(double_blocks_0_txt_qkv, double_blocks_0_totuple_1_output)
    double_blocks_0_txt_transpose_out = transpose(double_blocks_0_reshape_1_output, double_blocks_0_transpose_1_axes)
    double_blocks_0_tensoritem_6_output = tensor_item(double_blocks_0_txt_transpose_out, double_blocks_0_tensoritem_6_index)
    double_blocks_0_tensoritem_7_output = tensor_item(double_blocks_0_txt_transpose_out, double_blocks_0_tensoritem_7_index)
    double_blocks_0_txt_attn_norm_query_norm_power_output = power(double_blocks_0_tensoritem_6_output, double_blocks_0_txt_attn_norm_query_norm_power_exponent)
    double_blocks_0_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_0_txt_attn_norm_query_norm_power_output, axis=double_blocks_0_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_0_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_0_txt_attn_norm_query_norm_add_output = add(double_blocks_0_txt_attn_norm_query_norm_mean_output, double_blocks_0_txt_attn_norm_query_norm_add_right)
    double_blocks_0_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_0_txt_attn_norm_query_norm_add_output)
    double_blocks_0_txt_attn_norm_query_norm_divide_output = divide(double_blocks_0_txt_attn_norm_query_norm_divide_numerator, double_blocks_0_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_0_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_0_tensoritem_6_output, double_blocks_0_txt_attn_norm_query_norm_divide_output)
    double_blocks_0_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_0_txt_attn_norm_query_norm_multiply_0_output, double_blocks_0_txt_attn_norm_query_norm_scale)
    double_blocks_0_txt_attn_norm_key_norm_power_output = power(double_blocks_0_tensoritem_7_output, double_blocks_0_txt_attn_norm_key_norm_power_exponent)
    double_blocks_0_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_0_txt_attn_norm_key_norm_power_output, axis=double_blocks_0_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_0_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_0_txt_attn_norm_key_norm_add_output = add(double_blocks_0_txt_attn_norm_key_norm_mean_output, double_blocks_0_txt_attn_norm_key_norm_add_right)
    double_blocks_0_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_0_txt_attn_norm_key_norm_add_output)
    double_blocks_0_txt_attn_norm_key_norm_divide_output = divide(double_blocks_0_txt_attn_norm_key_norm_divide_numerator, double_blocks_0_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_0_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_0_tensoritem_7_output, double_blocks_0_txt_attn_norm_key_norm_divide_output)
    double_blocks_0_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_0_txt_attn_norm_key_norm_multiply_0_output, double_blocks_0_txt_attn_norm_key_norm_scale)
    double_blocks_0_q_concat = concat(double_blocks_0_txt_attn_norm_query_norm_multiply_1_output, double_blocks_0_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_0_concat_0_axis)
    double_blocks_0_k_concat = concat(double_blocks_0_txt_attn_norm_key_norm_multiply_1_output, double_blocks_0_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_0_concat_1_axis)
    double_blocks_0_tensoritem_8_output = tensor_item(double_blocks_0_txt_transpose_out, double_blocks_0_tensoritem_8_index)
    double_blocks_0_tensoritem_9_output = tensor_item(double_blocks_0_transpose_out, double_blocks_0_tensoritem_9_index)
    double_blocks_0_v_concat = concat(double_blocks_0_tensoritem_8_output, double_blocks_0_tensoritem_9_output, axis=double_blocks_0_concat_2_axis)
    double_blocks_0_model_model_xq_ = reshape(double_blocks_0_q_concat, double_blocks_0_model_model_totuple_0_output)
    double_blocks_0_model_model_xk_ = reshape(double_blocks_0_k_concat, double_blocks_0_model_model_totuple_1_output)
    double_blocks_0_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_0_model_model_tensoritem_0_index)
    double_blocks_0_model_model_tensoritem_1_output = tensor_item(double_blocks_0_model_model_xq_, double_blocks_0_model_model_tensoritem_1_index)
    double_blocks_0_model_model_multiply_0_output = multiplication(double_blocks_0_model_model_tensoritem_0_output, double_blocks_0_model_model_tensoritem_1_output)
    double_blocks_0_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_0_model_model_tensoritem_2_index)
    double_blocks_0_model_model_tensoritem_3_output = tensor_item(double_blocks_0_model_model_xq_, double_blocks_0_model_model_tensoritem_3_index)
    double_blocks_0_model_model_multiply_1_output = multiplication(double_blocks_0_model_model_tensoritem_2_output, double_blocks_0_model_model_tensoritem_3_output)
    double_blocks_0_model_model_add_0_output = add(double_blocks_0_model_model_multiply_0_output, double_blocks_0_model_model_multiply_1_output)
    double_blocks_0_model_q_out = reshape(double_blocks_0_model_model_add_0_output, double_blocks_0_model_model_shape_0_output)
    double_blocks_0_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_0_model_model_tensoritem_4_index)
    double_blocks_0_model_model_tensoritem_5_output = tensor_item(double_blocks_0_model_model_xk_, double_blocks_0_model_model_tensoritem_5_index)
    double_blocks_0_model_model_multiply_2_output = multiplication(double_blocks_0_model_model_tensoritem_4_output, double_blocks_0_model_model_tensoritem_5_output)
    double_blocks_0_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_0_model_model_tensoritem_6_index)
    double_blocks_0_model_model_tensoritem_7_output = tensor_item(double_blocks_0_model_model_xk_, double_blocks_0_model_model_tensoritem_7_index)
    double_blocks_0_model_model_multiply_3_output = multiplication(double_blocks_0_model_model_tensoritem_6_output, double_blocks_0_model_model_tensoritem_7_output)
    double_blocks_0_model_model_add_1_output = add(double_blocks_0_model_model_multiply_2_output, double_blocks_0_model_model_multiply_3_output)
    double_blocks_0_model_k_out = reshape(double_blocks_0_model_model_add_1_output, double_blocks_0_model_model_shape_1_output)
    double_blocks_0_model_context = scaled_dot_product_attention(double_blocks_0_model_q_out, double_blocks_0_model_k_out, double_blocks_0_v_concat, double_blocks_0_model_scaleddotproduct_attn_mask)
    double_blocks_0_model_transpose_output = transpose(double_blocks_0_model_context, double_blocks_0_model_transpose_axes)
    double_blocks_0_attn = reshape(double_blocks_0_model_transpose_output, double_blocks_0_model_totuple_output)
    double_blocks_0_tensoritem_10_output = tensor_item(double_blocks_0_attn, double_blocks_0_tensoritem_10_index)
    double_blocks_0_img_attn_proj_transpose_output = transpose(double_blocks_0_img_attn_proj_weight, double_blocks_0_img_attn_proj_transpose_axes)
    double_blocks_0_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_0_tensoritem_10_output, double_blocks_0_img_attn_proj_transpose_output)
    double_blocks_0_img_proj = add(double_blocks_0_img_attn_proj_matrixmultiply_output, double_blocks_0_img_attn_proj_bias)
    double_blocks_0_tensoritem_11_output = tensor_item(double_blocks_0_img_mod_split_1_output, double_blocks_0_tensoritem_11_index)
    double_blocks_0_multiply_2_output = multiplication(double_blocks_0_tensoritem_11_output, double_blocks_0_img_proj)
    double_blocks_0_add_4_output = add(img_vec, double_blocks_0_multiply_2_output)
    double_blocks_0_img_norm2_mean_output = reduce_mean(double_blocks_0_add_4_output, axis=double_blocks_0_img_norm2_mean_axis, keepdim=double_blocks_0_img_norm2_mean_keepdim)
    double_blocks_0_img_norm2_subtract_output = subtract(double_blocks_0_add_4_output, double_blocks_0_img_norm2_mean_output)
    double_blocks_0_img_norm2_variance_output = variance(double_blocks_0_add_4_output, axis=double_blocks_0_img_norm2_variance_axis, keepdim=double_blocks_0_img_norm2_variance_keepdim, correction=double_blocks_0_img_norm2_variance_correction)
    double_blocks_0_img_norm2_add_output = add(double_blocks_0_img_norm2_variance_output, double_blocks_0_img_norm2_add_right)
    double_blocks_0_img_norm2_sqrt_output = sqrt(double_blocks_0_img_norm2_add_output)
    double_blocks_0_img_norm2_divide_output = divide(double_blocks_0_img_norm2_subtract_output, double_blocks_0_img_norm2_sqrt_output)
    double_blocks_0_tensoritem_12_output = tensor_item(double_blocks_0_img_mod_split_2_output, double_blocks_0_tensoritem_12_index)
    double_blocks_0_add_5_output = add(double_blocks_0_add_5_left, double_blocks_0_tensoritem_12_output)
    double_blocks_0_multiply_3_output = multiplication(double_blocks_0_add_5_output, double_blocks_0_img_norm2_divide_output)
    double_blocks_0_tensoritem_13_output = tensor_item(double_blocks_0_img_mod_split_2_output, double_blocks_0_tensoritem_13_index)
    double_blocks_0_add_6_output = add(double_blocks_0_multiply_3_output, double_blocks_0_tensoritem_13_output)
    double_blocks_0_img_mlp_0_transpose_output = transpose(double_blocks_0_img_mlp_0_weight, double_blocks_0_img_mlp_0_transpose_axes)
    double_blocks_0_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_0_add_6_output, double_blocks_0_img_mlp_0_transpose_output)
    double_blocks_0_img_mlp_0_output = add(double_blocks_0_img_mlp_0_matrixmultiply_output, double_blocks_0_img_mlp_0_bias)
    double_blocks_0_img_mlp_gelu_output = gelu(double_blocks_0_img_mlp_0_output, double_blocks_0_img_mlp_gelu_approximate)
    double_blocks_0_img_mlp_2_transpose_output = transpose(double_blocks_0_img_mlp_2_weight, double_blocks_0_img_mlp_2_transpose_axes)
    double_blocks_0_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_0_img_mlp_gelu_output, double_blocks_0_img_mlp_2_transpose_output)
    double_blocks_0_img_mlp = add(double_blocks_0_img_mlp_2_matrixmultiply_output, double_blocks_0_img_mlp_2_bias)
    double_blocks_0_tensoritem_14_output = tensor_item(double_blocks_0_attn, double_blocks_0_tensoritem_14_index)
    double_blocks_0_txt_attn_proj_transpose_output = transpose(double_blocks_0_txt_attn_proj_weight, double_blocks_0_txt_attn_proj_transpose_axes)
    double_blocks_0_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_0_tensoritem_14_output, double_blocks_0_txt_attn_proj_transpose_output)
    double_blocks_0_txt_proj = add(double_blocks_0_txt_attn_proj_matrixmultiply_output, double_blocks_0_txt_attn_proj_bias)
    double_blocks_0_tensoritem_15_output = tensor_item(double_blocks_0_txt_mod_split_1_output, double_blocks_0_tensoritem_15_index)
    double_blocks_0_multiply_4_output = multiplication(double_blocks_0_tensoritem_15_output, double_blocks_0_txt_proj)
    double_blocks_0_add_7_output = add(txt_vec, double_blocks_0_multiply_4_output)
    double_blocks_0_txt_norm2_mean_output = reduce_mean(double_blocks_0_add_7_output, axis=double_blocks_0_txt_norm2_mean_axis, keepdim=double_blocks_0_txt_norm2_mean_keepdim)
    double_blocks_0_txt_norm2_subtract_output = subtract(double_blocks_0_add_7_output, double_blocks_0_txt_norm2_mean_output)
    double_blocks_0_txt_norm2_variance_output = variance(double_blocks_0_add_7_output, axis=double_blocks_0_txt_norm2_variance_axis, keepdim=double_blocks_0_txt_norm2_variance_keepdim, correction=double_blocks_0_txt_norm2_variance_correction)
    double_blocks_0_txt_norm2_add_output = add(double_blocks_0_txt_norm2_variance_output, double_blocks_0_txt_norm2_add_right)
    double_blocks_0_txt_norm2_sqrt_output = sqrt(double_blocks_0_txt_norm2_add_output)
    double_blocks_0_txt_norm2_divide_output = divide(double_blocks_0_txt_norm2_subtract_output, double_blocks_0_txt_norm2_sqrt_output)
    double_blocks_0_tensoritem_16_output = tensor_item(double_blocks_0_txt_mod_split_2_output, double_blocks_0_tensoritem_16_index)
    double_blocks_0_add_8_output = add(double_blocks_0_add_8_left, double_blocks_0_tensoritem_16_output)
    double_blocks_0_multiply_5_output = multiplication(double_blocks_0_add_8_output, double_blocks_0_txt_norm2_divide_output)
    double_blocks_0_tensoritem_17_output = tensor_item(double_blocks_0_txt_mod_split_2_output, double_blocks_0_tensoritem_17_index)
    double_blocks_0_add_9_output = add(double_blocks_0_multiply_5_output, double_blocks_0_tensoritem_17_output)
    double_blocks_0_txt_mlp_0_transpose_output = transpose(double_blocks_0_txt_mlp_0_weight, double_blocks_0_txt_mlp_0_transpose_axes)
    double_blocks_0_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_0_add_9_output, double_blocks_0_txt_mlp_0_transpose_output)
    double_blocks_0_txt_mlp_0_output = add(double_blocks_0_txt_mlp_0_matrixmultiply_output, double_blocks_0_txt_mlp_0_bias)
    double_blocks_0_txt_mlp_gelu_output = gelu(double_blocks_0_txt_mlp_0_output, double_blocks_0_txt_mlp_gelu_approximate)
    double_blocks_0_txt_mlp_2_transpose_output = transpose(double_blocks_0_txt_mlp_2_weight, double_blocks_0_txt_mlp_2_transpose_axes)
    double_blocks_0_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_0_txt_mlp_gelu_output, double_blocks_0_txt_mlp_2_transpose_output)
    double_blocks_0_txt_mlp = add(double_blocks_0_txt_mlp_2_matrixmultiply_output, double_blocks_0_txt_mlp_2_bias)
    double_blocks_0_tensoritem_18_output = tensor_item(double_blocks_0_img_mod_split_2_output, double_blocks_0_tensoritem_18_index)
    double_blocks_0_multiply_6_output = multiplication(double_blocks_0_tensoritem_18_output, double_blocks_0_img_mlp)
    double_blocks_0_add_10_output = add(double_blocks_0_add_4_output, double_blocks_0_multiply_6_output)
    double_blocks_0_tensoritem_19_output = tensor_item(double_blocks_0_txt_mod_split_2_output, double_blocks_0_tensoritem_19_index)
    double_blocks_0_multiply_7_output = multiplication(double_blocks_0_tensoritem_19_output, double_blocks_0_txt_mlp)
    double_blocks_0_add_11_output = add(double_blocks_0_add_7_output, double_blocks_0_multiply_7_output)
    double_blocks_1_img_mod_silu_minus = minus(vec)
    double_blocks_1_img_mod_silu_exp = exp(double_blocks_1_img_mod_silu_minus)
    double_blocks_1_img_mod_silu_add = add(double_blocks_1_img_mod_silu_add_left, double_blocks_1_img_mod_silu_exp)
    double_blocks_1_img_mod_silu_output = divide(vec, double_blocks_1_img_mod_silu_add)
    double_blocks_1_img_mod_lin_transpose_output = transpose(double_blocks_1_img_mod_lin_weight, double_blocks_1_img_mod_lin_transpose_axes)
    double_blocks_1_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_1_img_mod_silu_output, double_blocks_1_img_mod_lin_transpose_output)
    double_blocks_1_img_mod_lin_out = add(double_blocks_1_img_mod_lin_matrixmultiply_output, double_blocks_1_img_mod_lin_bias)
    double_blocks_1_img_mod_tensoritem_0_output = tensor_item(double_blocks_1_img_mod_lin_out, double_blocks_1_img_mod_tensoritem_0_index)
    double_blocks_1_img_mod_split_0_output = split(double_blocks_1_img_mod_tensoritem_0_output, double_blocks_1_img_mod_split_0_split_size, double_blocks_1_img_mod_split_0_axis)
    double_blocks_1_img_mod_tensoritem_1_output = tensor_item(double_blocks_1_img_mod_split_0_output, double_blocks_1_img_mod_tensoritem_1_index)
    double_blocks_1_img_mod_split_1_output = split(double_blocks_1_img_mod_tensoritem_1_output, double_blocks_1_img_mod_split_1_split_size, double_blocks_1_img_mod_split_1_axis)
    double_blocks_1_img_mod_tensoritem_2_output = tensor_item(double_blocks_1_img_mod_split_0_output, double_blocks_1_img_mod_tensoritem_2_index)
    double_blocks_1_img_mod_split_2_output = split(double_blocks_1_img_mod_tensoritem_2_output, double_blocks_1_img_mod_split_2_split_size, double_blocks_1_img_mod_split_2_axis)
    double_blocks_1_img_norm1_mean_output = reduce_mean(double_blocks_0_add_10_output, axis=double_blocks_1_img_norm1_mean_axis, keepdim=double_blocks_1_img_norm1_mean_keepdim)
    double_blocks_1_img_norm1_subtract_output = subtract(double_blocks_0_add_10_output, double_blocks_1_img_norm1_mean_output)
    double_blocks_1_img_norm1_variance_output = variance(double_blocks_0_add_10_output, axis=double_blocks_1_img_norm1_variance_axis, keepdim=double_blocks_1_img_norm1_variance_keepdim, correction=double_blocks_1_img_norm1_variance_correction)
    double_blocks_1_img_norm1_add_output = add(double_blocks_1_img_norm1_variance_output, double_blocks_1_img_norm1_add_right)
    double_blocks_1_img_norm1_sqrt_output = sqrt(double_blocks_1_img_norm1_add_output)
    double_blocks_1_img_norm1_divide_output = divide(double_blocks_1_img_norm1_subtract_output, double_blocks_1_img_norm1_sqrt_output)
    double_blocks_1_tensoritem_0_output = tensor_item(double_blocks_1_img_mod_split_1_output, double_blocks_1_tensoritem_0_index)
    double_blocks_1_add_0_output = add(double_blocks_1_add_0_left, double_blocks_1_tensoritem_0_output)
    double_blocks_1_multiply_0_output = multiplication(double_blocks_1_add_0_output, double_blocks_1_img_norm1_divide_output)
    double_blocks_1_tensoritem_1_output = tensor_item(double_blocks_1_img_mod_split_1_output, double_blocks_1_tensoritem_1_index)
    double_blocks_1_add_1_output = add(double_blocks_1_multiply_0_output, double_blocks_1_tensoritem_1_output)
    double_blocks_1_img_attn_qkv_transpose_output = transpose(double_blocks_1_img_attn_qkv_weight, double_blocks_1_img_attn_qkv_transpose_axes)
    double_blocks_1_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_1_add_1_output, double_blocks_1_img_attn_qkv_transpose_output)
    double_blocks_1_img_qkv = add(double_blocks_1_img_attn_qkv_matrixmultiply_output, double_blocks_1_img_attn_qkv_bias)
    double_blocks_1_reshape_0_output = reshape(double_blocks_1_img_qkv, double_blocks_1_totuple_0_output)
    double_blocks_1_transpose_out = transpose(double_blocks_1_reshape_0_output, double_blocks_1_transpose_0_axes)
    double_blocks_1_tensoritem_2_output = tensor_item(double_blocks_1_transpose_out, double_blocks_1_tensoritem_2_index)
    double_blocks_1_tensoritem_3_output = tensor_item(double_blocks_1_transpose_out, double_blocks_1_tensoritem_3_index)
    double_blocks_1_img_attn_norm_query_norm_power_output = power(double_blocks_1_tensoritem_2_output, double_blocks_1_img_attn_norm_query_norm_power_exponent)
    double_blocks_1_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_1_img_attn_norm_query_norm_power_output, axis=double_blocks_1_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_1_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_1_img_attn_norm_query_norm_add_output = add(double_blocks_1_img_attn_norm_query_norm_mean_output, double_blocks_1_img_attn_norm_query_norm_add_right)
    double_blocks_1_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_1_img_attn_norm_query_norm_add_output)
    double_blocks_1_img_attn_norm_query_norm_divide_output = divide(double_blocks_1_img_attn_norm_query_norm_divide_numerator, double_blocks_1_img_attn_norm_query_norm_sqrt_output)
    double_blocks_1_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_1_tensoritem_2_output, double_blocks_1_img_attn_norm_query_norm_divide_output)
    double_blocks_1_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_1_img_attn_norm_query_norm_multiply_0_output, double_blocks_1_img_attn_norm_query_norm_scale)
    double_blocks_1_img_attn_norm_key_norm_power_output = power(double_blocks_1_tensoritem_3_output, double_blocks_1_img_attn_norm_key_norm_power_exponent)
    double_blocks_1_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_1_img_attn_norm_key_norm_power_output, axis=double_blocks_1_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_1_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_1_img_attn_norm_key_norm_add_output = add(double_blocks_1_img_attn_norm_key_norm_mean_output, double_blocks_1_img_attn_norm_key_norm_add_right)
    double_blocks_1_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_1_img_attn_norm_key_norm_add_output)
    double_blocks_1_img_attn_norm_key_norm_divide_output = divide(double_blocks_1_img_attn_norm_key_norm_divide_numerator, double_blocks_1_img_attn_norm_key_norm_sqrt_output)
    double_blocks_1_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_1_tensoritem_3_output, double_blocks_1_img_attn_norm_key_norm_divide_output)
    double_blocks_1_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_1_img_attn_norm_key_norm_multiply_0_output, double_blocks_1_img_attn_norm_key_norm_scale)
    double_blocks_1_txt_mod_silu_minus = minus(vec)
    double_blocks_1_txt_mod_silu_exp = exp(double_blocks_1_txt_mod_silu_minus)
    double_blocks_1_txt_mod_silu_add = add(double_blocks_1_txt_mod_silu_add_left, double_blocks_1_txt_mod_silu_exp)
    double_blocks_1_txt_mod_silu_output = divide(vec, double_blocks_1_txt_mod_silu_add)
    double_blocks_1_txt_mod_lin_transpose_output = transpose(double_blocks_1_txt_mod_lin_weight, double_blocks_1_txt_mod_lin_transpose_axes)
    double_blocks_1_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_1_txt_mod_silu_output, double_blocks_1_txt_mod_lin_transpose_output)
    double_blocks_1_txt_mod_lin_out = add(double_blocks_1_txt_mod_lin_matrixmultiply_output, double_blocks_1_txt_mod_lin_bias)
    double_blocks_1_txt_mod_tensoritem_0_output = tensor_item(double_blocks_1_txt_mod_lin_out, double_blocks_1_txt_mod_tensoritem_0_index)
    double_blocks_1_txt_mod_split_0_output = split(double_blocks_1_txt_mod_tensoritem_0_output, double_blocks_1_txt_mod_split_0_split_size, double_blocks_1_txt_mod_split_0_axis)
    double_blocks_1_txt_mod_tensoritem_1_output = tensor_item(double_blocks_1_txt_mod_split_0_output, double_blocks_1_txt_mod_tensoritem_1_index)
    double_blocks_1_txt_mod_split_1_output = split(double_blocks_1_txt_mod_tensoritem_1_output, double_blocks_1_txt_mod_split_1_split_size, double_blocks_1_txt_mod_split_1_axis)
    double_blocks_1_txt_mod_tensoritem_2_output = tensor_item(double_blocks_1_txt_mod_split_0_output, double_blocks_1_txt_mod_tensoritem_2_index)
    double_blocks_1_txt_mod_split_2_output = split(double_blocks_1_txt_mod_tensoritem_2_output, double_blocks_1_txt_mod_split_2_split_size, double_blocks_1_txt_mod_split_2_axis)
    double_blocks_1_txt_norm1_mean_output = reduce_mean(double_blocks_0_add_11_output, axis=double_blocks_1_txt_norm1_mean_axis, keepdim=double_blocks_1_txt_norm1_mean_keepdim)
    double_blocks_1_txt_norm1_subtract_output = subtract(double_blocks_0_add_11_output, double_blocks_1_txt_norm1_mean_output)
    double_blocks_1_txt_norm1_variance_output = variance(double_blocks_0_add_11_output, axis=double_blocks_1_txt_norm1_variance_axis, keepdim=double_blocks_1_txt_norm1_variance_keepdim, correction=double_blocks_1_txt_norm1_variance_correction)
    double_blocks_1_txt_norm1_add_output = add(double_blocks_1_txt_norm1_variance_output, double_blocks_1_txt_norm1_add_right)
    double_blocks_1_txt_norm1_sqrt_output = sqrt(double_blocks_1_txt_norm1_add_output)
    double_blocks_1_txt_norm1_divide_output = divide(double_blocks_1_txt_norm1_subtract_output, double_blocks_1_txt_norm1_sqrt_output)
    double_blocks_1_tensoritem_4_output = tensor_item(double_blocks_1_txt_mod_split_1_output, double_blocks_1_tensoritem_4_index)
    double_blocks_1_add_2_output = add(double_blocks_1_add_2_left, double_blocks_1_tensoritem_4_output)
    double_blocks_1_multiply_1_output = multiplication(double_blocks_1_add_2_output, double_blocks_1_txt_norm1_divide_output)
    double_blocks_1_tensoritem_5_output = tensor_item(double_blocks_1_txt_mod_split_1_output, double_blocks_1_tensoritem_5_index)
    double_blocks_1_add_3_output = add(double_blocks_1_multiply_1_output, double_blocks_1_tensoritem_5_output)
    double_blocks_1_txt_attn_qkv_transpose_output = transpose(double_blocks_1_txt_attn_qkv_weight, double_blocks_1_txt_attn_qkv_transpose_axes)
    double_blocks_1_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_1_add_3_output, double_blocks_1_txt_attn_qkv_transpose_output)
    double_blocks_1_txt_qkv = add(double_blocks_1_txt_attn_qkv_matrixmultiply_output, double_blocks_1_txt_attn_qkv_bias)
    double_blocks_1_reshape_1_output = reshape(double_blocks_1_txt_qkv, double_blocks_1_totuple_1_output)
    double_blocks_1_txt_transpose_out = transpose(double_blocks_1_reshape_1_output, double_blocks_1_transpose_1_axes)
    double_blocks_1_tensoritem_6_output = tensor_item(double_blocks_1_txt_transpose_out, double_blocks_1_tensoritem_6_index)
    double_blocks_1_tensoritem_7_output = tensor_item(double_blocks_1_txt_transpose_out, double_blocks_1_tensoritem_7_index)
    double_blocks_1_txt_attn_norm_query_norm_power_output = power(double_blocks_1_tensoritem_6_output, double_blocks_1_txt_attn_norm_query_norm_power_exponent)
    double_blocks_1_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_1_txt_attn_norm_query_norm_power_output, axis=double_blocks_1_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_1_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_1_txt_attn_norm_query_norm_add_output = add(double_blocks_1_txt_attn_norm_query_norm_mean_output, double_blocks_1_txt_attn_norm_query_norm_add_right)
    double_blocks_1_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_1_txt_attn_norm_query_norm_add_output)
    double_blocks_1_txt_attn_norm_query_norm_divide_output = divide(double_blocks_1_txt_attn_norm_query_norm_divide_numerator, double_blocks_1_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_1_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_1_tensoritem_6_output, double_blocks_1_txt_attn_norm_query_norm_divide_output)
    double_blocks_1_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_1_txt_attn_norm_query_norm_multiply_0_output, double_blocks_1_txt_attn_norm_query_norm_scale)
    double_blocks_1_txt_attn_norm_key_norm_power_output = power(double_blocks_1_tensoritem_7_output, double_blocks_1_txt_attn_norm_key_norm_power_exponent)
    double_blocks_1_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_1_txt_attn_norm_key_norm_power_output, axis=double_blocks_1_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_1_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_1_txt_attn_norm_key_norm_add_output = add(double_blocks_1_txt_attn_norm_key_norm_mean_output, double_blocks_1_txt_attn_norm_key_norm_add_right)
    double_blocks_1_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_1_txt_attn_norm_key_norm_add_output)
    double_blocks_1_txt_attn_norm_key_norm_divide_output = divide(double_blocks_1_txt_attn_norm_key_norm_divide_numerator, double_blocks_1_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_1_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_1_tensoritem_7_output, double_blocks_1_txt_attn_norm_key_norm_divide_output)
    double_blocks_1_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_1_txt_attn_norm_key_norm_multiply_0_output, double_blocks_1_txt_attn_norm_key_norm_scale)
    double_blocks_1_q_concat = concat(double_blocks_1_txt_attn_norm_query_norm_multiply_1_output, double_blocks_1_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_1_concat_0_axis)
    double_blocks_1_k_concat = concat(double_blocks_1_txt_attn_norm_key_norm_multiply_1_output, double_blocks_1_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_1_concat_1_axis)
    double_blocks_1_tensoritem_8_output = tensor_item(double_blocks_1_txt_transpose_out, double_blocks_1_tensoritem_8_index)
    double_blocks_1_tensoritem_9_output = tensor_item(double_blocks_1_transpose_out, double_blocks_1_tensoritem_9_index)
    double_blocks_1_v_concat = concat(double_blocks_1_tensoritem_8_output, double_blocks_1_tensoritem_9_output, axis=double_blocks_1_concat_2_axis)
    double_blocks_1_model_model_xq_ = reshape(double_blocks_1_q_concat, double_blocks_1_model_model_totuple_0_output)
    double_blocks_1_model_model_xk_ = reshape(double_blocks_1_k_concat, double_blocks_1_model_model_totuple_1_output)
    double_blocks_1_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_1_model_model_tensoritem_0_index)
    double_blocks_1_model_model_tensoritem_1_output = tensor_item(double_blocks_1_model_model_xq_, double_blocks_1_model_model_tensoritem_1_index)
    double_blocks_1_model_model_multiply_0_output = multiplication(double_blocks_1_model_model_tensoritem_0_output, double_blocks_1_model_model_tensoritem_1_output)
    double_blocks_1_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_1_model_model_tensoritem_2_index)
    double_blocks_1_model_model_tensoritem_3_output = tensor_item(double_blocks_1_model_model_xq_, double_blocks_1_model_model_tensoritem_3_index)
    double_blocks_1_model_model_multiply_1_output = multiplication(double_blocks_1_model_model_tensoritem_2_output, double_blocks_1_model_model_tensoritem_3_output)
    double_blocks_1_model_model_add_0_output = add(double_blocks_1_model_model_multiply_0_output, double_blocks_1_model_model_multiply_1_output)
    double_blocks_1_model_q_out = reshape(double_blocks_1_model_model_add_0_output, double_blocks_1_model_model_shape_0_output)
    double_blocks_1_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_1_model_model_tensoritem_4_index)
    double_blocks_1_model_model_tensoritem_5_output = tensor_item(double_blocks_1_model_model_xk_, double_blocks_1_model_model_tensoritem_5_index)
    double_blocks_1_model_model_multiply_2_output = multiplication(double_blocks_1_model_model_tensoritem_4_output, double_blocks_1_model_model_tensoritem_5_output)
    double_blocks_1_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_1_model_model_tensoritem_6_index)
    double_blocks_1_model_model_tensoritem_7_output = tensor_item(double_blocks_1_model_model_xk_, double_blocks_1_model_model_tensoritem_7_index)
    double_blocks_1_model_model_multiply_3_output = multiplication(double_blocks_1_model_model_tensoritem_6_output, double_blocks_1_model_model_tensoritem_7_output)
    double_blocks_1_model_model_add_1_output = add(double_blocks_1_model_model_multiply_2_output, double_blocks_1_model_model_multiply_3_output)
    double_blocks_1_model_k_out = reshape(double_blocks_1_model_model_add_1_output, double_blocks_1_model_model_shape_1_output)
    double_blocks_1_model_context = scaled_dot_product_attention(double_blocks_1_model_q_out, double_blocks_1_model_k_out, double_blocks_1_v_concat, double_blocks_1_model_scaleddotproduct_attn_mask)
    double_blocks_1_model_transpose_output = transpose(double_blocks_1_model_context, double_blocks_1_model_transpose_axes)
    double_blocks_1_attn = reshape(double_blocks_1_model_transpose_output, double_blocks_1_model_totuple_output)
    double_blocks_1_tensoritem_10_output = tensor_item(double_blocks_1_attn, double_blocks_1_tensoritem_10_index)
    double_blocks_1_img_attn_proj_transpose_output = transpose(double_blocks_1_img_attn_proj_weight, double_blocks_1_img_attn_proj_transpose_axes)
    double_blocks_1_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_1_tensoritem_10_output, double_blocks_1_img_attn_proj_transpose_output)
    double_blocks_1_img_proj = add(double_blocks_1_img_attn_proj_matrixmultiply_output, double_blocks_1_img_attn_proj_bias)
    double_blocks_1_tensoritem_11_output = tensor_item(double_blocks_1_img_mod_split_1_output, double_blocks_1_tensoritem_11_index)
    double_blocks_1_multiply_2_output = multiplication(double_blocks_1_tensoritem_11_output, double_blocks_1_img_proj)
    double_blocks_1_add_4_output = add(double_blocks_0_add_10_output, double_blocks_1_multiply_2_output)
    double_blocks_1_img_norm2_mean_output = reduce_mean(double_blocks_1_add_4_output, axis=double_blocks_1_img_norm2_mean_axis, keepdim=double_blocks_1_img_norm2_mean_keepdim)
    double_blocks_1_img_norm2_subtract_output = subtract(double_blocks_1_add_4_output, double_blocks_1_img_norm2_mean_output)
    double_blocks_1_img_norm2_variance_output = variance(double_blocks_1_add_4_output, axis=double_blocks_1_img_norm2_variance_axis, keepdim=double_blocks_1_img_norm2_variance_keepdim, correction=double_blocks_1_img_norm2_variance_correction)
    double_blocks_1_img_norm2_add_output = add(double_blocks_1_img_norm2_variance_output, double_blocks_1_img_norm2_add_right)
    double_blocks_1_img_norm2_sqrt_output = sqrt(double_blocks_1_img_norm2_add_output)
    double_blocks_1_img_norm2_divide_output = divide(double_blocks_1_img_norm2_subtract_output, double_blocks_1_img_norm2_sqrt_output)
    double_blocks_1_tensoritem_12_output = tensor_item(double_blocks_1_img_mod_split_2_output, double_blocks_1_tensoritem_12_index)
    double_blocks_1_add_5_output = add(double_blocks_1_add_5_left, double_blocks_1_tensoritem_12_output)
    double_blocks_1_multiply_3_output = multiplication(double_blocks_1_add_5_output, double_blocks_1_img_norm2_divide_output)
    double_blocks_1_tensoritem_13_output = tensor_item(double_blocks_1_img_mod_split_2_output, double_blocks_1_tensoritem_13_index)
    double_blocks_1_add_6_output = add(double_blocks_1_multiply_3_output, double_blocks_1_tensoritem_13_output)
    double_blocks_1_img_mlp_0_transpose_output = transpose(double_blocks_1_img_mlp_0_weight, double_blocks_1_img_mlp_0_transpose_axes)
    double_blocks_1_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_1_add_6_output, double_blocks_1_img_mlp_0_transpose_output)
    double_blocks_1_img_mlp_0_output = add(double_blocks_1_img_mlp_0_matrixmultiply_output, double_blocks_1_img_mlp_0_bias)
    double_blocks_1_img_mlp_gelu_output = gelu(double_blocks_1_img_mlp_0_output, double_blocks_1_img_mlp_gelu_approximate)
    double_blocks_1_img_mlp_2_transpose_output = transpose(double_blocks_1_img_mlp_2_weight, double_blocks_1_img_mlp_2_transpose_axes)
    double_blocks_1_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_1_img_mlp_gelu_output, double_blocks_1_img_mlp_2_transpose_output)
    double_blocks_1_img_mlp = add(double_blocks_1_img_mlp_2_matrixmultiply_output, double_blocks_1_img_mlp_2_bias)
    double_blocks_1_tensoritem_14_output = tensor_item(double_blocks_1_attn, double_blocks_1_tensoritem_14_index)
    double_blocks_1_txt_attn_proj_transpose_output = transpose(double_blocks_1_txt_attn_proj_weight, double_blocks_1_txt_attn_proj_transpose_axes)
    double_blocks_1_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_1_tensoritem_14_output, double_blocks_1_txt_attn_proj_transpose_output)
    double_blocks_1_txt_proj = add(double_blocks_1_txt_attn_proj_matrixmultiply_output, double_blocks_1_txt_attn_proj_bias)
    double_blocks_1_tensoritem_15_output = tensor_item(double_blocks_1_txt_mod_split_1_output, double_blocks_1_tensoritem_15_index)
    double_blocks_1_multiply_4_output = multiplication(double_blocks_1_tensoritem_15_output, double_blocks_1_txt_proj)
    double_blocks_1_add_7_output = add(double_blocks_0_add_11_output, double_blocks_1_multiply_4_output)
    double_blocks_1_txt_norm2_mean_output = reduce_mean(double_blocks_1_add_7_output, axis=double_blocks_1_txt_norm2_mean_axis, keepdim=double_blocks_1_txt_norm2_mean_keepdim)
    double_blocks_1_txt_norm2_subtract_output = subtract(double_blocks_1_add_7_output, double_blocks_1_txt_norm2_mean_output)
    double_blocks_1_txt_norm2_variance_output = variance(double_blocks_1_add_7_output, axis=double_blocks_1_txt_norm2_variance_axis, keepdim=double_blocks_1_txt_norm2_variance_keepdim, correction=double_blocks_1_txt_norm2_variance_correction)
    double_blocks_1_txt_norm2_add_output = add(double_blocks_1_txt_norm2_variance_output, double_blocks_1_txt_norm2_add_right)
    double_blocks_1_txt_norm2_sqrt_output = sqrt(double_blocks_1_txt_norm2_add_output)
    double_blocks_1_txt_norm2_divide_output = divide(double_blocks_1_txt_norm2_subtract_output, double_blocks_1_txt_norm2_sqrt_output)
    double_blocks_1_tensoritem_16_output = tensor_item(double_blocks_1_txt_mod_split_2_output, double_blocks_1_tensoritem_16_index)
    double_blocks_1_add_8_output = add(double_blocks_1_add_8_left, double_blocks_1_tensoritem_16_output)
    double_blocks_1_multiply_5_output = multiplication(double_blocks_1_add_8_output, double_blocks_1_txt_norm2_divide_output)
    double_blocks_1_tensoritem_17_output = tensor_item(double_blocks_1_txt_mod_split_2_output, double_blocks_1_tensoritem_17_index)
    double_blocks_1_add_9_output = add(double_blocks_1_multiply_5_output, double_blocks_1_tensoritem_17_output)
    double_blocks_1_txt_mlp_0_transpose_output = transpose(double_blocks_1_txt_mlp_0_weight, double_blocks_1_txt_mlp_0_transpose_axes)
    double_blocks_1_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_1_add_9_output, double_blocks_1_txt_mlp_0_transpose_output)
    double_blocks_1_txt_mlp_0_output = add(double_blocks_1_txt_mlp_0_matrixmultiply_output, double_blocks_1_txt_mlp_0_bias)
    double_blocks_1_txt_mlp_gelu_output = gelu(double_blocks_1_txt_mlp_0_output, double_blocks_1_txt_mlp_gelu_approximate)
    double_blocks_1_txt_mlp_2_transpose_output = transpose(double_blocks_1_txt_mlp_2_weight, double_blocks_1_txt_mlp_2_transpose_axes)
    double_blocks_1_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_1_txt_mlp_gelu_output, double_blocks_1_txt_mlp_2_transpose_output)
    double_blocks_1_txt_mlp = add(double_blocks_1_txt_mlp_2_matrixmultiply_output, double_blocks_1_txt_mlp_2_bias)
    double_blocks_1_tensoritem_18_output = tensor_item(double_blocks_1_img_mod_split_2_output, double_blocks_1_tensoritem_18_index)
    double_blocks_1_multiply_6_output = multiplication(double_blocks_1_tensoritem_18_output, double_blocks_1_img_mlp)
    double_blocks_1_add_10_output = add(double_blocks_1_add_4_output, double_blocks_1_multiply_6_output)
    double_blocks_1_tensoritem_19_output = tensor_item(double_blocks_1_txt_mod_split_2_output, double_blocks_1_tensoritem_19_index)
    double_blocks_1_multiply_7_output = multiplication(double_blocks_1_tensoritem_19_output, double_blocks_1_txt_mlp)
    double_blocks_1_add_11_output = add(double_blocks_1_add_7_output, double_blocks_1_multiply_7_output)
    double_blocks_2_img_mod_silu_minus = minus(vec)
    double_blocks_2_img_mod_silu_exp = exp(double_blocks_2_img_mod_silu_minus)
    double_blocks_2_img_mod_silu_add = add(double_blocks_2_img_mod_silu_add_left, double_blocks_2_img_mod_silu_exp)
    double_blocks_2_img_mod_silu_output = divide(vec, double_blocks_2_img_mod_silu_add)
    double_blocks_2_img_mod_lin_transpose_output = transpose(double_blocks_2_img_mod_lin_weight, double_blocks_2_img_mod_lin_transpose_axes)
    double_blocks_2_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_2_img_mod_silu_output, double_blocks_2_img_mod_lin_transpose_output)
    double_blocks_2_img_mod_lin_out = add(double_blocks_2_img_mod_lin_matrixmultiply_output, double_blocks_2_img_mod_lin_bias)
    double_blocks_2_img_mod_tensoritem_0_output = tensor_item(double_blocks_2_img_mod_lin_out, double_blocks_2_img_mod_tensoritem_0_index)
    double_blocks_2_img_mod_split_0_output = split(double_blocks_2_img_mod_tensoritem_0_output, double_blocks_2_img_mod_split_0_split_size, double_blocks_2_img_mod_split_0_axis)
    double_blocks_2_img_mod_tensoritem_1_output = tensor_item(double_blocks_2_img_mod_split_0_output, double_blocks_2_img_mod_tensoritem_1_index)
    double_blocks_2_img_mod_split_1_output = split(double_blocks_2_img_mod_tensoritem_1_output, double_blocks_2_img_mod_split_1_split_size, double_blocks_2_img_mod_split_1_axis)
    double_blocks_2_img_mod_tensoritem_2_output = tensor_item(double_blocks_2_img_mod_split_0_output, double_blocks_2_img_mod_tensoritem_2_index)
    double_blocks_2_img_mod_split_2_output = split(double_blocks_2_img_mod_tensoritem_2_output, double_blocks_2_img_mod_split_2_split_size, double_blocks_2_img_mod_split_2_axis)
    double_blocks_2_img_norm1_mean_output = reduce_mean(double_blocks_1_add_10_output, axis=double_blocks_2_img_norm1_mean_axis, keepdim=double_blocks_2_img_norm1_mean_keepdim)
    double_blocks_2_img_norm1_subtract_output = subtract(double_blocks_1_add_10_output, double_blocks_2_img_norm1_mean_output)
    double_blocks_2_img_norm1_variance_output = variance(double_blocks_1_add_10_output, axis=double_blocks_2_img_norm1_variance_axis, keepdim=double_blocks_2_img_norm1_variance_keepdim, correction=double_blocks_2_img_norm1_variance_correction)
    double_blocks_2_img_norm1_add_output = add(double_blocks_2_img_norm1_variance_output, double_blocks_2_img_norm1_add_right)
    double_blocks_2_img_norm1_sqrt_output = sqrt(double_blocks_2_img_norm1_add_output)
    double_blocks_2_img_norm1_divide_output = divide(double_blocks_2_img_norm1_subtract_output, double_blocks_2_img_norm1_sqrt_output)
    double_blocks_2_tensoritem_0_output = tensor_item(double_blocks_2_img_mod_split_1_output, double_blocks_2_tensoritem_0_index)
    double_blocks_2_add_0_output = add(double_blocks_2_add_0_left, double_blocks_2_tensoritem_0_output)
    double_blocks_2_multiply_0_output = multiplication(double_blocks_2_add_0_output, double_blocks_2_img_norm1_divide_output)
    double_blocks_2_tensoritem_1_output = tensor_item(double_blocks_2_img_mod_split_1_output, double_blocks_2_tensoritem_1_index)
    double_blocks_2_add_1_output = add(double_blocks_2_multiply_0_output, double_blocks_2_tensoritem_1_output)
    double_blocks_2_img_attn_qkv_transpose_output = transpose(double_blocks_2_img_attn_qkv_weight, double_blocks_2_img_attn_qkv_transpose_axes)
    double_blocks_2_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_2_add_1_output, double_blocks_2_img_attn_qkv_transpose_output)
    double_blocks_2_img_qkv = add(double_blocks_2_img_attn_qkv_matrixmultiply_output, double_blocks_2_img_attn_qkv_bias)
    double_blocks_2_reshape_0_output = reshape(double_blocks_2_img_qkv, double_blocks_2_totuple_0_output)
    double_blocks_2_transpose_out = transpose(double_blocks_2_reshape_0_output, double_blocks_2_transpose_0_axes)
    double_blocks_2_tensoritem_2_output = tensor_item(double_blocks_2_transpose_out, double_blocks_2_tensoritem_2_index)
    double_blocks_2_tensoritem_3_output = tensor_item(double_blocks_2_transpose_out, double_blocks_2_tensoritem_3_index)
    double_blocks_2_img_attn_norm_query_norm_power_output = power(double_blocks_2_tensoritem_2_output, double_blocks_2_img_attn_norm_query_norm_power_exponent)
    double_blocks_2_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_2_img_attn_norm_query_norm_power_output, axis=double_blocks_2_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_2_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_2_img_attn_norm_query_norm_add_output = add(double_blocks_2_img_attn_norm_query_norm_mean_output, double_blocks_2_img_attn_norm_query_norm_add_right)
    double_blocks_2_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_2_img_attn_norm_query_norm_add_output)
    double_blocks_2_img_attn_norm_query_norm_divide_output = divide(double_blocks_2_img_attn_norm_query_norm_divide_numerator, double_blocks_2_img_attn_norm_query_norm_sqrt_output)
    double_blocks_2_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_2_tensoritem_2_output, double_blocks_2_img_attn_norm_query_norm_divide_output)
    double_blocks_2_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_2_img_attn_norm_query_norm_multiply_0_output, double_blocks_2_img_attn_norm_query_norm_scale)
    double_blocks_2_img_attn_norm_key_norm_power_output = power(double_blocks_2_tensoritem_3_output, double_blocks_2_img_attn_norm_key_norm_power_exponent)
    double_blocks_2_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_2_img_attn_norm_key_norm_power_output, axis=double_blocks_2_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_2_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_2_img_attn_norm_key_norm_add_output = add(double_blocks_2_img_attn_norm_key_norm_mean_output, double_blocks_2_img_attn_norm_key_norm_add_right)
    double_blocks_2_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_2_img_attn_norm_key_norm_add_output)
    double_blocks_2_img_attn_norm_key_norm_divide_output = divide(double_blocks_2_img_attn_norm_key_norm_divide_numerator, double_blocks_2_img_attn_norm_key_norm_sqrt_output)
    double_blocks_2_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_2_tensoritem_3_output, double_blocks_2_img_attn_norm_key_norm_divide_output)
    double_blocks_2_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_2_img_attn_norm_key_norm_multiply_0_output, double_blocks_2_img_attn_norm_key_norm_scale)
    double_blocks_2_txt_mod_silu_minus = minus(vec)
    double_blocks_2_txt_mod_silu_exp = exp(double_blocks_2_txt_mod_silu_minus)
    double_blocks_2_txt_mod_silu_add = add(double_blocks_2_txt_mod_silu_add_left, double_blocks_2_txt_mod_silu_exp)
    double_blocks_2_txt_mod_silu_output = divide(vec, double_blocks_2_txt_mod_silu_add)
    double_blocks_2_txt_mod_lin_transpose_output = transpose(double_blocks_2_txt_mod_lin_weight, double_blocks_2_txt_mod_lin_transpose_axes)
    double_blocks_2_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_2_txt_mod_silu_output, double_blocks_2_txt_mod_lin_transpose_output)
    double_blocks_2_txt_mod_lin_out = add(double_blocks_2_txt_mod_lin_matrixmultiply_output, double_blocks_2_txt_mod_lin_bias)
    double_blocks_2_txt_mod_tensoritem_0_output = tensor_item(double_blocks_2_txt_mod_lin_out, double_blocks_2_txt_mod_tensoritem_0_index)
    double_blocks_2_txt_mod_split_0_output = split(double_blocks_2_txt_mod_tensoritem_0_output, double_blocks_2_txt_mod_split_0_split_size, double_blocks_2_txt_mod_split_0_axis)
    double_blocks_2_txt_mod_tensoritem_1_output = tensor_item(double_blocks_2_txt_mod_split_0_output, double_blocks_2_txt_mod_tensoritem_1_index)
    double_blocks_2_txt_mod_split_1_output = split(double_blocks_2_txt_mod_tensoritem_1_output, double_blocks_2_txt_mod_split_1_split_size, double_blocks_2_txt_mod_split_1_axis)
    double_blocks_2_txt_mod_tensoritem_2_output = tensor_item(double_blocks_2_txt_mod_split_0_output, double_blocks_2_txt_mod_tensoritem_2_index)
    double_blocks_2_txt_mod_split_2_output = split(double_blocks_2_txt_mod_tensoritem_2_output, double_blocks_2_txt_mod_split_2_split_size, double_blocks_2_txt_mod_split_2_axis)
    double_blocks_2_txt_norm1_mean_output = reduce_mean(double_blocks_1_add_11_output, axis=double_blocks_2_txt_norm1_mean_axis, keepdim=double_blocks_2_txt_norm1_mean_keepdim)
    double_blocks_2_txt_norm1_subtract_output = subtract(double_blocks_1_add_11_output, double_blocks_2_txt_norm1_mean_output)
    double_blocks_2_txt_norm1_variance_output = variance(double_blocks_1_add_11_output, axis=double_blocks_2_txt_norm1_variance_axis, keepdim=double_blocks_2_txt_norm1_variance_keepdim, correction=double_blocks_2_txt_norm1_variance_correction)
    double_blocks_2_txt_norm1_add_output = add(double_blocks_2_txt_norm1_variance_output, double_blocks_2_txt_norm1_add_right)
    double_blocks_2_txt_norm1_sqrt_output = sqrt(double_blocks_2_txt_norm1_add_output)
    double_blocks_2_txt_norm1_divide_output = divide(double_blocks_2_txt_norm1_subtract_output, double_blocks_2_txt_norm1_sqrt_output)
    double_blocks_2_tensoritem_4_output = tensor_item(double_blocks_2_txt_mod_split_1_output, double_blocks_2_tensoritem_4_index)
    double_blocks_2_add_2_output = add(double_blocks_2_add_2_left, double_blocks_2_tensoritem_4_output)
    double_blocks_2_multiply_1_output = multiplication(double_blocks_2_add_2_output, double_blocks_2_txt_norm1_divide_output)
    double_blocks_2_tensoritem_5_output = tensor_item(double_blocks_2_txt_mod_split_1_output, double_blocks_2_tensoritem_5_index)
    double_blocks_2_add_3_output = add(double_blocks_2_multiply_1_output, double_blocks_2_tensoritem_5_output)
    double_blocks_2_txt_attn_qkv_transpose_output = transpose(double_blocks_2_txt_attn_qkv_weight, double_blocks_2_txt_attn_qkv_transpose_axes)
    double_blocks_2_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_2_add_3_output, double_blocks_2_txt_attn_qkv_transpose_output)
    double_blocks_2_txt_qkv = add(double_blocks_2_txt_attn_qkv_matrixmultiply_output, double_blocks_2_txt_attn_qkv_bias)
    double_blocks_2_reshape_1_output = reshape(double_blocks_2_txt_qkv, double_blocks_2_totuple_1_output)
    double_blocks_2_txt_transpose_out = transpose(double_blocks_2_reshape_1_output, double_blocks_2_transpose_1_axes)
    double_blocks_2_tensoritem_6_output = tensor_item(double_blocks_2_txt_transpose_out, double_blocks_2_tensoritem_6_index)
    double_blocks_2_tensoritem_7_output = tensor_item(double_blocks_2_txt_transpose_out, double_blocks_2_tensoritem_7_index)
    double_blocks_2_txt_attn_norm_query_norm_power_output = power(double_blocks_2_tensoritem_6_output, double_blocks_2_txt_attn_norm_query_norm_power_exponent)
    double_blocks_2_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_2_txt_attn_norm_query_norm_power_output, axis=double_blocks_2_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_2_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_2_txt_attn_norm_query_norm_add_output = add(double_blocks_2_txt_attn_norm_query_norm_mean_output, double_blocks_2_txt_attn_norm_query_norm_add_right)
    double_blocks_2_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_2_txt_attn_norm_query_norm_add_output)
    double_blocks_2_txt_attn_norm_query_norm_divide_output = divide(double_blocks_2_txt_attn_norm_query_norm_divide_numerator, double_blocks_2_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_2_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_2_tensoritem_6_output, double_blocks_2_txt_attn_norm_query_norm_divide_output)
    double_blocks_2_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_2_txt_attn_norm_query_norm_multiply_0_output, double_blocks_2_txt_attn_norm_query_norm_scale)
    double_blocks_2_txt_attn_norm_key_norm_power_output = power(double_blocks_2_tensoritem_7_output, double_blocks_2_txt_attn_norm_key_norm_power_exponent)
    double_blocks_2_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_2_txt_attn_norm_key_norm_power_output, axis=double_blocks_2_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_2_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_2_txt_attn_norm_key_norm_add_output = add(double_blocks_2_txt_attn_norm_key_norm_mean_output, double_blocks_2_txt_attn_norm_key_norm_add_right)
    double_blocks_2_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_2_txt_attn_norm_key_norm_add_output)
    double_blocks_2_txt_attn_norm_key_norm_divide_output = divide(double_blocks_2_txt_attn_norm_key_norm_divide_numerator, double_blocks_2_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_2_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_2_tensoritem_7_output, double_blocks_2_txt_attn_norm_key_norm_divide_output)
    double_blocks_2_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_2_txt_attn_norm_key_norm_multiply_0_output, double_blocks_2_txt_attn_norm_key_norm_scale)
    double_blocks_2_q_concat = concat(double_blocks_2_txt_attn_norm_query_norm_multiply_1_output, double_blocks_2_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_2_concat_0_axis)
    double_blocks_2_k_concat = concat(double_blocks_2_txt_attn_norm_key_norm_multiply_1_output, double_blocks_2_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_2_concat_1_axis)
    double_blocks_2_tensoritem_8_output = tensor_item(double_blocks_2_txt_transpose_out, double_blocks_2_tensoritem_8_index)
    double_blocks_2_tensoritem_9_output = tensor_item(double_blocks_2_transpose_out, double_blocks_2_tensoritem_9_index)
    double_blocks_2_v_concat = concat(double_blocks_2_tensoritem_8_output, double_blocks_2_tensoritem_9_output, axis=double_blocks_2_concat_2_axis)
    double_blocks_2_model_model_xq_ = reshape(double_blocks_2_q_concat, double_blocks_2_model_model_totuple_0_output)
    double_blocks_2_model_model_xk_ = reshape(double_blocks_2_k_concat, double_blocks_2_model_model_totuple_1_output)
    double_blocks_2_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_2_model_model_tensoritem_0_index)
    double_blocks_2_model_model_tensoritem_1_output = tensor_item(double_blocks_2_model_model_xq_, double_blocks_2_model_model_tensoritem_1_index)
    double_blocks_2_model_model_multiply_0_output = multiplication(double_blocks_2_model_model_tensoritem_0_output, double_blocks_2_model_model_tensoritem_1_output)
    double_blocks_2_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_2_model_model_tensoritem_2_index)
    double_blocks_2_model_model_tensoritem_3_output = tensor_item(double_blocks_2_model_model_xq_, double_blocks_2_model_model_tensoritem_3_index)
    double_blocks_2_model_model_multiply_1_output = multiplication(double_blocks_2_model_model_tensoritem_2_output, double_blocks_2_model_model_tensoritem_3_output)
    double_blocks_2_model_model_add_0_output = add(double_blocks_2_model_model_multiply_0_output, double_blocks_2_model_model_multiply_1_output)
    double_blocks_2_model_q_out = reshape(double_blocks_2_model_model_add_0_output, double_blocks_2_model_model_shape_0_output)
    double_blocks_2_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_2_model_model_tensoritem_4_index)
    double_blocks_2_model_model_tensoritem_5_output = tensor_item(double_blocks_2_model_model_xk_, double_blocks_2_model_model_tensoritem_5_index)
    double_blocks_2_model_model_multiply_2_output = multiplication(double_blocks_2_model_model_tensoritem_4_output, double_blocks_2_model_model_tensoritem_5_output)
    double_blocks_2_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_2_model_model_tensoritem_6_index)
    double_blocks_2_model_model_tensoritem_7_output = tensor_item(double_blocks_2_model_model_xk_, double_blocks_2_model_model_tensoritem_7_index)
    double_blocks_2_model_model_multiply_3_output = multiplication(double_blocks_2_model_model_tensoritem_6_output, double_blocks_2_model_model_tensoritem_7_output)
    double_blocks_2_model_model_add_1_output = add(double_blocks_2_model_model_multiply_2_output, double_blocks_2_model_model_multiply_3_output)
    double_blocks_2_model_k_out = reshape(double_blocks_2_model_model_add_1_output, double_blocks_2_model_model_shape_1_output)
    double_blocks_2_model_context = scaled_dot_product_attention(double_blocks_2_model_q_out, double_blocks_2_model_k_out, double_blocks_2_v_concat, double_blocks_2_model_scaleddotproduct_attn_mask)
    double_blocks_2_model_transpose_output = transpose(double_blocks_2_model_context, double_blocks_2_model_transpose_axes)
    double_blocks_2_attn = reshape(double_blocks_2_model_transpose_output, double_blocks_2_model_totuple_output)
    double_blocks_2_tensoritem_10_output = tensor_item(double_blocks_2_attn, double_blocks_2_tensoritem_10_index)
    double_blocks_2_img_attn_proj_transpose_output = transpose(double_blocks_2_img_attn_proj_weight, double_blocks_2_img_attn_proj_transpose_axes)
    double_blocks_2_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_2_tensoritem_10_output, double_blocks_2_img_attn_proj_transpose_output)
    double_blocks_2_img_proj = add(double_blocks_2_img_attn_proj_matrixmultiply_output, double_blocks_2_img_attn_proj_bias)
    double_blocks_2_tensoritem_11_output = tensor_item(double_blocks_2_img_mod_split_1_output, double_blocks_2_tensoritem_11_index)
    double_blocks_2_multiply_2_output = multiplication(double_blocks_2_tensoritem_11_output, double_blocks_2_img_proj)
    double_blocks_2_add_4_output = add(double_blocks_1_add_10_output, double_blocks_2_multiply_2_output)
    double_blocks_2_img_norm2_mean_output = reduce_mean(double_blocks_2_add_4_output, axis=double_blocks_2_img_norm2_mean_axis, keepdim=double_blocks_2_img_norm2_mean_keepdim)
    double_blocks_2_img_norm2_subtract_output = subtract(double_blocks_2_add_4_output, double_blocks_2_img_norm2_mean_output)
    double_blocks_2_img_norm2_variance_output = variance(double_blocks_2_add_4_output, axis=double_blocks_2_img_norm2_variance_axis, keepdim=double_blocks_2_img_norm2_variance_keepdim, correction=double_blocks_2_img_norm2_variance_correction)
    double_blocks_2_img_norm2_add_output = add(double_blocks_2_img_norm2_variance_output, double_blocks_2_img_norm2_add_right)
    double_blocks_2_img_norm2_sqrt_output = sqrt(double_blocks_2_img_norm2_add_output)
    double_blocks_2_img_norm2_divide_output = divide(double_blocks_2_img_norm2_subtract_output, double_blocks_2_img_norm2_sqrt_output)
    double_blocks_2_tensoritem_12_output = tensor_item(double_blocks_2_img_mod_split_2_output, double_blocks_2_tensoritem_12_index)
    double_blocks_2_add_5_output = add(double_blocks_2_add_5_left, double_blocks_2_tensoritem_12_output)
    double_blocks_2_multiply_3_output = multiplication(double_blocks_2_add_5_output, double_blocks_2_img_norm2_divide_output)
    double_blocks_2_tensoritem_13_output = tensor_item(double_blocks_2_img_mod_split_2_output, double_blocks_2_tensoritem_13_index)
    double_blocks_2_add_6_output = add(double_blocks_2_multiply_3_output, double_blocks_2_tensoritem_13_output)
    double_blocks_2_img_mlp_0_transpose_output = transpose(double_blocks_2_img_mlp_0_weight, double_blocks_2_img_mlp_0_transpose_axes)
    double_blocks_2_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_2_add_6_output, double_blocks_2_img_mlp_0_transpose_output)
    double_blocks_2_img_mlp_0_output = add(double_blocks_2_img_mlp_0_matrixmultiply_output, double_blocks_2_img_mlp_0_bias)
    double_blocks_2_img_mlp_gelu_output = gelu(double_blocks_2_img_mlp_0_output, double_blocks_2_img_mlp_gelu_approximate)
    double_blocks_2_img_mlp_2_transpose_output = transpose(double_blocks_2_img_mlp_2_weight, double_blocks_2_img_mlp_2_transpose_axes)
    double_blocks_2_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_2_img_mlp_gelu_output, double_blocks_2_img_mlp_2_transpose_output)
    double_blocks_2_img_mlp = add(double_blocks_2_img_mlp_2_matrixmultiply_output, double_blocks_2_img_mlp_2_bias)
    double_blocks_2_tensoritem_14_output = tensor_item(double_blocks_2_attn, double_blocks_2_tensoritem_14_index)
    double_blocks_2_txt_attn_proj_transpose_output = transpose(double_blocks_2_txt_attn_proj_weight, double_blocks_2_txt_attn_proj_transpose_axes)
    double_blocks_2_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_2_tensoritem_14_output, double_blocks_2_txt_attn_proj_transpose_output)
    double_blocks_2_txt_proj = add(double_blocks_2_txt_attn_proj_matrixmultiply_output, double_blocks_2_txt_attn_proj_bias)
    double_blocks_2_tensoritem_15_output = tensor_item(double_blocks_2_txt_mod_split_1_output, double_blocks_2_tensoritem_15_index)
    double_blocks_2_multiply_4_output = multiplication(double_blocks_2_tensoritem_15_output, double_blocks_2_txt_proj)
    double_blocks_2_add_7_output = add(double_blocks_1_add_11_output, double_blocks_2_multiply_4_output)
    double_blocks_2_txt_norm2_mean_output = reduce_mean(double_blocks_2_add_7_output, axis=double_blocks_2_txt_norm2_mean_axis, keepdim=double_blocks_2_txt_norm2_mean_keepdim)
    double_blocks_2_txt_norm2_subtract_output = subtract(double_blocks_2_add_7_output, double_blocks_2_txt_norm2_mean_output)
    double_blocks_2_txt_norm2_variance_output = variance(double_blocks_2_add_7_output, axis=double_blocks_2_txt_norm2_variance_axis, keepdim=double_blocks_2_txt_norm2_variance_keepdim, correction=double_blocks_2_txt_norm2_variance_correction)
    double_blocks_2_txt_norm2_add_output = add(double_blocks_2_txt_norm2_variance_output, double_blocks_2_txt_norm2_add_right)
    double_blocks_2_txt_norm2_sqrt_output = sqrt(double_blocks_2_txt_norm2_add_output)
    double_blocks_2_txt_norm2_divide_output = divide(double_blocks_2_txt_norm2_subtract_output, double_blocks_2_txt_norm2_sqrt_output)
    double_blocks_2_tensoritem_16_output = tensor_item(double_blocks_2_txt_mod_split_2_output, double_blocks_2_tensoritem_16_index)
    double_blocks_2_add_8_output = add(double_blocks_2_add_8_left, double_blocks_2_tensoritem_16_output)
    double_blocks_2_multiply_5_output = multiplication(double_blocks_2_add_8_output, double_blocks_2_txt_norm2_divide_output)
    double_blocks_2_tensoritem_17_output = tensor_item(double_blocks_2_txt_mod_split_2_output, double_blocks_2_tensoritem_17_index)
    double_blocks_2_add_9_output = add(double_blocks_2_multiply_5_output, double_blocks_2_tensoritem_17_output)
    double_blocks_2_txt_mlp_0_transpose_output = transpose(double_blocks_2_txt_mlp_0_weight, double_blocks_2_txt_mlp_0_transpose_axes)
    double_blocks_2_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_2_add_9_output, double_blocks_2_txt_mlp_0_transpose_output)
    double_blocks_2_txt_mlp_0_output = add(double_blocks_2_txt_mlp_0_matrixmultiply_output, double_blocks_2_txt_mlp_0_bias)
    double_blocks_2_txt_mlp_gelu_output = gelu(double_blocks_2_txt_mlp_0_output, double_blocks_2_txt_mlp_gelu_approximate)
    double_blocks_2_txt_mlp_2_transpose_output = transpose(double_blocks_2_txt_mlp_2_weight, double_blocks_2_txt_mlp_2_transpose_axes)
    double_blocks_2_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_2_txt_mlp_gelu_output, double_blocks_2_txt_mlp_2_transpose_output)
    double_blocks_2_txt_mlp = add(double_blocks_2_txt_mlp_2_matrixmultiply_output, double_blocks_2_txt_mlp_2_bias)
    double_blocks_2_tensoritem_18_output = tensor_item(double_blocks_2_img_mod_split_2_output, double_blocks_2_tensoritem_18_index)
    double_blocks_2_multiply_6_output = multiplication(double_blocks_2_tensoritem_18_output, double_blocks_2_img_mlp)
    double_blocks_2_add_10_output = add(double_blocks_2_add_4_output, double_blocks_2_multiply_6_output)
    double_blocks_2_tensoritem_19_output = tensor_item(double_blocks_2_txt_mod_split_2_output, double_blocks_2_tensoritem_19_index)
    double_blocks_2_multiply_7_output = multiplication(double_blocks_2_tensoritem_19_output, double_blocks_2_txt_mlp)
    double_blocks_2_add_11_output = add(double_blocks_2_add_7_output, double_blocks_2_multiply_7_output)
    double_blocks_3_img_mod_silu_minus = minus(vec)
    double_blocks_3_img_mod_silu_exp = exp(double_blocks_3_img_mod_silu_minus)
    double_blocks_3_img_mod_silu_add = add(double_blocks_3_img_mod_silu_add_left, double_blocks_3_img_mod_silu_exp)
    double_blocks_3_img_mod_silu_output = divide(vec, double_blocks_3_img_mod_silu_add)
    double_blocks_3_img_mod_lin_transpose_output = transpose(double_blocks_3_img_mod_lin_weight, double_blocks_3_img_mod_lin_transpose_axes)
    double_blocks_3_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_3_img_mod_silu_output, double_blocks_3_img_mod_lin_transpose_output)
    double_blocks_3_img_mod_lin_out = add(double_blocks_3_img_mod_lin_matrixmultiply_output, double_blocks_3_img_mod_lin_bias)
    double_blocks_3_img_mod_tensoritem_0_output = tensor_item(double_blocks_3_img_mod_lin_out, double_blocks_3_img_mod_tensoritem_0_index)
    double_blocks_3_img_mod_split_0_output = split(double_blocks_3_img_mod_tensoritem_0_output, double_blocks_3_img_mod_split_0_split_size, double_blocks_3_img_mod_split_0_axis)
    double_blocks_3_img_mod_tensoritem_1_output = tensor_item(double_blocks_3_img_mod_split_0_output, double_blocks_3_img_mod_tensoritem_1_index)
    double_blocks_3_img_mod_split_1_output = split(double_blocks_3_img_mod_tensoritem_1_output, double_blocks_3_img_mod_split_1_split_size, double_blocks_3_img_mod_split_1_axis)
    double_blocks_3_img_mod_tensoritem_2_output = tensor_item(double_blocks_3_img_mod_split_0_output, double_blocks_3_img_mod_tensoritem_2_index)
    double_blocks_3_img_mod_split_2_output = split(double_blocks_3_img_mod_tensoritem_2_output, double_blocks_3_img_mod_split_2_split_size, double_blocks_3_img_mod_split_2_axis)
    double_blocks_3_img_norm1_mean_output = reduce_mean(double_blocks_2_add_10_output, axis=double_blocks_3_img_norm1_mean_axis, keepdim=double_blocks_3_img_norm1_mean_keepdim)
    double_blocks_3_img_norm1_subtract_output = subtract(double_blocks_2_add_10_output, double_blocks_3_img_norm1_mean_output)
    double_blocks_3_img_norm1_variance_output = variance(double_blocks_2_add_10_output, axis=double_blocks_3_img_norm1_variance_axis, keepdim=double_blocks_3_img_norm1_variance_keepdim, correction=double_blocks_3_img_norm1_variance_correction)
    double_blocks_3_img_norm1_add_output = add(double_blocks_3_img_norm1_variance_output, double_blocks_3_img_norm1_add_right)
    double_blocks_3_img_norm1_sqrt_output = sqrt(double_blocks_3_img_norm1_add_output)
    double_blocks_3_img_norm1_divide_output = divide(double_blocks_3_img_norm1_subtract_output, double_blocks_3_img_norm1_sqrt_output)
    double_blocks_3_tensoritem_0_output = tensor_item(double_blocks_3_img_mod_split_1_output, double_blocks_3_tensoritem_0_index)
    double_blocks_3_add_0_output = add(double_blocks_3_add_0_left, double_blocks_3_tensoritem_0_output)
    double_blocks_3_multiply_0_output = multiplication(double_blocks_3_add_0_output, double_blocks_3_img_norm1_divide_output)
    double_blocks_3_tensoritem_1_output = tensor_item(double_blocks_3_img_mod_split_1_output, double_blocks_3_tensoritem_1_index)
    double_blocks_3_add_1_output = add(double_blocks_3_multiply_0_output, double_blocks_3_tensoritem_1_output)
    double_blocks_3_img_attn_qkv_transpose_output = transpose(double_blocks_3_img_attn_qkv_weight, double_blocks_3_img_attn_qkv_transpose_axes)
    double_blocks_3_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_3_add_1_output, double_blocks_3_img_attn_qkv_transpose_output)
    double_blocks_3_img_qkv = add(double_blocks_3_img_attn_qkv_matrixmultiply_output, double_blocks_3_img_attn_qkv_bias)
    double_blocks_3_reshape_0_output = reshape(double_blocks_3_img_qkv, double_blocks_3_totuple_0_output)
    double_blocks_3_transpose_out = transpose(double_blocks_3_reshape_0_output, double_blocks_3_transpose_0_axes)
    double_blocks_3_tensoritem_2_output = tensor_item(double_blocks_3_transpose_out, double_blocks_3_tensoritem_2_index)
    double_blocks_3_tensoritem_3_output = tensor_item(double_blocks_3_transpose_out, double_blocks_3_tensoritem_3_index)
    double_blocks_3_img_attn_norm_query_norm_power_output = power(double_blocks_3_tensoritem_2_output, double_blocks_3_img_attn_norm_query_norm_power_exponent)
    double_blocks_3_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_3_img_attn_norm_query_norm_power_output, axis=double_blocks_3_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_3_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_3_img_attn_norm_query_norm_add_output = add(double_blocks_3_img_attn_norm_query_norm_mean_output, double_blocks_3_img_attn_norm_query_norm_add_right)
    double_blocks_3_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_3_img_attn_norm_query_norm_add_output)
    double_blocks_3_img_attn_norm_query_norm_divide_output = divide(double_blocks_3_img_attn_norm_query_norm_divide_numerator, double_blocks_3_img_attn_norm_query_norm_sqrt_output)
    double_blocks_3_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_3_tensoritem_2_output, double_blocks_3_img_attn_norm_query_norm_divide_output)
    double_blocks_3_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_3_img_attn_norm_query_norm_multiply_0_output, double_blocks_3_img_attn_norm_query_norm_scale)
    double_blocks_3_img_attn_norm_key_norm_power_output = power(double_blocks_3_tensoritem_3_output, double_blocks_3_img_attn_norm_key_norm_power_exponent)
    double_blocks_3_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_3_img_attn_norm_key_norm_power_output, axis=double_blocks_3_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_3_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_3_img_attn_norm_key_norm_add_output = add(double_blocks_3_img_attn_norm_key_norm_mean_output, double_blocks_3_img_attn_norm_key_norm_add_right)
    double_blocks_3_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_3_img_attn_norm_key_norm_add_output)
    double_blocks_3_img_attn_norm_key_norm_divide_output = divide(double_blocks_3_img_attn_norm_key_norm_divide_numerator, double_blocks_3_img_attn_norm_key_norm_sqrt_output)
    double_blocks_3_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_3_tensoritem_3_output, double_blocks_3_img_attn_norm_key_norm_divide_output)
    double_blocks_3_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_3_img_attn_norm_key_norm_multiply_0_output, double_blocks_3_img_attn_norm_key_norm_scale)
    double_blocks_3_txt_mod_silu_minus = minus(vec)
    double_blocks_3_txt_mod_silu_exp = exp(double_blocks_3_txt_mod_silu_minus)
    double_blocks_3_txt_mod_silu_add = add(double_blocks_3_txt_mod_silu_add_left, double_blocks_3_txt_mod_silu_exp)
    double_blocks_3_txt_mod_silu_output = divide(vec, double_blocks_3_txt_mod_silu_add)
    double_blocks_3_txt_mod_lin_transpose_output = transpose(double_blocks_3_txt_mod_lin_weight, double_blocks_3_txt_mod_lin_transpose_axes)
    double_blocks_3_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_3_txt_mod_silu_output, double_blocks_3_txt_mod_lin_transpose_output)
    double_blocks_3_txt_mod_lin_out = add(double_blocks_3_txt_mod_lin_matrixmultiply_output, double_blocks_3_txt_mod_lin_bias)
    double_blocks_3_txt_mod_tensoritem_0_output = tensor_item(double_blocks_3_txt_mod_lin_out, double_blocks_3_txt_mod_tensoritem_0_index)
    double_blocks_3_txt_mod_split_0_output = split(double_blocks_3_txt_mod_tensoritem_0_output, double_blocks_3_txt_mod_split_0_split_size, double_blocks_3_txt_mod_split_0_axis)
    double_blocks_3_txt_mod_tensoritem_1_output = tensor_item(double_blocks_3_txt_mod_split_0_output, double_blocks_3_txt_mod_tensoritem_1_index)
    double_blocks_3_txt_mod_split_1_output = split(double_blocks_3_txt_mod_tensoritem_1_output, double_blocks_3_txt_mod_split_1_split_size, double_blocks_3_txt_mod_split_1_axis)
    double_blocks_3_txt_mod_tensoritem_2_output = tensor_item(double_blocks_3_txt_mod_split_0_output, double_blocks_3_txt_mod_tensoritem_2_index)
    double_blocks_3_txt_mod_split_2_output = split(double_blocks_3_txt_mod_tensoritem_2_output, double_blocks_3_txt_mod_split_2_split_size, double_blocks_3_txt_mod_split_2_axis)
    double_blocks_3_txt_norm1_mean_output = reduce_mean(double_blocks_2_add_11_output, axis=double_blocks_3_txt_norm1_mean_axis, keepdim=double_blocks_3_txt_norm1_mean_keepdim)
    double_blocks_3_txt_norm1_subtract_output = subtract(double_blocks_2_add_11_output, double_blocks_3_txt_norm1_mean_output)
    double_blocks_3_txt_norm1_variance_output = variance(double_blocks_2_add_11_output, axis=double_blocks_3_txt_norm1_variance_axis, keepdim=double_blocks_3_txt_norm1_variance_keepdim, correction=double_blocks_3_txt_norm1_variance_correction)
    double_blocks_3_txt_norm1_add_output = add(double_blocks_3_txt_norm1_variance_output, double_blocks_3_txt_norm1_add_right)
    double_blocks_3_txt_norm1_sqrt_output = sqrt(double_blocks_3_txt_norm1_add_output)
    double_blocks_3_txt_norm1_divide_output = divide(double_blocks_3_txt_norm1_subtract_output, double_blocks_3_txt_norm1_sqrt_output)
    double_blocks_3_tensoritem_4_output = tensor_item(double_blocks_3_txt_mod_split_1_output, double_blocks_3_tensoritem_4_index)
    double_blocks_3_add_2_output = add(double_blocks_3_add_2_left, double_blocks_3_tensoritem_4_output)
    double_blocks_3_multiply_1_output = multiplication(double_blocks_3_add_2_output, double_blocks_3_txt_norm1_divide_output)
    double_blocks_3_tensoritem_5_output = tensor_item(double_blocks_3_txt_mod_split_1_output, double_blocks_3_tensoritem_5_index)
    double_blocks_3_add_3_output = add(double_blocks_3_multiply_1_output, double_blocks_3_tensoritem_5_output)
    double_blocks_3_txt_attn_qkv_transpose_output = transpose(double_blocks_3_txt_attn_qkv_weight, double_blocks_3_txt_attn_qkv_transpose_axes)
    double_blocks_3_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_3_add_3_output, double_blocks_3_txt_attn_qkv_transpose_output)
    double_blocks_3_txt_qkv = add(double_blocks_3_txt_attn_qkv_matrixmultiply_output, double_blocks_3_txt_attn_qkv_bias)
    double_blocks_3_reshape_1_output = reshape(double_blocks_3_txt_qkv, double_blocks_3_totuple_1_output)
    double_blocks_3_txt_transpose_out = transpose(double_blocks_3_reshape_1_output, double_blocks_3_transpose_1_axes)
    double_blocks_3_tensoritem_6_output = tensor_item(double_blocks_3_txt_transpose_out, double_blocks_3_tensoritem_6_index)
    double_blocks_3_tensoritem_7_output = tensor_item(double_blocks_3_txt_transpose_out, double_blocks_3_tensoritem_7_index)
    double_blocks_3_txt_attn_norm_query_norm_power_output = power(double_blocks_3_tensoritem_6_output, double_blocks_3_txt_attn_norm_query_norm_power_exponent)
    double_blocks_3_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_3_txt_attn_norm_query_norm_power_output, axis=double_blocks_3_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_3_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_3_txt_attn_norm_query_norm_add_output = add(double_blocks_3_txt_attn_norm_query_norm_mean_output, double_blocks_3_txt_attn_norm_query_norm_add_right)
    double_blocks_3_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_3_txt_attn_norm_query_norm_add_output)
    double_blocks_3_txt_attn_norm_query_norm_divide_output = divide(double_blocks_3_txt_attn_norm_query_norm_divide_numerator, double_blocks_3_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_3_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_3_tensoritem_6_output, double_blocks_3_txt_attn_norm_query_norm_divide_output)
    double_blocks_3_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_3_txt_attn_norm_query_norm_multiply_0_output, double_blocks_3_txt_attn_norm_query_norm_scale)
    double_blocks_3_txt_attn_norm_key_norm_power_output = power(double_blocks_3_tensoritem_7_output, double_blocks_3_txt_attn_norm_key_norm_power_exponent)
    double_blocks_3_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_3_txt_attn_norm_key_norm_power_output, axis=double_blocks_3_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_3_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_3_txt_attn_norm_key_norm_add_output = add(double_blocks_3_txt_attn_norm_key_norm_mean_output, double_blocks_3_txt_attn_norm_key_norm_add_right)
    double_blocks_3_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_3_txt_attn_norm_key_norm_add_output)
    double_blocks_3_txt_attn_norm_key_norm_divide_output = divide(double_blocks_3_txt_attn_norm_key_norm_divide_numerator, double_blocks_3_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_3_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_3_tensoritem_7_output, double_blocks_3_txt_attn_norm_key_norm_divide_output)
    double_blocks_3_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_3_txt_attn_norm_key_norm_multiply_0_output, double_blocks_3_txt_attn_norm_key_norm_scale)
    double_blocks_3_q_concat = concat(double_blocks_3_txt_attn_norm_query_norm_multiply_1_output, double_blocks_3_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_3_concat_0_axis)
    double_blocks_3_k_concat = concat(double_blocks_3_txt_attn_norm_key_norm_multiply_1_output, double_blocks_3_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_3_concat_1_axis)
    double_blocks_3_tensoritem_8_output = tensor_item(double_blocks_3_txt_transpose_out, double_blocks_3_tensoritem_8_index)
    double_blocks_3_tensoritem_9_output = tensor_item(double_blocks_3_transpose_out, double_blocks_3_tensoritem_9_index)
    double_blocks_3_v_concat = concat(double_blocks_3_tensoritem_8_output, double_blocks_3_tensoritem_9_output, axis=double_blocks_3_concat_2_axis)
    double_blocks_3_model_model_xq_ = reshape(double_blocks_3_q_concat, double_blocks_3_model_model_totuple_0_output)
    double_blocks_3_model_model_xk_ = reshape(double_blocks_3_k_concat, double_blocks_3_model_model_totuple_1_output)
    double_blocks_3_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_3_model_model_tensoritem_0_index)
    double_blocks_3_model_model_tensoritem_1_output = tensor_item(double_blocks_3_model_model_xq_, double_blocks_3_model_model_tensoritem_1_index)
    double_blocks_3_model_model_multiply_0_output = multiplication(double_blocks_3_model_model_tensoritem_0_output, double_blocks_3_model_model_tensoritem_1_output)
    double_blocks_3_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_3_model_model_tensoritem_2_index)
    double_blocks_3_model_model_tensoritem_3_output = tensor_item(double_blocks_3_model_model_xq_, double_blocks_3_model_model_tensoritem_3_index)
    double_blocks_3_model_model_multiply_1_output = multiplication(double_blocks_3_model_model_tensoritem_2_output, double_blocks_3_model_model_tensoritem_3_output)
    double_blocks_3_model_model_add_0_output = add(double_blocks_3_model_model_multiply_0_output, double_blocks_3_model_model_multiply_1_output)
    double_blocks_3_model_q_out = reshape(double_blocks_3_model_model_add_0_output, double_blocks_3_model_model_shape_0_output)
    double_blocks_3_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_3_model_model_tensoritem_4_index)
    double_blocks_3_model_model_tensoritem_5_output = tensor_item(double_blocks_3_model_model_xk_, double_blocks_3_model_model_tensoritem_5_index)
    double_blocks_3_model_model_multiply_2_output = multiplication(double_blocks_3_model_model_tensoritem_4_output, double_blocks_3_model_model_tensoritem_5_output)
    double_blocks_3_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_3_model_model_tensoritem_6_index)
    double_blocks_3_model_model_tensoritem_7_output = tensor_item(double_blocks_3_model_model_xk_, double_blocks_3_model_model_tensoritem_7_index)
    double_blocks_3_model_model_multiply_3_output = multiplication(double_blocks_3_model_model_tensoritem_6_output, double_blocks_3_model_model_tensoritem_7_output)
    double_blocks_3_model_model_add_1_output = add(double_blocks_3_model_model_multiply_2_output, double_blocks_3_model_model_multiply_3_output)
    double_blocks_3_model_k_out = reshape(double_blocks_3_model_model_add_1_output, double_blocks_3_model_model_shape_1_output)
    double_blocks_3_model_context = scaled_dot_product_attention(double_blocks_3_model_q_out, double_blocks_3_model_k_out, double_blocks_3_v_concat, double_blocks_3_model_scaleddotproduct_attn_mask)
    double_blocks_3_model_transpose_output = transpose(double_blocks_3_model_context, double_blocks_3_model_transpose_axes)
    double_blocks_3_attn = reshape(double_blocks_3_model_transpose_output, double_blocks_3_model_totuple_output)
    double_blocks_3_tensoritem_10_output = tensor_item(double_blocks_3_attn, double_blocks_3_tensoritem_10_index)
    double_blocks_3_img_attn_proj_transpose_output = transpose(double_blocks_3_img_attn_proj_weight, double_blocks_3_img_attn_proj_transpose_axes)
    double_blocks_3_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_3_tensoritem_10_output, double_blocks_3_img_attn_proj_transpose_output)
    double_blocks_3_img_proj = add(double_blocks_3_img_attn_proj_matrixmultiply_output, double_blocks_3_img_attn_proj_bias)
    double_blocks_3_tensoritem_11_output = tensor_item(double_blocks_3_img_mod_split_1_output, double_blocks_3_tensoritem_11_index)
    double_blocks_3_multiply_2_output = multiplication(double_blocks_3_tensoritem_11_output, double_blocks_3_img_proj)
    double_blocks_3_add_4_output = add(double_blocks_2_add_10_output, double_blocks_3_multiply_2_output)
    double_blocks_3_img_norm2_mean_output = reduce_mean(double_blocks_3_add_4_output, axis=double_blocks_3_img_norm2_mean_axis, keepdim=double_blocks_3_img_norm2_mean_keepdim)
    double_blocks_3_img_norm2_subtract_output = subtract(double_blocks_3_add_4_output, double_blocks_3_img_norm2_mean_output)
    double_blocks_3_img_norm2_variance_output = variance(double_blocks_3_add_4_output, axis=double_blocks_3_img_norm2_variance_axis, keepdim=double_blocks_3_img_norm2_variance_keepdim, correction=double_blocks_3_img_norm2_variance_correction)
    double_blocks_3_img_norm2_add_output = add(double_blocks_3_img_norm2_variance_output, double_blocks_3_img_norm2_add_right)
    double_blocks_3_img_norm2_sqrt_output = sqrt(double_blocks_3_img_norm2_add_output)
    double_blocks_3_img_norm2_divide_output = divide(double_blocks_3_img_norm2_subtract_output, double_blocks_3_img_norm2_sqrt_output)
    double_blocks_3_tensoritem_12_output = tensor_item(double_blocks_3_img_mod_split_2_output, double_blocks_3_tensoritem_12_index)
    double_blocks_3_add_5_output = add(double_blocks_3_add_5_left, double_blocks_3_tensoritem_12_output)
    double_blocks_3_multiply_3_output = multiplication(double_blocks_3_add_5_output, double_blocks_3_img_norm2_divide_output)
    double_blocks_3_tensoritem_13_output = tensor_item(double_blocks_3_img_mod_split_2_output, double_blocks_3_tensoritem_13_index)
    double_blocks_3_add_6_output = add(double_blocks_3_multiply_3_output, double_blocks_3_tensoritem_13_output)
    double_blocks_3_img_mlp_0_transpose_output = transpose(double_blocks_3_img_mlp_0_weight, double_blocks_3_img_mlp_0_transpose_axes)
    double_blocks_3_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_3_add_6_output, double_blocks_3_img_mlp_0_transpose_output)
    double_blocks_3_img_mlp_0_output = add(double_blocks_3_img_mlp_0_matrixmultiply_output, double_blocks_3_img_mlp_0_bias)
    double_blocks_3_img_mlp_gelu_output = gelu(double_blocks_3_img_mlp_0_output, double_blocks_3_img_mlp_gelu_approximate)
    double_blocks_3_img_mlp_2_transpose_output = transpose(double_blocks_3_img_mlp_2_weight, double_blocks_3_img_mlp_2_transpose_axes)
    double_blocks_3_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_3_img_mlp_gelu_output, double_blocks_3_img_mlp_2_transpose_output)
    double_blocks_3_img_mlp = add(double_blocks_3_img_mlp_2_matrixmultiply_output, double_blocks_3_img_mlp_2_bias)
    double_blocks_3_tensoritem_14_output = tensor_item(double_blocks_3_attn, double_blocks_3_tensoritem_14_index)
    double_blocks_3_txt_attn_proj_transpose_output = transpose(double_blocks_3_txt_attn_proj_weight, double_blocks_3_txt_attn_proj_transpose_axes)
    double_blocks_3_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_3_tensoritem_14_output, double_blocks_3_txt_attn_proj_transpose_output)
    double_blocks_3_txt_proj = add(double_blocks_3_txt_attn_proj_matrixmultiply_output, double_blocks_3_txt_attn_proj_bias)
    double_blocks_3_tensoritem_15_output = tensor_item(double_blocks_3_txt_mod_split_1_output, double_blocks_3_tensoritem_15_index)
    double_blocks_3_multiply_4_output = multiplication(double_blocks_3_tensoritem_15_output, double_blocks_3_txt_proj)
    double_blocks_3_add_7_output = add(double_blocks_2_add_11_output, double_blocks_3_multiply_4_output)
    double_blocks_3_txt_norm2_mean_output = reduce_mean(double_blocks_3_add_7_output, axis=double_blocks_3_txt_norm2_mean_axis, keepdim=double_blocks_3_txt_norm2_mean_keepdim)
    double_blocks_3_txt_norm2_subtract_output = subtract(double_blocks_3_add_7_output, double_blocks_3_txt_norm2_mean_output)
    double_blocks_3_txt_norm2_variance_output = variance(double_blocks_3_add_7_output, axis=double_blocks_3_txt_norm2_variance_axis, keepdim=double_blocks_3_txt_norm2_variance_keepdim, correction=double_blocks_3_txt_norm2_variance_correction)
    double_blocks_3_txt_norm2_add_output = add(double_blocks_3_txt_norm2_variance_output, double_blocks_3_txt_norm2_add_right)
    double_blocks_3_txt_norm2_sqrt_output = sqrt(double_blocks_3_txt_norm2_add_output)
    double_blocks_3_txt_norm2_divide_output = divide(double_blocks_3_txt_norm2_subtract_output, double_blocks_3_txt_norm2_sqrt_output)
    double_blocks_3_tensoritem_16_output = tensor_item(double_blocks_3_txt_mod_split_2_output, double_blocks_3_tensoritem_16_index)
    double_blocks_3_add_8_output = add(double_blocks_3_add_8_left, double_blocks_3_tensoritem_16_output)
    double_blocks_3_multiply_5_output = multiplication(double_blocks_3_add_8_output, double_blocks_3_txt_norm2_divide_output)
    double_blocks_3_tensoritem_17_output = tensor_item(double_blocks_3_txt_mod_split_2_output, double_blocks_3_tensoritem_17_index)
    double_blocks_3_add_9_output = add(double_blocks_3_multiply_5_output, double_blocks_3_tensoritem_17_output)
    double_blocks_3_txt_mlp_0_transpose_output = transpose(double_blocks_3_txt_mlp_0_weight, double_blocks_3_txt_mlp_0_transpose_axes)
    double_blocks_3_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_3_add_9_output, double_blocks_3_txt_mlp_0_transpose_output)
    double_blocks_3_txt_mlp_0_output = add(double_blocks_3_txt_mlp_0_matrixmultiply_output, double_blocks_3_txt_mlp_0_bias)
    double_blocks_3_txt_mlp_gelu_output = gelu(double_blocks_3_txt_mlp_0_output, double_blocks_3_txt_mlp_gelu_approximate)
    double_blocks_3_txt_mlp_2_transpose_output = transpose(double_blocks_3_txt_mlp_2_weight, double_blocks_3_txt_mlp_2_transpose_axes)
    double_blocks_3_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_3_txt_mlp_gelu_output, double_blocks_3_txt_mlp_2_transpose_output)
    double_blocks_3_txt_mlp = add(double_blocks_3_txt_mlp_2_matrixmultiply_output, double_blocks_3_txt_mlp_2_bias)
    double_blocks_3_tensoritem_18_output = tensor_item(double_blocks_3_img_mod_split_2_output, double_blocks_3_tensoritem_18_index)
    double_blocks_3_multiply_6_output = multiplication(double_blocks_3_tensoritem_18_output, double_blocks_3_img_mlp)
    double_blocks_3_add_10_output = add(double_blocks_3_add_4_output, double_blocks_3_multiply_6_output)
    double_blocks_3_tensoritem_19_output = tensor_item(double_blocks_3_txt_mod_split_2_output, double_blocks_3_tensoritem_19_index)
    double_blocks_3_multiply_7_output = multiplication(double_blocks_3_tensoritem_19_output, double_blocks_3_txt_mlp)
    double_blocks_3_add_11_output = add(double_blocks_3_add_7_output, double_blocks_3_multiply_7_output)
    double_blocks_4_img_mod_silu_minus = minus(vec)
    double_blocks_4_img_mod_silu_exp = exp(double_blocks_4_img_mod_silu_minus)
    double_blocks_4_img_mod_silu_add = add(double_blocks_4_img_mod_silu_add_left, double_blocks_4_img_mod_silu_exp)
    double_blocks_4_img_mod_silu_output = divide(vec, double_blocks_4_img_mod_silu_add)
    double_blocks_4_img_mod_lin_transpose_output = transpose(double_blocks_4_img_mod_lin_weight, double_blocks_4_img_mod_lin_transpose_axes)
    double_blocks_4_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_4_img_mod_silu_output, double_blocks_4_img_mod_lin_transpose_output)
    double_blocks_4_img_mod_lin_out = add(double_blocks_4_img_mod_lin_matrixmultiply_output, double_blocks_4_img_mod_lin_bias)
    double_blocks_4_img_mod_tensoritem_0_output = tensor_item(double_blocks_4_img_mod_lin_out, double_blocks_4_img_mod_tensoritem_0_index)
    double_blocks_4_img_mod_split_0_output = split(double_blocks_4_img_mod_tensoritem_0_output, double_blocks_4_img_mod_split_0_split_size, double_blocks_4_img_mod_split_0_axis)
    double_blocks_4_img_mod_tensoritem_1_output = tensor_item(double_blocks_4_img_mod_split_0_output, double_blocks_4_img_mod_tensoritem_1_index)
    double_blocks_4_img_mod_split_1_output = split(double_blocks_4_img_mod_tensoritem_1_output, double_blocks_4_img_mod_split_1_split_size, double_blocks_4_img_mod_split_1_axis)
    double_blocks_4_img_mod_tensoritem_2_output = tensor_item(double_blocks_4_img_mod_split_0_output, double_blocks_4_img_mod_tensoritem_2_index)
    double_blocks_4_img_mod_split_2_output = split(double_blocks_4_img_mod_tensoritem_2_output, double_blocks_4_img_mod_split_2_split_size, double_blocks_4_img_mod_split_2_axis)
    double_blocks_4_img_norm1_mean_output = reduce_mean(double_blocks_3_add_10_output, axis=double_blocks_4_img_norm1_mean_axis, keepdim=double_blocks_4_img_norm1_mean_keepdim)
    double_blocks_4_img_norm1_subtract_output = subtract(double_blocks_3_add_10_output, double_blocks_4_img_norm1_mean_output)
    double_blocks_4_img_norm1_variance_output = variance(double_blocks_3_add_10_output, axis=double_blocks_4_img_norm1_variance_axis, keepdim=double_blocks_4_img_norm1_variance_keepdim, correction=double_blocks_4_img_norm1_variance_correction)
    double_blocks_4_img_norm1_add_output = add(double_blocks_4_img_norm1_variance_output, double_blocks_4_img_norm1_add_right)
    double_blocks_4_img_norm1_sqrt_output = sqrt(double_blocks_4_img_norm1_add_output)
    double_blocks_4_img_norm1_divide_output = divide(double_blocks_4_img_norm1_subtract_output, double_blocks_4_img_norm1_sqrt_output)
    double_blocks_4_tensoritem_0_output = tensor_item(double_blocks_4_img_mod_split_1_output, double_blocks_4_tensoritem_0_index)
    double_blocks_4_add_0_output = add(double_blocks_4_add_0_left, double_blocks_4_tensoritem_0_output)
    double_blocks_4_multiply_0_output = multiplication(double_blocks_4_add_0_output, double_blocks_4_img_norm1_divide_output)
    double_blocks_4_tensoritem_1_output = tensor_item(double_blocks_4_img_mod_split_1_output, double_blocks_4_tensoritem_1_index)
    double_blocks_4_add_1_output = add(double_blocks_4_multiply_0_output, double_blocks_4_tensoritem_1_output)
    double_blocks_4_img_attn_qkv_transpose_output = transpose(double_blocks_4_img_attn_qkv_weight, double_blocks_4_img_attn_qkv_transpose_axes)
    double_blocks_4_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_4_add_1_output, double_blocks_4_img_attn_qkv_transpose_output)
    double_blocks_4_img_qkv = add(double_blocks_4_img_attn_qkv_matrixmultiply_output, double_blocks_4_img_attn_qkv_bias)
    double_blocks_4_reshape_0_output = reshape(double_blocks_4_img_qkv, double_blocks_4_totuple_0_output)
    double_blocks_4_transpose_out = transpose(double_blocks_4_reshape_0_output, double_blocks_4_transpose_0_axes)
    double_blocks_4_tensoritem_2_output = tensor_item(double_blocks_4_transpose_out, double_blocks_4_tensoritem_2_index)
    double_blocks_4_tensoritem_3_output = tensor_item(double_blocks_4_transpose_out, double_blocks_4_tensoritem_3_index)
    double_blocks_4_img_attn_norm_query_norm_power_output = power(double_blocks_4_tensoritem_2_output, double_blocks_4_img_attn_norm_query_norm_power_exponent)
    double_blocks_4_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_4_img_attn_norm_query_norm_power_output, axis=double_blocks_4_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_4_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_4_img_attn_norm_query_norm_add_output = add(double_blocks_4_img_attn_norm_query_norm_mean_output, double_blocks_4_img_attn_norm_query_norm_add_right)
    double_blocks_4_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_4_img_attn_norm_query_norm_add_output)
    double_blocks_4_img_attn_norm_query_norm_divide_output = divide(double_blocks_4_img_attn_norm_query_norm_divide_numerator, double_blocks_4_img_attn_norm_query_norm_sqrt_output)
    double_blocks_4_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_4_tensoritem_2_output, double_blocks_4_img_attn_norm_query_norm_divide_output)
    double_blocks_4_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_4_img_attn_norm_query_norm_multiply_0_output, double_blocks_4_img_attn_norm_query_norm_scale)
    double_blocks_4_img_attn_norm_key_norm_power_output = power(double_blocks_4_tensoritem_3_output, double_blocks_4_img_attn_norm_key_norm_power_exponent)
    double_blocks_4_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_4_img_attn_norm_key_norm_power_output, axis=double_blocks_4_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_4_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_4_img_attn_norm_key_norm_add_output = add(double_blocks_4_img_attn_norm_key_norm_mean_output, double_blocks_4_img_attn_norm_key_norm_add_right)
    double_blocks_4_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_4_img_attn_norm_key_norm_add_output)
    double_blocks_4_img_attn_norm_key_norm_divide_output = divide(double_blocks_4_img_attn_norm_key_norm_divide_numerator, double_blocks_4_img_attn_norm_key_norm_sqrt_output)
    double_blocks_4_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_4_tensoritem_3_output, double_blocks_4_img_attn_norm_key_norm_divide_output)
    double_blocks_4_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_4_img_attn_norm_key_norm_multiply_0_output, double_blocks_4_img_attn_norm_key_norm_scale)
    double_blocks_4_txt_mod_silu_minus = minus(vec)
    double_blocks_4_txt_mod_silu_exp = exp(double_blocks_4_txt_mod_silu_minus)
    double_blocks_4_txt_mod_silu_add = add(double_blocks_4_txt_mod_silu_add_left, double_blocks_4_txt_mod_silu_exp)
    double_blocks_4_txt_mod_silu_output = divide(vec, double_blocks_4_txt_mod_silu_add)
    double_blocks_4_txt_mod_lin_transpose_output = transpose(double_blocks_4_txt_mod_lin_weight, double_blocks_4_txt_mod_lin_transpose_axes)
    double_blocks_4_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_4_txt_mod_silu_output, double_blocks_4_txt_mod_lin_transpose_output)
    double_blocks_4_txt_mod_lin_out = add(double_blocks_4_txt_mod_lin_matrixmultiply_output, double_blocks_4_txt_mod_lin_bias)
    double_blocks_4_txt_mod_tensoritem_0_output = tensor_item(double_blocks_4_txt_mod_lin_out, double_blocks_4_txt_mod_tensoritem_0_index)
    double_blocks_4_txt_mod_split_0_output = split(double_blocks_4_txt_mod_tensoritem_0_output, double_blocks_4_txt_mod_split_0_split_size, double_blocks_4_txt_mod_split_0_axis)
    double_blocks_4_txt_mod_tensoritem_1_output = tensor_item(double_blocks_4_txt_mod_split_0_output, double_blocks_4_txt_mod_tensoritem_1_index)
    double_blocks_4_txt_mod_split_1_output = split(double_blocks_4_txt_mod_tensoritem_1_output, double_blocks_4_txt_mod_split_1_split_size, double_blocks_4_txt_mod_split_1_axis)
    double_blocks_4_txt_mod_tensoritem_2_output = tensor_item(double_blocks_4_txt_mod_split_0_output, double_blocks_4_txt_mod_tensoritem_2_index)
    double_blocks_4_txt_mod_split_2_output = split(double_blocks_4_txt_mod_tensoritem_2_output, double_blocks_4_txt_mod_split_2_split_size, double_blocks_4_txt_mod_split_2_axis)
    double_blocks_4_txt_norm1_mean_output = reduce_mean(double_blocks_3_add_11_output, axis=double_blocks_4_txt_norm1_mean_axis, keepdim=double_blocks_4_txt_norm1_mean_keepdim)
    double_blocks_4_txt_norm1_subtract_output = subtract(double_blocks_3_add_11_output, double_blocks_4_txt_norm1_mean_output)
    double_blocks_4_txt_norm1_variance_output = variance(double_blocks_3_add_11_output, axis=double_blocks_4_txt_norm1_variance_axis, keepdim=double_blocks_4_txt_norm1_variance_keepdim, correction=double_blocks_4_txt_norm1_variance_correction)
    double_blocks_4_txt_norm1_add_output = add(double_blocks_4_txt_norm1_variance_output, double_blocks_4_txt_norm1_add_right)
    double_blocks_4_txt_norm1_sqrt_output = sqrt(double_blocks_4_txt_norm1_add_output)
    double_blocks_4_txt_norm1_divide_output = divide(double_blocks_4_txt_norm1_subtract_output, double_blocks_4_txt_norm1_sqrt_output)
    double_blocks_4_tensoritem_4_output = tensor_item(double_blocks_4_txt_mod_split_1_output, double_blocks_4_tensoritem_4_index)
    double_blocks_4_add_2_output = add(double_blocks_4_add_2_left, double_blocks_4_tensoritem_4_output)
    double_blocks_4_multiply_1_output = multiplication(double_blocks_4_add_2_output, double_blocks_4_txt_norm1_divide_output)
    double_blocks_4_tensoritem_5_output = tensor_item(double_blocks_4_txt_mod_split_1_output, double_blocks_4_tensoritem_5_index)
    double_blocks_4_add_3_output = add(double_blocks_4_multiply_1_output, double_blocks_4_tensoritem_5_output)
    double_blocks_4_txt_attn_qkv_transpose_output = transpose(double_blocks_4_txt_attn_qkv_weight, double_blocks_4_txt_attn_qkv_transpose_axes)
    double_blocks_4_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_4_add_3_output, double_blocks_4_txt_attn_qkv_transpose_output)
    double_blocks_4_txt_qkv = add(double_blocks_4_txt_attn_qkv_matrixmultiply_output, double_blocks_4_txt_attn_qkv_bias)
    double_blocks_4_reshape_1_output = reshape(double_blocks_4_txt_qkv, double_blocks_4_totuple_1_output)
    double_blocks_4_txt_transpose_out = transpose(double_blocks_4_reshape_1_output, double_blocks_4_transpose_1_axes)
    double_blocks_4_tensoritem_6_output = tensor_item(double_blocks_4_txt_transpose_out, double_blocks_4_tensoritem_6_index)
    double_blocks_4_tensoritem_7_output = tensor_item(double_blocks_4_txt_transpose_out, double_blocks_4_tensoritem_7_index)
    double_blocks_4_txt_attn_norm_query_norm_power_output = power(double_blocks_4_tensoritem_6_output, double_blocks_4_txt_attn_norm_query_norm_power_exponent)
    double_blocks_4_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_4_txt_attn_norm_query_norm_power_output, axis=double_blocks_4_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_4_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_4_txt_attn_norm_query_norm_add_output = add(double_blocks_4_txt_attn_norm_query_norm_mean_output, double_blocks_4_txt_attn_norm_query_norm_add_right)
    double_blocks_4_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_4_txt_attn_norm_query_norm_add_output)
    double_blocks_4_txt_attn_norm_query_norm_divide_output = divide(double_blocks_4_txt_attn_norm_query_norm_divide_numerator, double_blocks_4_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_4_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_4_tensoritem_6_output, double_blocks_4_txt_attn_norm_query_norm_divide_output)
    double_blocks_4_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_4_txt_attn_norm_query_norm_multiply_0_output, double_blocks_4_txt_attn_norm_query_norm_scale)
    double_blocks_4_txt_attn_norm_key_norm_power_output = power(double_blocks_4_tensoritem_7_output, double_blocks_4_txt_attn_norm_key_norm_power_exponent)
    double_blocks_4_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_4_txt_attn_norm_key_norm_power_output, axis=double_blocks_4_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_4_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_4_txt_attn_norm_key_norm_add_output = add(double_blocks_4_txt_attn_norm_key_norm_mean_output, double_blocks_4_txt_attn_norm_key_norm_add_right)
    double_blocks_4_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_4_txt_attn_norm_key_norm_add_output)
    double_blocks_4_txt_attn_norm_key_norm_divide_output = divide(double_blocks_4_txt_attn_norm_key_norm_divide_numerator, double_blocks_4_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_4_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_4_tensoritem_7_output, double_blocks_4_txt_attn_norm_key_norm_divide_output)
    double_blocks_4_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_4_txt_attn_norm_key_norm_multiply_0_output, double_blocks_4_txt_attn_norm_key_norm_scale)
    double_blocks_4_q_concat = concat(double_blocks_4_txt_attn_norm_query_norm_multiply_1_output, double_blocks_4_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_4_concat_0_axis)
    double_blocks_4_k_concat = concat(double_blocks_4_txt_attn_norm_key_norm_multiply_1_output, double_blocks_4_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_4_concat_1_axis)
    double_blocks_4_tensoritem_8_output = tensor_item(double_blocks_4_txt_transpose_out, double_blocks_4_tensoritem_8_index)
    double_blocks_4_tensoritem_9_output = tensor_item(double_blocks_4_transpose_out, double_blocks_4_tensoritem_9_index)
    double_blocks_4_v_concat = concat(double_blocks_4_tensoritem_8_output, double_blocks_4_tensoritem_9_output, axis=double_blocks_4_concat_2_axis)
    double_blocks_4_model_model_xq_ = reshape(double_blocks_4_q_concat, double_blocks_4_model_model_totuple_0_output)
    double_blocks_4_model_model_xk_ = reshape(double_blocks_4_k_concat, double_blocks_4_model_model_totuple_1_output)
    double_blocks_4_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_4_model_model_tensoritem_0_index)
    double_blocks_4_model_model_tensoritem_1_output = tensor_item(double_blocks_4_model_model_xq_, double_blocks_4_model_model_tensoritem_1_index)
    double_blocks_4_model_model_multiply_0_output = multiplication(double_blocks_4_model_model_tensoritem_0_output, double_blocks_4_model_model_tensoritem_1_output)
    double_blocks_4_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_4_model_model_tensoritem_2_index)
    double_blocks_4_model_model_tensoritem_3_output = tensor_item(double_blocks_4_model_model_xq_, double_blocks_4_model_model_tensoritem_3_index)
    double_blocks_4_model_model_multiply_1_output = multiplication(double_blocks_4_model_model_tensoritem_2_output, double_blocks_4_model_model_tensoritem_3_output)
    double_blocks_4_model_model_add_0_output = add(double_blocks_4_model_model_multiply_0_output, double_blocks_4_model_model_multiply_1_output)
    double_blocks_4_model_q_out = reshape(double_blocks_4_model_model_add_0_output, double_blocks_4_model_model_shape_0_output)
    double_blocks_4_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_4_model_model_tensoritem_4_index)
    double_blocks_4_model_model_tensoritem_5_output = tensor_item(double_blocks_4_model_model_xk_, double_blocks_4_model_model_tensoritem_5_index)
    double_blocks_4_model_model_multiply_2_output = multiplication(double_blocks_4_model_model_tensoritem_4_output, double_blocks_4_model_model_tensoritem_5_output)
    double_blocks_4_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_4_model_model_tensoritem_6_index)
    double_blocks_4_model_model_tensoritem_7_output = tensor_item(double_blocks_4_model_model_xk_, double_blocks_4_model_model_tensoritem_7_index)
    double_blocks_4_model_model_multiply_3_output = multiplication(double_blocks_4_model_model_tensoritem_6_output, double_blocks_4_model_model_tensoritem_7_output)
    double_blocks_4_model_model_add_1_output = add(double_blocks_4_model_model_multiply_2_output, double_blocks_4_model_model_multiply_3_output)
    double_blocks_4_model_k_out = reshape(double_blocks_4_model_model_add_1_output, double_blocks_4_model_model_shape_1_output)
    double_blocks_4_model_context = scaled_dot_product_attention(double_blocks_4_model_q_out, double_blocks_4_model_k_out, double_blocks_4_v_concat, double_blocks_4_model_scaleddotproduct_attn_mask)
    double_blocks_4_model_transpose_output = transpose(double_blocks_4_model_context, double_blocks_4_model_transpose_axes)
    double_blocks_4_attn = reshape(double_blocks_4_model_transpose_output, double_blocks_4_model_totuple_output)
    double_blocks_4_tensoritem_10_output = tensor_item(double_blocks_4_attn, double_blocks_4_tensoritem_10_index)
    double_blocks_4_img_attn_proj_transpose_output = transpose(double_blocks_4_img_attn_proj_weight, double_blocks_4_img_attn_proj_transpose_axes)
    double_blocks_4_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_4_tensoritem_10_output, double_blocks_4_img_attn_proj_transpose_output)
    double_blocks_4_img_proj = add(double_blocks_4_img_attn_proj_matrixmultiply_output, double_blocks_4_img_attn_proj_bias)
    double_blocks_4_tensoritem_11_output = tensor_item(double_blocks_4_img_mod_split_1_output, double_blocks_4_tensoritem_11_index)
    double_blocks_4_multiply_2_output = multiplication(double_blocks_4_tensoritem_11_output, double_blocks_4_img_proj)
    double_blocks_4_add_4_output = add(double_blocks_3_add_10_output, double_blocks_4_multiply_2_output)
    double_blocks_4_img_norm2_mean_output = reduce_mean(double_blocks_4_add_4_output, axis=double_blocks_4_img_norm2_mean_axis, keepdim=double_blocks_4_img_norm2_mean_keepdim)
    double_blocks_4_img_norm2_subtract_output = subtract(double_blocks_4_add_4_output, double_blocks_4_img_norm2_mean_output)
    double_blocks_4_img_norm2_variance_output = variance(double_blocks_4_add_4_output, axis=double_blocks_4_img_norm2_variance_axis, keepdim=double_blocks_4_img_norm2_variance_keepdim, correction=double_blocks_4_img_norm2_variance_correction)
    double_blocks_4_img_norm2_add_output = add(double_blocks_4_img_norm2_variance_output, double_blocks_4_img_norm2_add_right)
    double_blocks_4_img_norm2_sqrt_output = sqrt(double_blocks_4_img_norm2_add_output)
    double_blocks_4_img_norm2_divide_output = divide(double_blocks_4_img_norm2_subtract_output, double_blocks_4_img_norm2_sqrt_output)
    double_blocks_4_tensoritem_12_output = tensor_item(double_blocks_4_img_mod_split_2_output, double_blocks_4_tensoritem_12_index)
    double_blocks_4_add_5_output = add(double_blocks_4_add_5_left, double_blocks_4_tensoritem_12_output)
    double_blocks_4_multiply_3_output = multiplication(double_blocks_4_add_5_output, double_blocks_4_img_norm2_divide_output)
    double_blocks_4_tensoritem_13_output = tensor_item(double_blocks_4_img_mod_split_2_output, double_blocks_4_tensoritem_13_index)
    double_blocks_4_add_6_output = add(double_blocks_4_multiply_3_output, double_blocks_4_tensoritem_13_output)
    double_blocks_4_img_mlp_0_transpose_output = transpose(double_blocks_4_img_mlp_0_weight, double_blocks_4_img_mlp_0_transpose_axes)
    double_blocks_4_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_4_add_6_output, double_blocks_4_img_mlp_0_transpose_output)
    double_blocks_4_img_mlp_0_output = add(double_blocks_4_img_mlp_0_matrixmultiply_output, double_blocks_4_img_mlp_0_bias)
    double_blocks_4_img_mlp_gelu_output = gelu(double_blocks_4_img_mlp_0_output, double_blocks_4_img_mlp_gelu_approximate)
    double_blocks_4_img_mlp_2_transpose_output = transpose(double_blocks_4_img_mlp_2_weight, double_blocks_4_img_mlp_2_transpose_axes)
    double_blocks_4_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_4_img_mlp_gelu_output, double_blocks_4_img_mlp_2_transpose_output)
    double_blocks_4_img_mlp = add(double_blocks_4_img_mlp_2_matrixmultiply_output, double_blocks_4_img_mlp_2_bias)
    double_blocks_4_tensoritem_14_output = tensor_item(double_blocks_4_attn, double_blocks_4_tensoritem_14_index)
    double_blocks_4_txt_attn_proj_transpose_output = transpose(double_blocks_4_txt_attn_proj_weight, double_blocks_4_txt_attn_proj_transpose_axes)
    double_blocks_4_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_4_tensoritem_14_output, double_blocks_4_txt_attn_proj_transpose_output)
    double_blocks_4_txt_proj = add(double_blocks_4_txt_attn_proj_matrixmultiply_output, double_blocks_4_txt_attn_proj_bias)
    double_blocks_4_tensoritem_15_output = tensor_item(double_blocks_4_txt_mod_split_1_output, double_blocks_4_tensoritem_15_index)
    double_blocks_4_multiply_4_output = multiplication(double_blocks_4_tensoritem_15_output, double_blocks_4_txt_proj)
    double_blocks_4_add_7_output = add(double_blocks_3_add_11_output, double_blocks_4_multiply_4_output)
    double_blocks_4_txt_norm2_mean_output = reduce_mean(double_blocks_4_add_7_output, axis=double_blocks_4_txt_norm2_mean_axis, keepdim=double_blocks_4_txt_norm2_mean_keepdim)
    double_blocks_4_txt_norm2_subtract_output = subtract(double_blocks_4_add_7_output, double_blocks_4_txt_norm2_mean_output)
    double_blocks_4_txt_norm2_variance_output = variance(double_blocks_4_add_7_output, axis=double_blocks_4_txt_norm2_variance_axis, keepdim=double_blocks_4_txt_norm2_variance_keepdim, correction=double_blocks_4_txt_norm2_variance_correction)
    double_blocks_4_txt_norm2_add_output = add(double_blocks_4_txt_norm2_variance_output, double_blocks_4_txt_norm2_add_right)
    double_blocks_4_txt_norm2_sqrt_output = sqrt(double_blocks_4_txt_norm2_add_output)
    double_blocks_4_txt_norm2_divide_output = divide(double_blocks_4_txt_norm2_subtract_output, double_blocks_4_txt_norm2_sqrt_output)
    double_blocks_4_tensoritem_16_output = tensor_item(double_blocks_4_txt_mod_split_2_output, double_blocks_4_tensoritem_16_index)
    double_blocks_4_add_8_output = add(double_blocks_4_add_8_left, double_blocks_4_tensoritem_16_output)
    double_blocks_4_multiply_5_output = multiplication(double_blocks_4_add_8_output, double_blocks_4_txt_norm2_divide_output)
    double_blocks_4_tensoritem_17_output = tensor_item(double_blocks_4_txt_mod_split_2_output, double_blocks_4_tensoritem_17_index)
    double_blocks_4_add_9_output = add(double_blocks_4_multiply_5_output, double_blocks_4_tensoritem_17_output)
    double_blocks_4_txt_mlp_0_transpose_output = transpose(double_blocks_4_txt_mlp_0_weight, double_blocks_4_txt_mlp_0_transpose_axes)
    double_blocks_4_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_4_add_9_output, double_blocks_4_txt_mlp_0_transpose_output)
    double_blocks_4_txt_mlp_0_output = add(double_blocks_4_txt_mlp_0_matrixmultiply_output, double_blocks_4_txt_mlp_0_bias)
    double_blocks_4_txt_mlp_gelu_output = gelu(double_blocks_4_txt_mlp_0_output, double_blocks_4_txt_mlp_gelu_approximate)
    double_blocks_4_txt_mlp_2_transpose_output = transpose(double_blocks_4_txt_mlp_2_weight, double_blocks_4_txt_mlp_2_transpose_axes)
    double_blocks_4_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_4_txt_mlp_gelu_output, double_blocks_4_txt_mlp_2_transpose_output)
    double_blocks_4_txt_mlp = add(double_blocks_4_txt_mlp_2_matrixmultiply_output, double_blocks_4_txt_mlp_2_bias)
    double_blocks_4_tensoritem_18_output = tensor_item(double_blocks_4_img_mod_split_2_output, double_blocks_4_tensoritem_18_index)
    double_blocks_4_multiply_6_output = multiplication(double_blocks_4_tensoritem_18_output, double_blocks_4_img_mlp)
    double_blocks_4_add_10_output = add(double_blocks_4_add_4_output, double_blocks_4_multiply_6_output)
    double_blocks_4_tensoritem_19_output = tensor_item(double_blocks_4_txt_mod_split_2_output, double_blocks_4_tensoritem_19_index)
    double_blocks_4_multiply_7_output = multiplication(double_blocks_4_tensoritem_19_output, double_blocks_4_txt_mlp)
    double_blocks_4_add_11_output = add(double_blocks_4_add_7_output, double_blocks_4_multiply_7_output)
    double_blocks_5_img_mod_silu_minus = minus(vec)
    double_blocks_5_img_mod_silu_exp = exp(double_blocks_5_img_mod_silu_minus)
    double_blocks_5_img_mod_silu_add = add(double_blocks_5_img_mod_silu_add_left, double_blocks_5_img_mod_silu_exp)
    double_blocks_5_img_mod_silu_output = divide(vec, double_blocks_5_img_mod_silu_add)
    double_blocks_5_img_mod_lin_transpose_output = transpose(double_blocks_5_img_mod_lin_weight, double_blocks_5_img_mod_lin_transpose_axes)
    double_blocks_5_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_5_img_mod_silu_output, double_blocks_5_img_mod_lin_transpose_output)
    double_blocks_5_img_mod_lin_out = add(double_blocks_5_img_mod_lin_matrixmultiply_output, double_blocks_5_img_mod_lin_bias)
    double_blocks_5_img_mod_tensoritem_0_output = tensor_item(double_blocks_5_img_mod_lin_out, double_blocks_5_img_mod_tensoritem_0_index)
    double_blocks_5_img_mod_split_0_output = split(double_blocks_5_img_mod_tensoritem_0_output, double_blocks_5_img_mod_split_0_split_size, double_blocks_5_img_mod_split_0_axis)
    double_blocks_5_img_mod_tensoritem_1_output = tensor_item(double_blocks_5_img_mod_split_0_output, double_blocks_5_img_mod_tensoritem_1_index)
    double_blocks_5_img_mod_split_1_output = split(double_blocks_5_img_mod_tensoritem_1_output, double_blocks_5_img_mod_split_1_split_size, double_blocks_5_img_mod_split_1_axis)
    double_blocks_5_img_mod_tensoritem_2_output = tensor_item(double_blocks_5_img_mod_split_0_output, double_blocks_5_img_mod_tensoritem_2_index)
    double_blocks_5_img_mod_split_2_output = split(double_blocks_5_img_mod_tensoritem_2_output, double_blocks_5_img_mod_split_2_split_size, double_blocks_5_img_mod_split_2_axis)
    double_blocks_5_img_norm1_mean_output = reduce_mean(double_blocks_4_add_10_output, axis=double_blocks_5_img_norm1_mean_axis, keepdim=double_blocks_5_img_norm1_mean_keepdim)
    double_blocks_5_img_norm1_subtract_output = subtract(double_blocks_4_add_10_output, double_blocks_5_img_norm1_mean_output)
    double_blocks_5_img_norm1_variance_output = variance(double_blocks_4_add_10_output, axis=double_blocks_5_img_norm1_variance_axis, keepdim=double_blocks_5_img_norm1_variance_keepdim, correction=double_blocks_5_img_norm1_variance_correction)
    double_blocks_5_img_norm1_add_output = add(double_blocks_5_img_norm1_variance_output, double_blocks_5_img_norm1_add_right)
    double_blocks_5_img_norm1_sqrt_output = sqrt(double_blocks_5_img_norm1_add_output)
    double_blocks_5_img_norm1_divide_output = divide(double_blocks_5_img_norm1_subtract_output, double_blocks_5_img_norm1_sqrt_output)
    double_blocks_5_tensoritem_0_output = tensor_item(double_blocks_5_img_mod_split_1_output, double_blocks_5_tensoritem_0_index)
    double_blocks_5_add_0_output = add(double_blocks_5_add_0_left, double_blocks_5_tensoritem_0_output)
    double_blocks_5_multiply_0_output = multiplication(double_blocks_5_add_0_output, double_blocks_5_img_norm1_divide_output)
    double_blocks_5_tensoritem_1_output = tensor_item(double_blocks_5_img_mod_split_1_output, double_blocks_5_tensoritem_1_index)
    double_blocks_5_add_1_output = add(double_blocks_5_multiply_0_output, double_blocks_5_tensoritem_1_output)
    double_blocks_5_img_attn_qkv_transpose_output = transpose(double_blocks_5_img_attn_qkv_weight, double_blocks_5_img_attn_qkv_transpose_axes)
    double_blocks_5_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_5_add_1_output, double_blocks_5_img_attn_qkv_transpose_output)
    double_blocks_5_img_qkv = add(double_blocks_5_img_attn_qkv_matrixmultiply_output, double_blocks_5_img_attn_qkv_bias)
    double_blocks_5_reshape_0_output = reshape(double_blocks_5_img_qkv, double_blocks_5_totuple_0_output)
    double_blocks_5_transpose_out = transpose(double_blocks_5_reshape_0_output, double_blocks_5_transpose_0_axes)
    double_blocks_5_tensoritem_2_output = tensor_item(double_blocks_5_transpose_out, double_blocks_5_tensoritem_2_index)
    double_blocks_5_tensoritem_3_output = tensor_item(double_blocks_5_transpose_out, double_blocks_5_tensoritem_3_index)
    double_blocks_5_img_attn_norm_query_norm_power_output = power(double_blocks_5_tensoritem_2_output, double_blocks_5_img_attn_norm_query_norm_power_exponent)
    double_blocks_5_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_5_img_attn_norm_query_norm_power_output, axis=double_blocks_5_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_5_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_5_img_attn_norm_query_norm_add_output = add(double_blocks_5_img_attn_norm_query_norm_mean_output, double_blocks_5_img_attn_norm_query_norm_add_right)
    double_blocks_5_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_5_img_attn_norm_query_norm_add_output)
    double_blocks_5_img_attn_norm_query_norm_divide_output = divide(double_blocks_5_img_attn_norm_query_norm_divide_numerator, double_blocks_5_img_attn_norm_query_norm_sqrt_output)
    double_blocks_5_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_5_tensoritem_2_output, double_blocks_5_img_attn_norm_query_norm_divide_output)
    double_blocks_5_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_5_img_attn_norm_query_norm_multiply_0_output, double_blocks_5_img_attn_norm_query_norm_scale)
    double_blocks_5_img_attn_norm_key_norm_power_output = power(double_blocks_5_tensoritem_3_output, double_blocks_5_img_attn_norm_key_norm_power_exponent)
    double_blocks_5_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_5_img_attn_norm_key_norm_power_output, axis=double_blocks_5_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_5_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_5_img_attn_norm_key_norm_add_output = add(double_blocks_5_img_attn_norm_key_norm_mean_output, double_blocks_5_img_attn_norm_key_norm_add_right)
    double_blocks_5_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_5_img_attn_norm_key_norm_add_output)
    double_blocks_5_img_attn_norm_key_norm_divide_output = divide(double_blocks_5_img_attn_norm_key_norm_divide_numerator, double_blocks_5_img_attn_norm_key_norm_sqrt_output)
    double_blocks_5_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_5_tensoritem_3_output, double_blocks_5_img_attn_norm_key_norm_divide_output)
    double_blocks_5_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_5_img_attn_norm_key_norm_multiply_0_output, double_blocks_5_img_attn_norm_key_norm_scale)
    double_blocks_5_txt_mod_silu_minus = minus(vec)
    double_blocks_5_txt_mod_silu_exp = exp(double_blocks_5_txt_mod_silu_minus)
    double_blocks_5_txt_mod_silu_add = add(double_blocks_5_txt_mod_silu_add_left, double_blocks_5_txt_mod_silu_exp)
    double_blocks_5_txt_mod_silu_output = divide(vec, double_blocks_5_txt_mod_silu_add)
    double_blocks_5_txt_mod_lin_transpose_output = transpose(double_blocks_5_txt_mod_lin_weight, double_blocks_5_txt_mod_lin_transpose_axes)
    double_blocks_5_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_5_txt_mod_silu_output, double_blocks_5_txt_mod_lin_transpose_output)
    double_blocks_5_txt_mod_lin_out = add(double_blocks_5_txt_mod_lin_matrixmultiply_output, double_blocks_5_txt_mod_lin_bias)
    double_blocks_5_txt_mod_tensoritem_0_output = tensor_item(double_blocks_5_txt_mod_lin_out, double_blocks_5_txt_mod_tensoritem_0_index)
    double_blocks_5_txt_mod_split_0_output = split(double_blocks_5_txt_mod_tensoritem_0_output, double_blocks_5_txt_mod_split_0_split_size, double_blocks_5_txt_mod_split_0_axis)
    double_blocks_5_txt_mod_tensoritem_1_output = tensor_item(double_blocks_5_txt_mod_split_0_output, double_blocks_5_txt_mod_tensoritem_1_index)
    double_blocks_5_txt_mod_split_1_output = split(double_blocks_5_txt_mod_tensoritem_1_output, double_blocks_5_txt_mod_split_1_split_size, double_blocks_5_txt_mod_split_1_axis)
    double_blocks_5_txt_mod_tensoritem_2_output = tensor_item(double_blocks_5_txt_mod_split_0_output, double_blocks_5_txt_mod_tensoritem_2_index)
    double_blocks_5_txt_mod_split_2_output = split(double_blocks_5_txt_mod_tensoritem_2_output, double_blocks_5_txt_mod_split_2_split_size, double_blocks_5_txt_mod_split_2_axis)
    double_blocks_5_txt_norm1_mean_output = reduce_mean(double_blocks_4_add_11_output, axis=double_blocks_5_txt_norm1_mean_axis, keepdim=double_blocks_5_txt_norm1_mean_keepdim)
    double_blocks_5_txt_norm1_subtract_output = subtract(double_blocks_4_add_11_output, double_blocks_5_txt_norm1_mean_output)
    double_blocks_5_txt_norm1_variance_output = variance(double_blocks_4_add_11_output, axis=double_blocks_5_txt_norm1_variance_axis, keepdim=double_blocks_5_txt_norm1_variance_keepdim, correction=double_blocks_5_txt_norm1_variance_correction)
    double_blocks_5_txt_norm1_add_output = add(double_blocks_5_txt_norm1_variance_output, double_blocks_5_txt_norm1_add_right)
    double_blocks_5_txt_norm1_sqrt_output = sqrt(double_blocks_5_txt_norm1_add_output)
    double_blocks_5_txt_norm1_divide_output = divide(double_blocks_5_txt_norm1_subtract_output, double_blocks_5_txt_norm1_sqrt_output)
    double_blocks_5_tensoritem_4_output = tensor_item(double_blocks_5_txt_mod_split_1_output, double_blocks_5_tensoritem_4_index)
    double_blocks_5_add_2_output = add(double_blocks_5_add_2_left, double_blocks_5_tensoritem_4_output)
    double_blocks_5_multiply_1_output = multiplication(double_blocks_5_add_2_output, double_blocks_5_txt_norm1_divide_output)
    double_blocks_5_tensoritem_5_output = tensor_item(double_blocks_5_txt_mod_split_1_output, double_blocks_5_tensoritem_5_index)
    double_blocks_5_add_3_output = add(double_blocks_5_multiply_1_output, double_blocks_5_tensoritem_5_output)
    double_blocks_5_txt_attn_qkv_transpose_output = transpose(double_blocks_5_txt_attn_qkv_weight, double_blocks_5_txt_attn_qkv_transpose_axes)
    double_blocks_5_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_5_add_3_output, double_blocks_5_txt_attn_qkv_transpose_output)
    double_blocks_5_txt_qkv = add(double_blocks_5_txt_attn_qkv_matrixmultiply_output, double_blocks_5_txt_attn_qkv_bias)
    double_blocks_5_reshape_1_output = reshape(double_blocks_5_txt_qkv, double_blocks_5_totuple_1_output)
    double_blocks_5_txt_transpose_out = transpose(double_blocks_5_reshape_1_output, double_blocks_5_transpose_1_axes)
    double_blocks_5_tensoritem_6_output = tensor_item(double_blocks_5_txt_transpose_out, double_blocks_5_tensoritem_6_index)
    double_blocks_5_tensoritem_7_output = tensor_item(double_blocks_5_txt_transpose_out, double_blocks_5_tensoritem_7_index)
    double_blocks_5_txt_attn_norm_query_norm_power_output = power(double_blocks_5_tensoritem_6_output, double_blocks_5_txt_attn_norm_query_norm_power_exponent)
    double_blocks_5_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_5_txt_attn_norm_query_norm_power_output, axis=double_blocks_5_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_5_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_5_txt_attn_norm_query_norm_add_output = add(double_blocks_5_txt_attn_norm_query_norm_mean_output, double_blocks_5_txt_attn_norm_query_norm_add_right)
    double_blocks_5_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_5_txt_attn_norm_query_norm_add_output)
    double_blocks_5_txt_attn_norm_query_norm_divide_output = divide(double_blocks_5_txt_attn_norm_query_norm_divide_numerator, double_blocks_5_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_5_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_5_tensoritem_6_output, double_blocks_5_txt_attn_norm_query_norm_divide_output)
    double_blocks_5_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_5_txt_attn_norm_query_norm_multiply_0_output, double_blocks_5_txt_attn_norm_query_norm_scale)
    double_blocks_5_txt_attn_norm_key_norm_power_output = power(double_blocks_5_tensoritem_7_output, double_blocks_5_txt_attn_norm_key_norm_power_exponent)
    double_blocks_5_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_5_txt_attn_norm_key_norm_power_output, axis=double_blocks_5_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_5_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_5_txt_attn_norm_key_norm_add_output = add(double_blocks_5_txt_attn_norm_key_norm_mean_output, double_blocks_5_txt_attn_norm_key_norm_add_right)
    double_blocks_5_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_5_txt_attn_norm_key_norm_add_output)
    double_blocks_5_txt_attn_norm_key_norm_divide_output = divide(double_blocks_5_txt_attn_norm_key_norm_divide_numerator, double_blocks_5_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_5_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_5_tensoritem_7_output, double_blocks_5_txt_attn_norm_key_norm_divide_output)
    double_blocks_5_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_5_txt_attn_norm_key_norm_multiply_0_output, double_blocks_5_txt_attn_norm_key_norm_scale)
    double_blocks_5_q_concat = concat(double_blocks_5_txt_attn_norm_query_norm_multiply_1_output, double_blocks_5_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_5_concat_0_axis)
    double_blocks_5_k_concat = concat(double_blocks_5_txt_attn_norm_key_norm_multiply_1_output, double_blocks_5_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_5_concat_1_axis)
    double_blocks_5_tensoritem_8_output = tensor_item(double_blocks_5_txt_transpose_out, double_blocks_5_tensoritem_8_index)
    double_blocks_5_tensoritem_9_output = tensor_item(double_blocks_5_transpose_out, double_blocks_5_tensoritem_9_index)
    double_blocks_5_v_concat = concat(double_blocks_5_tensoritem_8_output, double_blocks_5_tensoritem_9_output, axis=double_blocks_5_concat_2_axis)
    double_blocks_5_model_model_xq_ = reshape(double_blocks_5_q_concat, double_blocks_5_model_model_totuple_0_output)
    double_blocks_5_model_model_xk_ = reshape(double_blocks_5_k_concat, double_blocks_5_model_model_totuple_1_output)
    double_blocks_5_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_5_model_model_tensoritem_0_index)
    double_blocks_5_model_model_tensoritem_1_output = tensor_item(double_blocks_5_model_model_xq_, double_blocks_5_model_model_tensoritem_1_index)
    double_blocks_5_model_model_multiply_0_output = multiplication(double_blocks_5_model_model_tensoritem_0_output, double_blocks_5_model_model_tensoritem_1_output)
    double_blocks_5_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_5_model_model_tensoritem_2_index)
    double_blocks_5_model_model_tensoritem_3_output = tensor_item(double_blocks_5_model_model_xq_, double_blocks_5_model_model_tensoritem_3_index)
    double_blocks_5_model_model_multiply_1_output = multiplication(double_blocks_5_model_model_tensoritem_2_output, double_blocks_5_model_model_tensoritem_3_output)
    double_blocks_5_model_model_add_0_output = add(double_blocks_5_model_model_multiply_0_output, double_blocks_5_model_model_multiply_1_output)
    double_blocks_5_model_q_out = reshape(double_blocks_5_model_model_add_0_output, double_blocks_5_model_model_shape_0_output)
    double_blocks_5_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_5_model_model_tensoritem_4_index)
    double_blocks_5_model_model_tensoritem_5_output = tensor_item(double_blocks_5_model_model_xk_, double_blocks_5_model_model_tensoritem_5_index)
    double_blocks_5_model_model_multiply_2_output = multiplication(double_blocks_5_model_model_tensoritem_4_output, double_blocks_5_model_model_tensoritem_5_output)
    double_blocks_5_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_5_model_model_tensoritem_6_index)
    double_blocks_5_model_model_tensoritem_7_output = tensor_item(double_blocks_5_model_model_xk_, double_blocks_5_model_model_tensoritem_7_index)
    double_blocks_5_model_model_multiply_3_output = multiplication(double_blocks_5_model_model_tensoritem_6_output, double_blocks_5_model_model_tensoritem_7_output)
    double_blocks_5_model_model_add_1_output = add(double_blocks_5_model_model_multiply_2_output, double_blocks_5_model_model_multiply_3_output)
    double_blocks_5_model_k_out = reshape(double_blocks_5_model_model_add_1_output, double_blocks_5_model_model_shape_1_output)
    double_blocks_5_model_context = scaled_dot_product_attention(double_blocks_5_model_q_out, double_blocks_5_model_k_out, double_blocks_5_v_concat, double_blocks_5_model_scaleddotproduct_attn_mask)
    double_blocks_5_model_transpose_output = transpose(double_blocks_5_model_context, double_blocks_5_model_transpose_axes)
    double_blocks_5_attn = reshape(double_blocks_5_model_transpose_output, double_blocks_5_model_totuple_output)
    double_blocks_5_tensoritem_10_output = tensor_item(double_blocks_5_attn, double_blocks_5_tensoritem_10_index)
    double_blocks_5_img_attn_proj_transpose_output = transpose(double_blocks_5_img_attn_proj_weight, double_blocks_5_img_attn_proj_transpose_axes)
    double_blocks_5_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_5_tensoritem_10_output, double_blocks_5_img_attn_proj_transpose_output)
    double_blocks_5_img_proj = add(double_blocks_5_img_attn_proj_matrixmultiply_output, double_blocks_5_img_attn_proj_bias)
    double_blocks_5_tensoritem_11_output = tensor_item(double_blocks_5_img_mod_split_1_output, double_blocks_5_tensoritem_11_index)
    double_blocks_5_multiply_2_output = multiplication(double_blocks_5_tensoritem_11_output, double_blocks_5_img_proj)
    double_blocks_5_add_4_output = add(double_blocks_4_add_10_output, double_blocks_5_multiply_2_output)
    double_blocks_5_img_norm2_mean_output = reduce_mean(double_blocks_5_add_4_output, axis=double_blocks_5_img_norm2_mean_axis, keepdim=double_blocks_5_img_norm2_mean_keepdim)
    double_blocks_5_img_norm2_subtract_output = subtract(double_blocks_5_add_4_output, double_blocks_5_img_norm2_mean_output)
    double_blocks_5_img_norm2_variance_output = variance(double_blocks_5_add_4_output, axis=double_blocks_5_img_norm2_variance_axis, keepdim=double_blocks_5_img_norm2_variance_keepdim, correction=double_blocks_5_img_norm2_variance_correction)
    double_blocks_5_img_norm2_add_output = add(double_blocks_5_img_norm2_variance_output, double_blocks_5_img_norm2_add_right)
    double_blocks_5_img_norm2_sqrt_output = sqrt(double_blocks_5_img_norm2_add_output)
    double_blocks_5_img_norm2_divide_output = divide(double_blocks_5_img_norm2_subtract_output, double_blocks_5_img_norm2_sqrt_output)
    double_blocks_5_tensoritem_12_output = tensor_item(double_blocks_5_img_mod_split_2_output, double_blocks_5_tensoritem_12_index)
    double_blocks_5_add_5_output = add(double_blocks_5_add_5_left, double_blocks_5_tensoritem_12_output)
    double_blocks_5_multiply_3_output = multiplication(double_blocks_5_add_5_output, double_blocks_5_img_norm2_divide_output)
    double_blocks_5_tensoritem_13_output = tensor_item(double_blocks_5_img_mod_split_2_output, double_blocks_5_tensoritem_13_index)
    double_blocks_5_add_6_output = add(double_blocks_5_multiply_3_output, double_blocks_5_tensoritem_13_output)
    double_blocks_5_img_mlp_0_transpose_output = transpose(double_blocks_5_img_mlp_0_weight, double_blocks_5_img_mlp_0_transpose_axes)
    double_blocks_5_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_5_add_6_output, double_blocks_5_img_mlp_0_transpose_output)
    double_blocks_5_img_mlp_0_output = add(double_blocks_5_img_mlp_0_matrixmultiply_output, double_blocks_5_img_mlp_0_bias)
    double_blocks_5_img_mlp_gelu_output = gelu(double_blocks_5_img_mlp_0_output, double_blocks_5_img_mlp_gelu_approximate)
    double_blocks_5_img_mlp_2_transpose_output = transpose(double_blocks_5_img_mlp_2_weight, double_blocks_5_img_mlp_2_transpose_axes)
    double_blocks_5_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_5_img_mlp_gelu_output, double_blocks_5_img_mlp_2_transpose_output)
    double_blocks_5_img_mlp = add(double_blocks_5_img_mlp_2_matrixmultiply_output, double_blocks_5_img_mlp_2_bias)
    double_blocks_5_tensoritem_14_output = tensor_item(double_blocks_5_attn, double_blocks_5_tensoritem_14_index)
    double_blocks_5_txt_attn_proj_transpose_output = transpose(double_blocks_5_txt_attn_proj_weight, double_blocks_5_txt_attn_proj_transpose_axes)
    double_blocks_5_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_5_tensoritem_14_output, double_blocks_5_txt_attn_proj_transpose_output)
    double_blocks_5_txt_proj = add(double_blocks_5_txt_attn_proj_matrixmultiply_output, double_blocks_5_txt_attn_proj_bias)
    double_blocks_5_tensoritem_15_output = tensor_item(double_blocks_5_txt_mod_split_1_output, double_blocks_5_tensoritem_15_index)
    double_blocks_5_multiply_4_output = multiplication(double_blocks_5_tensoritem_15_output, double_blocks_5_txt_proj)
    double_blocks_5_add_7_output = add(double_blocks_4_add_11_output, double_blocks_5_multiply_4_output)
    double_blocks_5_txt_norm2_mean_output = reduce_mean(double_blocks_5_add_7_output, axis=double_blocks_5_txt_norm2_mean_axis, keepdim=double_blocks_5_txt_norm2_mean_keepdim)
    double_blocks_5_txt_norm2_subtract_output = subtract(double_blocks_5_add_7_output, double_blocks_5_txt_norm2_mean_output)
    double_blocks_5_txt_norm2_variance_output = variance(double_blocks_5_add_7_output, axis=double_blocks_5_txt_norm2_variance_axis, keepdim=double_blocks_5_txt_norm2_variance_keepdim, correction=double_blocks_5_txt_norm2_variance_correction)
    double_blocks_5_txt_norm2_add_output = add(double_blocks_5_txt_norm2_variance_output, double_blocks_5_txt_norm2_add_right)
    double_blocks_5_txt_norm2_sqrt_output = sqrt(double_blocks_5_txt_norm2_add_output)
    double_blocks_5_txt_norm2_divide_output = divide(double_blocks_5_txt_norm2_subtract_output, double_blocks_5_txt_norm2_sqrt_output)
    double_blocks_5_tensoritem_16_output = tensor_item(double_blocks_5_txt_mod_split_2_output, double_blocks_5_tensoritem_16_index)
    double_blocks_5_add_8_output = add(double_blocks_5_add_8_left, double_blocks_5_tensoritem_16_output)
    double_blocks_5_multiply_5_output = multiplication(double_blocks_5_add_8_output, double_blocks_5_txt_norm2_divide_output)
    double_blocks_5_tensoritem_17_output = tensor_item(double_blocks_5_txt_mod_split_2_output, double_blocks_5_tensoritem_17_index)
    double_blocks_5_add_9_output = add(double_blocks_5_multiply_5_output, double_blocks_5_tensoritem_17_output)
    double_blocks_5_txt_mlp_0_transpose_output = transpose(double_blocks_5_txt_mlp_0_weight, double_blocks_5_txt_mlp_0_transpose_axes)
    double_blocks_5_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_5_add_9_output, double_blocks_5_txt_mlp_0_transpose_output)
    double_blocks_5_txt_mlp_0_output = add(double_blocks_5_txt_mlp_0_matrixmultiply_output, double_blocks_5_txt_mlp_0_bias)
    double_blocks_5_txt_mlp_gelu_output = gelu(double_blocks_5_txt_mlp_0_output, double_blocks_5_txt_mlp_gelu_approximate)
    double_blocks_5_txt_mlp_2_transpose_output = transpose(double_blocks_5_txt_mlp_2_weight, double_blocks_5_txt_mlp_2_transpose_axes)
    double_blocks_5_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_5_txt_mlp_gelu_output, double_blocks_5_txt_mlp_2_transpose_output)
    double_blocks_5_txt_mlp = add(double_blocks_5_txt_mlp_2_matrixmultiply_output, double_blocks_5_txt_mlp_2_bias)
    double_blocks_5_tensoritem_18_output = tensor_item(double_blocks_5_img_mod_split_2_output, double_blocks_5_tensoritem_18_index)
    double_blocks_5_multiply_6_output = multiplication(double_blocks_5_tensoritem_18_output, double_blocks_5_img_mlp)
    double_blocks_5_add_10_output = add(double_blocks_5_add_4_output, double_blocks_5_multiply_6_output)
    double_blocks_5_tensoritem_19_output = tensor_item(double_blocks_5_txt_mod_split_2_output, double_blocks_5_tensoritem_19_index)
    double_blocks_5_multiply_7_output = multiplication(double_blocks_5_tensoritem_19_output, double_blocks_5_txt_mlp)
    double_blocks_5_add_11_output = add(double_blocks_5_add_7_output, double_blocks_5_multiply_7_output)
    double_blocks_6_img_mod_silu_minus = minus(vec)
    double_blocks_6_img_mod_silu_exp = exp(double_blocks_6_img_mod_silu_minus)
    double_blocks_6_img_mod_silu_add = add(double_blocks_6_img_mod_silu_add_left, double_blocks_6_img_mod_silu_exp)
    double_blocks_6_img_mod_silu_output = divide(vec, double_blocks_6_img_mod_silu_add)
    double_blocks_6_img_mod_lin_transpose_output = transpose(double_blocks_6_img_mod_lin_weight, double_blocks_6_img_mod_lin_transpose_axes)
    double_blocks_6_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_6_img_mod_silu_output, double_blocks_6_img_mod_lin_transpose_output)
    double_blocks_6_img_mod_lin_out = add(double_blocks_6_img_mod_lin_matrixmultiply_output, double_blocks_6_img_mod_lin_bias)
    double_blocks_6_img_mod_tensoritem_0_output = tensor_item(double_blocks_6_img_mod_lin_out, double_blocks_6_img_mod_tensoritem_0_index)
    double_blocks_6_img_mod_split_0_output = split(double_blocks_6_img_mod_tensoritem_0_output, double_blocks_6_img_mod_split_0_split_size, double_blocks_6_img_mod_split_0_axis)
    double_blocks_6_img_mod_tensoritem_1_output = tensor_item(double_blocks_6_img_mod_split_0_output, double_blocks_6_img_mod_tensoritem_1_index)
    double_blocks_6_img_mod_split_1_output = split(double_blocks_6_img_mod_tensoritem_1_output, double_blocks_6_img_mod_split_1_split_size, double_blocks_6_img_mod_split_1_axis)
    double_blocks_6_img_mod_tensoritem_2_output = tensor_item(double_blocks_6_img_mod_split_0_output, double_blocks_6_img_mod_tensoritem_2_index)
    double_blocks_6_img_mod_split_2_output = split(double_blocks_6_img_mod_tensoritem_2_output, double_blocks_6_img_mod_split_2_split_size, double_blocks_6_img_mod_split_2_axis)
    double_blocks_6_img_norm1_mean_output = reduce_mean(double_blocks_5_add_10_output, axis=double_blocks_6_img_norm1_mean_axis, keepdim=double_blocks_6_img_norm1_mean_keepdim)
    double_blocks_6_img_norm1_subtract_output = subtract(double_blocks_5_add_10_output, double_blocks_6_img_norm1_mean_output)
    double_blocks_6_img_norm1_variance_output = variance(double_blocks_5_add_10_output, axis=double_blocks_6_img_norm1_variance_axis, keepdim=double_blocks_6_img_norm1_variance_keepdim, correction=double_blocks_6_img_norm1_variance_correction)
    double_blocks_6_img_norm1_add_output = add(double_blocks_6_img_norm1_variance_output, double_blocks_6_img_norm1_add_right)
    double_blocks_6_img_norm1_sqrt_output = sqrt(double_blocks_6_img_norm1_add_output)
    double_blocks_6_img_norm1_divide_output = divide(double_blocks_6_img_norm1_subtract_output, double_blocks_6_img_norm1_sqrt_output)
    double_blocks_6_tensoritem_0_output = tensor_item(double_blocks_6_img_mod_split_1_output, double_blocks_6_tensoritem_0_index)
    double_blocks_6_add_0_output = add(double_blocks_6_add_0_left, double_blocks_6_tensoritem_0_output)
    double_blocks_6_multiply_0_output = multiplication(double_blocks_6_add_0_output, double_blocks_6_img_norm1_divide_output)
    double_blocks_6_tensoritem_1_output = tensor_item(double_blocks_6_img_mod_split_1_output, double_blocks_6_tensoritem_1_index)
    double_blocks_6_add_1_output = add(double_blocks_6_multiply_0_output, double_blocks_6_tensoritem_1_output)
    double_blocks_6_img_attn_qkv_transpose_output = transpose(double_blocks_6_img_attn_qkv_weight, double_blocks_6_img_attn_qkv_transpose_axes)
    double_blocks_6_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_6_add_1_output, double_blocks_6_img_attn_qkv_transpose_output)
    double_blocks_6_img_qkv = add(double_blocks_6_img_attn_qkv_matrixmultiply_output, double_blocks_6_img_attn_qkv_bias)
    double_blocks_6_reshape_0_output = reshape(double_blocks_6_img_qkv, double_blocks_6_totuple_0_output)
    double_blocks_6_transpose_out = transpose(double_blocks_6_reshape_0_output, double_blocks_6_transpose_0_axes)
    double_blocks_6_tensoritem_2_output = tensor_item(double_blocks_6_transpose_out, double_blocks_6_tensoritem_2_index)
    double_blocks_6_tensoritem_3_output = tensor_item(double_blocks_6_transpose_out, double_blocks_6_tensoritem_3_index)
    double_blocks_6_img_attn_norm_query_norm_power_output = power(double_blocks_6_tensoritem_2_output, double_blocks_6_img_attn_norm_query_norm_power_exponent)
    double_blocks_6_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_6_img_attn_norm_query_norm_power_output, axis=double_blocks_6_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_6_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_6_img_attn_norm_query_norm_add_output = add(double_blocks_6_img_attn_norm_query_norm_mean_output, double_blocks_6_img_attn_norm_query_norm_add_right)
    double_blocks_6_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_6_img_attn_norm_query_norm_add_output)
    double_blocks_6_img_attn_norm_query_norm_divide_output = divide(double_blocks_6_img_attn_norm_query_norm_divide_numerator, double_blocks_6_img_attn_norm_query_norm_sqrt_output)
    double_blocks_6_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_6_tensoritem_2_output, double_blocks_6_img_attn_norm_query_norm_divide_output)
    double_blocks_6_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_6_img_attn_norm_query_norm_multiply_0_output, double_blocks_6_img_attn_norm_query_norm_scale)
    double_blocks_6_img_attn_norm_key_norm_power_output = power(double_blocks_6_tensoritem_3_output, double_blocks_6_img_attn_norm_key_norm_power_exponent)
    double_blocks_6_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_6_img_attn_norm_key_norm_power_output, axis=double_blocks_6_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_6_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_6_img_attn_norm_key_norm_add_output = add(double_blocks_6_img_attn_norm_key_norm_mean_output, double_blocks_6_img_attn_norm_key_norm_add_right)
    double_blocks_6_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_6_img_attn_norm_key_norm_add_output)
    double_blocks_6_img_attn_norm_key_norm_divide_output = divide(double_blocks_6_img_attn_norm_key_norm_divide_numerator, double_blocks_6_img_attn_norm_key_norm_sqrt_output)
    double_blocks_6_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_6_tensoritem_3_output, double_blocks_6_img_attn_norm_key_norm_divide_output)
    double_blocks_6_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_6_img_attn_norm_key_norm_multiply_0_output, double_blocks_6_img_attn_norm_key_norm_scale)
    double_blocks_6_txt_mod_silu_minus = minus(vec)
    double_blocks_6_txt_mod_silu_exp = exp(double_blocks_6_txt_mod_silu_minus)
    double_blocks_6_txt_mod_silu_add = add(double_blocks_6_txt_mod_silu_add_left, double_blocks_6_txt_mod_silu_exp)
    double_blocks_6_txt_mod_silu_output = divide(vec, double_blocks_6_txt_mod_silu_add)
    double_blocks_6_txt_mod_lin_transpose_output = transpose(double_blocks_6_txt_mod_lin_weight, double_blocks_6_txt_mod_lin_transpose_axes)
    double_blocks_6_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_6_txt_mod_silu_output, double_blocks_6_txt_mod_lin_transpose_output)
    double_blocks_6_txt_mod_lin_out = add(double_blocks_6_txt_mod_lin_matrixmultiply_output, double_blocks_6_txt_mod_lin_bias)
    double_blocks_6_txt_mod_tensoritem_0_output = tensor_item(double_blocks_6_txt_mod_lin_out, double_blocks_6_txt_mod_tensoritem_0_index)
    double_blocks_6_txt_mod_split_0_output = split(double_blocks_6_txt_mod_tensoritem_0_output, double_blocks_6_txt_mod_split_0_split_size, double_blocks_6_txt_mod_split_0_axis)
    double_blocks_6_txt_mod_tensoritem_1_output = tensor_item(double_blocks_6_txt_mod_split_0_output, double_blocks_6_txt_mod_tensoritem_1_index)
    double_blocks_6_txt_mod_split_1_output = split(double_blocks_6_txt_mod_tensoritem_1_output, double_blocks_6_txt_mod_split_1_split_size, double_blocks_6_txt_mod_split_1_axis)
    double_blocks_6_txt_mod_tensoritem_2_output = tensor_item(double_blocks_6_txt_mod_split_0_output, double_blocks_6_txt_mod_tensoritem_2_index)
    double_blocks_6_txt_mod_split_2_output = split(double_blocks_6_txt_mod_tensoritem_2_output, double_blocks_6_txt_mod_split_2_split_size, double_blocks_6_txt_mod_split_2_axis)
    double_blocks_6_txt_norm1_mean_output = reduce_mean(double_blocks_5_add_11_output, axis=double_blocks_6_txt_norm1_mean_axis, keepdim=double_blocks_6_txt_norm1_mean_keepdim)
    double_blocks_6_txt_norm1_subtract_output = subtract(double_blocks_5_add_11_output, double_blocks_6_txt_norm1_mean_output)
    double_blocks_6_txt_norm1_variance_output = variance(double_blocks_5_add_11_output, axis=double_blocks_6_txt_norm1_variance_axis, keepdim=double_blocks_6_txt_norm1_variance_keepdim, correction=double_blocks_6_txt_norm1_variance_correction)
    double_blocks_6_txt_norm1_add_output = add(double_blocks_6_txt_norm1_variance_output, double_blocks_6_txt_norm1_add_right)
    double_blocks_6_txt_norm1_sqrt_output = sqrt(double_blocks_6_txt_norm1_add_output)
    double_blocks_6_txt_norm1_divide_output = divide(double_blocks_6_txt_norm1_subtract_output, double_blocks_6_txt_norm1_sqrt_output)
    double_blocks_6_tensoritem_4_output = tensor_item(double_blocks_6_txt_mod_split_1_output, double_blocks_6_tensoritem_4_index)
    double_blocks_6_add_2_output = add(double_blocks_6_add_2_left, double_blocks_6_tensoritem_4_output)
    double_blocks_6_multiply_1_output = multiplication(double_blocks_6_add_2_output, double_blocks_6_txt_norm1_divide_output)
    double_blocks_6_tensoritem_5_output = tensor_item(double_blocks_6_txt_mod_split_1_output, double_blocks_6_tensoritem_5_index)
    double_blocks_6_add_3_output = add(double_blocks_6_multiply_1_output, double_blocks_6_tensoritem_5_output)
    double_blocks_6_txt_attn_qkv_transpose_output = transpose(double_blocks_6_txt_attn_qkv_weight, double_blocks_6_txt_attn_qkv_transpose_axes)
    double_blocks_6_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_6_add_3_output, double_blocks_6_txt_attn_qkv_transpose_output)
    double_blocks_6_txt_qkv = add(double_blocks_6_txt_attn_qkv_matrixmultiply_output, double_blocks_6_txt_attn_qkv_bias)
    double_blocks_6_reshape_1_output = reshape(double_blocks_6_txt_qkv, double_blocks_6_totuple_1_output)
    double_blocks_6_txt_transpose_out = transpose(double_blocks_6_reshape_1_output, double_blocks_6_transpose_1_axes)
    double_blocks_6_tensoritem_6_output = tensor_item(double_blocks_6_txt_transpose_out, double_blocks_6_tensoritem_6_index)
    double_blocks_6_tensoritem_7_output = tensor_item(double_blocks_6_txt_transpose_out, double_blocks_6_tensoritem_7_index)
    double_blocks_6_txt_attn_norm_query_norm_power_output = power(double_blocks_6_tensoritem_6_output, double_blocks_6_txt_attn_norm_query_norm_power_exponent)
    double_blocks_6_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_6_txt_attn_norm_query_norm_power_output, axis=double_blocks_6_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_6_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_6_txt_attn_norm_query_norm_add_output = add(double_blocks_6_txt_attn_norm_query_norm_mean_output, double_blocks_6_txt_attn_norm_query_norm_add_right)
    double_blocks_6_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_6_txt_attn_norm_query_norm_add_output)
    double_blocks_6_txt_attn_norm_query_norm_divide_output = divide(double_blocks_6_txt_attn_norm_query_norm_divide_numerator, double_blocks_6_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_6_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_6_tensoritem_6_output, double_blocks_6_txt_attn_norm_query_norm_divide_output)
    double_blocks_6_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_6_txt_attn_norm_query_norm_multiply_0_output, double_blocks_6_txt_attn_norm_query_norm_scale)
    double_blocks_6_txt_attn_norm_key_norm_power_output = power(double_blocks_6_tensoritem_7_output, double_blocks_6_txt_attn_norm_key_norm_power_exponent)
    double_blocks_6_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_6_txt_attn_norm_key_norm_power_output, axis=double_blocks_6_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_6_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_6_txt_attn_norm_key_norm_add_output = add(double_blocks_6_txt_attn_norm_key_norm_mean_output, double_blocks_6_txt_attn_norm_key_norm_add_right)
    double_blocks_6_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_6_txt_attn_norm_key_norm_add_output)
    double_blocks_6_txt_attn_norm_key_norm_divide_output = divide(double_blocks_6_txt_attn_norm_key_norm_divide_numerator, double_blocks_6_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_6_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_6_tensoritem_7_output, double_blocks_6_txt_attn_norm_key_norm_divide_output)
    double_blocks_6_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_6_txt_attn_norm_key_norm_multiply_0_output, double_blocks_6_txt_attn_norm_key_norm_scale)
    double_blocks_6_q_concat = concat(double_blocks_6_txt_attn_norm_query_norm_multiply_1_output, double_blocks_6_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_6_concat_0_axis)
    double_blocks_6_k_concat = concat(double_blocks_6_txt_attn_norm_key_norm_multiply_1_output, double_blocks_6_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_6_concat_1_axis)
    double_blocks_6_tensoritem_8_output = tensor_item(double_blocks_6_txt_transpose_out, double_blocks_6_tensoritem_8_index)
    double_blocks_6_tensoritem_9_output = tensor_item(double_blocks_6_transpose_out, double_blocks_6_tensoritem_9_index)
    double_blocks_6_v_concat = concat(double_blocks_6_tensoritem_8_output, double_blocks_6_tensoritem_9_output, axis=double_blocks_6_concat_2_axis)
    double_blocks_6_model_model_xq_ = reshape(double_blocks_6_q_concat, double_blocks_6_model_model_totuple_0_output)
    double_blocks_6_model_model_xk_ = reshape(double_blocks_6_k_concat, double_blocks_6_model_model_totuple_1_output)
    double_blocks_6_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_6_model_model_tensoritem_0_index)
    double_blocks_6_model_model_tensoritem_1_output = tensor_item(double_blocks_6_model_model_xq_, double_blocks_6_model_model_tensoritem_1_index)
    double_blocks_6_model_model_multiply_0_output = multiplication(double_blocks_6_model_model_tensoritem_0_output, double_blocks_6_model_model_tensoritem_1_output)
    double_blocks_6_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_6_model_model_tensoritem_2_index)
    double_blocks_6_model_model_tensoritem_3_output = tensor_item(double_blocks_6_model_model_xq_, double_blocks_6_model_model_tensoritem_3_index)
    double_blocks_6_model_model_multiply_1_output = multiplication(double_blocks_6_model_model_tensoritem_2_output, double_blocks_6_model_model_tensoritem_3_output)
    double_blocks_6_model_model_add_0_output = add(double_blocks_6_model_model_multiply_0_output, double_blocks_6_model_model_multiply_1_output)
    double_blocks_6_model_q_out = reshape(double_blocks_6_model_model_add_0_output, double_blocks_6_model_model_shape_0_output)
    double_blocks_6_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_6_model_model_tensoritem_4_index)
    double_blocks_6_model_model_tensoritem_5_output = tensor_item(double_blocks_6_model_model_xk_, double_blocks_6_model_model_tensoritem_5_index)
    double_blocks_6_model_model_multiply_2_output = multiplication(double_blocks_6_model_model_tensoritem_4_output, double_blocks_6_model_model_tensoritem_5_output)
    double_blocks_6_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_6_model_model_tensoritem_6_index)
    double_blocks_6_model_model_tensoritem_7_output = tensor_item(double_blocks_6_model_model_xk_, double_blocks_6_model_model_tensoritem_7_index)
    double_blocks_6_model_model_multiply_3_output = multiplication(double_blocks_6_model_model_tensoritem_6_output, double_blocks_6_model_model_tensoritem_7_output)
    double_blocks_6_model_model_add_1_output = add(double_blocks_6_model_model_multiply_2_output, double_blocks_6_model_model_multiply_3_output)
    double_blocks_6_model_k_out = reshape(double_blocks_6_model_model_add_1_output, double_blocks_6_model_model_shape_1_output)
    double_blocks_6_model_context = scaled_dot_product_attention(double_blocks_6_model_q_out, double_blocks_6_model_k_out, double_blocks_6_v_concat, double_blocks_6_model_scaleddotproduct_attn_mask)
    double_blocks_6_model_transpose_output = transpose(double_blocks_6_model_context, double_blocks_6_model_transpose_axes)
    double_blocks_6_attn = reshape(double_blocks_6_model_transpose_output, double_blocks_6_model_totuple_output)
    double_blocks_6_tensoritem_10_output = tensor_item(double_blocks_6_attn, double_blocks_6_tensoritem_10_index)
    double_blocks_6_img_attn_proj_transpose_output = transpose(double_blocks_6_img_attn_proj_weight, double_blocks_6_img_attn_proj_transpose_axes)
    double_blocks_6_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_6_tensoritem_10_output, double_blocks_6_img_attn_proj_transpose_output)
    double_blocks_6_img_proj = add(double_blocks_6_img_attn_proj_matrixmultiply_output, double_blocks_6_img_attn_proj_bias)
    double_blocks_6_tensoritem_11_output = tensor_item(double_blocks_6_img_mod_split_1_output, double_blocks_6_tensoritem_11_index)
    double_blocks_6_multiply_2_output = multiplication(double_blocks_6_tensoritem_11_output, double_blocks_6_img_proj)
    double_blocks_6_add_4_output = add(double_blocks_5_add_10_output, double_blocks_6_multiply_2_output)
    double_blocks_6_img_norm2_mean_output = reduce_mean(double_blocks_6_add_4_output, axis=double_blocks_6_img_norm2_mean_axis, keepdim=double_blocks_6_img_norm2_mean_keepdim)
    double_blocks_6_img_norm2_subtract_output = subtract(double_blocks_6_add_4_output, double_blocks_6_img_norm2_mean_output)
    double_blocks_6_img_norm2_variance_output = variance(double_blocks_6_add_4_output, axis=double_blocks_6_img_norm2_variance_axis, keepdim=double_blocks_6_img_norm2_variance_keepdim, correction=double_blocks_6_img_norm2_variance_correction)
    double_blocks_6_img_norm2_add_output = add(double_blocks_6_img_norm2_variance_output, double_blocks_6_img_norm2_add_right)
    double_blocks_6_img_norm2_sqrt_output = sqrt(double_blocks_6_img_norm2_add_output)
    double_blocks_6_img_norm2_divide_output = divide(double_blocks_6_img_norm2_subtract_output, double_blocks_6_img_norm2_sqrt_output)
    double_blocks_6_tensoritem_12_output = tensor_item(double_blocks_6_img_mod_split_2_output, double_blocks_6_tensoritem_12_index)
    double_blocks_6_add_5_output = add(double_blocks_6_add_5_left, double_blocks_6_tensoritem_12_output)
    double_blocks_6_multiply_3_output = multiplication(double_blocks_6_add_5_output, double_blocks_6_img_norm2_divide_output)
    double_blocks_6_tensoritem_13_output = tensor_item(double_blocks_6_img_mod_split_2_output, double_blocks_6_tensoritem_13_index)
    double_blocks_6_add_6_output = add(double_blocks_6_multiply_3_output, double_blocks_6_tensoritem_13_output)
    double_blocks_6_img_mlp_0_transpose_output = transpose(double_blocks_6_img_mlp_0_weight, double_blocks_6_img_mlp_0_transpose_axes)
    double_blocks_6_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_6_add_6_output, double_blocks_6_img_mlp_0_transpose_output)
    double_blocks_6_img_mlp_0_output = add(double_blocks_6_img_mlp_0_matrixmultiply_output, double_blocks_6_img_mlp_0_bias)
    double_blocks_6_img_mlp_gelu_output = gelu(double_blocks_6_img_mlp_0_output, double_blocks_6_img_mlp_gelu_approximate)
    double_blocks_6_img_mlp_2_transpose_output = transpose(double_blocks_6_img_mlp_2_weight, double_blocks_6_img_mlp_2_transpose_axes)
    double_blocks_6_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_6_img_mlp_gelu_output, double_blocks_6_img_mlp_2_transpose_output)
    double_blocks_6_img_mlp = add(double_blocks_6_img_mlp_2_matrixmultiply_output, double_blocks_6_img_mlp_2_bias)
    double_blocks_6_tensoritem_14_output = tensor_item(double_blocks_6_attn, double_blocks_6_tensoritem_14_index)
    double_blocks_6_txt_attn_proj_transpose_output = transpose(double_blocks_6_txt_attn_proj_weight, double_blocks_6_txt_attn_proj_transpose_axes)
    double_blocks_6_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_6_tensoritem_14_output, double_blocks_6_txt_attn_proj_transpose_output)
    double_blocks_6_txt_proj = add(double_blocks_6_txt_attn_proj_matrixmultiply_output, double_blocks_6_txt_attn_proj_bias)
    double_blocks_6_tensoritem_15_output = tensor_item(double_blocks_6_txt_mod_split_1_output, double_blocks_6_tensoritem_15_index)
    double_blocks_6_multiply_4_output = multiplication(double_blocks_6_tensoritem_15_output, double_blocks_6_txt_proj)
    double_blocks_6_add_7_output = add(double_blocks_5_add_11_output, double_blocks_6_multiply_4_output)
    double_blocks_6_txt_norm2_mean_output = reduce_mean(double_blocks_6_add_7_output, axis=double_blocks_6_txt_norm2_mean_axis, keepdim=double_blocks_6_txt_norm2_mean_keepdim)
    double_blocks_6_txt_norm2_subtract_output = subtract(double_blocks_6_add_7_output, double_blocks_6_txt_norm2_mean_output)
    double_blocks_6_txt_norm2_variance_output = variance(double_blocks_6_add_7_output, axis=double_blocks_6_txt_norm2_variance_axis, keepdim=double_blocks_6_txt_norm2_variance_keepdim, correction=double_blocks_6_txt_norm2_variance_correction)
    double_blocks_6_txt_norm2_add_output = add(double_blocks_6_txt_norm2_variance_output, double_blocks_6_txt_norm2_add_right)
    double_blocks_6_txt_norm2_sqrt_output = sqrt(double_blocks_6_txt_norm2_add_output)
    double_blocks_6_txt_norm2_divide_output = divide(double_blocks_6_txt_norm2_subtract_output, double_blocks_6_txt_norm2_sqrt_output)
    double_blocks_6_tensoritem_16_output = tensor_item(double_blocks_6_txt_mod_split_2_output, double_blocks_6_tensoritem_16_index)
    double_blocks_6_add_8_output = add(double_blocks_6_add_8_left, double_blocks_6_tensoritem_16_output)
    double_blocks_6_multiply_5_output = multiplication(double_blocks_6_add_8_output, double_blocks_6_txt_norm2_divide_output)
    double_blocks_6_tensoritem_17_output = tensor_item(double_blocks_6_txt_mod_split_2_output, double_blocks_6_tensoritem_17_index)
    double_blocks_6_add_9_output = add(double_blocks_6_multiply_5_output, double_blocks_6_tensoritem_17_output)
    double_blocks_6_txt_mlp_0_transpose_output = transpose(double_blocks_6_txt_mlp_0_weight, double_blocks_6_txt_mlp_0_transpose_axes)
    double_blocks_6_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_6_add_9_output, double_blocks_6_txt_mlp_0_transpose_output)
    double_blocks_6_txt_mlp_0_output = add(double_blocks_6_txt_mlp_0_matrixmultiply_output, double_blocks_6_txt_mlp_0_bias)
    double_blocks_6_txt_mlp_gelu_output = gelu(double_blocks_6_txt_mlp_0_output, double_blocks_6_txt_mlp_gelu_approximate)
    double_blocks_6_txt_mlp_2_transpose_output = transpose(double_blocks_6_txt_mlp_2_weight, double_blocks_6_txt_mlp_2_transpose_axes)
    double_blocks_6_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_6_txt_mlp_gelu_output, double_blocks_6_txt_mlp_2_transpose_output)
    double_blocks_6_txt_mlp = add(double_blocks_6_txt_mlp_2_matrixmultiply_output, double_blocks_6_txt_mlp_2_bias)
    double_blocks_6_tensoritem_18_output = tensor_item(double_blocks_6_img_mod_split_2_output, double_blocks_6_tensoritem_18_index)
    double_blocks_6_multiply_6_output = multiplication(double_blocks_6_tensoritem_18_output, double_blocks_6_img_mlp)
    double_blocks_6_add_10_output = add(double_blocks_6_add_4_output, double_blocks_6_multiply_6_output)
    double_blocks_6_tensoritem_19_output = tensor_item(double_blocks_6_txt_mod_split_2_output, double_blocks_6_tensoritem_19_index)
    double_blocks_6_multiply_7_output = multiplication(double_blocks_6_tensoritem_19_output, double_blocks_6_txt_mlp)
    double_blocks_6_add_11_output = add(double_blocks_6_add_7_output, double_blocks_6_multiply_7_output)
    double_blocks_7_img_mod_silu_minus = minus(vec)
    double_blocks_7_img_mod_silu_exp = exp(double_blocks_7_img_mod_silu_minus)
    double_blocks_7_img_mod_silu_add = add(double_blocks_7_img_mod_silu_add_left, double_blocks_7_img_mod_silu_exp)
    double_blocks_7_img_mod_silu_output = divide(vec, double_blocks_7_img_mod_silu_add)
    double_blocks_7_img_mod_lin_transpose_output = transpose(double_blocks_7_img_mod_lin_weight, double_blocks_7_img_mod_lin_transpose_axes)
    double_blocks_7_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_7_img_mod_silu_output, double_blocks_7_img_mod_lin_transpose_output)
    double_blocks_7_img_mod_lin_out = add(double_blocks_7_img_mod_lin_matrixmultiply_output, double_blocks_7_img_mod_lin_bias)
    double_blocks_7_img_mod_tensoritem_0_output = tensor_item(double_blocks_7_img_mod_lin_out, double_blocks_7_img_mod_tensoritem_0_index)
    double_blocks_7_img_mod_split_0_output = split(double_blocks_7_img_mod_tensoritem_0_output, double_blocks_7_img_mod_split_0_split_size, double_blocks_7_img_mod_split_0_axis)
    double_blocks_7_img_mod_tensoritem_1_output = tensor_item(double_blocks_7_img_mod_split_0_output, double_blocks_7_img_mod_tensoritem_1_index)
    double_blocks_7_img_mod_split_1_output = split(double_blocks_7_img_mod_tensoritem_1_output, double_blocks_7_img_mod_split_1_split_size, double_blocks_7_img_mod_split_1_axis)
    double_blocks_7_img_mod_tensoritem_2_output = tensor_item(double_blocks_7_img_mod_split_0_output, double_blocks_7_img_mod_tensoritem_2_index)
    double_blocks_7_img_mod_split_2_output = split(double_blocks_7_img_mod_tensoritem_2_output, double_blocks_7_img_mod_split_2_split_size, double_blocks_7_img_mod_split_2_axis)
    double_blocks_7_img_norm1_mean_output = reduce_mean(double_blocks_6_add_10_output, axis=double_blocks_7_img_norm1_mean_axis, keepdim=double_blocks_7_img_norm1_mean_keepdim)
    double_blocks_7_img_norm1_subtract_output = subtract(double_blocks_6_add_10_output, double_blocks_7_img_norm1_mean_output)
    double_blocks_7_img_norm1_variance_output = variance(double_blocks_6_add_10_output, axis=double_blocks_7_img_norm1_variance_axis, keepdim=double_blocks_7_img_norm1_variance_keepdim, correction=double_blocks_7_img_norm1_variance_correction)
    double_blocks_7_img_norm1_add_output = add(double_blocks_7_img_norm1_variance_output, double_blocks_7_img_norm1_add_right)
    double_blocks_7_img_norm1_sqrt_output = sqrt(double_blocks_7_img_norm1_add_output)
    double_blocks_7_img_norm1_divide_output = divide(double_blocks_7_img_norm1_subtract_output, double_blocks_7_img_norm1_sqrt_output)
    double_blocks_7_tensoritem_0_output = tensor_item(double_blocks_7_img_mod_split_1_output, double_blocks_7_tensoritem_0_index)
    double_blocks_7_add_0_output = add(double_blocks_7_add_0_left, double_blocks_7_tensoritem_0_output)
    double_blocks_7_multiply_0_output = multiplication(double_blocks_7_add_0_output, double_blocks_7_img_norm1_divide_output)
    double_blocks_7_tensoritem_1_output = tensor_item(double_blocks_7_img_mod_split_1_output, double_blocks_7_tensoritem_1_index)
    double_blocks_7_add_1_output = add(double_blocks_7_multiply_0_output, double_blocks_7_tensoritem_1_output)
    double_blocks_7_img_attn_qkv_transpose_output = transpose(double_blocks_7_img_attn_qkv_weight, double_blocks_7_img_attn_qkv_transpose_axes)
    double_blocks_7_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_7_add_1_output, double_blocks_7_img_attn_qkv_transpose_output)
    double_blocks_7_img_qkv = add(double_blocks_7_img_attn_qkv_matrixmultiply_output, double_blocks_7_img_attn_qkv_bias)
    double_blocks_7_reshape_0_output = reshape(double_blocks_7_img_qkv, double_blocks_7_totuple_0_output)
    double_blocks_7_transpose_out = transpose(double_blocks_7_reshape_0_output, double_blocks_7_transpose_0_axes)
    double_blocks_7_tensoritem_2_output = tensor_item(double_blocks_7_transpose_out, double_blocks_7_tensoritem_2_index)
    double_blocks_7_tensoritem_3_output = tensor_item(double_blocks_7_transpose_out, double_blocks_7_tensoritem_3_index)
    double_blocks_7_img_attn_norm_query_norm_power_output = power(double_blocks_7_tensoritem_2_output, double_blocks_7_img_attn_norm_query_norm_power_exponent)
    double_blocks_7_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_7_img_attn_norm_query_norm_power_output, axis=double_blocks_7_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_7_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_7_img_attn_norm_query_norm_add_output = add(double_blocks_7_img_attn_norm_query_norm_mean_output, double_blocks_7_img_attn_norm_query_norm_add_right)
    double_blocks_7_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_7_img_attn_norm_query_norm_add_output)
    double_blocks_7_img_attn_norm_query_norm_divide_output = divide(double_blocks_7_img_attn_norm_query_norm_divide_numerator, double_blocks_7_img_attn_norm_query_norm_sqrt_output)
    double_blocks_7_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_7_tensoritem_2_output, double_blocks_7_img_attn_norm_query_norm_divide_output)
    double_blocks_7_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_7_img_attn_norm_query_norm_multiply_0_output, double_blocks_7_img_attn_norm_query_norm_scale)
    double_blocks_7_img_attn_norm_key_norm_power_output = power(double_blocks_7_tensoritem_3_output, double_blocks_7_img_attn_norm_key_norm_power_exponent)
    double_blocks_7_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_7_img_attn_norm_key_norm_power_output, axis=double_blocks_7_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_7_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_7_img_attn_norm_key_norm_add_output = add(double_blocks_7_img_attn_norm_key_norm_mean_output, double_blocks_7_img_attn_norm_key_norm_add_right)
    double_blocks_7_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_7_img_attn_norm_key_norm_add_output)
    double_blocks_7_img_attn_norm_key_norm_divide_output = divide(double_blocks_7_img_attn_norm_key_norm_divide_numerator, double_blocks_7_img_attn_norm_key_norm_sqrt_output)
    double_blocks_7_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_7_tensoritem_3_output, double_blocks_7_img_attn_norm_key_norm_divide_output)
    double_blocks_7_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_7_img_attn_norm_key_norm_multiply_0_output, double_blocks_7_img_attn_norm_key_norm_scale)
    double_blocks_7_txt_mod_silu_minus = minus(vec)
    double_blocks_7_txt_mod_silu_exp = exp(double_blocks_7_txt_mod_silu_minus)
    double_blocks_7_txt_mod_silu_add = add(double_blocks_7_txt_mod_silu_add_left, double_blocks_7_txt_mod_silu_exp)
    double_blocks_7_txt_mod_silu_output = divide(vec, double_blocks_7_txt_mod_silu_add)
    double_blocks_7_txt_mod_lin_transpose_output = transpose(double_blocks_7_txt_mod_lin_weight, double_blocks_7_txt_mod_lin_transpose_axes)
    double_blocks_7_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_7_txt_mod_silu_output, double_blocks_7_txt_mod_lin_transpose_output)
    double_blocks_7_txt_mod_lin_out = add(double_blocks_7_txt_mod_lin_matrixmultiply_output, double_blocks_7_txt_mod_lin_bias)
    double_blocks_7_txt_mod_tensoritem_0_output = tensor_item(double_blocks_7_txt_mod_lin_out, double_blocks_7_txt_mod_tensoritem_0_index)
    double_blocks_7_txt_mod_split_0_output = split(double_blocks_7_txt_mod_tensoritem_0_output, double_blocks_7_txt_mod_split_0_split_size, double_blocks_7_txt_mod_split_0_axis)
    double_blocks_7_txt_mod_tensoritem_1_output = tensor_item(double_blocks_7_txt_mod_split_0_output, double_blocks_7_txt_mod_tensoritem_1_index)
    double_blocks_7_txt_mod_split_1_output = split(double_blocks_7_txt_mod_tensoritem_1_output, double_blocks_7_txt_mod_split_1_split_size, double_blocks_7_txt_mod_split_1_axis)
    double_blocks_7_txt_mod_tensoritem_2_output = tensor_item(double_blocks_7_txt_mod_split_0_output, double_blocks_7_txt_mod_tensoritem_2_index)
    double_blocks_7_txt_mod_split_2_output = split(double_blocks_7_txt_mod_tensoritem_2_output, double_blocks_7_txt_mod_split_2_split_size, double_blocks_7_txt_mod_split_2_axis)
    double_blocks_7_txt_norm1_mean_output = reduce_mean(double_blocks_6_add_11_output, axis=double_blocks_7_txt_norm1_mean_axis, keepdim=double_blocks_7_txt_norm1_mean_keepdim)
    double_blocks_7_txt_norm1_subtract_output = subtract(double_blocks_6_add_11_output, double_blocks_7_txt_norm1_mean_output)
    double_blocks_7_txt_norm1_variance_output = variance(double_blocks_6_add_11_output, axis=double_blocks_7_txt_norm1_variance_axis, keepdim=double_blocks_7_txt_norm1_variance_keepdim, correction=double_blocks_7_txt_norm1_variance_correction)
    double_blocks_7_txt_norm1_add_output = add(double_blocks_7_txt_norm1_variance_output, double_blocks_7_txt_norm1_add_right)
    double_blocks_7_txt_norm1_sqrt_output = sqrt(double_blocks_7_txt_norm1_add_output)
    double_blocks_7_txt_norm1_divide_output = divide(double_blocks_7_txt_norm1_subtract_output, double_blocks_7_txt_norm1_sqrt_output)
    double_blocks_7_tensoritem_4_output = tensor_item(double_blocks_7_txt_mod_split_1_output, double_blocks_7_tensoritem_4_index)
    double_blocks_7_add_2_output = add(double_blocks_7_add_2_left, double_blocks_7_tensoritem_4_output)
    double_blocks_7_multiply_1_output = multiplication(double_blocks_7_add_2_output, double_blocks_7_txt_norm1_divide_output)
    double_blocks_7_tensoritem_5_output = tensor_item(double_blocks_7_txt_mod_split_1_output, double_blocks_7_tensoritem_5_index)
    double_blocks_7_add_3_output = add(double_blocks_7_multiply_1_output, double_blocks_7_tensoritem_5_output)
    double_blocks_7_txt_attn_qkv_transpose_output = transpose(double_blocks_7_txt_attn_qkv_weight, double_blocks_7_txt_attn_qkv_transpose_axes)
    double_blocks_7_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_7_add_3_output, double_blocks_7_txt_attn_qkv_transpose_output)
    double_blocks_7_txt_qkv = add(double_blocks_7_txt_attn_qkv_matrixmultiply_output, double_blocks_7_txt_attn_qkv_bias)
    double_blocks_7_reshape_1_output = reshape(double_blocks_7_txt_qkv, double_blocks_7_totuple_1_output)
    double_blocks_7_txt_transpose_out = transpose(double_blocks_7_reshape_1_output, double_blocks_7_transpose_1_axes)
    double_blocks_7_tensoritem_6_output = tensor_item(double_blocks_7_txt_transpose_out, double_blocks_7_tensoritem_6_index)
    double_blocks_7_tensoritem_7_output = tensor_item(double_blocks_7_txt_transpose_out, double_blocks_7_tensoritem_7_index)
    double_blocks_7_txt_attn_norm_query_norm_power_output = power(double_blocks_7_tensoritem_6_output, double_blocks_7_txt_attn_norm_query_norm_power_exponent)
    double_blocks_7_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_7_txt_attn_norm_query_norm_power_output, axis=double_blocks_7_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_7_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_7_txt_attn_norm_query_norm_add_output = add(double_blocks_7_txt_attn_norm_query_norm_mean_output, double_blocks_7_txt_attn_norm_query_norm_add_right)
    double_blocks_7_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_7_txt_attn_norm_query_norm_add_output)
    double_blocks_7_txt_attn_norm_query_norm_divide_output = divide(double_blocks_7_txt_attn_norm_query_norm_divide_numerator, double_blocks_7_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_7_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_7_tensoritem_6_output, double_blocks_7_txt_attn_norm_query_norm_divide_output)
    double_blocks_7_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_7_txt_attn_norm_query_norm_multiply_0_output, double_blocks_7_txt_attn_norm_query_norm_scale)
    double_blocks_7_txt_attn_norm_key_norm_power_output = power(double_blocks_7_tensoritem_7_output, double_blocks_7_txt_attn_norm_key_norm_power_exponent)
    double_blocks_7_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_7_txt_attn_norm_key_norm_power_output, axis=double_blocks_7_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_7_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_7_txt_attn_norm_key_norm_add_output = add(double_blocks_7_txt_attn_norm_key_norm_mean_output, double_blocks_7_txt_attn_norm_key_norm_add_right)
    double_blocks_7_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_7_txt_attn_norm_key_norm_add_output)
    double_blocks_7_txt_attn_norm_key_norm_divide_output = divide(double_blocks_7_txt_attn_norm_key_norm_divide_numerator, double_blocks_7_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_7_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_7_tensoritem_7_output, double_blocks_7_txt_attn_norm_key_norm_divide_output)
    double_blocks_7_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_7_txt_attn_norm_key_norm_multiply_0_output, double_blocks_7_txt_attn_norm_key_norm_scale)
    double_blocks_7_q_concat = concat(double_blocks_7_txt_attn_norm_query_norm_multiply_1_output, double_blocks_7_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_7_concat_0_axis)
    double_blocks_7_k_concat = concat(double_blocks_7_txt_attn_norm_key_norm_multiply_1_output, double_blocks_7_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_7_concat_1_axis)
    double_blocks_7_tensoritem_8_output = tensor_item(double_blocks_7_txt_transpose_out, double_blocks_7_tensoritem_8_index)
    double_blocks_7_tensoritem_9_output = tensor_item(double_blocks_7_transpose_out, double_blocks_7_tensoritem_9_index)
    double_blocks_7_v_concat = concat(double_blocks_7_tensoritem_8_output, double_blocks_7_tensoritem_9_output, axis=double_blocks_7_concat_2_axis)
    double_blocks_7_model_model_xq_ = reshape(double_blocks_7_q_concat, double_blocks_7_model_model_totuple_0_output)
    double_blocks_7_model_model_xk_ = reshape(double_blocks_7_k_concat, double_blocks_7_model_model_totuple_1_output)
    double_blocks_7_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_7_model_model_tensoritem_0_index)
    double_blocks_7_model_model_tensoritem_1_output = tensor_item(double_blocks_7_model_model_xq_, double_blocks_7_model_model_tensoritem_1_index)
    double_blocks_7_model_model_multiply_0_output = multiplication(double_blocks_7_model_model_tensoritem_0_output, double_blocks_7_model_model_tensoritem_1_output)
    double_blocks_7_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_7_model_model_tensoritem_2_index)
    double_blocks_7_model_model_tensoritem_3_output = tensor_item(double_blocks_7_model_model_xq_, double_blocks_7_model_model_tensoritem_3_index)
    double_blocks_7_model_model_multiply_1_output = multiplication(double_blocks_7_model_model_tensoritem_2_output, double_blocks_7_model_model_tensoritem_3_output)
    double_blocks_7_model_model_add_0_output = add(double_blocks_7_model_model_multiply_0_output, double_blocks_7_model_model_multiply_1_output)
    double_blocks_7_model_q_out = reshape(double_blocks_7_model_model_add_0_output, double_blocks_7_model_model_shape_0_output)
    double_blocks_7_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_7_model_model_tensoritem_4_index)
    double_blocks_7_model_model_tensoritem_5_output = tensor_item(double_blocks_7_model_model_xk_, double_blocks_7_model_model_tensoritem_5_index)
    double_blocks_7_model_model_multiply_2_output = multiplication(double_blocks_7_model_model_tensoritem_4_output, double_blocks_7_model_model_tensoritem_5_output)
    double_blocks_7_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_7_model_model_tensoritem_6_index)
    double_blocks_7_model_model_tensoritem_7_output = tensor_item(double_blocks_7_model_model_xk_, double_blocks_7_model_model_tensoritem_7_index)
    double_blocks_7_model_model_multiply_3_output = multiplication(double_blocks_7_model_model_tensoritem_6_output, double_blocks_7_model_model_tensoritem_7_output)
    double_blocks_7_model_model_add_1_output = add(double_blocks_7_model_model_multiply_2_output, double_blocks_7_model_model_multiply_3_output)
    double_blocks_7_model_k_out = reshape(double_blocks_7_model_model_add_1_output, double_blocks_7_model_model_shape_1_output)
    double_blocks_7_model_context = scaled_dot_product_attention(double_blocks_7_model_q_out, double_blocks_7_model_k_out, double_blocks_7_v_concat, double_blocks_7_model_scaleddotproduct_attn_mask)
    double_blocks_7_model_transpose_output = transpose(double_blocks_7_model_context, double_blocks_7_model_transpose_axes)
    double_blocks_7_attn = reshape(double_blocks_7_model_transpose_output, double_blocks_7_model_totuple_output)
    double_blocks_7_tensoritem_10_output = tensor_item(double_blocks_7_attn, double_blocks_7_tensoritem_10_index)
    double_blocks_7_img_attn_proj_transpose_output = transpose(double_blocks_7_img_attn_proj_weight, double_blocks_7_img_attn_proj_transpose_axes)
    double_blocks_7_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_7_tensoritem_10_output, double_blocks_7_img_attn_proj_transpose_output)
    double_blocks_7_img_proj = add(double_blocks_7_img_attn_proj_matrixmultiply_output, double_blocks_7_img_attn_proj_bias)
    double_blocks_7_tensoritem_11_output = tensor_item(double_blocks_7_img_mod_split_1_output, double_blocks_7_tensoritem_11_index)
    double_blocks_7_multiply_2_output = multiplication(double_blocks_7_tensoritem_11_output, double_blocks_7_img_proj)
    double_blocks_7_add_4_output = add(double_blocks_6_add_10_output, double_blocks_7_multiply_2_output)
    double_blocks_7_img_norm2_mean_output = reduce_mean(double_blocks_7_add_4_output, axis=double_blocks_7_img_norm2_mean_axis, keepdim=double_blocks_7_img_norm2_mean_keepdim)
    double_blocks_7_img_norm2_subtract_output = subtract(double_blocks_7_add_4_output, double_blocks_7_img_norm2_mean_output)
    double_blocks_7_img_norm2_variance_output = variance(double_blocks_7_add_4_output, axis=double_blocks_7_img_norm2_variance_axis, keepdim=double_blocks_7_img_norm2_variance_keepdim, correction=double_blocks_7_img_norm2_variance_correction)
    double_blocks_7_img_norm2_add_output = add(double_blocks_7_img_norm2_variance_output, double_blocks_7_img_norm2_add_right)
    double_blocks_7_img_norm2_sqrt_output = sqrt(double_blocks_7_img_norm2_add_output)
    double_blocks_7_img_norm2_divide_output = divide(double_blocks_7_img_norm2_subtract_output, double_blocks_7_img_norm2_sqrt_output)
    double_blocks_7_tensoritem_12_output = tensor_item(double_blocks_7_img_mod_split_2_output, double_blocks_7_tensoritem_12_index)
    double_blocks_7_add_5_output = add(double_blocks_7_add_5_left, double_blocks_7_tensoritem_12_output)
    double_blocks_7_multiply_3_output = multiplication(double_blocks_7_add_5_output, double_blocks_7_img_norm2_divide_output)
    double_blocks_7_tensoritem_13_output = tensor_item(double_blocks_7_img_mod_split_2_output, double_blocks_7_tensoritem_13_index)
    double_blocks_7_add_6_output = add(double_blocks_7_multiply_3_output, double_blocks_7_tensoritem_13_output)
    double_blocks_7_img_mlp_0_transpose_output = transpose(double_blocks_7_img_mlp_0_weight, double_blocks_7_img_mlp_0_transpose_axes)
    double_blocks_7_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_7_add_6_output, double_blocks_7_img_mlp_0_transpose_output)
    double_blocks_7_img_mlp_0_output = add(double_blocks_7_img_mlp_0_matrixmultiply_output, double_blocks_7_img_mlp_0_bias)
    double_blocks_7_img_mlp_gelu_output = gelu(double_blocks_7_img_mlp_0_output, double_blocks_7_img_mlp_gelu_approximate)
    double_blocks_7_img_mlp_2_transpose_output = transpose(double_blocks_7_img_mlp_2_weight, double_blocks_7_img_mlp_2_transpose_axes)
    double_blocks_7_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_7_img_mlp_gelu_output, double_blocks_7_img_mlp_2_transpose_output)
    double_blocks_7_img_mlp = add(double_blocks_7_img_mlp_2_matrixmultiply_output, double_blocks_7_img_mlp_2_bias)
    double_blocks_7_tensoritem_14_output = tensor_item(double_blocks_7_attn, double_blocks_7_tensoritem_14_index)
    double_blocks_7_txt_attn_proj_transpose_output = transpose(double_blocks_7_txt_attn_proj_weight, double_blocks_7_txt_attn_proj_transpose_axes)
    double_blocks_7_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_7_tensoritem_14_output, double_blocks_7_txt_attn_proj_transpose_output)
    double_blocks_7_txt_proj = add(double_blocks_7_txt_attn_proj_matrixmultiply_output, double_blocks_7_txt_attn_proj_bias)
    double_blocks_7_tensoritem_15_output = tensor_item(double_blocks_7_txt_mod_split_1_output, double_blocks_7_tensoritem_15_index)
    double_blocks_7_multiply_4_output = multiplication(double_blocks_7_tensoritem_15_output, double_blocks_7_txt_proj)
    double_blocks_7_add_7_output = add(double_blocks_6_add_11_output, double_blocks_7_multiply_4_output)
    double_blocks_7_txt_norm2_mean_output = reduce_mean(double_blocks_7_add_7_output, axis=double_blocks_7_txt_norm2_mean_axis, keepdim=double_blocks_7_txt_norm2_mean_keepdim)
    double_blocks_7_txt_norm2_subtract_output = subtract(double_blocks_7_add_7_output, double_blocks_7_txt_norm2_mean_output)
    double_blocks_7_txt_norm2_variance_output = variance(double_blocks_7_add_7_output, axis=double_blocks_7_txt_norm2_variance_axis, keepdim=double_blocks_7_txt_norm2_variance_keepdim, correction=double_blocks_7_txt_norm2_variance_correction)
    double_blocks_7_txt_norm2_add_output = add(double_blocks_7_txt_norm2_variance_output, double_blocks_7_txt_norm2_add_right)
    double_blocks_7_txt_norm2_sqrt_output = sqrt(double_blocks_7_txt_norm2_add_output)
    double_blocks_7_txt_norm2_divide_output = divide(double_blocks_7_txt_norm2_subtract_output, double_blocks_7_txt_norm2_sqrt_output)
    double_blocks_7_tensoritem_16_output = tensor_item(double_blocks_7_txt_mod_split_2_output, double_blocks_7_tensoritem_16_index)
    double_blocks_7_add_8_output = add(double_blocks_7_add_8_left, double_blocks_7_tensoritem_16_output)
    double_blocks_7_multiply_5_output = multiplication(double_blocks_7_add_8_output, double_blocks_7_txt_norm2_divide_output)
    double_blocks_7_tensoritem_17_output = tensor_item(double_blocks_7_txt_mod_split_2_output, double_blocks_7_tensoritem_17_index)
    double_blocks_7_add_9_output = add(double_blocks_7_multiply_5_output, double_blocks_7_tensoritem_17_output)
    double_blocks_7_txt_mlp_0_transpose_output = transpose(double_blocks_7_txt_mlp_0_weight, double_blocks_7_txt_mlp_0_transpose_axes)
    double_blocks_7_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_7_add_9_output, double_blocks_7_txt_mlp_0_transpose_output)
    double_blocks_7_txt_mlp_0_output = add(double_blocks_7_txt_mlp_0_matrixmultiply_output, double_blocks_7_txt_mlp_0_bias)
    double_blocks_7_txt_mlp_gelu_output = gelu(double_blocks_7_txt_mlp_0_output, double_blocks_7_txt_mlp_gelu_approximate)
    double_blocks_7_txt_mlp_2_transpose_output = transpose(double_blocks_7_txt_mlp_2_weight, double_blocks_7_txt_mlp_2_transpose_axes)
    double_blocks_7_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_7_txt_mlp_gelu_output, double_blocks_7_txt_mlp_2_transpose_output)
    double_blocks_7_txt_mlp = add(double_blocks_7_txt_mlp_2_matrixmultiply_output, double_blocks_7_txt_mlp_2_bias)
    double_blocks_7_tensoritem_18_output = tensor_item(double_blocks_7_img_mod_split_2_output, double_blocks_7_tensoritem_18_index)
    double_blocks_7_multiply_6_output = multiplication(double_blocks_7_tensoritem_18_output, double_blocks_7_img_mlp)
    double_blocks_7_add_10_output = add(double_blocks_7_add_4_output, double_blocks_7_multiply_6_output)
    double_blocks_7_tensoritem_19_output = tensor_item(double_blocks_7_txt_mod_split_2_output, double_blocks_7_tensoritem_19_index)
    double_blocks_7_multiply_7_output = multiplication(double_blocks_7_tensoritem_19_output, double_blocks_7_txt_mlp)
    double_blocks_7_add_11_output = add(double_blocks_7_add_7_output, double_blocks_7_multiply_7_output)
    double_blocks_8_img_mod_silu_minus = minus(vec)
    double_blocks_8_img_mod_silu_exp = exp(double_blocks_8_img_mod_silu_minus)
    double_blocks_8_img_mod_silu_add = add(double_blocks_8_img_mod_silu_add_left, double_blocks_8_img_mod_silu_exp)
    double_blocks_8_img_mod_silu_output = divide(vec, double_blocks_8_img_mod_silu_add)
    double_blocks_8_img_mod_lin_transpose_output = transpose(double_blocks_8_img_mod_lin_weight, double_blocks_8_img_mod_lin_transpose_axes)
    double_blocks_8_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_8_img_mod_silu_output, double_blocks_8_img_mod_lin_transpose_output)
    double_blocks_8_img_mod_lin_out = add(double_blocks_8_img_mod_lin_matrixmultiply_output, double_blocks_8_img_mod_lin_bias)
    double_blocks_8_img_mod_tensoritem_0_output = tensor_item(double_blocks_8_img_mod_lin_out, double_blocks_8_img_mod_tensoritem_0_index)
    double_blocks_8_img_mod_split_0_output = split(double_blocks_8_img_mod_tensoritem_0_output, double_blocks_8_img_mod_split_0_split_size, double_blocks_8_img_mod_split_0_axis)
    double_blocks_8_img_mod_tensoritem_1_output = tensor_item(double_blocks_8_img_mod_split_0_output, double_blocks_8_img_mod_tensoritem_1_index)
    double_blocks_8_img_mod_split_1_output = split(double_blocks_8_img_mod_tensoritem_1_output, double_blocks_8_img_mod_split_1_split_size, double_blocks_8_img_mod_split_1_axis)
    double_blocks_8_img_mod_tensoritem_2_output = tensor_item(double_blocks_8_img_mod_split_0_output, double_blocks_8_img_mod_tensoritem_2_index)
    double_blocks_8_img_mod_split_2_output = split(double_blocks_8_img_mod_tensoritem_2_output, double_blocks_8_img_mod_split_2_split_size, double_blocks_8_img_mod_split_2_axis)
    double_blocks_8_img_norm1_mean_output = reduce_mean(double_blocks_7_add_10_output, axis=double_blocks_8_img_norm1_mean_axis, keepdim=double_blocks_8_img_norm1_mean_keepdim)
    double_blocks_8_img_norm1_subtract_output = subtract(double_blocks_7_add_10_output, double_blocks_8_img_norm1_mean_output)
    double_blocks_8_img_norm1_variance_output = variance(double_blocks_7_add_10_output, axis=double_blocks_8_img_norm1_variance_axis, keepdim=double_blocks_8_img_norm1_variance_keepdim, correction=double_blocks_8_img_norm1_variance_correction)
    double_blocks_8_img_norm1_add_output = add(double_blocks_8_img_norm1_variance_output, double_blocks_8_img_norm1_add_right)
    double_blocks_8_img_norm1_sqrt_output = sqrt(double_blocks_8_img_norm1_add_output)
    double_blocks_8_img_norm1_divide_output = divide(double_blocks_8_img_norm1_subtract_output, double_blocks_8_img_norm1_sqrt_output)
    double_blocks_8_tensoritem_0_output = tensor_item(double_blocks_8_img_mod_split_1_output, double_blocks_8_tensoritem_0_index)
    double_blocks_8_add_0_output = add(double_blocks_8_add_0_left, double_blocks_8_tensoritem_0_output)
    double_blocks_8_multiply_0_output = multiplication(double_blocks_8_add_0_output, double_blocks_8_img_norm1_divide_output)
    double_blocks_8_tensoritem_1_output = tensor_item(double_blocks_8_img_mod_split_1_output, double_blocks_8_tensoritem_1_index)
    double_blocks_8_add_1_output = add(double_blocks_8_multiply_0_output, double_blocks_8_tensoritem_1_output)
    double_blocks_8_img_attn_qkv_transpose_output = transpose(double_blocks_8_img_attn_qkv_weight, double_blocks_8_img_attn_qkv_transpose_axes)
    double_blocks_8_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_8_add_1_output, double_blocks_8_img_attn_qkv_transpose_output)
    double_blocks_8_img_qkv = add(double_blocks_8_img_attn_qkv_matrixmultiply_output, double_blocks_8_img_attn_qkv_bias)
    double_blocks_8_reshape_0_output = reshape(double_blocks_8_img_qkv, double_blocks_8_totuple_0_output)
    double_blocks_8_transpose_out = transpose(double_blocks_8_reshape_0_output, double_blocks_8_transpose_0_axes)
    double_blocks_8_tensoritem_2_output = tensor_item(double_blocks_8_transpose_out, double_blocks_8_tensoritem_2_index)
    double_blocks_8_tensoritem_3_output = tensor_item(double_blocks_8_transpose_out, double_blocks_8_tensoritem_3_index)
    double_blocks_8_img_attn_norm_query_norm_power_output = power(double_blocks_8_tensoritem_2_output, double_blocks_8_img_attn_norm_query_norm_power_exponent)
    double_blocks_8_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_8_img_attn_norm_query_norm_power_output, axis=double_blocks_8_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_8_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_8_img_attn_norm_query_norm_add_output = add(double_blocks_8_img_attn_norm_query_norm_mean_output, double_blocks_8_img_attn_norm_query_norm_add_right)
    double_blocks_8_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_8_img_attn_norm_query_norm_add_output)
    double_blocks_8_img_attn_norm_query_norm_divide_output = divide(double_blocks_8_img_attn_norm_query_norm_divide_numerator, double_blocks_8_img_attn_norm_query_norm_sqrt_output)
    double_blocks_8_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_8_tensoritem_2_output, double_blocks_8_img_attn_norm_query_norm_divide_output)
    double_blocks_8_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_8_img_attn_norm_query_norm_multiply_0_output, double_blocks_8_img_attn_norm_query_norm_scale)
    double_blocks_8_img_attn_norm_key_norm_power_output = power(double_blocks_8_tensoritem_3_output, double_blocks_8_img_attn_norm_key_norm_power_exponent)
    double_blocks_8_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_8_img_attn_norm_key_norm_power_output, axis=double_blocks_8_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_8_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_8_img_attn_norm_key_norm_add_output = add(double_blocks_8_img_attn_norm_key_norm_mean_output, double_blocks_8_img_attn_norm_key_norm_add_right)
    double_blocks_8_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_8_img_attn_norm_key_norm_add_output)
    double_blocks_8_img_attn_norm_key_norm_divide_output = divide(double_blocks_8_img_attn_norm_key_norm_divide_numerator, double_blocks_8_img_attn_norm_key_norm_sqrt_output)
    double_blocks_8_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_8_tensoritem_3_output, double_blocks_8_img_attn_norm_key_norm_divide_output)
    double_blocks_8_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_8_img_attn_norm_key_norm_multiply_0_output, double_blocks_8_img_attn_norm_key_norm_scale)
    double_blocks_8_txt_mod_silu_minus = minus(vec)
    double_blocks_8_txt_mod_silu_exp = exp(double_blocks_8_txt_mod_silu_minus)
    double_blocks_8_txt_mod_silu_add = add(double_blocks_8_txt_mod_silu_add_left, double_blocks_8_txt_mod_silu_exp)
    double_blocks_8_txt_mod_silu_output = divide(vec, double_blocks_8_txt_mod_silu_add)
    double_blocks_8_txt_mod_lin_transpose_output = transpose(double_blocks_8_txt_mod_lin_weight, double_blocks_8_txt_mod_lin_transpose_axes)
    double_blocks_8_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_8_txt_mod_silu_output, double_blocks_8_txt_mod_lin_transpose_output)
    double_blocks_8_txt_mod_lin_out = add(double_blocks_8_txt_mod_lin_matrixmultiply_output, double_blocks_8_txt_mod_lin_bias)
    double_blocks_8_txt_mod_tensoritem_0_output = tensor_item(double_blocks_8_txt_mod_lin_out, double_blocks_8_txt_mod_tensoritem_0_index)
    double_blocks_8_txt_mod_split_0_output = split(double_blocks_8_txt_mod_tensoritem_0_output, double_blocks_8_txt_mod_split_0_split_size, double_blocks_8_txt_mod_split_0_axis)
    double_blocks_8_txt_mod_tensoritem_1_output = tensor_item(double_blocks_8_txt_mod_split_0_output, double_blocks_8_txt_mod_tensoritem_1_index)
    double_blocks_8_txt_mod_split_1_output = split(double_blocks_8_txt_mod_tensoritem_1_output, double_blocks_8_txt_mod_split_1_split_size, double_blocks_8_txt_mod_split_1_axis)
    double_blocks_8_txt_mod_tensoritem_2_output = tensor_item(double_blocks_8_txt_mod_split_0_output, double_blocks_8_txt_mod_tensoritem_2_index)
    double_blocks_8_txt_mod_split_2_output = split(double_blocks_8_txt_mod_tensoritem_2_output, double_blocks_8_txt_mod_split_2_split_size, double_blocks_8_txt_mod_split_2_axis)
    double_blocks_8_txt_norm1_mean_output = reduce_mean(double_blocks_7_add_11_output, axis=double_blocks_8_txt_norm1_mean_axis, keepdim=double_blocks_8_txt_norm1_mean_keepdim)
    double_blocks_8_txt_norm1_subtract_output = subtract(double_blocks_7_add_11_output, double_blocks_8_txt_norm1_mean_output)
    double_blocks_8_txt_norm1_variance_output = variance(double_blocks_7_add_11_output, axis=double_blocks_8_txt_norm1_variance_axis, keepdim=double_blocks_8_txt_norm1_variance_keepdim, correction=double_blocks_8_txt_norm1_variance_correction)
    double_blocks_8_txt_norm1_add_output = add(double_blocks_8_txt_norm1_variance_output, double_blocks_8_txt_norm1_add_right)
    double_blocks_8_txt_norm1_sqrt_output = sqrt(double_blocks_8_txt_norm1_add_output)
    double_blocks_8_txt_norm1_divide_output = divide(double_blocks_8_txt_norm1_subtract_output, double_blocks_8_txt_norm1_sqrt_output)
    double_blocks_8_tensoritem_4_output = tensor_item(double_blocks_8_txt_mod_split_1_output, double_blocks_8_tensoritem_4_index)
    double_blocks_8_add_2_output = add(double_blocks_8_add_2_left, double_blocks_8_tensoritem_4_output)
    double_blocks_8_multiply_1_output = multiplication(double_blocks_8_add_2_output, double_blocks_8_txt_norm1_divide_output)
    double_blocks_8_tensoritem_5_output = tensor_item(double_blocks_8_txt_mod_split_1_output, double_blocks_8_tensoritem_5_index)
    double_blocks_8_add_3_output = add(double_blocks_8_multiply_1_output, double_blocks_8_tensoritem_5_output)
    double_blocks_8_txt_attn_qkv_transpose_output = transpose(double_blocks_8_txt_attn_qkv_weight, double_blocks_8_txt_attn_qkv_transpose_axes)
    double_blocks_8_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_8_add_3_output, double_blocks_8_txt_attn_qkv_transpose_output)
    double_blocks_8_txt_qkv = add(double_blocks_8_txt_attn_qkv_matrixmultiply_output, double_blocks_8_txt_attn_qkv_bias)
    double_blocks_8_reshape_1_output = reshape(double_blocks_8_txt_qkv, double_blocks_8_totuple_1_output)
    double_blocks_8_txt_transpose_out = transpose(double_blocks_8_reshape_1_output, double_blocks_8_transpose_1_axes)
    double_blocks_8_tensoritem_6_output = tensor_item(double_blocks_8_txt_transpose_out, double_blocks_8_tensoritem_6_index)
    double_blocks_8_tensoritem_7_output = tensor_item(double_blocks_8_txt_transpose_out, double_blocks_8_tensoritem_7_index)
    double_blocks_8_txt_attn_norm_query_norm_power_output = power(double_blocks_8_tensoritem_6_output, double_blocks_8_txt_attn_norm_query_norm_power_exponent)
    double_blocks_8_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_8_txt_attn_norm_query_norm_power_output, axis=double_blocks_8_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_8_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_8_txt_attn_norm_query_norm_add_output = add(double_blocks_8_txt_attn_norm_query_norm_mean_output, double_blocks_8_txt_attn_norm_query_norm_add_right)
    double_blocks_8_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_8_txt_attn_norm_query_norm_add_output)
    double_blocks_8_txt_attn_norm_query_norm_divide_output = divide(double_blocks_8_txt_attn_norm_query_norm_divide_numerator, double_blocks_8_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_8_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_8_tensoritem_6_output, double_blocks_8_txt_attn_norm_query_norm_divide_output)
    double_blocks_8_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_8_txt_attn_norm_query_norm_multiply_0_output, double_blocks_8_txt_attn_norm_query_norm_scale)
    double_blocks_8_txt_attn_norm_key_norm_power_output = power(double_blocks_8_tensoritem_7_output, double_blocks_8_txt_attn_norm_key_norm_power_exponent)
    double_blocks_8_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_8_txt_attn_norm_key_norm_power_output, axis=double_blocks_8_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_8_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_8_txt_attn_norm_key_norm_add_output = add(double_blocks_8_txt_attn_norm_key_norm_mean_output, double_blocks_8_txt_attn_norm_key_norm_add_right)
    double_blocks_8_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_8_txt_attn_norm_key_norm_add_output)
    double_blocks_8_txt_attn_norm_key_norm_divide_output = divide(double_blocks_8_txt_attn_norm_key_norm_divide_numerator, double_blocks_8_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_8_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_8_tensoritem_7_output, double_blocks_8_txt_attn_norm_key_norm_divide_output)
    double_blocks_8_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_8_txt_attn_norm_key_norm_multiply_0_output, double_blocks_8_txt_attn_norm_key_norm_scale)
    double_blocks_8_q_concat = concat(double_blocks_8_txt_attn_norm_query_norm_multiply_1_output, double_blocks_8_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_8_concat_0_axis)
    double_blocks_8_k_concat = concat(double_blocks_8_txt_attn_norm_key_norm_multiply_1_output, double_blocks_8_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_8_concat_1_axis)
    double_blocks_8_tensoritem_8_output = tensor_item(double_blocks_8_txt_transpose_out, double_blocks_8_tensoritem_8_index)
    double_blocks_8_tensoritem_9_output = tensor_item(double_blocks_8_transpose_out, double_blocks_8_tensoritem_9_index)
    double_blocks_8_v_concat = concat(double_blocks_8_tensoritem_8_output, double_blocks_8_tensoritem_9_output, axis=double_blocks_8_concat_2_axis)
    double_blocks_8_model_model_xq_ = reshape(double_blocks_8_q_concat, double_blocks_8_model_model_totuple_0_output)
    double_blocks_8_model_model_xk_ = reshape(double_blocks_8_k_concat, double_blocks_8_model_model_totuple_1_output)
    double_blocks_8_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_8_model_model_tensoritem_0_index)
    double_blocks_8_model_model_tensoritem_1_output = tensor_item(double_blocks_8_model_model_xq_, double_blocks_8_model_model_tensoritem_1_index)
    double_blocks_8_model_model_multiply_0_output = multiplication(double_blocks_8_model_model_tensoritem_0_output, double_blocks_8_model_model_tensoritem_1_output)
    double_blocks_8_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_8_model_model_tensoritem_2_index)
    double_blocks_8_model_model_tensoritem_3_output = tensor_item(double_blocks_8_model_model_xq_, double_blocks_8_model_model_tensoritem_3_index)
    double_blocks_8_model_model_multiply_1_output = multiplication(double_blocks_8_model_model_tensoritem_2_output, double_blocks_8_model_model_tensoritem_3_output)
    double_blocks_8_model_model_add_0_output = add(double_blocks_8_model_model_multiply_0_output, double_blocks_8_model_model_multiply_1_output)
    double_blocks_8_model_q_out = reshape(double_blocks_8_model_model_add_0_output, double_blocks_8_model_model_shape_0_output)
    double_blocks_8_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_8_model_model_tensoritem_4_index)
    double_blocks_8_model_model_tensoritem_5_output = tensor_item(double_blocks_8_model_model_xk_, double_blocks_8_model_model_tensoritem_5_index)
    double_blocks_8_model_model_multiply_2_output = multiplication(double_blocks_8_model_model_tensoritem_4_output, double_blocks_8_model_model_tensoritem_5_output)
    double_blocks_8_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_8_model_model_tensoritem_6_index)
    double_blocks_8_model_model_tensoritem_7_output = tensor_item(double_blocks_8_model_model_xk_, double_blocks_8_model_model_tensoritem_7_index)
    double_blocks_8_model_model_multiply_3_output = multiplication(double_blocks_8_model_model_tensoritem_6_output, double_blocks_8_model_model_tensoritem_7_output)
    double_blocks_8_model_model_add_1_output = add(double_blocks_8_model_model_multiply_2_output, double_blocks_8_model_model_multiply_3_output)
    double_blocks_8_model_k_out = reshape(double_blocks_8_model_model_add_1_output, double_blocks_8_model_model_shape_1_output)
    double_blocks_8_model_context = scaled_dot_product_attention(double_blocks_8_model_q_out, double_blocks_8_model_k_out, double_blocks_8_v_concat, double_blocks_8_model_scaleddotproduct_attn_mask)
    double_blocks_8_model_transpose_output = transpose(double_blocks_8_model_context, double_blocks_8_model_transpose_axes)
    double_blocks_8_attn = reshape(double_blocks_8_model_transpose_output, double_blocks_8_model_totuple_output)
    double_blocks_8_tensoritem_10_output = tensor_item(double_blocks_8_attn, double_blocks_8_tensoritem_10_index)
    double_blocks_8_img_attn_proj_transpose_output = transpose(double_blocks_8_img_attn_proj_weight, double_blocks_8_img_attn_proj_transpose_axes)
    double_blocks_8_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_8_tensoritem_10_output, double_blocks_8_img_attn_proj_transpose_output)
    double_blocks_8_img_proj = add(double_blocks_8_img_attn_proj_matrixmultiply_output, double_blocks_8_img_attn_proj_bias)
    double_blocks_8_tensoritem_11_output = tensor_item(double_blocks_8_img_mod_split_1_output, double_blocks_8_tensoritem_11_index)
    double_blocks_8_multiply_2_output = multiplication(double_blocks_8_tensoritem_11_output, double_blocks_8_img_proj)
    double_blocks_8_add_4_output = add(double_blocks_7_add_10_output, double_blocks_8_multiply_2_output)
    double_blocks_8_img_norm2_mean_output = reduce_mean(double_blocks_8_add_4_output, axis=double_blocks_8_img_norm2_mean_axis, keepdim=double_blocks_8_img_norm2_mean_keepdim)
    double_blocks_8_img_norm2_subtract_output = subtract(double_blocks_8_add_4_output, double_blocks_8_img_norm2_mean_output)
    double_blocks_8_img_norm2_variance_output = variance(double_blocks_8_add_4_output, axis=double_blocks_8_img_norm2_variance_axis, keepdim=double_blocks_8_img_norm2_variance_keepdim, correction=double_blocks_8_img_norm2_variance_correction)
    double_blocks_8_img_norm2_add_output = add(double_blocks_8_img_norm2_variance_output, double_blocks_8_img_norm2_add_right)
    double_blocks_8_img_norm2_sqrt_output = sqrt(double_blocks_8_img_norm2_add_output)
    double_blocks_8_img_norm2_divide_output = divide(double_blocks_8_img_norm2_subtract_output, double_blocks_8_img_norm2_sqrt_output)
    double_blocks_8_tensoritem_12_output = tensor_item(double_blocks_8_img_mod_split_2_output, double_blocks_8_tensoritem_12_index)
    double_blocks_8_add_5_output = add(double_blocks_8_add_5_left, double_blocks_8_tensoritem_12_output)
    double_blocks_8_multiply_3_output = multiplication(double_blocks_8_add_5_output, double_blocks_8_img_norm2_divide_output)
    double_blocks_8_tensoritem_13_output = tensor_item(double_blocks_8_img_mod_split_2_output, double_blocks_8_tensoritem_13_index)
    double_blocks_8_add_6_output = add(double_blocks_8_multiply_3_output, double_blocks_8_tensoritem_13_output)
    double_blocks_8_img_mlp_0_transpose_output = transpose(double_blocks_8_img_mlp_0_weight, double_blocks_8_img_mlp_0_transpose_axes)
    double_blocks_8_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_8_add_6_output, double_blocks_8_img_mlp_0_transpose_output)
    double_blocks_8_img_mlp_0_output = add(double_blocks_8_img_mlp_0_matrixmultiply_output, double_blocks_8_img_mlp_0_bias)
    double_blocks_8_img_mlp_gelu_output = gelu(double_blocks_8_img_mlp_0_output, double_blocks_8_img_mlp_gelu_approximate)
    double_blocks_8_img_mlp_2_transpose_output = transpose(double_blocks_8_img_mlp_2_weight, double_blocks_8_img_mlp_2_transpose_axes)
    double_blocks_8_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_8_img_mlp_gelu_output, double_blocks_8_img_mlp_2_transpose_output)
    double_blocks_8_img_mlp = add(double_blocks_8_img_mlp_2_matrixmultiply_output, double_blocks_8_img_mlp_2_bias)
    double_blocks_8_tensoritem_14_output = tensor_item(double_blocks_8_attn, double_blocks_8_tensoritem_14_index)
    double_blocks_8_txt_attn_proj_transpose_output = transpose(double_blocks_8_txt_attn_proj_weight, double_blocks_8_txt_attn_proj_transpose_axes)
    double_blocks_8_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_8_tensoritem_14_output, double_blocks_8_txt_attn_proj_transpose_output)
    double_blocks_8_txt_proj = add(double_blocks_8_txt_attn_proj_matrixmultiply_output, double_blocks_8_txt_attn_proj_bias)
    double_blocks_8_tensoritem_15_output = tensor_item(double_blocks_8_txt_mod_split_1_output, double_blocks_8_tensoritem_15_index)
    double_blocks_8_multiply_4_output = multiplication(double_blocks_8_tensoritem_15_output, double_blocks_8_txt_proj)
    double_blocks_8_add_7_output = add(double_blocks_7_add_11_output, double_blocks_8_multiply_4_output)
    double_blocks_8_txt_norm2_mean_output = reduce_mean(double_blocks_8_add_7_output, axis=double_blocks_8_txt_norm2_mean_axis, keepdim=double_blocks_8_txt_norm2_mean_keepdim)
    double_blocks_8_txt_norm2_subtract_output = subtract(double_blocks_8_add_7_output, double_blocks_8_txt_norm2_mean_output)
    double_blocks_8_txt_norm2_variance_output = variance(double_blocks_8_add_7_output, axis=double_blocks_8_txt_norm2_variance_axis, keepdim=double_blocks_8_txt_norm2_variance_keepdim, correction=double_blocks_8_txt_norm2_variance_correction)
    double_blocks_8_txt_norm2_add_output = add(double_blocks_8_txt_norm2_variance_output, double_blocks_8_txt_norm2_add_right)
    double_blocks_8_txt_norm2_sqrt_output = sqrt(double_blocks_8_txt_norm2_add_output)
    double_blocks_8_txt_norm2_divide_output = divide(double_blocks_8_txt_norm2_subtract_output, double_blocks_8_txt_norm2_sqrt_output)
    double_blocks_8_tensoritem_16_output = tensor_item(double_blocks_8_txt_mod_split_2_output, double_blocks_8_tensoritem_16_index)
    double_blocks_8_add_8_output = add(double_blocks_8_add_8_left, double_blocks_8_tensoritem_16_output)
    double_blocks_8_multiply_5_output = multiplication(double_blocks_8_add_8_output, double_blocks_8_txt_norm2_divide_output)
    double_blocks_8_tensoritem_17_output = tensor_item(double_blocks_8_txt_mod_split_2_output, double_blocks_8_tensoritem_17_index)
    double_blocks_8_add_9_output = add(double_blocks_8_multiply_5_output, double_blocks_8_tensoritem_17_output)
    double_blocks_8_txt_mlp_0_transpose_output = transpose(double_blocks_8_txt_mlp_0_weight, double_blocks_8_txt_mlp_0_transpose_axes)
    double_blocks_8_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_8_add_9_output, double_blocks_8_txt_mlp_0_transpose_output)
    double_blocks_8_txt_mlp_0_output = add(double_blocks_8_txt_mlp_0_matrixmultiply_output, double_blocks_8_txt_mlp_0_bias)
    double_blocks_8_txt_mlp_gelu_output = gelu(double_blocks_8_txt_mlp_0_output, double_blocks_8_txt_mlp_gelu_approximate)
    double_blocks_8_txt_mlp_2_transpose_output = transpose(double_blocks_8_txt_mlp_2_weight, double_blocks_8_txt_mlp_2_transpose_axes)
    double_blocks_8_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_8_txt_mlp_gelu_output, double_blocks_8_txt_mlp_2_transpose_output)
    double_blocks_8_txt_mlp = add(double_blocks_8_txt_mlp_2_matrixmultiply_output, double_blocks_8_txt_mlp_2_bias)
    double_blocks_8_tensoritem_18_output = tensor_item(double_blocks_8_img_mod_split_2_output, double_blocks_8_tensoritem_18_index)
    double_blocks_8_multiply_6_output = multiplication(double_blocks_8_tensoritem_18_output, double_blocks_8_img_mlp)
    double_blocks_8_add_10_output = add(double_blocks_8_add_4_output, double_blocks_8_multiply_6_output)
    double_blocks_8_tensoritem_19_output = tensor_item(double_blocks_8_txt_mod_split_2_output, double_blocks_8_tensoritem_19_index)
    double_blocks_8_multiply_7_output = multiplication(double_blocks_8_tensoritem_19_output, double_blocks_8_txt_mlp)
    double_blocks_8_add_11_output = add(double_blocks_8_add_7_output, double_blocks_8_multiply_7_output)
    double_blocks_9_img_mod_silu_minus = minus(vec)
    double_blocks_9_img_mod_silu_exp = exp(double_blocks_9_img_mod_silu_minus)
    double_blocks_9_img_mod_silu_add = add(double_blocks_9_img_mod_silu_add_left, double_blocks_9_img_mod_silu_exp)
    double_blocks_9_img_mod_silu_output = divide(vec, double_blocks_9_img_mod_silu_add)
    double_blocks_9_img_mod_lin_transpose_output = transpose(double_blocks_9_img_mod_lin_weight, double_blocks_9_img_mod_lin_transpose_axes)
    double_blocks_9_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_9_img_mod_silu_output, double_blocks_9_img_mod_lin_transpose_output)
    double_blocks_9_img_mod_lin_out = add(double_blocks_9_img_mod_lin_matrixmultiply_output, double_blocks_9_img_mod_lin_bias)
    double_blocks_9_img_mod_tensoritem_0_output = tensor_item(double_blocks_9_img_mod_lin_out, double_blocks_9_img_mod_tensoritem_0_index)
    double_blocks_9_img_mod_split_0_output = split(double_blocks_9_img_mod_tensoritem_0_output, double_blocks_9_img_mod_split_0_split_size, double_blocks_9_img_mod_split_0_axis)
    double_blocks_9_img_mod_tensoritem_1_output = tensor_item(double_blocks_9_img_mod_split_0_output, double_blocks_9_img_mod_tensoritem_1_index)
    double_blocks_9_img_mod_split_1_output = split(double_blocks_9_img_mod_tensoritem_1_output, double_blocks_9_img_mod_split_1_split_size, double_blocks_9_img_mod_split_1_axis)
    double_blocks_9_img_mod_tensoritem_2_output = tensor_item(double_blocks_9_img_mod_split_0_output, double_blocks_9_img_mod_tensoritem_2_index)
    double_blocks_9_img_mod_split_2_output = split(double_blocks_9_img_mod_tensoritem_2_output, double_blocks_9_img_mod_split_2_split_size, double_blocks_9_img_mod_split_2_axis)
    double_blocks_9_img_norm1_mean_output = reduce_mean(double_blocks_8_add_10_output, axis=double_blocks_9_img_norm1_mean_axis, keepdim=double_blocks_9_img_norm1_mean_keepdim)
    double_blocks_9_img_norm1_subtract_output = subtract(double_blocks_8_add_10_output, double_blocks_9_img_norm1_mean_output)
    double_blocks_9_img_norm1_variance_output = variance(double_blocks_8_add_10_output, axis=double_blocks_9_img_norm1_variance_axis, keepdim=double_blocks_9_img_norm1_variance_keepdim, correction=double_blocks_9_img_norm1_variance_correction)
    double_blocks_9_img_norm1_add_output = add(double_blocks_9_img_norm1_variance_output, double_blocks_9_img_norm1_add_right)
    double_blocks_9_img_norm1_sqrt_output = sqrt(double_blocks_9_img_norm1_add_output)
    double_blocks_9_img_norm1_divide_output = divide(double_blocks_9_img_norm1_subtract_output, double_blocks_9_img_norm1_sqrt_output)
    double_blocks_9_tensoritem_0_output = tensor_item(double_blocks_9_img_mod_split_1_output, double_blocks_9_tensoritem_0_index)
    double_blocks_9_add_0_output = add(double_blocks_9_add_0_left, double_blocks_9_tensoritem_0_output)
    double_blocks_9_multiply_0_output = multiplication(double_blocks_9_add_0_output, double_blocks_9_img_norm1_divide_output)
    double_blocks_9_tensoritem_1_output = tensor_item(double_blocks_9_img_mod_split_1_output, double_blocks_9_tensoritem_1_index)
    double_blocks_9_add_1_output = add(double_blocks_9_multiply_0_output, double_blocks_9_tensoritem_1_output)
    double_blocks_9_img_attn_qkv_transpose_output = transpose(double_blocks_9_img_attn_qkv_weight, double_blocks_9_img_attn_qkv_transpose_axes)
    double_blocks_9_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_9_add_1_output, double_blocks_9_img_attn_qkv_transpose_output)
    double_blocks_9_img_qkv = add(double_blocks_9_img_attn_qkv_matrixmultiply_output, double_blocks_9_img_attn_qkv_bias)
    double_blocks_9_reshape_0_output = reshape(double_blocks_9_img_qkv, double_blocks_9_totuple_0_output)
    double_blocks_9_transpose_out = transpose(double_blocks_9_reshape_0_output, double_blocks_9_transpose_0_axes)
    double_blocks_9_tensoritem_2_output = tensor_item(double_blocks_9_transpose_out, double_blocks_9_tensoritem_2_index)
    double_blocks_9_tensoritem_3_output = tensor_item(double_blocks_9_transpose_out, double_blocks_9_tensoritem_3_index)
    double_blocks_9_img_attn_norm_query_norm_power_output = power(double_blocks_9_tensoritem_2_output, double_blocks_9_img_attn_norm_query_norm_power_exponent)
    double_blocks_9_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_9_img_attn_norm_query_norm_power_output, axis=double_blocks_9_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_9_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_9_img_attn_norm_query_norm_add_output = add(double_blocks_9_img_attn_norm_query_norm_mean_output, double_blocks_9_img_attn_norm_query_norm_add_right)
    double_blocks_9_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_9_img_attn_norm_query_norm_add_output)
    double_blocks_9_img_attn_norm_query_norm_divide_output = divide(double_blocks_9_img_attn_norm_query_norm_divide_numerator, double_blocks_9_img_attn_norm_query_norm_sqrt_output)
    double_blocks_9_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_9_tensoritem_2_output, double_blocks_9_img_attn_norm_query_norm_divide_output)
    double_blocks_9_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_9_img_attn_norm_query_norm_multiply_0_output, double_blocks_9_img_attn_norm_query_norm_scale)
    double_blocks_9_img_attn_norm_key_norm_power_output = power(double_blocks_9_tensoritem_3_output, double_blocks_9_img_attn_norm_key_norm_power_exponent)
    double_blocks_9_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_9_img_attn_norm_key_norm_power_output, axis=double_blocks_9_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_9_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_9_img_attn_norm_key_norm_add_output = add(double_blocks_9_img_attn_norm_key_norm_mean_output, double_blocks_9_img_attn_norm_key_norm_add_right)
    double_blocks_9_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_9_img_attn_norm_key_norm_add_output)
    double_blocks_9_img_attn_norm_key_norm_divide_output = divide(double_blocks_9_img_attn_norm_key_norm_divide_numerator, double_blocks_9_img_attn_norm_key_norm_sqrt_output)
    double_blocks_9_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_9_tensoritem_3_output, double_blocks_9_img_attn_norm_key_norm_divide_output)
    double_blocks_9_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_9_img_attn_norm_key_norm_multiply_0_output, double_blocks_9_img_attn_norm_key_norm_scale)
    double_blocks_9_txt_mod_silu_minus = minus(vec)
    double_blocks_9_txt_mod_silu_exp = exp(double_blocks_9_txt_mod_silu_minus)
    double_blocks_9_txt_mod_silu_add = add(double_blocks_9_txt_mod_silu_add_left, double_blocks_9_txt_mod_silu_exp)
    double_blocks_9_txt_mod_silu_output = divide(vec, double_blocks_9_txt_mod_silu_add)
    double_blocks_9_txt_mod_lin_transpose_output = transpose(double_blocks_9_txt_mod_lin_weight, double_blocks_9_txt_mod_lin_transpose_axes)
    double_blocks_9_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_9_txt_mod_silu_output, double_blocks_9_txt_mod_lin_transpose_output)
    double_blocks_9_txt_mod_lin_out = add(double_blocks_9_txt_mod_lin_matrixmultiply_output, double_blocks_9_txt_mod_lin_bias)
    double_blocks_9_txt_mod_tensoritem_0_output = tensor_item(double_blocks_9_txt_mod_lin_out, double_blocks_9_txt_mod_tensoritem_0_index)
    double_blocks_9_txt_mod_split_0_output = split(double_blocks_9_txt_mod_tensoritem_0_output, double_blocks_9_txt_mod_split_0_split_size, double_blocks_9_txt_mod_split_0_axis)
    double_blocks_9_txt_mod_tensoritem_1_output = tensor_item(double_blocks_9_txt_mod_split_0_output, double_blocks_9_txt_mod_tensoritem_1_index)
    double_blocks_9_txt_mod_split_1_output = split(double_blocks_9_txt_mod_tensoritem_1_output, double_blocks_9_txt_mod_split_1_split_size, double_blocks_9_txt_mod_split_1_axis)
    double_blocks_9_txt_mod_tensoritem_2_output = tensor_item(double_blocks_9_txt_mod_split_0_output, double_blocks_9_txt_mod_tensoritem_2_index)
    double_blocks_9_txt_mod_split_2_output = split(double_blocks_9_txt_mod_tensoritem_2_output, double_blocks_9_txt_mod_split_2_split_size, double_blocks_9_txt_mod_split_2_axis)
    double_blocks_9_txt_norm1_mean_output = reduce_mean(double_blocks_8_add_11_output, axis=double_blocks_9_txt_norm1_mean_axis, keepdim=double_blocks_9_txt_norm1_mean_keepdim)
    double_blocks_9_txt_norm1_subtract_output = subtract(double_blocks_8_add_11_output, double_blocks_9_txt_norm1_mean_output)
    double_blocks_9_txt_norm1_variance_output = variance(double_blocks_8_add_11_output, axis=double_blocks_9_txt_norm1_variance_axis, keepdim=double_blocks_9_txt_norm1_variance_keepdim, correction=double_blocks_9_txt_norm1_variance_correction)
    double_blocks_9_txt_norm1_add_output = add(double_blocks_9_txt_norm1_variance_output, double_blocks_9_txt_norm1_add_right)
    double_blocks_9_txt_norm1_sqrt_output = sqrt(double_blocks_9_txt_norm1_add_output)
    double_blocks_9_txt_norm1_divide_output = divide(double_blocks_9_txt_norm1_subtract_output, double_blocks_9_txt_norm1_sqrt_output)
    double_blocks_9_tensoritem_4_output = tensor_item(double_blocks_9_txt_mod_split_1_output, double_blocks_9_tensoritem_4_index)
    double_blocks_9_add_2_output = add(double_blocks_9_add_2_left, double_blocks_9_tensoritem_4_output)
    double_blocks_9_multiply_1_output = multiplication(double_blocks_9_add_2_output, double_blocks_9_txt_norm1_divide_output)
    double_blocks_9_tensoritem_5_output = tensor_item(double_blocks_9_txt_mod_split_1_output, double_blocks_9_tensoritem_5_index)
    double_blocks_9_add_3_output = add(double_blocks_9_multiply_1_output, double_blocks_9_tensoritem_5_output)
    double_blocks_9_txt_attn_qkv_transpose_output = transpose(double_blocks_9_txt_attn_qkv_weight, double_blocks_9_txt_attn_qkv_transpose_axes)
    double_blocks_9_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_9_add_3_output, double_blocks_9_txt_attn_qkv_transpose_output)
    double_blocks_9_txt_qkv = add(double_blocks_9_txt_attn_qkv_matrixmultiply_output, double_blocks_9_txt_attn_qkv_bias)
    double_blocks_9_reshape_1_output = reshape(double_blocks_9_txt_qkv, double_blocks_9_totuple_1_output)
    double_blocks_9_txt_transpose_out = transpose(double_blocks_9_reshape_1_output, double_blocks_9_transpose_1_axes)
    double_blocks_9_tensoritem_6_output = tensor_item(double_blocks_9_txt_transpose_out, double_blocks_9_tensoritem_6_index)
    double_blocks_9_tensoritem_7_output = tensor_item(double_blocks_9_txt_transpose_out, double_blocks_9_tensoritem_7_index)
    double_blocks_9_txt_attn_norm_query_norm_power_output = power(double_blocks_9_tensoritem_6_output, double_blocks_9_txt_attn_norm_query_norm_power_exponent)
    double_blocks_9_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_9_txt_attn_norm_query_norm_power_output, axis=double_blocks_9_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_9_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_9_txt_attn_norm_query_norm_add_output = add(double_blocks_9_txt_attn_norm_query_norm_mean_output, double_blocks_9_txt_attn_norm_query_norm_add_right)
    double_blocks_9_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_9_txt_attn_norm_query_norm_add_output)
    double_blocks_9_txt_attn_norm_query_norm_divide_output = divide(double_blocks_9_txt_attn_norm_query_norm_divide_numerator, double_blocks_9_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_9_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_9_tensoritem_6_output, double_blocks_9_txt_attn_norm_query_norm_divide_output)
    double_blocks_9_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_9_txt_attn_norm_query_norm_multiply_0_output, double_blocks_9_txt_attn_norm_query_norm_scale)
    double_blocks_9_txt_attn_norm_key_norm_power_output = power(double_blocks_9_tensoritem_7_output, double_blocks_9_txt_attn_norm_key_norm_power_exponent)
    double_blocks_9_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_9_txt_attn_norm_key_norm_power_output, axis=double_blocks_9_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_9_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_9_txt_attn_norm_key_norm_add_output = add(double_blocks_9_txt_attn_norm_key_norm_mean_output, double_blocks_9_txt_attn_norm_key_norm_add_right)
    double_blocks_9_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_9_txt_attn_norm_key_norm_add_output)
    double_blocks_9_txt_attn_norm_key_norm_divide_output = divide(double_blocks_9_txt_attn_norm_key_norm_divide_numerator, double_blocks_9_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_9_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_9_tensoritem_7_output, double_blocks_9_txt_attn_norm_key_norm_divide_output)
    double_blocks_9_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_9_txt_attn_norm_key_norm_multiply_0_output, double_blocks_9_txt_attn_norm_key_norm_scale)
    double_blocks_9_q_concat = concat(double_blocks_9_txt_attn_norm_query_norm_multiply_1_output, double_blocks_9_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_9_concat_0_axis)
    double_blocks_9_k_concat = concat(double_blocks_9_txt_attn_norm_key_norm_multiply_1_output, double_blocks_9_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_9_concat_1_axis)
    double_blocks_9_tensoritem_8_output = tensor_item(double_blocks_9_txt_transpose_out, double_blocks_9_tensoritem_8_index)
    double_blocks_9_tensoritem_9_output = tensor_item(double_blocks_9_transpose_out, double_blocks_9_tensoritem_9_index)
    double_blocks_9_v_concat = concat(double_blocks_9_tensoritem_8_output, double_blocks_9_tensoritem_9_output, axis=double_blocks_9_concat_2_axis)
    double_blocks_9_model_model_xq_ = reshape(double_blocks_9_q_concat, double_blocks_9_model_model_totuple_0_output)
    double_blocks_9_model_model_xk_ = reshape(double_blocks_9_k_concat, double_blocks_9_model_model_totuple_1_output)
    double_blocks_9_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_9_model_model_tensoritem_0_index)
    double_blocks_9_model_model_tensoritem_1_output = tensor_item(double_blocks_9_model_model_xq_, double_blocks_9_model_model_tensoritem_1_index)
    double_blocks_9_model_model_multiply_0_output = multiplication(double_blocks_9_model_model_tensoritem_0_output, double_blocks_9_model_model_tensoritem_1_output)
    double_blocks_9_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_9_model_model_tensoritem_2_index)
    double_blocks_9_model_model_tensoritem_3_output = tensor_item(double_blocks_9_model_model_xq_, double_blocks_9_model_model_tensoritem_3_index)
    double_blocks_9_model_model_multiply_1_output = multiplication(double_blocks_9_model_model_tensoritem_2_output, double_blocks_9_model_model_tensoritem_3_output)
    double_blocks_9_model_model_add_0_output = add(double_blocks_9_model_model_multiply_0_output, double_blocks_9_model_model_multiply_1_output)
    double_blocks_9_model_q_out = reshape(double_blocks_9_model_model_add_0_output, double_blocks_9_model_model_shape_0_output)
    double_blocks_9_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_9_model_model_tensoritem_4_index)
    double_blocks_9_model_model_tensoritem_5_output = tensor_item(double_blocks_9_model_model_xk_, double_blocks_9_model_model_tensoritem_5_index)
    double_blocks_9_model_model_multiply_2_output = multiplication(double_blocks_9_model_model_tensoritem_4_output, double_blocks_9_model_model_tensoritem_5_output)
    double_blocks_9_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_9_model_model_tensoritem_6_index)
    double_blocks_9_model_model_tensoritem_7_output = tensor_item(double_blocks_9_model_model_xk_, double_blocks_9_model_model_tensoritem_7_index)
    double_blocks_9_model_model_multiply_3_output = multiplication(double_blocks_9_model_model_tensoritem_6_output, double_blocks_9_model_model_tensoritem_7_output)
    double_blocks_9_model_model_add_1_output = add(double_blocks_9_model_model_multiply_2_output, double_blocks_9_model_model_multiply_3_output)
    double_blocks_9_model_k_out = reshape(double_blocks_9_model_model_add_1_output, double_blocks_9_model_model_shape_1_output)
    double_blocks_9_model_context = scaled_dot_product_attention(double_blocks_9_model_q_out, double_blocks_9_model_k_out, double_blocks_9_v_concat, double_blocks_9_model_scaleddotproduct_attn_mask)
    double_blocks_9_model_transpose_output = transpose(double_blocks_9_model_context, double_blocks_9_model_transpose_axes)
    double_blocks_9_attn = reshape(double_blocks_9_model_transpose_output, double_blocks_9_model_totuple_output)
    double_blocks_9_tensoritem_10_output = tensor_item(double_blocks_9_attn, double_blocks_9_tensoritem_10_index)
    double_blocks_9_img_attn_proj_transpose_output = transpose(double_blocks_9_img_attn_proj_weight, double_blocks_9_img_attn_proj_transpose_axes)
    double_blocks_9_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_9_tensoritem_10_output, double_blocks_9_img_attn_proj_transpose_output)
    double_blocks_9_img_proj = add(double_blocks_9_img_attn_proj_matrixmultiply_output, double_blocks_9_img_attn_proj_bias)
    double_blocks_9_tensoritem_11_output = tensor_item(double_blocks_9_img_mod_split_1_output, double_blocks_9_tensoritem_11_index)
    double_blocks_9_multiply_2_output = multiplication(double_blocks_9_tensoritem_11_output, double_blocks_9_img_proj)
    double_blocks_9_add_4_output = add(double_blocks_8_add_10_output, double_blocks_9_multiply_2_output)
    double_blocks_9_img_norm2_mean_output = reduce_mean(double_blocks_9_add_4_output, axis=double_blocks_9_img_norm2_mean_axis, keepdim=double_blocks_9_img_norm2_mean_keepdim)
    double_blocks_9_img_norm2_subtract_output = subtract(double_blocks_9_add_4_output, double_blocks_9_img_norm2_mean_output)
    double_blocks_9_img_norm2_variance_output = variance(double_blocks_9_add_4_output, axis=double_blocks_9_img_norm2_variance_axis, keepdim=double_blocks_9_img_norm2_variance_keepdim, correction=double_blocks_9_img_norm2_variance_correction)
    double_blocks_9_img_norm2_add_output = add(double_blocks_9_img_norm2_variance_output, double_blocks_9_img_norm2_add_right)
    double_blocks_9_img_norm2_sqrt_output = sqrt(double_blocks_9_img_norm2_add_output)
    double_blocks_9_img_norm2_divide_output = divide(double_blocks_9_img_norm2_subtract_output, double_blocks_9_img_norm2_sqrt_output)
    double_blocks_9_tensoritem_12_output = tensor_item(double_blocks_9_img_mod_split_2_output, double_blocks_9_tensoritem_12_index)
    double_blocks_9_add_5_output = add(double_blocks_9_add_5_left, double_blocks_9_tensoritem_12_output)
    double_blocks_9_multiply_3_output = multiplication(double_blocks_9_add_5_output, double_blocks_9_img_norm2_divide_output)
    double_blocks_9_tensoritem_13_output = tensor_item(double_blocks_9_img_mod_split_2_output, double_blocks_9_tensoritem_13_index)
    double_blocks_9_add_6_output = add(double_blocks_9_multiply_3_output, double_blocks_9_tensoritem_13_output)
    double_blocks_9_img_mlp_0_transpose_output = transpose(double_blocks_9_img_mlp_0_weight, double_blocks_9_img_mlp_0_transpose_axes)
    double_blocks_9_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_9_add_6_output, double_blocks_9_img_mlp_0_transpose_output)
    double_blocks_9_img_mlp_0_output = add(double_blocks_9_img_mlp_0_matrixmultiply_output, double_blocks_9_img_mlp_0_bias)
    double_blocks_9_img_mlp_gelu_output = gelu(double_blocks_9_img_mlp_0_output, double_blocks_9_img_mlp_gelu_approximate)
    double_blocks_9_img_mlp_2_transpose_output = transpose(double_blocks_9_img_mlp_2_weight, double_blocks_9_img_mlp_2_transpose_axes)
    double_blocks_9_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_9_img_mlp_gelu_output, double_blocks_9_img_mlp_2_transpose_output)
    double_blocks_9_img_mlp = add(double_blocks_9_img_mlp_2_matrixmultiply_output, double_blocks_9_img_mlp_2_bias)
    double_blocks_9_tensoritem_14_output = tensor_item(double_blocks_9_attn, double_blocks_9_tensoritem_14_index)
    double_blocks_9_txt_attn_proj_transpose_output = transpose(double_blocks_9_txt_attn_proj_weight, double_blocks_9_txt_attn_proj_transpose_axes)
    double_blocks_9_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_9_tensoritem_14_output, double_blocks_9_txt_attn_proj_transpose_output)
    double_blocks_9_txt_proj = add(double_blocks_9_txt_attn_proj_matrixmultiply_output, double_blocks_9_txt_attn_proj_bias)
    double_blocks_9_tensoritem_15_output = tensor_item(double_blocks_9_txt_mod_split_1_output, double_blocks_9_tensoritem_15_index)
    double_blocks_9_multiply_4_output = multiplication(double_blocks_9_tensoritem_15_output, double_blocks_9_txt_proj)
    double_blocks_9_add_7_output = add(double_blocks_8_add_11_output, double_blocks_9_multiply_4_output)
    double_blocks_9_txt_norm2_mean_output = reduce_mean(double_blocks_9_add_7_output, axis=double_blocks_9_txt_norm2_mean_axis, keepdim=double_blocks_9_txt_norm2_mean_keepdim)
    double_blocks_9_txt_norm2_subtract_output = subtract(double_blocks_9_add_7_output, double_blocks_9_txt_norm2_mean_output)
    double_blocks_9_txt_norm2_variance_output = variance(double_blocks_9_add_7_output, axis=double_blocks_9_txt_norm2_variance_axis, keepdim=double_blocks_9_txt_norm2_variance_keepdim, correction=double_blocks_9_txt_norm2_variance_correction)
    double_blocks_9_txt_norm2_add_output = add(double_blocks_9_txt_norm2_variance_output, double_blocks_9_txt_norm2_add_right)
    double_blocks_9_txt_norm2_sqrt_output = sqrt(double_blocks_9_txt_norm2_add_output)
    double_blocks_9_txt_norm2_divide_output = divide(double_blocks_9_txt_norm2_subtract_output, double_blocks_9_txt_norm2_sqrt_output)
    double_blocks_9_tensoritem_16_output = tensor_item(double_blocks_9_txt_mod_split_2_output, double_blocks_9_tensoritem_16_index)
    double_blocks_9_add_8_output = add(double_blocks_9_add_8_left, double_blocks_9_tensoritem_16_output)
    double_blocks_9_multiply_5_output = multiplication(double_blocks_9_add_8_output, double_blocks_9_txt_norm2_divide_output)
    double_blocks_9_tensoritem_17_output = tensor_item(double_blocks_9_txt_mod_split_2_output, double_blocks_9_tensoritem_17_index)
    double_blocks_9_add_9_output = add(double_blocks_9_multiply_5_output, double_blocks_9_tensoritem_17_output)
    double_blocks_9_txt_mlp_0_transpose_output = transpose(double_blocks_9_txt_mlp_0_weight, double_blocks_9_txt_mlp_0_transpose_axes)
    double_blocks_9_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_9_add_9_output, double_blocks_9_txt_mlp_0_transpose_output)
    double_blocks_9_txt_mlp_0_output = add(double_blocks_9_txt_mlp_0_matrixmultiply_output, double_blocks_9_txt_mlp_0_bias)
    double_blocks_9_txt_mlp_gelu_output = gelu(double_blocks_9_txt_mlp_0_output, double_blocks_9_txt_mlp_gelu_approximate)
    double_blocks_9_txt_mlp_2_transpose_output = transpose(double_blocks_9_txt_mlp_2_weight, double_blocks_9_txt_mlp_2_transpose_axes)
    double_blocks_9_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_9_txt_mlp_gelu_output, double_blocks_9_txt_mlp_2_transpose_output)
    double_blocks_9_txt_mlp = add(double_blocks_9_txt_mlp_2_matrixmultiply_output, double_blocks_9_txt_mlp_2_bias)
    double_blocks_9_tensoritem_18_output = tensor_item(double_blocks_9_img_mod_split_2_output, double_blocks_9_tensoritem_18_index)
    double_blocks_9_multiply_6_output = multiplication(double_blocks_9_tensoritem_18_output, double_blocks_9_img_mlp)
    double_blocks_9_add_10_output = add(double_blocks_9_add_4_output, double_blocks_9_multiply_6_output)
    double_blocks_9_tensoritem_19_output = tensor_item(double_blocks_9_txt_mod_split_2_output, double_blocks_9_tensoritem_19_index)
    double_blocks_9_multiply_7_output = multiplication(double_blocks_9_tensoritem_19_output, double_blocks_9_txt_mlp)
    double_blocks_9_add_11_output = add(double_blocks_9_add_7_output, double_blocks_9_multiply_7_output)
    double_blocks_10_img_mod_silu_minus = minus(vec)
    double_blocks_10_img_mod_silu_exp = exp(double_blocks_10_img_mod_silu_minus)
    double_blocks_10_img_mod_silu_add = add(double_blocks_10_img_mod_silu_add_left, double_blocks_10_img_mod_silu_exp)
    double_blocks_10_img_mod_silu_output = divide(vec, double_blocks_10_img_mod_silu_add)
    double_blocks_10_img_mod_lin_transpose_output = transpose(double_blocks_10_img_mod_lin_weight, double_blocks_10_img_mod_lin_transpose_axes)
    double_blocks_10_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_10_img_mod_silu_output, double_blocks_10_img_mod_lin_transpose_output)
    double_blocks_10_img_mod_lin_out = add(double_blocks_10_img_mod_lin_matrixmultiply_output, double_blocks_10_img_mod_lin_bias)
    double_blocks_10_img_mod_tensoritem_0_output = tensor_item(double_blocks_10_img_mod_lin_out, double_blocks_10_img_mod_tensoritem_0_index)
    double_blocks_10_img_mod_split_0_output = split(double_blocks_10_img_mod_tensoritem_0_output, double_blocks_10_img_mod_split_0_split_size, double_blocks_10_img_mod_split_0_axis)
    double_blocks_10_img_mod_tensoritem_1_output = tensor_item(double_blocks_10_img_mod_split_0_output, double_blocks_10_img_mod_tensoritem_1_index)
    double_blocks_10_img_mod_split_1_output = split(double_blocks_10_img_mod_tensoritem_1_output, double_blocks_10_img_mod_split_1_split_size, double_blocks_10_img_mod_split_1_axis)
    double_blocks_10_img_mod_tensoritem_2_output = tensor_item(double_blocks_10_img_mod_split_0_output, double_blocks_10_img_mod_tensoritem_2_index)
    double_blocks_10_img_mod_split_2_output = split(double_blocks_10_img_mod_tensoritem_2_output, double_blocks_10_img_mod_split_2_split_size, double_blocks_10_img_mod_split_2_axis)
    double_blocks_10_img_norm1_mean_output = reduce_mean(double_blocks_9_add_10_output, axis=double_blocks_10_img_norm1_mean_axis, keepdim=double_blocks_10_img_norm1_mean_keepdim)
    double_blocks_10_img_norm1_subtract_output = subtract(double_blocks_9_add_10_output, double_blocks_10_img_norm1_mean_output)
    double_blocks_10_img_norm1_variance_output = variance(double_blocks_9_add_10_output, axis=double_blocks_10_img_norm1_variance_axis, keepdim=double_blocks_10_img_norm1_variance_keepdim, correction=double_blocks_10_img_norm1_variance_correction)
    double_blocks_10_img_norm1_add_output = add(double_blocks_10_img_norm1_variance_output, double_blocks_10_img_norm1_add_right)
    double_blocks_10_img_norm1_sqrt_output = sqrt(double_blocks_10_img_norm1_add_output)
    double_blocks_10_img_norm1_divide_output = divide(double_blocks_10_img_norm1_subtract_output, double_blocks_10_img_norm1_sqrt_output)
    double_blocks_10_tensoritem_0_output = tensor_item(double_blocks_10_img_mod_split_1_output, double_blocks_10_tensoritem_0_index)
    double_blocks_10_add_0_output = add(double_blocks_10_add_0_left, double_blocks_10_tensoritem_0_output)
    double_blocks_10_multiply_0_output = multiplication(double_blocks_10_add_0_output, double_blocks_10_img_norm1_divide_output)
    double_blocks_10_tensoritem_1_output = tensor_item(double_blocks_10_img_mod_split_1_output, double_blocks_10_tensoritem_1_index)
    double_blocks_10_add_1_output = add(double_blocks_10_multiply_0_output, double_blocks_10_tensoritem_1_output)
    double_blocks_10_img_attn_qkv_transpose_output = transpose(double_blocks_10_img_attn_qkv_weight, double_blocks_10_img_attn_qkv_transpose_axes)
    double_blocks_10_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_10_add_1_output, double_blocks_10_img_attn_qkv_transpose_output)
    double_blocks_10_img_qkv = add(double_blocks_10_img_attn_qkv_matrixmultiply_output, double_blocks_10_img_attn_qkv_bias)
    double_blocks_10_reshape_0_output = reshape(double_blocks_10_img_qkv, double_blocks_10_totuple_0_output)
    double_blocks_10_transpose_out = transpose(double_blocks_10_reshape_0_output, double_blocks_10_transpose_0_axes)
    double_blocks_10_tensoritem_2_output = tensor_item(double_blocks_10_transpose_out, double_blocks_10_tensoritem_2_index)
    double_blocks_10_tensoritem_3_output = tensor_item(double_blocks_10_transpose_out, double_blocks_10_tensoritem_3_index)
    double_blocks_10_img_attn_norm_query_norm_power_output = power(double_blocks_10_tensoritem_2_output, double_blocks_10_img_attn_norm_query_norm_power_exponent)
    double_blocks_10_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_10_img_attn_norm_query_norm_power_output, axis=double_blocks_10_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_10_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_10_img_attn_norm_query_norm_add_output = add(double_blocks_10_img_attn_norm_query_norm_mean_output, double_blocks_10_img_attn_norm_query_norm_add_right)
    double_blocks_10_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_10_img_attn_norm_query_norm_add_output)
    double_blocks_10_img_attn_norm_query_norm_divide_output = divide(double_blocks_10_img_attn_norm_query_norm_divide_numerator, double_blocks_10_img_attn_norm_query_norm_sqrt_output)
    double_blocks_10_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_10_tensoritem_2_output, double_blocks_10_img_attn_norm_query_norm_divide_output)
    double_blocks_10_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_10_img_attn_norm_query_norm_multiply_0_output, double_blocks_10_img_attn_norm_query_norm_scale)
    double_blocks_10_img_attn_norm_key_norm_power_output = power(double_blocks_10_tensoritem_3_output, double_blocks_10_img_attn_norm_key_norm_power_exponent)
    double_blocks_10_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_10_img_attn_norm_key_norm_power_output, axis=double_blocks_10_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_10_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_10_img_attn_norm_key_norm_add_output = add(double_blocks_10_img_attn_norm_key_norm_mean_output, double_blocks_10_img_attn_norm_key_norm_add_right)
    double_blocks_10_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_10_img_attn_norm_key_norm_add_output)
    double_blocks_10_img_attn_norm_key_norm_divide_output = divide(double_blocks_10_img_attn_norm_key_norm_divide_numerator, double_blocks_10_img_attn_norm_key_norm_sqrt_output)
    double_blocks_10_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_10_tensoritem_3_output, double_blocks_10_img_attn_norm_key_norm_divide_output)
    double_blocks_10_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_10_img_attn_norm_key_norm_multiply_0_output, double_blocks_10_img_attn_norm_key_norm_scale)
    double_blocks_10_txt_mod_silu_minus = minus(vec)
    double_blocks_10_txt_mod_silu_exp = exp(double_blocks_10_txt_mod_silu_minus)
    double_blocks_10_txt_mod_silu_add = add(double_blocks_10_txt_mod_silu_add_left, double_blocks_10_txt_mod_silu_exp)
    double_blocks_10_txt_mod_silu_output = divide(vec, double_blocks_10_txt_mod_silu_add)
    double_blocks_10_txt_mod_lin_transpose_output = transpose(double_blocks_10_txt_mod_lin_weight, double_blocks_10_txt_mod_lin_transpose_axes)
    double_blocks_10_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_10_txt_mod_silu_output, double_blocks_10_txt_mod_lin_transpose_output)
    double_blocks_10_txt_mod_lin_out = add(double_blocks_10_txt_mod_lin_matrixmultiply_output, double_blocks_10_txt_mod_lin_bias)
    double_blocks_10_txt_mod_tensoritem_0_output = tensor_item(double_blocks_10_txt_mod_lin_out, double_blocks_10_txt_mod_tensoritem_0_index)
    double_blocks_10_txt_mod_split_0_output = split(double_blocks_10_txt_mod_tensoritem_0_output, double_blocks_10_txt_mod_split_0_split_size, double_blocks_10_txt_mod_split_0_axis)
    double_blocks_10_txt_mod_tensoritem_1_output = tensor_item(double_blocks_10_txt_mod_split_0_output, double_blocks_10_txt_mod_tensoritem_1_index)
    double_blocks_10_txt_mod_split_1_output = split(double_blocks_10_txt_mod_tensoritem_1_output, double_blocks_10_txt_mod_split_1_split_size, double_blocks_10_txt_mod_split_1_axis)
    double_blocks_10_txt_mod_tensoritem_2_output = tensor_item(double_blocks_10_txt_mod_split_0_output, double_blocks_10_txt_mod_tensoritem_2_index)
    double_blocks_10_txt_mod_split_2_output = split(double_blocks_10_txt_mod_tensoritem_2_output, double_blocks_10_txt_mod_split_2_split_size, double_blocks_10_txt_mod_split_2_axis)
    double_blocks_10_txt_norm1_mean_output = reduce_mean(double_blocks_9_add_11_output, axis=double_blocks_10_txt_norm1_mean_axis, keepdim=double_blocks_10_txt_norm1_mean_keepdim)
    double_blocks_10_txt_norm1_subtract_output = subtract(double_blocks_9_add_11_output, double_blocks_10_txt_norm1_mean_output)
    double_blocks_10_txt_norm1_variance_output = variance(double_blocks_9_add_11_output, axis=double_blocks_10_txt_norm1_variance_axis, keepdim=double_blocks_10_txt_norm1_variance_keepdim, correction=double_blocks_10_txt_norm1_variance_correction)
    double_blocks_10_txt_norm1_add_output = add(double_blocks_10_txt_norm1_variance_output, double_blocks_10_txt_norm1_add_right)
    double_blocks_10_txt_norm1_sqrt_output = sqrt(double_blocks_10_txt_norm1_add_output)
    double_blocks_10_txt_norm1_divide_output = divide(double_blocks_10_txt_norm1_subtract_output, double_blocks_10_txt_norm1_sqrt_output)
    double_blocks_10_tensoritem_4_output = tensor_item(double_blocks_10_txt_mod_split_1_output, double_blocks_10_tensoritem_4_index)
    double_blocks_10_add_2_output = add(double_blocks_10_add_2_left, double_blocks_10_tensoritem_4_output)
    double_blocks_10_multiply_1_output = multiplication(double_blocks_10_add_2_output, double_blocks_10_txt_norm1_divide_output)
    double_blocks_10_tensoritem_5_output = tensor_item(double_blocks_10_txt_mod_split_1_output, double_blocks_10_tensoritem_5_index)
    double_blocks_10_add_3_output = add(double_blocks_10_multiply_1_output, double_blocks_10_tensoritem_5_output)
    double_blocks_10_txt_attn_qkv_transpose_output = transpose(double_blocks_10_txt_attn_qkv_weight, double_blocks_10_txt_attn_qkv_transpose_axes)
    double_blocks_10_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_10_add_3_output, double_blocks_10_txt_attn_qkv_transpose_output)
    double_blocks_10_txt_qkv = add(double_blocks_10_txt_attn_qkv_matrixmultiply_output, double_blocks_10_txt_attn_qkv_bias)
    double_blocks_10_reshape_1_output = reshape(double_blocks_10_txt_qkv, double_blocks_10_totuple_1_output)
    double_blocks_10_txt_transpose_out = transpose(double_blocks_10_reshape_1_output, double_blocks_10_transpose_1_axes)
    double_blocks_10_tensoritem_6_output = tensor_item(double_blocks_10_txt_transpose_out, double_blocks_10_tensoritem_6_index)
    double_blocks_10_tensoritem_7_output = tensor_item(double_blocks_10_txt_transpose_out, double_blocks_10_tensoritem_7_index)
    double_blocks_10_txt_attn_norm_query_norm_power_output = power(double_blocks_10_tensoritem_6_output, double_blocks_10_txt_attn_norm_query_norm_power_exponent)
    double_blocks_10_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_10_txt_attn_norm_query_norm_power_output, axis=double_blocks_10_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_10_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_10_txt_attn_norm_query_norm_add_output = add(double_blocks_10_txt_attn_norm_query_norm_mean_output, double_blocks_10_txt_attn_norm_query_norm_add_right)
    double_blocks_10_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_10_txt_attn_norm_query_norm_add_output)
    double_blocks_10_txt_attn_norm_query_norm_divide_output = divide(double_blocks_10_txt_attn_norm_query_norm_divide_numerator, double_blocks_10_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_10_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_10_tensoritem_6_output, double_blocks_10_txt_attn_norm_query_norm_divide_output)
    double_blocks_10_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_10_txt_attn_norm_query_norm_multiply_0_output, double_blocks_10_txt_attn_norm_query_norm_scale)
    double_blocks_10_txt_attn_norm_key_norm_power_output = power(double_blocks_10_tensoritem_7_output, double_blocks_10_txt_attn_norm_key_norm_power_exponent)
    double_blocks_10_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_10_txt_attn_norm_key_norm_power_output, axis=double_blocks_10_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_10_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_10_txt_attn_norm_key_norm_add_output = add(double_blocks_10_txt_attn_norm_key_norm_mean_output, double_blocks_10_txt_attn_norm_key_norm_add_right)
    double_blocks_10_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_10_txt_attn_norm_key_norm_add_output)
    double_blocks_10_txt_attn_norm_key_norm_divide_output = divide(double_blocks_10_txt_attn_norm_key_norm_divide_numerator, double_blocks_10_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_10_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_10_tensoritem_7_output, double_blocks_10_txt_attn_norm_key_norm_divide_output)
    double_blocks_10_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_10_txt_attn_norm_key_norm_multiply_0_output, double_blocks_10_txt_attn_norm_key_norm_scale)
    double_blocks_10_q_concat = concat(double_blocks_10_txt_attn_norm_query_norm_multiply_1_output, double_blocks_10_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_10_concat_0_axis)
    double_blocks_10_k_concat = concat(double_blocks_10_txt_attn_norm_key_norm_multiply_1_output, double_blocks_10_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_10_concat_1_axis)
    double_blocks_10_tensoritem_8_output = tensor_item(double_blocks_10_txt_transpose_out, double_blocks_10_tensoritem_8_index)
    double_blocks_10_tensoritem_9_output = tensor_item(double_blocks_10_transpose_out, double_blocks_10_tensoritem_9_index)
    double_blocks_10_v_concat = concat(double_blocks_10_tensoritem_8_output, double_blocks_10_tensoritem_9_output, axis=double_blocks_10_concat_2_axis)
    double_blocks_10_model_model_xq_ = reshape(double_blocks_10_q_concat, double_blocks_10_model_model_totuple_0_output)
    double_blocks_10_model_model_xk_ = reshape(double_blocks_10_k_concat, double_blocks_10_model_model_totuple_1_output)
    double_blocks_10_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_10_model_model_tensoritem_0_index)
    double_blocks_10_model_model_tensoritem_1_output = tensor_item(double_blocks_10_model_model_xq_, double_blocks_10_model_model_tensoritem_1_index)
    double_blocks_10_model_model_multiply_0_output = multiplication(double_blocks_10_model_model_tensoritem_0_output, double_blocks_10_model_model_tensoritem_1_output)
    double_blocks_10_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_10_model_model_tensoritem_2_index)
    double_blocks_10_model_model_tensoritem_3_output = tensor_item(double_blocks_10_model_model_xq_, double_blocks_10_model_model_tensoritem_3_index)
    double_blocks_10_model_model_multiply_1_output = multiplication(double_blocks_10_model_model_tensoritem_2_output, double_blocks_10_model_model_tensoritem_3_output)
    double_blocks_10_model_model_add_0_output = add(double_blocks_10_model_model_multiply_0_output, double_blocks_10_model_model_multiply_1_output)
    double_blocks_10_model_q_out = reshape(double_blocks_10_model_model_add_0_output, double_blocks_10_model_model_shape_0_output)
    double_blocks_10_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_10_model_model_tensoritem_4_index)
    double_blocks_10_model_model_tensoritem_5_output = tensor_item(double_blocks_10_model_model_xk_, double_blocks_10_model_model_tensoritem_5_index)
    double_blocks_10_model_model_multiply_2_output = multiplication(double_blocks_10_model_model_tensoritem_4_output, double_blocks_10_model_model_tensoritem_5_output)
    double_blocks_10_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_10_model_model_tensoritem_6_index)
    double_blocks_10_model_model_tensoritem_7_output = tensor_item(double_blocks_10_model_model_xk_, double_blocks_10_model_model_tensoritem_7_index)
    double_blocks_10_model_model_multiply_3_output = multiplication(double_blocks_10_model_model_tensoritem_6_output, double_blocks_10_model_model_tensoritem_7_output)
    double_blocks_10_model_model_add_1_output = add(double_blocks_10_model_model_multiply_2_output, double_blocks_10_model_model_multiply_3_output)
    double_blocks_10_model_k_out = reshape(double_blocks_10_model_model_add_1_output, double_blocks_10_model_model_shape_1_output)
    double_blocks_10_model_context = scaled_dot_product_attention(double_blocks_10_model_q_out, double_blocks_10_model_k_out, double_blocks_10_v_concat, double_blocks_10_model_scaleddotproduct_attn_mask)
    double_blocks_10_model_transpose_output = transpose(double_blocks_10_model_context, double_blocks_10_model_transpose_axes)
    double_blocks_10_attn = reshape(double_blocks_10_model_transpose_output, double_blocks_10_model_totuple_output)
    double_blocks_10_tensoritem_10_output = tensor_item(double_blocks_10_attn, double_blocks_10_tensoritem_10_index)
    double_blocks_10_img_attn_proj_transpose_output = transpose(double_blocks_10_img_attn_proj_weight, double_blocks_10_img_attn_proj_transpose_axes)
    double_blocks_10_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_10_tensoritem_10_output, double_blocks_10_img_attn_proj_transpose_output)
    double_blocks_10_img_proj = add(double_blocks_10_img_attn_proj_matrixmultiply_output, double_blocks_10_img_attn_proj_bias)
    double_blocks_10_tensoritem_11_output = tensor_item(double_blocks_10_img_mod_split_1_output, double_blocks_10_tensoritem_11_index)
    double_blocks_10_multiply_2_output = multiplication(double_blocks_10_tensoritem_11_output, double_blocks_10_img_proj)
    double_blocks_10_add_4_output = add(double_blocks_9_add_10_output, double_blocks_10_multiply_2_output)
    double_blocks_10_img_norm2_mean_output = reduce_mean(double_blocks_10_add_4_output, axis=double_blocks_10_img_norm2_mean_axis, keepdim=double_blocks_10_img_norm2_mean_keepdim)
    double_blocks_10_img_norm2_subtract_output = subtract(double_blocks_10_add_4_output, double_blocks_10_img_norm2_mean_output)
    double_blocks_10_img_norm2_variance_output = variance(double_blocks_10_add_4_output, axis=double_blocks_10_img_norm2_variance_axis, keepdim=double_blocks_10_img_norm2_variance_keepdim, correction=double_blocks_10_img_norm2_variance_correction)
    double_blocks_10_img_norm2_add_output = add(double_blocks_10_img_norm2_variance_output, double_blocks_10_img_norm2_add_right)
    double_blocks_10_img_norm2_sqrt_output = sqrt(double_blocks_10_img_norm2_add_output)
    double_blocks_10_img_norm2_divide_output = divide(double_blocks_10_img_norm2_subtract_output, double_blocks_10_img_norm2_sqrt_output)
    double_blocks_10_tensoritem_12_output = tensor_item(double_blocks_10_img_mod_split_2_output, double_blocks_10_tensoritem_12_index)
    double_blocks_10_add_5_output = add(double_blocks_10_add_5_left, double_blocks_10_tensoritem_12_output)
    double_blocks_10_multiply_3_output = multiplication(double_blocks_10_add_5_output, double_blocks_10_img_norm2_divide_output)
    double_blocks_10_tensoritem_13_output = tensor_item(double_blocks_10_img_mod_split_2_output, double_blocks_10_tensoritem_13_index)
    double_blocks_10_add_6_output = add(double_blocks_10_multiply_3_output, double_blocks_10_tensoritem_13_output)
    double_blocks_10_img_mlp_0_transpose_output = transpose(double_blocks_10_img_mlp_0_weight, double_blocks_10_img_mlp_0_transpose_axes)
    double_blocks_10_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_10_add_6_output, double_blocks_10_img_mlp_0_transpose_output)
    double_blocks_10_img_mlp_0_output = add(double_blocks_10_img_mlp_0_matrixmultiply_output, double_blocks_10_img_mlp_0_bias)
    double_blocks_10_img_mlp_gelu_output = gelu(double_blocks_10_img_mlp_0_output, double_blocks_10_img_mlp_gelu_approximate)
    double_blocks_10_img_mlp_2_transpose_output = transpose(double_blocks_10_img_mlp_2_weight, double_blocks_10_img_mlp_2_transpose_axes)
    double_blocks_10_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_10_img_mlp_gelu_output, double_blocks_10_img_mlp_2_transpose_output)
    double_blocks_10_img_mlp = add(double_blocks_10_img_mlp_2_matrixmultiply_output, double_blocks_10_img_mlp_2_bias)
    double_blocks_10_tensoritem_14_output = tensor_item(double_blocks_10_attn, double_blocks_10_tensoritem_14_index)
    double_blocks_10_txt_attn_proj_transpose_output = transpose(double_blocks_10_txt_attn_proj_weight, double_blocks_10_txt_attn_proj_transpose_axes)
    double_blocks_10_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_10_tensoritem_14_output, double_blocks_10_txt_attn_proj_transpose_output)
    double_blocks_10_txt_proj = add(double_blocks_10_txt_attn_proj_matrixmultiply_output, double_blocks_10_txt_attn_proj_bias)
    double_blocks_10_tensoritem_15_output = tensor_item(double_blocks_10_txt_mod_split_1_output, double_blocks_10_tensoritem_15_index)
    double_blocks_10_multiply_4_output = multiplication(double_blocks_10_tensoritem_15_output, double_blocks_10_txt_proj)
    double_blocks_10_add_7_output = add(double_blocks_9_add_11_output, double_blocks_10_multiply_4_output)
    double_blocks_10_txt_norm2_mean_output = reduce_mean(double_blocks_10_add_7_output, axis=double_blocks_10_txt_norm2_mean_axis, keepdim=double_blocks_10_txt_norm2_mean_keepdim)
    double_blocks_10_txt_norm2_subtract_output = subtract(double_blocks_10_add_7_output, double_blocks_10_txt_norm2_mean_output)
    double_blocks_10_txt_norm2_variance_output = variance(double_blocks_10_add_7_output, axis=double_blocks_10_txt_norm2_variance_axis, keepdim=double_blocks_10_txt_norm2_variance_keepdim, correction=double_blocks_10_txt_norm2_variance_correction)
    double_blocks_10_txt_norm2_add_output = add(double_blocks_10_txt_norm2_variance_output, double_blocks_10_txt_norm2_add_right)
    double_blocks_10_txt_norm2_sqrt_output = sqrt(double_blocks_10_txt_norm2_add_output)
    double_blocks_10_txt_norm2_divide_output = divide(double_blocks_10_txt_norm2_subtract_output, double_blocks_10_txt_norm2_sqrt_output)
    double_blocks_10_tensoritem_16_output = tensor_item(double_blocks_10_txt_mod_split_2_output, double_blocks_10_tensoritem_16_index)
    double_blocks_10_add_8_output = add(double_blocks_10_add_8_left, double_blocks_10_tensoritem_16_output)
    double_blocks_10_multiply_5_output = multiplication(double_blocks_10_add_8_output, double_blocks_10_txt_norm2_divide_output)
    double_blocks_10_tensoritem_17_output = tensor_item(double_blocks_10_txt_mod_split_2_output, double_blocks_10_tensoritem_17_index)
    double_blocks_10_add_9_output = add(double_blocks_10_multiply_5_output, double_blocks_10_tensoritem_17_output)
    double_blocks_10_txt_mlp_0_transpose_output = transpose(double_blocks_10_txt_mlp_0_weight, double_blocks_10_txt_mlp_0_transpose_axes)
    double_blocks_10_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_10_add_9_output, double_blocks_10_txt_mlp_0_transpose_output)
    double_blocks_10_txt_mlp_0_output = add(double_blocks_10_txt_mlp_0_matrixmultiply_output, double_blocks_10_txt_mlp_0_bias)
    double_blocks_10_txt_mlp_gelu_output = gelu(double_blocks_10_txt_mlp_0_output, double_blocks_10_txt_mlp_gelu_approximate)
    double_blocks_10_txt_mlp_2_transpose_output = transpose(double_blocks_10_txt_mlp_2_weight, double_blocks_10_txt_mlp_2_transpose_axes)
    double_blocks_10_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_10_txt_mlp_gelu_output, double_blocks_10_txt_mlp_2_transpose_output)
    double_blocks_10_txt_mlp = add(double_blocks_10_txt_mlp_2_matrixmultiply_output, double_blocks_10_txt_mlp_2_bias)
    double_blocks_10_tensoritem_18_output = tensor_item(double_blocks_10_img_mod_split_2_output, double_blocks_10_tensoritem_18_index)
    double_blocks_10_multiply_6_output = multiplication(double_blocks_10_tensoritem_18_output, double_blocks_10_img_mlp)
    double_blocks_10_add_10_output = add(double_blocks_10_add_4_output, double_blocks_10_multiply_6_output)
    double_blocks_10_tensoritem_19_output = tensor_item(double_blocks_10_txt_mod_split_2_output, double_blocks_10_tensoritem_19_index)
    double_blocks_10_multiply_7_output = multiplication(double_blocks_10_tensoritem_19_output, double_blocks_10_txt_mlp)
    double_blocks_10_add_11_output = add(double_blocks_10_add_7_output, double_blocks_10_multiply_7_output)
    double_blocks_11_img_mod_silu_minus = minus(vec)
    double_blocks_11_img_mod_silu_exp = exp(double_blocks_11_img_mod_silu_minus)
    double_blocks_11_img_mod_silu_add = add(double_blocks_11_img_mod_silu_add_left, double_blocks_11_img_mod_silu_exp)
    double_blocks_11_img_mod_silu_output = divide(vec, double_blocks_11_img_mod_silu_add)
    double_blocks_11_img_mod_lin_transpose_output = transpose(double_blocks_11_img_mod_lin_weight, double_blocks_11_img_mod_lin_transpose_axes)
    double_blocks_11_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_11_img_mod_silu_output, double_blocks_11_img_mod_lin_transpose_output)
    double_blocks_11_img_mod_lin_out = add(double_blocks_11_img_mod_lin_matrixmultiply_output, double_blocks_11_img_mod_lin_bias)
    double_blocks_11_img_mod_tensoritem_0_output = tensor_item(double_blocks_11_img_mod_lin_out, double_blocks_11_img_mod_tensoritem_0_index)
    double_blocks_11_img_mod_split_0_output = split(double_blocks_11_img_mod_tensoritem_0_output, double_blocks_11_img_mod_split_0_split_size, double_blocks_11_img_mod_split_0_axis)
    double_blocks_11_img_mod_tensoritem_1_output = tensor_item(double_blocks_11_img_mod_split_0_output, double_blocks_11_img_mod_tensoritem_1_index)
    double_blocks_11_img_mod_split_1_output = split(double_blocks_11_img_mod_tensoritem_1_output, double_blocks_11_img_mod_split_1_split_size, double_blocks_11_img_mod_split_1_axis)
    double_blocks_11_img_mod_tensoritem_2_output = tensor_item(double_blocks_11_img_mod_split_0_output, double_blocks_11_img_mod_tensoritem_2_index)
    double_blocks_11_img_mod_split_2_output = split(double_blocks_11_img_mod_tensoritem_2_output, double_blocks_11_img_mod_split_2_split_size, double_blocks_11_img_mod_split_2_axis)
    double_blocks_11_img_norm1_mean_output = reduce_mean(double_blocks_10_add_10_output, axis=double_blocks_11_img_norm1_mean_axis, keepdim=double_blocks_11_img_norm1_mean_keepdim)
    double_blocks_11_img_norm1_subtract_output = subtract(double_blocks_10_add_10_output, double_blocks_11_img_norm1_mean_output)
    double_blocks_11_img_norm1_variance_output = variance(double_blocks_10_add_10_output, axis=double_blocks_11_img_norm1_variance_axis, keepdim=double_blocks_11_img_norm1_variance_keepdim, correction=double_blocks_11_img_norm1_variance_correction)
    double_blocks_11_img_norm1_add_output = add(double_blocks_11_img_norm1_variance_output, double_blocks_11_img_norm1_add_right)
    double_blocks_11_img_norm1_sqrt_output = sqrt(double_blocks_11_img_norm1_add_output)
    double_blocks_11_img_norm1_divide_output = divide(double_blocks_11_img_norm1_subtract_output, double_blocks_11_img_norm1_sqrt_output)
    double_blocks_11_tensoritem_0_output = tensor_item(double_blocks_11_img_mod_split_1_output, double_blocks_11_tensoritem_0_index)
    double_blocks_11_add_0_output = add(double_blocks_11_add_0_left, double_blocks_11_tensoritem_0_output)
    double_blocks_11_multiply_0_output = multiplication(double_blocks_11_add_0_output, double_blocks_11_img_norm1_divide_output)
    double_blocks_11_tensoritem_1_output = tensor_item(double_blocks_11_img_mod_split_1_output, double_blocks_11_tensoritem_1_index)
    double_blocks_11_add_1_output = add(double_blocks_11_multiply_0_output, double_blocks_11_tensoritem_1_output)
    double_blocks_11_img_attn_qkv_transpose_output = transpose(double_blocks_11_img_attn_qkv_weight, double_blocks_11_img_attn_qkv_transpose_axes)
    double_blocks_11_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_11_add_1_output, double_blocks_11_img_attn_qkv_transpose_output)
    double_blocks_11_img_qkv = add(double_blocks_11_img_attn_qkv_matrixmultiply_output, double_blocks_11_img_attn_qkv_bias)
    double_blocks_11_reshape_0_output = reshape(double_blocks_11_img_qkv, double_blocks_11_totuple_0_output)
    double_blocks_11_transpose_out = transpose(double_blocks_11_reshape_0_output, double_blocks_11_transpose_0_axes)
    double_blocks_11_tensoritem_2_output = tensor_item(double_blocks_11_transpose_out, double_blocks_11_tensoritem_2_index)
    double_blocks_11_tensoritem_3_output = tensor_item(double_blocks_11_transpose_out, double_blocks_11_tensoritem_3_index)
    double_blocks_11_img_attn_norm_query_norm_power_output = power(double_blocks_11_tensoritem_2_output, double_blocks_11_img_attn_norm_query_norm_power_exponent)
    double_blocks_11_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_11_img_attn_norm_query_norm_power_output, axis=double_blocks_11_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_11_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_11_img_attn_norm_query_norm_add_output = add(double_blocks_11_img_attn_norm_query_norm_mean_output, double_blocks_11_img_attn_norm_query_norm_add_right)
    double_blocks_11_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_11_img_attn_norm_query_norm_add_output)
    double_blocks_11_img_attn_norm_query_norm_divide_output = divide(double_blocks_11_img_attn_norm_query_norm_divide_numerator, double_blocks_11_img_attn_norm_query_norm_sqrt_output)
    double_blocks_11_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_11_tensoritem_2_output, double_blocks_11_img_attn_norm_query_norm_divide_output)
    double_blocks_11_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_11_img_attn_norm_query_norm_multiply_0_output, double_blocks_11_img_attn_norm_query_norm_scale)
    double_blocks_11_img_attn_norm_key_norm_power_output = power(double_blocks_11_tensoritem_3_output, double_blocks_11_img_attn_norm_key_norm_power_exponent)
    double_blocks_11_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_11_img_attn_norm_key_norm_power_output, axis=double_blocks_11_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_11_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_11_img_attn_norm_key_norm_add_output = add(double_blocks_11_img_attn_norm_key_norm_mean_output, double_blocks_11_img_attn_norm_key_norm_add_right)
    double_blocks_11_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_11_img_attn_norm_key_norm_add_output)
    double_blocks_11_img_attn_norm_key_norm_divide_output = divide(double_blocks_11_img_attn_norm_key_norm_divide_numerator, double_blocks_11_img_attn_norm_key_norm_sqrt_output)
    double_blocks_11_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_11_tensoritem_3_output, double_blocks_11_img_attn_norm_key_norm_divide_output)
    double_blocks_11_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_11_img_attn_norm_key_norm_multiply_0_output, double_blocks_11_img_attn_norm_key_norm_scale)
    double_blocks_11_txt_mod_silu_minus = minus(vec)
    double_blocks_11_txt_mod_silu_exp = exp(double_blocks_11_txt_mod_silu_minus)
    double_blocks_11_txt_mod_silu_add = add(double_blocks_11_txt_mod_silu_add_left, double_blocks_11_txt_mod_silu_exp)
    double_blocks_11_txt_mod_silu_output = divide(vec, double_blocks_11_txt_mod_silu_add)
    double_blocks_11_txt_mod_lin_transpose_output = transpose(double_blocks_11_txt_mod_lin_weight, double_blocks_11_txt_mod_lin_transpose_axes)
    double_blocks_11_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_11_txt_mod_silu_output, double_blocks_11_txt_mod_lin_transpose_output)
    double_blocks_11_txt_mod_lin_out = add(double_blocks_11_txt_mod_lin_matrixmultiply_output, double_blocks_11_txt_mod_lin_bias)
    double_blocks_11_txt_mod_tensoritem_0_output = tensor_item(double_blocks_11_txt_mod_lin_out, double_blocks_11_txt_mod_tensoritem_0_index)
    double_blocks_11_txt_mod_split_0_output = split(double_blocks_11_txt_mod_tensoritem_0_output, double_blocks_11_txt_mod_split_0_split_size, double_blocks_11_txt_mod_split_0_axis)
    double_blocks_11_txt_mod_tensoritem_1_output = tensor_item(double_blocks_11_txt_mod_split_0_output, double_blocks_11_txt_mod_tensoritem_1_index)
    double_blocks_11_txt_mod_split_1_output = split(double_blocks_11_txt_mod_tensoritem_1_output, double_blocks_11_txt_mod_split_1_split_size, double_blocks_11_txt_mod_split_1_axis)
    double_blocks_11_txt_mod_tensoritem_2_output = tensor_item(double_blocks_11_txt_mod_split_0_output, double_blocks_11_txt_mod_tensoritem_2_index)
    double_blocks_11_txt_mod_split_2_output = split(double_blocks_11_txt_mod_tensoritem_2_output, double_blocks_11_txt_mod_split_2_split_size, double_blocks_11_txt_mod_split_2_axis)
    double_blocks_11_txt_norm1_mean_output = reduce_mean(double_blocks_10_add_11_output, axis=double_blocks_11_txt_norm1_mean_axis, keepdim=double_blocks_11_txt_norm1_mean_keepdim)
    double_blocks_11_txt_norm1_subtract_output = subtract(double_blocks_10_add_11_output, double_blocks_11_txt_norm1_mean_output)
    double_blocks_11_txt_norm1_variance_output = variance(double_blocks_10_add_11_output, axis=double_blocks_11_txt_norm1_variance_axis, keepdim=double_blocks_11_txt_norm1_variance_keepdim, correction=double_blocks_11_txt_norm1_variance_correction)
    double_blocks_11_txt_norm1_add_output = add(double_blocks_11_txt_norm1_variance_output, double_blocks_11_txt_norm1_add_right)
    double_blocks_11_txt_norm1_sqrt_output = sqrt(double_blocks_11_txt_norm1_add_output)
    double_blocks_11_txt_norm1_divide_output = divide(double_blocks_11_txt_norm1_subtract_output, double_blocks_11_txt_norm1_sqrt_output)
    double_blocks_11_tensoritem_4_output = tensor_item(double_blocks_11_txt_mod_split_1_output, double_blocks_11_tensoritem_4_index)
    double_blocks_11_add_2_output = add(double_blocks_11_add_2_left, double_blocks_11_tensoritem_4_output)
    double_blocks_11_multiply_1_output = multiplication(double_blocks_11_add_2_output, double_blocks_11_txt_norm1_divide_output)
    double_blocks_11_tensoritem_5_output = tensor_item(double_blocks_11_txt_mod_split_1_output, double_blocks_11_tensoritem_5_index)
    double_blocks_11_add_3_output = add(double_blocks_11_multiply_1_output, double_blocks_11_tensoritem_5_output)
    double_blocks_11_txt_attn_qkv_transpose_output = transpose(double_blocks_11_txt_attn_qkv_weight, double_blocks_11_txt_attn_qkv_transpose_axes)
    double_blocks_11_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_11_add_3_output, double_blocks_11_txt_attn_qkv_transpose_output)
    double_blocks_11_txt_qkv = add(double_blocks_11_txt_attn_qkv_matrixmultiply_output, double_blocks_11_txt_attn_qkv_bias)
    double_blocks_11_reshape_1_output = reshape(double_blocks_11_txt_qkv, double_blocks_11_totuple_1_output)
    double_blocks_11_txt_transpose_out = transpose(double_blocks_11_reshape_1_output, double_blocks_11_transpose_1_axes)
    double_blocks_11_tensoritem_6_output = tensor_item(double_blocks_11_txt_transpose_out, double_blocks_11_tensoritem_6_index)
    double_blocks_11_tensoritem_7_output = tensor_item(double_blocks_11_txt_transpose_out, double_blocks_11_tensoritem_7_index)
    double_blocks_11_txt_attn_norm_query_norm_power_output = power(double_blocks_11_tensoritem_6_output, double_blocks_11_txt_attn_norm_query_norm_power_exponent)
    double_blocks_11_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_11_txt_attn_norm_query_norm_power_output, axis=double_blocks_11_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_11_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_11_txt_attn_norm_query_norm_add_output = add(double_blocks_11_txt_attn_norm_query_norm_mean_output, double_blocks_11_txt_attn_norm_query_norm_add_right)
    double_blocks_11_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_11_txt_attn_norm_query_norm_add_output)
    double_blocks_11_txt_attn_norm_query_norm_divide_output = divide(double_blocks_11_txt_attn_norm_query_norm_divide_numerator, double_blocks_11_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_11_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_11_tensoritem_6_output, double_blocks_11_txt_attn_norm_query_norm_divide_output)
    double_blocks_11_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_11_txt_attn_norm_query_norm_multiply_0_output, double_blocks_11_txt_attn_norm_query_norm_scale)
    double_blocks_11_txt_attn_norm_key_norm_power_output = power(double_blocks_11_tensoritem_7_output, double_blocks_11_txt_attn_norm_key_norm_power_exponent)
    double_blocks_11_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_11_txt_attn_norm_key_norm_power_output, axis=double_blocks_11_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_11_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_11_txt_attn_norm_key_norm_add_output = add(double_blocks_11_txt_attn_norm_key_norm_mean_output, double_blocks_11_txt_attn_norm_key_norm_add_right)
    double_blocks_11_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_11_txt_attn_norm_key_norm_add_output)
    double_blocks_11_txt_attn_norm_key_norm_divide_output = divide(double_blocks_11_txt_attn_norm_key_norm_divide_numerator, double_blocks_11_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_11_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_11_tensoritem_7_output, double_blocks_11_txt_attn_norm_key_norm_divide_output)
    double_blocks_11_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_11_txt_attn_norm_key_norm_multiply_0_output, double_blocks_11_txt_attn_norm_key_norm_scale)
    double_blocks_11_q_concat = concat(double_blocks_11_txt_attn_norm_query_norm_multiply_1_output, double_blocks_11_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_11_concat_0_axis)
    double_blocks_11_k_concat = concat(double_blocks_11_txt_attn_norm_key_norm_multiply_1_output, double_blocks_11_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_11_concat_1_axis)
    double_blocks_11_tensoritem_8_output = tensor_item(double_blocks_11_txt_transpose_out, double_blocks_11_tensoritem_8_index)
    double_blocks_11_tensoritem_9_output = tensor_item(double_blocks_11_transpose_out, double_blocks_11_tensoritem_9_index)
    double_blocks_11_v_concat = concat(double_blocks_11_tensoritem_8_output, double_blocks_11_tensoritem_9_output, axis=double_blocks_11_concat_2_axis)
    double_blocks_11_model_model_xq_ = reshape(double_blocks_11_q_concat, double_blocks_11_model_model_totuple_0_output)
    double_blocks_11_model_model_xk_ = reshape(double_blocks_11_k_concat, double_blocks_11_model_model_totuple_1_output)
    double_blocks_11_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_11_model_model_tensoritem_0_index)
    double_blocks_11_model_model_tensoritem_1_output = tensor_item(double_blocks_11_model_model_xq_, double_blocks_11_model_model_tensoritem_1_index)
    double_blocks_11_model_model_multiply_0_output = multiplication(double_blocks_11_model_model_tensoritem_0_output, double_blocks_11_model_model_tensoritem_1_output)
    double_blocks_11_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_11_model_model_tensoritem_2_index)
    double_blocks_11_model_model_tensoritem_3_output = tensor_item(double_blocks_11_model_model_xq_, double_blocks_11_model_model_tensoritem_3_index)
    double_blocks_11_model_model_multiply_1_output = multiplication(double_blocks_11_model_model_tensoritem_2_output, double_blocks_11_model_model_tensoritem_3_output)
    double_blocks_11_model_model_add_0_output = add(double_blocks_11_model_model_multiply_0_output, double_blocks_11_model_model_multiply_1_output)
    double_blocks_11_model_q_out = reshape(double_blocks_11_model_model_add_0_output, double_blocks_11_model_model_shape_0_output)
    double_blocks_11_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_11_model_model_tensoritem_4_index)
    double_blocks_11_model_model_tensoritem_5_output = tensor_item(double_blocks_11_model_model_xk_, double_blocks_11_model_model_tensoritem_5_index)
    double_blocks_11_model_model_multiply_2_output = multiplication(double_blocks_11_model_model_tensoritem_4_output, double_blocks_11_model_model_tensoritem_5_output)
    double_blocks_11_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_11_model_model_tensoritem_6_index)
    double_blocks_11_model_model_tensoritem_7_output = tensor_item(double_blocks_11_model_model_xk_, double_blocks_11_model_model_tensoritem_7_index)
    double_blocks_11_model_model_multiply_3_output = multiplication(double_blocks_11_model_model_tensoritem_6_output, double_blocks_11_model_model_tensoritem_7_output)
    double_blocks_11_model_model_add_1_output = add(double_blocks_11_model_model_multiply_2_output, double_blocks_11_model_model_multiply_3_output)
    double_blocks_11_model_k_out = reshape(double_blocks_11_model_model_add_1_output, double_blocks_11_model_model_shape_1_output)
    double_blocks_11_model_context = scaled_dot_product_attention(double_blocks_11_model_q_out, double_blocks_11_model_k_out, double_blocks_11_v_concat, double_blocks_11_model_scaleddotproduct_attn_mask)
    double_blocks_11_model_transpose_output = transpose(double_blocks_11_model_context, double_blocks_11_model_transpose_axes)
    double_blocks_11_attn = reshape(double_blocks_11_model_transpose_output, double_blocks_11_model_totuple_output)
    double_blocks_11_tensoritem_10_output = tensor_item(double_blocks_11_attn, double_blocks_11_tensoritem_10_index)
    double_blocks_11_img_attn_proj_transpose_output = transpose(double_blocks_11_img_attn_proj_weight, double_blocks_11_img_attn_proj_transpose_axes)
    double_blocks_11_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_11_tensoritem_10_output, double_blocks_11_img_attn_proj_transpose_output)
    double_blocks_11_img_proj = add(double_blocks_11_img_attn_proj_matrixmultiply_output, double_blocks_11_img_attn_proj_bias)
    double_blocks_11_tensoritem_11_output = tensor_item(double_blocks_11_img_mod_split_1_output, double_blocks_11_tensoritem_11_index)
    double_blocks_11_multiply_2_output = multiplication(double_blocks_11_tensoritem_11_output, double_blocks_11_img_proj)
    double_blocks_11_add_4_output = add(double_blocks_10_add_10_output, double_blocks_11_multiply_2_output)
    double_blocks_11_img_norm2_mean_output = reduce_mean(double_blocks_11_add_4_output, axis=double_blocks_11_img_norm2_mean_axis, keepdim=double_blocks_11_img_norm2_mean_keepdim)
    double_blocks_11_img_norm2_subtract_output = subtract(double_blocks_11_add_4_output, double_blocks_11_img_norm2_mean_output)
    double_blocks_11_img_norm2_variance_output = variance(double_blocks_11_add_4_output, axis=double_blocks_11_img_norm2_variance_axis, keepdim=double_blocks_11_img_norm2_variance_keepdim, correction=double_blocks_11_img_norm2_variance_correction)
    double_blocks_11_img_norm2_add_output = add(double_blocks_11_img_norm2_variance_output, double_blocks_11_img_norm2_add_right)
    double_blocks_11_img_norm2_sqrt_output = sqrt(double_blocks_11_img_norm2_add_output)
    double_blocks_11_img_norm2_divide_output = divide(double_blocks_11_img_norm2_subtract_output, double_blocks_11_img_norm2_sqrt_output)
    double_blocks_11_tensoritem_12_output = tensor_item(double_blocks_11_img_mod_split_2_output, double_blocks_11_tensoritem_12_index)
    double_blocks_11_add_5_output = add(double_blocks_11_add_5_left, double_blocks_11_tensoritem_12_output)
    double_blocks_11_multiply_3_output = multiplication(double_blocks_11_add_5_output, double_blocks_11_img_norm2_divide_output)
    double_blocks_11_tensoritem_13_output = tensor_item(double_blocks_11_img_mod_split_2_output, double_blocks_11_tensoritem_13_index)
    double_blocks_11_add_6_output = add(double_blocks_11_multiply_3_output, double_blocks_11_tensoritem_13_output)
    double_blocks_11_img_mlp_0_transpose_output = transpose(double_blocks_11_img_mlp_0_weight, double_blocks_11_img_mlp_0_transpose_axes)
    double_blocks_11_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_11_add_6_output, double_blocks_11_img_mlp_0_transpose_output)
    double_blocks_11_img_mlp_0_output = add(double_blocks_11_img_mlp_0_matrixmultiply_output, double_blocks_11_img_mlp_0_bias)
    double_blocks_11_img_mlp_gelu_output = gelu(double_blocks_11_img_mlp_0_output, double_blocks_11_img_mlp_gelu_approximate)
    double_blocks_11_img_mlp_2_transpose_output = transpose(double_blocks_11_img_mlp_2_weight, double_blocks_11_img_mlp_2_transpose_axes)
    double_blocks_11_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_11_img_mlp_gelu_output, double_blocks_11_img_mlp_2_transpose_output)
    double_blocks_11_img_mlp = add(double_blocks_11_img_mlp_2_matrixmultiply_output, double_blocks_11_img_mlp_2_bias)
    double_blocks_11_tensoritem_14_output = tensor_item(double_blocks_11_attn, double_blocks_11_tensoritem_14_index)
    double_blocks_11_txt_attn_proj_transpose_output = transpose(double_blocks_11_txt_attn_proj_weight, double_blocks_11_txt_attn_proj_transpose_axes)
    double_blocks_11_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_11_tensoritem_14_output, double_blocks_11_txt_attn_proj_transpose_output)
    double_blocks_11_txt_proj = add(double_blocks_11_txt_attn_proj_matrixmultiply_output, double_blocks_11_txt_attn_proj_bias)
    double_blocks_11_tensoritem_15_output = tensor_item(double_blocks_11_txt_mod_split_1_output, double_blocks_11_tensoritem_15_index)
    double_blocks_11_multiply_4_output = multiplication(double_blocks_11_tensoritem_15_output, double_blocks_11_txt_proj)
    double_blocks_11_add_7_output = add(double_blocks_10_add_11_output, double_blocks_11_multiply_4_output)
    double_blocks_11_txt_norm2_mean_output = reduce_mean(double_blocks_11_add_7_output, axis=double_blocks_11_txt_norm2_mean_axis, keepdim=double_blocks_11_txt_norm2_mean_keepdim)
    double_blocks_11_txt_norm2_subtract_output = subtract(double_blocks_11_add_7_output, double_blocks_11_txt_norm2_mean_output)
    double_blocks_11_txt_norm2_variance_output = variance(double_blocks_11_add_7_output, axis=double_blocks_11_txt_norm2_variance_axis, keepdim=double_blocks_11_txt_norm2_variance_keepdim, correction=double_blocks_11_txt_norm2_variance_correction)
    double_blocks_11_txt_norm2_add_output = add(double_blocks_11_txt_norm2_variance_output, double_blocks_11_txt_norm2_add_right)
    double_blocks_11_txt_norm2_sqrt_output = sqrt(double_blocks_11_txt_norm2_add_output)
    double_blocks_11_txt_norm2_divide_output = divide(double_blocks_11_txt_norm2_subtract_output, double_blocks_11_txt_norm2_sqrt_output)
    double_blocks_11_tensoritem_16_output = tensor_item(double_blocks_11_txt_mod_split_2_output, double_blocks_11_tensoritem_16_index)
    double_blocks_11_add_8_output = add(double_blocks_11_add_8_left, double_blocks_11_tensoritem_16_output)
    double_blocks_11_multiply_5_output = multiplication(double_blocks_11_add_8_output, double_blocks_11_txt_norm2_divide_output)
    double_blocks_11_tensoritem_17_output = tensor_item(double_blocks_11_txt_mod_split_2_output, double_blocks_11_tensoritem_17_index)
    double_blocks_11_add_9_output = add(double_blocks_11_multiply_5_output, double_blocks_11_tensoritem_17_output)
    double_blocks_11_txt_mlp_0_transpose_output = transpose(double_blocks_11_txt_mlp_0_weight, double_blocks_11_txt_mlp_0_transpose_axes)
    double_blocks_11_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_11_add_9_output, double_blocks_11_txt_mlp_0_transpose_output)
    double_blocks_11_txt_mlp_0_output = add(double_blocks_11_txt_mlp_0_matrixmultiply_output, double_blocks_11_txt_mlp_0_bias)
    double_blocks_11_txt_mlp_gelu_output = gelu(double_blocks_11_txt_mlp_0_output, double_blocks_11_txt_mlp_gelu_approximate)
    double_blocks_11_txt_mlp_2_transpose_output = transpose(double_blocks_11_txt_mlp_2_weight, double_blocks_11_txt_mlp_2_transpose_axes)
    double_blocks_11_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_11_txt_mlp_gelu_output, double_blocks_11_txt_mlp_2_transpose_output)
    double_blocks_11_txt_mlp = add(double_blocks_11_txt_mlp_2_matrixmultiply_output, double_blocks_11_txt_mlp_2_bias)
    double_blocks_11_tensoritem_18_output = tensor_item(double_blocks_11_img_mod_split_2_output, double_blocks_11_tensoritem_18_index)
    double_blocks_11_multiply_6_output = multiplication(double_blocks_11_tensoritem_18_output, double_blocks_11_img_mlp)
    double_blocks_11_add_10_output = add(double_blocks_11_add_4_output, double_blocks_11_multiply_6_output)
    double_blocks_11_tensoritem_19_output = tensor_item(double_blocks_11_txt_mod_split_2_output, double_blocks_11_tensoritem_19_index)
    double_blocks_11_multiply_7_output = multiplication(double_blocks_11_tensoritem_19_output, double_blocks_11_txt_mlp)
    double_blocks_11_add_11_output = add(double_blocks_11_add_7_output, double_blocks_11_multiply_7_output)
    double_blocks_12_img_mod_silu_minus = minus(vec)
    double_blocks_12_img_mod_silu_exp = exp(double_blocks_12_img_mod_silu_minus)
    double_blocks_12_img_mod_silu_add = add(double_blocks_12_img_mod_silu_add_left, double_blocks_12_img_mod_silu_exp)
    double_blocks_12_img_mod_silu_output = divide(vec, double_blocks_12_img_mod_silu_add)
    double_blocks_12_img_mod_lin_transpose_output = transpose(double_blocks_12_img_mod_lin_weight, double_blocks_12_img_mod_lin_transpose_axes)
    double_blocks_12_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_12_img_mod_silu_output, double_blocks_12_img_mod_lin_transpose_output)
    double_blocks_12_img_mod_lin_out = add(double_blocks_12_img_mod_lin_matrixmultiply_output, double_blocks_12_img_mod_lin_bias)
    double_blocks_12_img_mod_tensoritem_0_output = tensor_item(double_blocks_12_img_mod_lin_out, double_blocks_12_img_mod_tensoritem_0_index)
    double_blocks_12_img_mod_split_0_output = split(double_blocks_12_img_mod_tensoritem_0_output, double_blocks_12_img_mod_split_0_split_size, double_blocks_12_img_mod_split_0_axis)
    double_blocks_12_img_mod_tensoritem_1_output = tensor_item(double_blocks_12_img_mod_split_0_output, double_blocks_12_img_mod_tensoritem_1_index)
    double_blocks_12_img_mod_split_1_output = split(double_blocks_12_img_mod_tensoritem_1_output, double_blocks_12_img_mod_split_1_split_size, double_blocks_12_img_mod_split_1_axis)
    double_blocks_12_img_mod_tensoritem_2_output = tensor_item(double_blocks_12_img_mod_split_0_output, double_blocks_12_img_mod_tensoritem_2_index)
    double_blocks_12_img_mod_split_2_output = split(double_blocks_12_img_mod_tensoritem_2_output, double_blocks_12_img_mod_split_2_split_size, double_blocks_12_img_mod_split_2_axis)
    double_blocks_12_img_norm1_mean_output = reduce_mean(double_blocks_11_add_10_output, axis=double_blocks_12_img_norm1_mean_axis, keepdim=double_blocks_12_img_norm1_mean_keepdim)
    double_blocks_12_img_norm1_subtract_output = subtract(double_blocks_11_add_10_output, double_blocks_12_img_norm1_mean_output)
    double_blocks_12_img_norm1_variance_output = variance(double_blocks_11_add_10_output, axis=double_blocks_12_img_norm1_variance_axis, keepdim=double_blocks_12_img_norm1_variance_keepdim, correction=double_blocks_12_img_norm1_variance_correction)
    double_blocks_12_img_norm1_add_output = add(double_blocks_12_img_norm1_variance_output, double_blocks_12_img_norm1_add_right)
    double_blocks_12_img_norm1_sqrt_output = sqrt(double_blocks_12_img_norm1_add_output)
    double_blocks_12_img_norm1_divide_output = divide(double_blocks_12_img_norm1_subtract_output, double_blocks_12_img_norm1_sqrt_output)
    double_blocks_12_tensoritem_0_output = tensor_item(double_blocks_12_img_mod_split_1_output, double_blocks_12_tensoritem_0_index)
    double_blocks_12_add_0_output = add(double_blocks_12_add_0_left, double_blocks_12_tensoritem_0_output)
    double_blocks_12_multiply_0_output = multiplication(double_blocks_12_add_0_output, double_blocks_12_img_norm1_divide_output)
    double_blocks_12_tensoritem_1_output = tensor_item(double_blocks_12_img_mod_split_1_output, double_blocks_12_tensoritem_1_index)
    double_blocks_12_add_1_output = add(double_blocks_12_multiply_0_output, double_blocks_12_tensoritem_1_output)
    double_blocks_12_img_attn_qkv_transpose_output = transpose(double_blocks_12_img_attn_qkv_weight, double_blocks_12_img_attn_qkv_transpose_axes)
    double_blocks_12_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_12_add_1_output, double_blocks_12_img_attn_qkv_transpose_output)
    double_blocks_12_img_qkv = add(double_blocks_12_img_attn_qkv_matrixmultiply_output, double_blocks_12_img_attn_qkv_bias)
    double_blocks_12_reshape_0_output = reshape(double_blocks_12_img_qkv, double_blocks_12_totuple_0_output)
    double_blocks_12_transpose_out = transpose(double_blocks_12_reshape_0_output, double_blocks_12_transpose_0_axes)
    double_blocks_12_tensoritem_2_output = tensor_item(double_blocks_12_transpose_out, double_blocks_12_tensoritem_2_index)
    double_blocks_12_tensoritem_3_output = tensor_item(double_blocks_12_transpose_out, double_blocks_12_tensoritem_3_index)
    double_blocks_12_img_attn_norm_query_norm_power_output = power(double_blocks_12_tensoritem_2_output, double_blocks_12_img_attn_norm_query_norm_power_exponent)
    double_blocks_12_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_12_img_attn_norm_query_norm_power_output, axis=double_blocks_12_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_12_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_12_img_attn_norm_query_norm_add_output = add(double_blocks_12_img_attn_norm_query_norm_mean_output, double_blocks_12_img_attn_norm_query_norm_add_right)
    double_blocks_12_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_12_img_attn_norm_query_norm_add_output)
    double_blocks_12_img_attn_norm_query_norm_divide_output = divide(double_blocks_12_img_attn_norm_query_norm_divide_numerator, double_blocks_12_img_attn_norm_query_norm_sqrt_output)
    double_blocks_12_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_12_tensoritem_2_output, double_blocks_12_img_attn_norm_query_norm_divide_output)
    double_blocks_12_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_12_img_attn_norm_query_norm_multiply_0_output, double_blocks_12_img_attn_norm_query_norm_scale)
    double_blocks_12_img_attn_norm_key_norm_power_output = power(double_blocks_12_tensoritem_3_output, double_blocks_12_img_attn_norm_key_norm_power_exponent)
    double_blocks_12_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_12_img_attn_norm_key_norm_power_output, axis=double_blocks_12_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_12_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_12_img_attn_norm_key_norm_add_output = add(double_blocks_12_img_attn_norm_key_norm_mean_output, double_blocks_12_img_attn_norm_key_norm_add_right)
    double_blocks_12_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_12_img_attn_norm_key_norm_add_output)
    double_blocks_12_img_attn_norm_key_norm_divide_output = divide(double_blocks_12_img_attn_norm_key_norm_divide_numerator, double_blocks_12_img_attn_norm_key_norm_sqrt_output)
    double_blocks_12_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_12_tensoritem_3_output, double_blocks_12_img_attn_norm_key_norm_divide_output)
    double_blocks_12_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_12_img_attn_norm_key_norm_multiply_0_output, double_blocks_12_img_attn_norm_key_norm_scale)
    double_blocks_12_txt_mod_silu_minus = minus(vec)
    double_blocks_12_txt_mod_silu_exp = exp(double_blocks_12_txt_mod_silu_minus)
    double_blocks_12_txt_mod_silu_add = add(double_blocks_12_txt_mod_silu_add_left, double_blocks_12_txt_mod_silu_exp)
    double_blocks_12_txt_mod_silu_output = divide(vec, double_blocks_12_txt_mod_silu_add)
    double_blocks_12_txt_mod_lin_transpose_output = transpose(double_blocks_12_txt_mod_lin_weight, double_blocks_12_txt_mod_lin_transpose_axes)
    double_blocks_12_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_12_txt_mod_silu_output, double_blocks_12_txt_mod_lin_transpose_output)
    double_blocks_12_txt_mod_lin_out = add(double_blocks_12_txt_mod_lin_matrixmultiply_output, double_blocks_12_txt_mod_lin_bias)
    double_blocks_12_txt_mod_tensoritem_0_output = tensor_item(double_blocks_12_txt_mod_lin_out, double_blocks_12_txt_mod_tensoritem_0_index)
    double_blocks_12_txt_mod_split_0_output = split(double_blocks_12_txt_mod_tensoritem_0_output, double_blocks_12_txt_mod_split_0_split_size, double_blocks_12_txt_mod_split_0_axis)
    double_blocks_12_txt_mod_tensoritem_1_output = tensor_item(double_blocks_12_txt_mod_split_0_output, double_blocks_12_txt_mod_tensoritem_1_index)
    double_blocks_12_txt_mod_split_1_output = split(double_blocks_12_txt_mod_tensoritem_1_output, double_blocks_12_txt_mod_split_1_split_size, double_blocks_12_txt_mod_split_1_axis)
    double_blocks_12_txt_mod_tensoritem_2_output = tensor_item(double_blocks_12_txt_mod_split_0_output, double_blocks_12_txt_mod_tensoritem_2_index)
    double_blocks_12_txt_mod_split_2_output = split(double_blocks_12_txt_mod_tensoritem_2_output, double_blocks_12_txt_mod_split_2_split_size, double_blocks_12_txt_mod_split_2_axis)
    double_blocks_12_txt_norm1_mean_output = reduce_mean(double_blocks_11_add_11_output, axis=double_blocks_12_txt_norm1_mean_axis, keepdim=double_blocks_12_txt_norm1_mean_keepdim)
    double_blocks_12_txt_norm1_subtract_output = subtract(double_blocks_11_add_11_output, double_blocks_12_txt_norm1_mean_output)
    double_blocks_12_txt_norm1_variance_output = variance(double_blocks_11_add_11_output, axis=double_blocks_12_txt_norm1_variance_axis, keepdim=double_blocks_12_txt_norm1_variance_keepdim, correction=double_blocks_12_txt_norm1_variance_correction)
    double_blocks_12_txt_norm1_add_output = add(double_blocks_12_txt_norm1_variance_output, double_blocks_12_txt_norm1_add_right)
    double_blocks_12_txt_norm1_sqrt_output = sqrt(double_blocks_12_txt_norm1_add_output)
    double_blocks_12_txt_norm1_divide_output = divide(double_blocks_12_txt_norm1_subtract_output, double_blocks_12_txt_norm1_sqrt_output)
    double_blocks_12_tensoritem_4_output = tensor_item(double_blocks_12_txt_mod_split_1_output, double_blocks_12_tensoritem_4_index)
    double_blocks_12_add_2_output = add(double_blocks_12_add_2_left, double_blocks_12_tensoritem_4_output)
    double_blocks_12_multiply_1_output = multiplication(double_blocks_12_add_2_output, double_blocks_12_txt_norm1_divide_output)
    double_blocks_12_tensoritem_5_output = tensor_item(double_blocks_12_txt_mod_split_1_output, double_blocks_12_tensoritem_5_index)
    double_blocks_12_add_3_output = add(double_blocks_12_multiply_1_output, double_blocks_12_tensoritem_5_output)
    double_blocks_12_txt_attn_qkv_transpose_output = transpose(double_blocks_12_txt_attn_qkv_weight, double_blocks_12_txt_attn_qkv_transpose_axes)
    double_blocks_12_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_12_add_3_output, double_blocks_12_txt_attn_qkv_transpose_output)
    double_blocks_12_txt_qkv = add(double_blocks_12_txt_attn_qkv_matrixmultiply_output, double_blocks_12_txt_attn_qkv_bias)
    double_blocks_12_reshape_1_output = reshape(double_blocks_12_txt_qkv, double_blocks_12_totuple_1_output)
    double_blocks_12_txt_transpose_out = transpose(double_blocks_12_reshape_1_output, double_blocks_12_transpose_1_axes)
    double_blocks_12_tensoritem_6_output = tensor_item(double_blocks_12_txt_transpose_out, double_blocks_12_tensoritem_6_index)
    double_blocks_12_tensoritem_7_output = tensor_item(double_blocks_12_txt_transpose_out, double_blocks_12_tensoritem_7_index)
    double_blocks_12_txt_attn_norm_query_norm_power_output = power(double_blocks_12_tensoritem_6_output, double_blocks_12_txt_attn_norm_query_norm_power_exponent)
    double_blocks_12_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_12_txt_attn_norm_query_norm_power_output, axis=double_blocks_12_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_12_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_12_txt_attn_norm_query_norm_add_output = add(double_blocks_12_txt_attn_norm_query_norm_mean_output, double_blocks_12_txt_attn_norm_query_norm_add_right)
    double_blocks_12_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_12_txt_attn_norm_query_norm_add_output)
    double_blocks_12_txt_attn_norm_query_norm_divide_output = divide(double_blocks_12_txt_attn_norm_query_norm_divide_numerator, double_blocks_12_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_12_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_12_tensoritem_6_output, double_blocks_12_txt_attn_norm_query_norm_divide_output)
    double_blocks_12_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_12_txt_attn_norm_query_norm_multiply_0_output, double_blocks_12_txt_attn_norm_query_norm_scale)
    double_blocks_12_txt_attn_norm_key_norm_power_output = power(double_blocks_12_tensoritem_7_output, double_blocks_12_txt_attn_norm_key_norm_power_exponent)
    double_blocks_12_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_12_txt_attn_norm_key_norm_power_output, axis=double_blocks_12_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_12_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_12_txt_attn_norm_key_norm_add_output = add(double_blocks_12_txt_attn_norm_key_norm_mean_output, double_blocks_12_txt_attn_norm_key_norm_add_right)
    double_blocks_12_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_12_txt_attn_norm_key_norm_add_output)
    double_blocks_12_txt_attn_norm_key_norm_divide_output = divide(double_blocks_12_txt_attn_norm_key_norm_divide_numerator, double_blocks_12_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_12_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_12_tensoritem_7_output, double_blocks_12_txt_attn_norm_key_norm_divide_output)
    double_blocks_12_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_12_txt_attn_norm_key_norm_multiply_0_output, double_blocks_12_txt_attn_norm_key_norm_scale)
    double_blocks_12_q_concat = concat(double_blocks_12_txt_attn_norm_query_norm_multiply_1_output, double_blocks_12_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_12_concat_0_axis)
    double_blocks_12_k_concat = concat(double_blocks_12_txt_attn_norm_key_norm_multiply_1_output, double_blocks_12_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_12_concat_1_axis)
    double_blocks_12_tensoritem_8_output = tensor_item(double_blocks_12_txt_transpose_out, double_blocks_12_tensoritem_8_index)
    double_blocks_12_tensoritem_9_output = tensor_item(double_blocks_12_transpose_out, double_blocks_12_tensoritem_9_index)
    double_blocks_12_v_concat = concat(double_blocks_12_tensoritem_8_output, double_blocks_12_tensoritem_9_output, axis=double_blocks_12_concat_2_axis)
    double_blocks_12_model_model_xq_ = reshape(double_blocks_12_q_concat, double_blocks_12_model_model_totuple_0_output)
    double_blocks_12_model_model_xk_ = reshape(double_blocks_12_k_concat, double_blocks_12_model_model_totuple_1_output)
    double_blocks_12_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_12_model_model_tensoritem_0_index)
    double_blocks_12_model_model_tensoritem_1_output = tensor_item(double_blocks_12_model_model_xq_, double_blocks_12_model_model_tensoritem_1_index)
    double_blocks_12_model_model_multiply_0_output = multiplication(double_blocks_12_model_model_tensoritem_0_output, double_blocks_12_model_model_tensoritem_1_output)
    double_blocks_12_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_12_model_model_tensoritem_2_index)
    double_blocks_12_model_model_tensoritem_3_output = tensor_item(double_blocks_12_model_model_xq_, double_blocks_12_model_model_tensoritem_3_index)
    double_blocks_12_model_model_multiply_1_output = multiplication(double_blocks_12_model_model_tensoritem_2_output, double_blocks_12_model_model_tensoritem_3_output)
    double_blocks_12_model_model_add_0_output = add(double_blocks_12_model_model_multiply_0_output, double_blocks_12_model_model_multiply_1_output)
    double_blocks_12_model_q_out = reshape(double_blocks_12_model_model_add_0_output, double_blocks_12_model_model_shape_0_output)
    double_blocks_12_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_12_model_model_tensoritem_4_index)
    double_blocks_12_model_model_tensoritem_5_output = tensor_item(double_blocks_12_model_model_xk_, double_blocks_12_model_model_tensoritem_5_index)
    double_blocks_12_model_model_multiply_2_output = multiplication(double_blocks_12_model_model_tensoritem_4_output, double_blocks_12_model_model_tensoritem_5_output)
    double_blocks_12_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_12_model_model_tensoritem_6_index)
    double_blocks_12_model_model_tensoritem_7_output = tensor_item(double_blocks_12_model_model_xk_, double_blocks_12_model_model_tensoritem_7_index)
    double_blocks_12_model_model_multiply_3_output = multiplication(double_blocks_12_model_model_tensoritem_6_output, double_blocks_12_model_model_tensoritem_7_output)
    double_blocks_12_model_model_add_1_output = add(double_blocks_12_model_model_multiply_2_output, double_blocks_12_model_model_multiply_3_output)
    double_blocks_12_model_k_out = reshape(double_blocks_12_model_model_add_1_output, double_blocks_12_model_model_shape_1_output)
    double_blocks_12_model_context = scaled_dot_product_attention(double_blocks_12_model_q_out, double_blocks_12_model_k_out, double_blocks_12_v_concat, double_blocks_12_model_scaleddotproduct_attn_mask)
    double_blocks_12_model_transpose_output = transpose(double_blocks_12_model_context, double_blocks_12_model_transpose_axes)
    double_blocks_12_attn = reshape(double_blocks_12_model_transpose_output, double_blocks_12_model_totuple_output)
    double_blocks_12_tensoritem_10_output = tensor_item(double_blocks_12_attn, double_blocks_12_tensoritem_10_index)
    double_blocks_12_img_attn_proj_transpose_output = transpose(double_blocks_12_img_attn_proj_weight, double_blocks_12_img_attn_proj_transpose_axes)
    double_blocks_12_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_12_tensoritem_10_output, double_blocks_12_img_attn_proj_transpose_output)
    double_blocks_12_img_proj = add(double_blocks_12_img_attn_proj_matrixmultiply_output, double_blocks_12_img_attn_proj_bias)
    double_blocks_12_tensoritem_11_output = tensor_item(double_blocks_12_img_mod_split_1_output, double_blocks_12_tensoritem_11_index)
    double_blocks_12_multiply_2_output = multiplication(double_blocks_12_tensoritem_11_output, double_blocks_12_img_proj)
    double_blocks_12_add_4_output = add(double_blocks_11_add_10_output, double_blocks_12_multiply_2_output)
    double_blocks_12_img_norm2_mean_output = reduce_mean(double_blocks_12_add_4_output, axis=double_blocks_12_img_norm2_mean_axis, keepdim=double_blocks_12_img_norm2_mean_keepdim)
    double_blocks_12_img_norm2_subtract_output = subtract(double_blocks_12_add_4_output, double_blocks_12_img_norm2_mean_output)
    double_blocks_12_img_norm2_variance_output = variance(double_blocks_12_add_4_output, axis=double_blocks_12_img_norm2_variance_axis, keepdim=double_blocks_12_img_norm2_variance_keepdim, correction=double_blocks_12_img_norm2_variance_correction)
    double_blocks_12_img_norm2_add_output = add(double_blocks_12_img_norm2_variance_output, double_blocks_12_img_norm2_add_right)
    double_blocks_12_img_norm2_sqrt_output = sqrt(double_blocks_12_img_norm2_add_output)
    double_blocks_12_img_norm2_divide_output = divide(double_blocks_12_img_norm2_subtract_output, double_blocks_12_img_norm2_sqrt_output)
    double_blocks_12_tensoritem_12_output = tensor_item(double_blocks_12_img_mod_split_2_output, double_blocks_12_tensoritem_12_index)
    double_blocks_12_add_5_output = add(double_blocks_12_add_5_left, double_blocks_12_tensoritem_12_output)
    double_blocks_12_multiply_3_output = multiplication(double_blocks_12_add_5_output, double_blocks_12_img_norm2_divide_output)
    double_blocks_12_tensoritem_13_output = tensor_item(double_blocks_12_img_mod_split_2_output, double_blocks_12_tensoritem_13_index)
    double_blocks_12_add_6_output = add(double_blocks_12_multiply_3_output, double_blocks_12_tensoritem_13_output)
    double_blocks_12_img_mlp_0_transpose_output = transpose(double_blocks_12_img_mlp_0_weight, double_blocks_12_img_mlp_0_transpose_axes)
    double_blocks_12_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_12_add_6_output, double_blocks_12_img_mlp_0_transpose_output)
    double_blocks_12_img_mlp_0_output = add(double_blocks_12_img_mlp_0_matrixmultiply_output, double_blocks_12_img_mlp_0_bias)
    double_blocks_12_img_mlp_gelu_output = gelu(double_blocks_12_img_mlp_0_output, double_blocks_12_img_mlp_gelu_approximate)
    double_blocks_12_img_mlp_2_transpose_output = transpose(double_blocks_12_img_mlp_2_weight, double_blocks_12_img_mlp_2_transpose_axes)
    double_blocks_12_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_12_img_mlp_gelu_output, double_blocks_12_img_mlp_2_transpose_output)
    double_blocks_12_img_mlp = add(double_blocks_12_img_mlp_2_matrixmultiply_output, double_blocks_12_img_mlp_2_bias)
    double_blocks_12_tensoritem_14_output = tensor_item(double_blocks_12_attn, double_blocks_12_tensoritem_14_index)
    double_blocks_12_txt_attn_proj_transpose_output = transpose(double_blocks_12_txt_attn_proj_weight, double_blocks_12_txt_attn_proj_transpose_axes)
    double_blocks_12_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_12_tensoritem_14_output, double_blocks_12_txt_attn_proj_transpose_output)
    double_blocks_12_txt_proj = add(double_blocks_12_txt_attn_proj_matrixmultiply_output, double_blocks_12_txt_attn_proj_bias)
    double_blocks_12_tensoritem_15_output = tensor_item(double_blocks_12_txt_mod_split_1_output, double_blocks_12_tensoritem_15_index)
    double_blocks_12_multiply_4_output = multiplication(double_blocks_12_tensoritem_15_output, double_blocks_12_txt_proj)
    double_blocks_12_add_7_output = add(double_blocks_11_add_11_output, double_blocks_12_multiply_4_output)
    double_blocks_12_txt_norm2_mean_output = reduce_mean(double_blocks_12_add_7_output, axis=double_blocks_12_txt_norm2_mean_axis, keepdim=double_blocks_12_txt_norm2_mean_keepdim)
    double_blocks_12_txt_norm2_subtract_output = subtract(double_blocks_12_add_7_output, double_blocks_12_txt_norm2_mean_output)
    double_blocks_12_txt_norm2_variance_output = variance(double_blocks_12_add_7_output, axis=double_blocks_12_txt_norm2_variance_axis, keepdim=double_blocks_12_txt_norm2_variance_keepdim, correction=double_blocks_12_txt_norm2_variance_correction)
    double_blocks_12_txt_norm2_add_output = add(double_blocks_12_txt_norm2_variance_output, double_blocks_12_txt_norm2_add_right)
    double_blocks_12_txt_norm2_sqrt_output = sqrt(double_blocks_12_txt_norm2_add_output)
    double_blocks_12_txt_norm2_divide_output = divide(double_blocks_12_txt_norm2_subtract_output, double_blocks_12_txt_norm2_sqrt_output)
    double_blocks_12_tensoritem_16_output = tensor_item(double_blocks_12_txt_mod_split_2_output, double_blocks_12_tensoritem_16_index)
    double_blocks_12_add_8_output = add(double_blocks_12_add_8_left, double_blocks_12_tensoritem_16_output)
    double_blocks_12_multiply_5_output = multiplication(double_blocks_12_add_8_output, double_blocks_12_txt_norm2_divide_output)
    double_blocks_12_tensoritem_17_output = tensor_item(double_blocks_12_txt_mod_split_2_output, double_blocks_12_tensoritem_17_index)
    double_blocks_12_add_9_output = add(double_blocks_12_multiply_5_output, double_blocks_12_tensoritem_17_output)
    double_blocks_12_txt_mlp_0_transpose_output = transpose(double_blocks_12_txt_mlp_0_weight, double_blocks_12_txt_mlp_0_transpose_axes)
    double_blocks_12_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_12_add_9_output, double_blocks_12_txt_mlp_0_transpose_output)
    double_blocks_12_txt_mlp_0_output = add(double_blocks_12_txt_mlp_0_matrixmultiply_output, double_blocks_12_txt_mlp_0_bias)
    double_blocks_12_txt_mlp_gelu_output = gelu(double_blocks_12_txt_mlp_0_output, double_blocks_12_txt_mlp_gelu_approximate)
    double_blocks_12_txt_mlp_2_transpose_output = transpose(double_blocks_12_txt_mlp_2_weight, double_blocks_12_txt_mlp_2_transpose_axes)
    double_blocks_12_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_12_txt_mlp_gelu_output, double_blocks_12_txt_mlp_2_transpose_output)
    double_blocks_12_txt_mlp = add(double_blocks_12_txt_mlp_2_matrixmultiply_output, double_blocks_12_txt_mlp_2_bias)
    double_blocks_12_tensoritem_18_output = tensor_item(double_blocks_12_img_mod_split_2_output, double_blocks_12_tensoritem_18_index)
    double_blocks_12_multiply_6_output = multiplication(double_blocks_12_tensoritem_18_output, double_blocks_12_img_mlp)
    double_blocks_12_add_10_output = add(double_blocks_12_add_4_output, double_blocks_12_multiply_6_output)
    double_blocks_12_tensoritem_19_output = tensor_item(double_blocks_12_txt_mod_split_2_output, double_blocks_12_tensoritem_19_index)
    double_blocks_12_multiply_7_output = multiplication(double_blocks_12_tensoritem_19_output, double_blocks_12_txt_mlp)
    double_blocks_12_add_11_output = add(double_blocks_12_add_7_output, double_blocks_12_multiply_7_output)
    double_blocks_13_img_mod_silu_minus = minus(vec)
    double_blocks_13_img_mod_silu_exp = exp(double_blocks_13_img_mod_silu_minus)
    double_blocks_13_img_mod_silu_add = add(double_blocks_13_img_mod_silu_add_left, double_blocks_13_img_mod_silu_exp)
    double_blocks_13_img_mod_silu_output = divide(vec, double_blocks_13_img_mod_silu_add)
    double_blocks_13_img_mod_lin_transpose_output = transpose(double_blocks_13_img_mod_lin_weight, double_blocks_13_img_mod_lin_transpose_axes)
    double_blocks_13_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_13_img_mod_silu_output, double_blocks_13_img_mod_lin_transpose_output)
    double_blocks_13_img_mod_lin_out = add(double_blocks_13_img_mod_lin_matrixmultiply_output, double_blocks_13_img_mod_lin_bias)
    double_blocks_13_img_mod_tensoritem_0_output = tensor_item(double_blocks_13_img_mod_lin_out, double_blocks_13_img_mod_tensoritem_0_index)
    double_blocks_13_img_mod_split_0_output = split(double_blocks_13_img_mod_tensoritem_0_output, double_blocks_13_img_mod_split_0_split_size, double_blocks_13_img_mod_split_0_axis)
    double_blocks_13_img_mod_tensoritem_1_output = tensor_item(double_blocks_13_img_mod_split_0_output, double_blocks_13_img_mod_tensoritem_1_index)
    double_blocks_13_img_mod_split_1_output = split(double_blocks_13_img_mod_tensoritem_1_output, double_blocks_13_img_mod_split_1_split_size, double_blocks_13_img_mod_split_1_axis)
    double_blocks_13_img_mod_tensoritem_2_output = tensor_item(double_blocks_13_img_mod_split_0_output, double_blocks_13_img_mod_tensoritem_2_index)
    double_blocks_13_img_mod_split_2_output = split(double_blocks_13_img_mod_tensoritem_2_output, double_blocks_13_img_mod_split_2_split_size, double_blocks_13_img_mod_split_2_axis)
    double_blocks_13_img_norm1_mean_output = reduce_mean(double_blocks_12_add_10_output, axis=double_blocks_13_img_norm1_mean_axis, keepdim=double_blocks_13_img_norm1_mean_keepdim)
    double_blocks_13_img_norm1_subtract_output = subtract(double_blocks_12_add_10_output, double_blocks_13_img_norm1_mean_output)
    double_blocks_13_img_norm1_variance_output = variance(double_blocks_12_add_10_output, axis=double_blocks_13_img_norm1_variance_axis, keepdim=double_blocks_13_img_norm1_variance_keepdim, correction=double_blocks_13_img_norm1_variance_correction)
    double_blocks_13_img_norm1_add_output = add(double_blocks_13_img_norm1_variance_output, double_blocks_13_img_norm1_add_right)
    double_blocks_13_img_norm1_sqrt_output = sqrt(double_blocks_13_img_norm1_add_output)
    double_blocks_13_img_norm1_divide_output = divide(double_blocks_13_img_norm1_subtract_output, double_blocks_13_img_norm1_sqrt_output)
    double_blocks_13_tensoritem_0_output = tensor_item(double_blocks_13_img_mod_split_1_output, double_blocks_13_tensoritem_0_index)
    double_blocks_13_add_0_output = add(double_blocks_13_add_0_left, double_blocks_13_tensoritem_0_output)
    double_blocks_13_multiply_0_output = multiplication(double_blocks_13_add_0_output, double_blocks_13_img_norm1_divide_output)
    double_blocks_13_tensoritem_1_output = tensor_item(double_blocks_13_img_mod_split_1_output, double_blocks_13_tensoritem_1_index)
    double_blocks_13_add_1_output = add(double_blocks_13_multiply_0_output, double_blocks_13_tensoritem_1_output)
    double_blocks_13_img_attn_qkv_transpose_output = transpose(double_blocks_13_img_attn_qkv_weight, double_blocks_13_img_attn_qkv_transpose_axes)
    double_blocks_13_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_13_add_1_output, double_blocks_13_img_attn_qkv_transpose_output)
    double_blocks_13_img_qkv = add(double_blocks_13_img_attn_qkv_matrixmultiply_output, double_blocks_13_img_attn_qkv_bias)
    double_blocks_13_reshape_0_output = reshape(double_blocks_13_img_qkv, double_blocks_13_totuple_0_output)
    double_blocks_13_transpose_out = transpose(double_blocks_13_reshape_0_output, double_blocks_13_transpose_0_axes)
    double_blocks_13_tensoritem_2_output = tensor_item(double_blocks_13_transpose_out, double_blocks_13_tensoritem_2_index)
    double_blocks_13_tensoritem_3_output = tensor_item(double_blocks_13_transpose_out, double_blocks_13_tensoritem_3_index)
    double_blocks_13_img_attn_norm_query_norm_power_output = power(double_blocks_13_tensoritem_2_output, double_blocks_13_img_attn_norm_query_norm_power_exponent)
    double_blocks_13_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_13_img_attn_norm_query_norm_power_output, axis=double_blocks_13_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_13_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_13_img_attn_norm_query_norm_add_output = add(double_blocks_13_img_attn_norm_query_norm_mean_output, double_blocks_13_img_attn_norm_query_norm_add_right)
    double_blocks_13_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_13_img_attn_norm_query_norm_add_output)
    double_blocks_13_img_attn_norm_query_norm_divide_output = divide(double_blocks_13_img_attn_norm_query_norm_divide_numerator, double_blocks_13_img_attn_norm_query_norm_sqrt_output)
    double_blocks_13_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_13_tensoritem_2_output, double_blocks_13_img_attn_norm_query_norm_divide_output)
    double_blocks_13_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_13_img_attn_norm_query_norm_multiply_0_output, double_blocks_13_img_attn_norm_query_norm_scale)
    double_blocks_13_img_attn_norm_key_norm_power_output = power(double_blocks_13_tensoritem_3_output, double_blocks_13_img_attn_norm_key_norm_power_exponent)
    double_blocks_13_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_13_img_attn_norm_key_norm_power_output, axis=double_blocks_13_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_13_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_13_img_attn_norm_key_norm_add_output = add(double_blocks_13_img_attn_norm_key_norm_mean_output, double_blocks_13_img_attn_norm_key_norm_add_right)
    double_blocks_13_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_13_img_attn_norm_key_norm_add_output)
    double_blocks_13_img_attn_norm_key_norm_divide_output = divide(double_blocks_13_img_attn_norm_key_norm_divide_numerator, double_blocks_13_img_attn_norm_key_norm_sqrt_output)
    double_blocks_13_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_13_tensoritem_3_output, double_blocks_13_img_attn_norm_key_norm_divide_output)
    double_blocks_13_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_13_img_attn_norm_key_norm_multiply_0_output, double_blocks_13_img_attn_norm_key_norm_scale)
    double_blocks_13_txt_mod_silu_minus = minus(vec)
    double_blocks_13_txt_mod_silu_exp = exp(double_blocks_13_txt_mod_silu_minus)
    double_blocks_13_txt_mod_silu_add = add(double_blocks_13_txt_mod_silu_add_left, double_blocks_13_txt_mod_silu_exp)
    double_blocks_13_txt_mod_silu_output = divide(vec, double_blocks_13_txt_mod_silu_add)
    double_blocks_13_txt_mod_lin_transpose_output = transpose(double_blocks_13_txt_mod_lin_weight, double_blocks_13_txt_mod_lin_transpose_axes)
    double_blocks_13_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_13_txt_mod_silu_output, double_blocks_13_txt_mod_lin_transpose_output)
    double_blocks_13_txt_mod_lin_out = add(double_blocks_13_txt_mod_lin_matrixmultiply_output, double_blocks_13_txt_mod_lin_bias)
    double_blocks_13_txt_mod_tensoritem_0_output = tensor_item(double_blocks_13_txt_mod_lin_out, double_blocks_13_txt_mod_tensoritem_0_index)
    double_blocks_13_txt_mod_split_0_output = split(double_blocks_13_txt_mod_tensoritem_0_output, double_blocks_13_txt_mod_split_0_split_size, double_blocks_13_txt_mod_split_0_axis)
    double_blocks_13_txt_mod_tensoritem_1_output = tensor_item(double_blocks_13_txt_mod_split_0_output, double_blocks_13_txt_mod_tensoritem_1_index)
    double_blocks_13_txt_mod_split_1_output = split(double_blocks_13_txt_mod_tensoritem_1_output, double_blocks_13_txt_mod_split_1_split_size, double_blocks_13_txt_mod_split_1_axis)
    double_blocks_13_txt_mod_tensoritem_2_output = tensor_item(double_blocks_13_txt_mod_split_0_output, double_blocks_13_txt_mod_tensoritem_2_index)
    double_blocks_13_txt_mod_split_2_output = split(double_blocks_13_txt_mod_tensoritem_2_output, double_blocks_13_txt_mod_split_2_split_size, double_blocks_13_txt_mod_split_2_axis)
    double_blocks_13_txt_norm1_mean_output = reduce_mean(double_blocks_12_add_11_output, axis=double_blocks_13_txt_norm1_mean_axis, keepdim=double_blocks_13_txt_norm1_mean_keepdim)
    double_blocks_13_txt_norm1_subtract_output = subtract(double_blocks_12_add_11_output, double_blocks_13_txt_norm1_mean_output)
    double_blocks_13_txt_norm1_variance_output = variance(double_blocks_12_add_11_output, axis=double_blocks_13_txt_norm1_variance_axis, keepdim=double_blocks_13_txt_norm1_variance_keepdim, correction=double_blocks_13_txt_norm1_variance_correction)
    double_blocks_13_txt_norm1_add_output = add(double_blocks_13_txt_norm1_variance_output, double_blocks_13_txt_norm1_add_right)
    double_blocks_13_txt_norm1_sqrt_output = sqrt(double_blocks_13_txt_norm1_add_output)
    double_blocks_13_txt_norm1_divide_output = divide(double_blocks_13_txt_norm1_subtract_output, double_blocks_13_txt_norm1_sqrt_output)
    double_blocks_13_tensoritem_4_output = tensor_item(double_blocks_13_txt_mod_split_1_output, double_blocks_13_tensoritem_4_index)
    double_blocks_13_add_2_output = add(double_blocks_13_add_2_left, double_blocks_13_tensoritem_4_output)
    double_blocks_13_multiply_1_output = multiplication(double_blocks_13_add_2_output, double_blocks_13_txt_norm1_divide_output)
    double_blocks_13_tensoritem_5_output = tensor_item(double_blocks_13_txt_mod_split_1_output, double_blocks_13_tensoritem_5_index)
    double_blocks_13_add_3_output = add(double_blocks_13_multiply_1_output, double_blocks_13_tensoritem_5_output)
    double_blocks_13_txt_attn_qkv_transpose_output = transpose(double_blocks_13_txt_attn_qkv_weight, double_blocks_13_txt_attn_qkv_transpose_axes)
    double_blocks_13_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_13_add_3_output, double_blocks_13_txt_attn_qkv_transpose_output)
    double_blocks_13_txt_qkv = add(double_blocks_13_txt_attn_qkv_matrixmultiply_output, double_blocks_13_txt_attn_qkv_bias)
    double_blocks_13_reshape_1_output = reshape(double_blocks_13_txt_qkv, double_blocks_13_totuple_1_output)
    double_blocks_13_txt_transpose_out = transpose(double_blocks_13_reshape_1_output, double_blocks_13_transpose_1_axes)
    double_blocks_13_tensoritem_6_output = tensor_item(double_blocks_13_txt_transpose_out, double_blocks_13_tensoritem_6_index)
    double_blocks_13_tensoritem_7_output = tensor_item(double_blocks_13_txt_transpose_out, double_blocks_13_tensoritem_7_index)
    double_blocks_13_txt_attn_norm_query_norm_power_output = power(double_blocks_13_tensoritem_6_output, double_blocks_13_txt_attn_norm_query_norm_power_exponent)
    double_blocks_13_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_13_txt_attn_norm_query_norm_power_output, axis=double_blocks_13_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_13_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_13_txt_attn_norm_query_norm_add_output = add(double_blocks_13_txt_attn_norm_query_norm_mean_output, double_blocks_13_txt_attn_norm_query_norm_add_right)
    double_blocks_13_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_13_txt_attn_norm_query_norm_add_output)
    double_blocks_13_txt_attn_norm_query_norm_divide_output = divide(double_blocks_13_txt_attn_norm_query_norm_divide_numerator, double_blocks_13_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_13_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_13_tensoritem_6_output, double_blocks_13_txt_attn_norm_query_norm_divide_output)
    double_blocks_13_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_13_txt_attn_norm_query_norm_multiply_0_output, double_blocks_13_txt_attn_norm_query_norm_scale)
    double_blocks_13_txt_attn_norm_key_norm_power_output = power(double_blocks_13_tensoritem_7_output, double_blocks_13_txt_attn_norm_key_norm_power_exponent)
    double_blocks_13_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_13_txt_attn_norm_key_norm_power_output, axis=double_blocks_13_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_13_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_13_txt_attn_norm_key_norm_add_output = add(double_blocks_13_txt_attn_norm_key_norm_mean_output, double_blocks_13_txt_attn_norm_key_norm_add_right)
    double_blocks_13_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_13_txt_attn_norm_key_norm_add_output)
    double_blocks_13_txt_attn_norm_key_norm_divide_output = divide(double_blocks_13_txt_attn_norm_key_norm_divide_numerator, double_blocks_13_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_13_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_13_tensoritem_7_output, double_blocks_13_txt_attn_norm_key_norm_divide_output)
    double_blocks_13_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_13_txt_attn_norm_key_norm_multiply_0_output, double_blocks_13_txt_attn_norm_key_norm_scale)
    double_blocks_13_q_concat = concat(double_blocks_13_txt_attn_norm_query_norm_multiply_1_output, double_blocks_13_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_13_concat_0_axis)
    double_blocks_13_k_concat = concat(double_blocks_13_txt_attn_norm_key_norm_multiply_1_output, double_blocks_13_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_13_concat_1_axis)
    double_blocks_13_tensoritem_8_output = tensor_item(double_blocks_13_txt_transpose_out, double_blocks_13_tensoritem_8_index)
    double_blocks_13_tensoritem_9_output = tensor_item(double_blocks_13_transpose_out, double_blocks_13_tensoritem_9_index)
    double_blocks_13_v_concat = concat(double_blocks_13_tensoritem_8_output, double_blocks_13_tensoritem_9_output, axis=double_blocks_13_concat_2_axis)
    double_blocks_13_model_model_xq_ = reshape(double_blocks_13_q_concat, double_blocks_13_model_model_totuple_0_output)
    double_blocks_13_model_model_xk_ = reshape(double_blocks_13_k_concat, double_blocks_13_model_model_totuple_1_output)
    double_blocks_13_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_13_model_model_tensoritem_0_index)
    double_blocks_13_model_model_tensoritem_1_output = tensor_item(double_blocks_13_model_model_xq_, double_blocks_13_model_model_tensoritem_1_index)
    double_blocks_13_model_model_multiply_0_output = multiplication(double_blocks_13_model_model_tensoritem_0_output, double_blocks_13_model_model_tensoritem_1_output)
    double_blocks_13_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_13_model_model_tensoritem_2_index)
    double_blocks_13_model_model_tensoritem_3_output = tensor_item(double_blocks_13_model_model_xq_, double_blocks_13_model_model_tensoritem_3_index)
    double_blocks_13_model_model_multiply_1_output = multiplication(double_blocks_13_model_model_tensoritem_2_output, double_blocks_13_model_model_tensoritem_3_output)
    double_blocks_13_model_model_add_0_output = add(double_blocks_13_model_model_multiply_0_output, double_blocks_13_model_model_multiply_1_output)
    double_blocks_13_model_q_out = reshape(double_blocks_13_model_model_add_0_output, double_blocks_13_model_model_shape_0_output)
    double_blocks_13_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_13_model_model_tensoritem_4_index)
    double_blocks_13_model_model_tensoritem_5_output = tensor_item(double_blocks_13_model_model_xk_, double_blocks_13_model_model_tensoritem_5_index)
    double_blocks_13_model_model_multiply_2_output = multiplication(double_blocks_13_model_model_tensoritem_4_output, double_blocks_13_model_model_tensoritem_5_output)
    double_blocks_13_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_13_model_model_tensoritem_6_index)
    double_blocks_13_model_model_tensoritem_7_output = tensor_item(double_blocks_13_model_model_xk_, double_blocks_13_model_model_tensoritem_7_index)
    double_blocks_13_model_model_multiply_3_output = multiplication(double_blocks_13_model_model_tensoritem_6_output, double_blocks_13_model_model_tensoritem_7_output)
    double_blocks_13_model_model_add_1_output = add(double_blocks_13_model_model_multiply_2_output, double_blocks_13_model_model_multiply_3_output)
    double_blocks_13_model_k_out = reshape(double_blocks_13_model_model_add_1_output, double_blocks_13_model_model_shape_1_output)
    double_blocks_13_model_context = scaled_dot_product_attention(double_blocks_13_model_q_out, double_blocks_13_model_k_out, double_blocks_13_v_concat, double_blocks_13_model_scaleddotproduct_attn_mask)
    double_blocks_13_model_transpose_output = transpose(double_blocks_13_model_context, double_blocks_13_model_transpose_axes)
    double_blocks_13_attn = reshape(double_blocks_13_model_transpose_output, double_blocks_13_model_totuple_output)
    double_blocks_13_tensoritem_10_output = tensor_item(double_blocks_13_attn, double_blocks_13_tensoritem_10_index)
    double_blocks_13_img_attn_proj_transpose_output = transpose(double_blocks_13_img_attn_proj_weight, double_blocks_13_img_attn_proj_transpose_axes)
    double_blocks_13_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_13_tensoritem_10_output, double_blocks_13_img_attn_proj_transpose_output)
    double_blocks_13_img_proj = add(double_blocks_13_img_attn_proj_matrixmultiply_output, double_blocks_13_img_attn_proj_bias)
    double_blocks_13_tensoritem_11_output = tensor_item(double_blocks_13_img_mod_split_1_output, double_blocks_13_tensoritem_11_index)
    double_blocks_13_multiply_2_output = multiplication(double_blocks_13_tensoritem_11_output, double_blocks_13_img_proj)
    double_blocks_13_add_4_output = add(double_blocks_12_add_10_output, double_blocks_13_multiply_2_output)
    double_blocks_13_img_norm2_mean_output = reduce_mean(double_blocks_13_add_4_output, axis=double_blocks_13_img_norm2_mean_axis, keepdim=double_blocks_13_img_norm2_mean_keepdim)
    double_blocks_13_img_norm2_subtract_output = subtract(double_blocks_13_add_4_output, double_blocks_13_img_norm2_mean_output)
    double_blocks_13_img_norm2_variance_output = variance(double_blocks_13_add_4_output, axis=double_blocks_13_img_norm2_variance_axis, keepdim=double_blocks_13_img_norm2_variance_keepdim, correction=double_blocks_13_img_norm2_variance_correction)
    double_blocks_13_img_norm2_add_output = add(double_blocks_13_img_norm2_variance_output, double_blocks_13_img_norm2_add_right)
    double_blocks_13_img_norm2_sqrt_output = sqrt(double_blocks_13_img_norm2_add_output)
    double_blocks_13_img_norm2_divide_output = divide(double_blocks_13_img_norm2_subtract_output, double_blocks_13_img_norm2_sqrt_output)
    double_blocks_13_tensoritem_12_output = tensor_item(double_blocks_13_img_mod_split_2_output, double_blocks_13_tensoritem_12_index)
    double_blocks_13_add_5_output = add(double_blocks_13_add_5_left, double_blocks_13_tensoritem_12_output)
    double_blocks_13_multiply_3_output = multiplication(double_blocks_13_add_5_output, double_blocks_13_img_norm2_divide_output)
    double_blocks_13_tensoritem_13_output = tensor_item(double_blocks_13_img_mod_split_2_output, double_blocks_13_tensoritem_13_index)
    double_blocks_13_add_6_output = add(double_blocks_13_multiply_3_output, double_blocks_13_tensoritem_13_output)
    double_blocks_13_img_mlp_0_transpose_output = transpose(double_blocks_13_img_mlp_0_weight, double_blocks_13_img_mlp_0_transpose_axes)
    double_blocks_13_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_13_add_6_output, double_blocks_13_img_mlp_0_transpose_output)
    double_blocks_13_img_mlp_0_output = add(double_blocks_13_img_mlp_0_matrixmultiply_output, double_blocks_13_img_mlp_0_bias)
    double_blocks_13_img_mlp_gelu_output = gelu(double_blocks_13_img_mlp_0_output, double_blocks_13_img_mlp_gelu_approximate)
    double_blocks_13_img_mlp_2_transpose_output = transpose(double_blocks_13_img_mlp_2_weight, double_blocks_13_img_mlp_2_transpose_axes)
    double_blocks_13_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_13_img_mlp_gelu_output, double_blocks_13_img_mlp_2_transpose_output)
    double_blocks_13_img_mlp = add(double_blocks_13_img_mlp_2_matrixmultiply_output, double_blocks_13_img_mlp_2_bias)
    double_blocks_13_tensoritem_14_output = tensor_item(double_blocks_13_attn, double_blocks_13_tensoritem_14_index)
    double_blocks_13_txt_attn_proj_transpose_output = transpose(double_blocks_13_txt_attn_proj_weight, double_blocks_13_txt_attn_proj_transpose_axes)
    double_blocks_13_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_13_tensoritem_14_output, double_blocks_13_txt_attn_proj_transpose_output)
    double_blocks_13_txt_proj = add(double_blocks_13_txt_attn_proj_matrixmultiply_output, double_blocks_13_txt_attn_proj_bias)
    double_blocks_13_tensoritem_15_output = tensor_item(double_blocks_13_txt_mod_split_1_output, double_blocks_13_tensoritem_15_index)
    double_blocks_13_multiply_4_output = multiplication(double_blocks_13_tensoritem_15_output, double_blocks_13_txt_proj)
    double_blocks_13_add_7_output = add(double_blocks_12_add_11_output, double_blocks_13_multiply_4_output)
    double_blocks_13_txt_norm2_mean_output = reduce_mean(double_blocks_13_add_7_output, axis=double_blocks_13_txt_norm2_mean_axis, keepdim=double_blocks_13_txt_norm2_mean_keepdim)
    double_blocks_13_txt_norm2_subtract_output = subtract(double_blocks_13_add_7_output, double_blocks_13_txt_norm2_mean_output)
    double_blocks_13_txt_norm2_variance_output = variance(double_blocks_13_add_7_output, axis=double_blocks_13_txt_norm2_variance_axis, keepdim=double_blocks_13_txt_norm2_variance_keepdim, correction=double_blocks_13_txt_norm2_variance_correction)
    double_blocks_13_txt_norm2_add_output = add(double_blocks_13_txt_norm2_variance_output, double_blocks_13_txt_norm2_add_right)
    double_blocks_13_txt_norm2_sqrt_output = sqrt(double_blocks_13_txt_norm2_add_output)
    double_blocks_13_txt_norm2_divide_output = divide(double_blocks_13_txt_norm2_subtract_output, double_blocks_13_txt_norm2_sqrt_output)
    double_blocks_13_tensoritem_16_output = tensor_item(double_blocks_13_txt_mod_split_2_output, double_blocks_13_tensoritem_16_index)
    double_blocks_13_add_8_output = add(double_blocks_13_add_8_left, double_blocks_13_tensoritem_16_output)
    double_blocks_13_multiply_5_output = multiplication(double_blocks_13_add_8_output, double_blocks_13_txt_norm2_divide_output)
    double_blocks_13_tensoritem_17_output = tensor_item(double_blocks_13_txt_mod_split_2_output, double_blocks_13_tensoritem_17_index)
    double_blocks_13_add_9_output = add(double_blocks_13_multiply_5_output, double_blocks_13_tensoritem_17_output)
    double_blocks_13_txt_mlp_0_transpose_output = transpose(double_blocks_13_txt_mlp_0_weight, double_blocks_13_txt_mlp_0_transpose_axes)
    double_blocks_13_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_13_add_9_output, double_blocks_13_txt_mlp_0_transpose_output)
    double_blocks_13_txt_mlp_0_output = add(double_blocks_13_txt_mlp_0_matrixmultiply_output, double_blocks_13_txt_mlp_0_bias)
    double_blocks_13_txt_mlp_gelu_output = gelu(double_blocks_13_txt_mlp_0_output, double_blocks_13_txt_mlp_gelu_approximate)
    double_blocks_13_txt_mlp_2_transpose_output = transpose(double_blocks_13_txt_mlp_2_weight, double_blocks_13_txt_mlp_2_transpose_axes)
    double_blocks_13_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_13_txt_mlp_gelu_output, double_blocks_13_txt_mlp_2_transpose_output)
    double_blocks_13_txt_mlp = add(double_blocks_13_txt_mlp_2_matrixmultiply_output, double_blocks_13_txt_mlp_2_bias)
    double_blocks_13_tensoritem_18_output = tensor_item(double_blocks_13_img_mod_split_2_output, double_blocks_13_tensoritem_18_index)
    double_blocks_13_multiply_6_output = multiplication(double_blocks_13_tensoritem_18_output, double_blocks_13_img_mlp)
    double_blocks_13_add_10_output = add(double_blocks_13_add_4_output, double_blocks_13_multiply_6_output)
    double_blocks_13_tensoritem_19_output = tensor_item(double_blocks_13_txt_mod_split_2_output, double_blocks_13_tensoritem_19_index)
    double_blocks_13_multiply_7_output = multiplication(double_blocks_13_tensoritem_19_output, double_blocks_13_txt_mlp)
    double_blocks_13_add_11_output = add(double_blocks_13_add_7_output, double_blocks_13_multiply_7_output)
    double_blocks_14_img_mod_silu_minus = minus(vec)
    double_blocks_14_img_mod_silu_exp = exp(double_blocks_14_img_mod_silu_minus)
    double_blocks_14_img_mod_silu_add = add(double_blocks_14_img_mod_silu_add_left, double_blocks_14_img_mod_silu_exp)
    double_blocks_14_img_mod_silu_output = divide(vec, double_blocks_14_img_mod_silu_add)
    double_blocks_14_img_mod_lin_transpose_output = transpose(double_blocks_14_img_mod_lin_weight, double_blocks_14_img_mod_lin_transpose_axes)
    double_blocks_14_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_14_img_mod_silu_output, double_blocks_14_img_mod_lin_transpose_output)
    double_blocks_14_img_mod_lin_out = add(double_blocks_14_img_mod_lin_matrixmultiply_output, double_blocks_14_img_mod_lin_bias)
    double_blocks_14_img_mod_tensoritem_0_output = tensor_item(double_blocks_14_img_mod_lin_out, double_blocks_14_img_mod_tensoritem_0_index)
    double_blocks_14_img_mod_split_0_output = split(double_blocks_14_img_mod_tensoritem_0_output, double_blocks_14_img_mod_split_0_split_size, double_blocks_14_img_mod_split_0_axis)
    double_blocks_14_img_mod_tensoritem_1_output = tensor_item(double_blocks_14_img_mod_split_0_output, double_blocks_14_img_mod_tensoritem_1_index)
    double_blocks_14_img_mod_split_1_output = split(double_blocks_14_img_mod_tensoritem_1_output, double_blocks_14_img_mod_split_1_split_size, double_blocks_14_img_mod_split_1_axis)
    double_blocks_14_img_mod_tensoritem_2_output = tensor_item(double_blocks_14_img_mod_split_0_output, double_blocks_14_img_mod_tensoritem_2_index)
    double_blocks_14_img_mod_split_2_output = split(double_blocks_14_img_mod_tensoritem_2_output, double_blocks_14_img_mod_split_2_split_size, double_blocks_14_img_mod_split_2_axis)
    double_blocks_14_img_norm1_mean_output = reduce_mean(double_blocks_13_add_10_output, axis=double_blocks_14_img_norm1_mean_axis, keepdim=double_blocks_14_img_norm1_mean_keepdim)
    double_blocks_14_img_norm1_subtract_output = subtract(double_blocks_13_add_10_output, double_blocks_14_img_norm1_mean_output)
    double_blocks_14_img_norm1_variance_output = variance(double_blocks_13_add_10_output, axis=double_blocks_14_img_norm1_variance_axis, keepdim=double_blocks_14_img_norm1_variance_keepdim, correction=double_blocks_14_img_norm1_variance_correction)
    double_blocks_14_img_norm1_add_output = add(double_blocks_14_img_norm1_variance_output, double_blocks_14_img_norm1_add_right)
    double_blocks_14_img_norm1_sqrt_output = sqrt(double_blocks_14_img_norm1_add_output)
    double_blocks_14_img_norm1_divide_output = divide(double_blocks_14_img_norm1_subtract_output, double_blocks_14_img_norm1_sqrt_output)
    double_blocks_14_tensoritem_0_output = tensor_item(double_blocks_14_img_mod_split_1_output, double_blocks_14_tensoritem_0_index)
    double_blocks_14_add_0_output = add(double_blocks_14_add_0_left, double_blocks_14_tensoritem_0_output)
    double_blocks_14_multiply_0_output = multiplication(double_blocks_14_add_0_output, double_blocks_14_img_norm1_divide_output)
    double_blocks_14_tensoritem_1_output = tensor_item(double_blocks_14_img_mod_split_1_output, double_blocks_14_tensoritem_1_index)
    double_blocks_14_add_1_output = add(double_blocks_14_multiply_0_output, double_blocks_14_tensoritem_1_output)
    double_blocks_14_img_attn_qkv_transpose_output = transpose(double_blocks_14_img_attn_qkv_weight, double_blocks_14_img_attn_qkv_transpose_axes)
    double_blocks_14_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_14_add_1_output, double_blocks_14_img_attn_qkv_transpose_output)
    double_blocks_14_img_qkv = add(double_blocks_14_img_attn_qkv_matrixmultiply_output, double_blocks_14_img_attn_qkv_bias)
    double_blocks_14_reshape_0_output = reshape(double_blocks_14_img_qkv, double_blocks_14_totuple_0_output)
    double_blocks_14_transpose_out = transpose(double_blocks_14_reshape_0_output, double_blocks_14_transpose_0_axes)
    double_blocks_14_tensoritem_2_output = tensor_item(double_blocks_14_transpose_out, double_blocks_14_tensoritem_2_index)
    double_blocks_14_tensoritem_3_output = tensor_item(double_blocks_14_transpose_out, double_blocks_14_tensoritem_3_index)
    double_blocks_14_img_attn_norm_query_norm_power_output = power(double_blocks_14_tensoritem_2_output, double_blocks_14_img_attn_norm_query_norm_power_exponent)
    double_blocks_14_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_14_img_attn_norm_query_norm_power_output, axis=double_blocks_14_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_14_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_14_img_attn_norm_query_norm_add_output = add(double_blocks_14_img_attn_norm_query_norm_mean_output, double_blocks_14_img_attn_norm_query_norm_add_right)
    double_blocks_14_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_14_img_attn_norm_query_norm_add_output)
    double_blocks_14_img_attn_norm_query_norm_divide_output = divide(double_blocks_14_img_attn_norm_query_norm_divide_numerator, double_blocks_14_img_attn_norm_query_norm_sqrt_output)
    double_blocks_14_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_14_tensoritem_2_output, double_blocks_14_img_attn_norm_query_norm_divide_output)
    double_blocks_14_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_14_img_attn_norm_query_norm_multiply_0_output, double_blocks_14_img_attn_norm_query_norm_scale)
    double_blocks_14_img_attn_norm_key_norm_power_output = power(double_blocks_14_tensoritem_3_output, double_blocks_14_img_attn_norm_key_norm_power_exponent)
    double_blocks_14_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_14_img_attn_norm_key_norm_power_output, axis=double_blocks_14_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_14_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_14_img_attn_norm_key_norm_add_output = add(double_blocks_14_img_attn_norm_key_norm_mean_output, double_blocks_14_img_attn_norm_key_norm_add_right)
    double_blocks_14_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_14_img_attn_norm_key_norm_add_output)
    double_blocks_14_img_attn_norm_key_norm_divide_output = divide(double_blocks_14_img_attn_norm_key_norm_divide_numerator, double_blocks_14_img_attn_norm_key_norm_sqrt_output)
    double_blocks_14_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_14_tensoritem_3_output, double_blocks_14_img_attn_norm_key_norm_divide_output)
    double_blocks_14_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_14_img_attn_norm_key_norm_multiply_0_output, double_blocks_14_img_attn_norm_key_norm_scale)
    double_blocks_14_txt_mod_silu_minus = minus(vec)
    double_blocks_14_txt_mod_silu_exp = exp(double_blocks_14_txt_mod_silu_minus)
    double_blocks_14_txt_mod_silu_add = add(double_blocks_14_txt_mod_silu_add_left, double_blocks_14_txt_mod_silu_exp)
    double_blocks_14_txt_mod_silu_output = divide(vec, double_blocks_14_txt_mod_silu_add)
    double_blocks_14_txt_mod_lin_transpose_output = transpose(double_blocks_14_txt_mod_lin_weight, double_blocks_14_txt_mod_lin_transpose_axes)
    double_blocks_14_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_14_txt_mod_silu_output, double_blocks_14_txt_mod_lin_transpose_output)
    double_blocks_14_txt_mod_lin_out = add(double_blocks_14_txt_mod_lin_matrixmultiply_output, double_blocks_14_txt_mod_lin_bias)
    double_blocks_14_txt_mod_tensoritem_0_output = tensor_item(double_blocks_14_txt_mod_lin_out, double_blocks_14_txt_mod_tensoritem_0_index)
    double_blocks_14_txt_mod_split_0_output = split(double_blocks_14_txt_mod_tensoritem_0_output, double_blocks_14_txt_mod_split_0_split_size, double_blocks_14_txt_mod_split_0_axis)
    double_blocks_14_txt_mod_tensoritem_1_output = tensor_item(double_blocks_14_txt_mod_split_0_output, double_blocks_14_txt_mod_tensoritem_1_index)
    double_blocks_14_txt_mod_split_1_output = split(double_blocks_14_txt_mod_tensoritem_1_output, double_blocks_14_txt_mod_split_1_split_size, double_blocks_14_txt_mod_split_1_axis)
    double_blocks_14_txt_mod_tensoritem_2_output = tensor_item(double_blocks_14_txt_mod_split_0_output, double_blocks_14_txt_mod_tensoritem_2_index)
    double_blocks_14_txt_mod_split_2_output = split(double_blocks_14_txt_mod_tensoritem_2_output, double_blocks_14_txt_mod_split_2_split_size, double_blocks_14_txt_mod_split_2_axis)
    double_blocks_14_txt_norm1_mean_output = reduce_mean(double_blocks_13_add_11_output, axis=double_blocks_14_txt_norm1_mean_axis, keepdim=double_blocks_14_txt_norm1_mean_keepdim)
    double_blocks_14_txt_norm1_subtract_output = subtract(double_blocks_13_add_11_output, double_blocks_14_txt_norm1_mean_output)
    double_blocks_14_txt_norm1_variance_output = variance(double_blocks_13_add_11_output, axis=double_blocks_14_txt_norm1_variance_axis, keepdim=double_blocks_14_txt_norm1_variance_keepdim, correction=double_blocks_14_txt_norm1_variance_correction)
    double_blocks_14_txt_norm1_add_output = add(double_blocks_14_txt_norm1_variance_output, double_blocks_14_txt_norm1_add_right)
    double_blocks_14_txt_norm1_sqrt_output = sqrt(double_blocks_14_txt_norm1_add_output)
    double_blocks_14_txt_norm1_divide_output = divide(double_blocks_14_txt_norm1_subtract_output, double_blocks_14_txt_norm1_sqrt_output)
    double_blocks_14_tensoritem_4_output = tensor_item(double_blocks_14_txt_mod_split_1_output, double_blocks_14_tensoritem_4_index)
    double_blocks_14_add_2_output = add(double_blocks_14_add_2_left, double_blocks_14_tensoritem_4_output)
    double_blocks_14_multiply_1_output = multiplication(double_blocks_14_add_2_output, double_blocks_14_txt_norm1_divide_output)
    double_blocks_14_tensoritem_5_output = tensor_item(double_blocks_14_txt_mod_split_1_output, double_blocks_14_tensoritem_5_index)
    double_blocks_14_add_3_output = add(double_blocks_14_multiply_1_output, double_blocks_14_tensoritem_5_output)
    double_blocks_14_txt_attn_qkv_transpose_output = transpose(double_blocks_14_txt_attn_qkv_weight, double_blocks_14_txt_attn_qkv_transpose_axes)
    double_blocks_14_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_14_add_3_output, double_blocks_14_txt_attn_qkv_transpose_output)
    double_blocks_14_txt_qkv = add(double_blocks_14_txt_attn_qkv_matrixmultiply_output, double_blocks_14_txt_attn_qkv_bias)
    double_blocks_14_reshape_1_output = reshape(double_blocks_14_txt_qkv, double_blocks_14_totuple_1_output)
    double_blocks_14_txt_transpose_out = transpose(double_blocks_14_reshape_1_output, double_blocks_14_transpose_1_axes)
    double_blocks_14_tensoritem_6_output = tensor_item(double_blocks_14_txt_transpose_out, double_blocks_14_tensoritem_6_index)
    double_blocks_14_tensoritem_7_output = tensor_item(double_blocks_14_txt_transpose_out, double_blocks_14_tensoritem_7_index)
    double_blocks_14_txt_attn_norm_query_norm_power_output = power(double_blocks_14_tensoritem_6_output, double_blocks_14_txt_attn_norm_query_norm_power_exponent)
    double_blocks_14_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_14_txt_attn_norm_query_norm_power_output, axis=double_blocks_14_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_14_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_14_txt_attn_norm_query_norm_add_output = add(double_blocks_14_txt_attn_norm_query_norm_mean_output, double_blocks_14_txt_attn_norm_query_norm_add_right)
    double_blocks_14_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_14_txt_attn_norm_query_norm_add_output)
    double_blocks_14_txt_attn_norm_query_norm_divide_output = divide(double_blocks_14_txt_attn_norm_query_norm_divide_numerator, double_blocks_14_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_14_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_14_tensoritem_6_output, double_blocks_14_txt_attn_norm_query_norm_divide_output)
    double_blocks_14_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_14_txt_attn_norm_query_norm_multiply_0_output, double_blocks_14_txt_attn_norm_query_norm_scale)
    double_blocks_14_txt_attn_norm_key_norm_power_output = power(double_blocks_14_tensoritem_7_output, double_blocks_14_txt_attn_norm_key_norm_power_exponent)
    double_blocks_14_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_14_txt_attn_norm_key_norm_power_output, axis=double_blocks_14_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_14_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_14_txt_attn_norm_key_norm_add_output = add(double_blocks_14_txt_attn_norm_key_norm_mean_output, double_blocks_14_txt_attn_norm_key_norm_add_right)
    double_blocks_14_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_14_txt_attn_norm_key_norm_add_output)
    double_blocks_14_txt_attn_norm_key_norm_divide_output = divide(double_blocks_14_txt_attn_norm_key_norm_divide_numerator, double_blocks_14_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_14_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_14_tensoritem_7_output, double_blocks_14_txt_attn_norm_key_norm_divide_output)
    double_blocks_14_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_14_txt_attn_norm_key_norm_multiply_0_output, double_blocks_14_txt_attn_norm_key_norm_scale)
    double_blocks_14_q_concat = concat(double_blocks_14_txt_attn_norm_query_norm_multiply_1_output, double_blocks_14_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_14_concat_0_axis)
    double_blocks_14_k_concat = concat(double_blocks_14_txt_attn_norm_key_norm_multiply_1_output, double_blocks_14_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_14_concat_1_axis)
    double_blocks_14_tensoritem_8_output = tensor_item(double_blocks_14_txt_transpose_out, double_blocks_14_tensoritem_8_index)
    double_blocks_14_tensoritem_9_output = tensor_item(double_blocks_14_transpose_out, double_blocks_14_tensoritem_9_index)
    double_blocks_14_v_concat = concat(double_blocks_14_tensoritem_8_output, double_blocks_14_tensoritem_9_output, axis=double_blocks_14_concat_2_axis)
    double_blocks_14_model_model_xq_ = reshape(double_blocks_14_q_concat, double_blocks_14_model_model_totuple_0_output)
    double_blocks_14_model_model_xk_ = reshape(double_blocks_14_k_concat, double_blocks_14_model_model_totuple_1_output)
    double_blocks_14_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_14_model_model_tensoritem_0_index)
    double_blocks_14_model_model_tensoritem_1_output = tensor_item(double_blocks_14_model_model_xq_, double_blocks_14_model_model_tensoritem_1_index)
    double_blocks_14_model_model_multiply_0_output = multiplication(double_blocks_14_model_model_tensoritem_0_output, double_blocks_14_model_model_tensoritem_1_output)
    double_blocks_14_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_14_model_model_tensoritem_2_index)
    double_blocks_14_model_model_tensoritem_3_output = tensor_item(double_blocks_14_model_model_xq_, double_blocks_14_model_model_tensoritem_3_index)
    double_blocks_14_model_model_multiply_1_output = multiplication(double_blocks_14_model_model_tensoritem_2_output, double_blocks_14_model_model_tensoritem_3_output)
    double_blocks_14_model_model_add_0_output = add(double_blocks_14_model_model_multiply_0_output, double_blocks_14_model_model_multiply_1_output)
    double_blocks_14_model_q_out = reshape(double_blocks_14_model_model_add_0_output, double_blocks_14_model_model_shape_0_output)
    double_blocks_14_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_14_model_model_tensoritem_4_index)
    double_blocks_14_model_model_tensoritem_5_output = tensor_item(double_blocks_14_model_model_xk_, double_blocks_14_model_model_tensoritem_5_index)
    double_blocks_14_model_model_multiply_2_output = multiplication(double_blocks_14_model_model_tensoritem_4_output, double_blocks_14_model_model_tensoritem_5_output)
    double_blocks_14_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_14_model_model_tensoritem_6_index)
    double_blocks_14_model_model_tensoritem_7_output = tensor_item(double_blocks_14_model_model_xk_, double_blocks_14_model_model_tensoritem_7_index)
    double_blocks_14_model_model_multiply_3_output = multiplication(double_blocks_14_model_model_tensoritem_6_output, double_blocks_14_model_model_tensoritem_7_output)
    double_blocks_14_model_model_add_1_output = add(double_blocks_14_model_model_multiply_2_output, double_blocks_14_model_model_multiply_3_output)
    double_blocks_14_model_k_out = reshape(double_blocks_14_model_model_add_1_output, double_blocks_14_model_model_shape_1_output)
    double_blocks_14_model_context = scaled_dot_product_attention(double_blocks_14_model_q_out, double_blocks_14_model_k_out, double_blocks_14_v_concat, double_blocks_14_model_scaleddotproduct_attn_mask)
    double_blocks_14_model_transpose_output = transpose(double_blocks_14_model_context, double_blocks_14_model_transpose_axes)
    double_blocks_14_attn = reshape(double_blocks_14_model_transpose_output, double_blocks_14_model_totuple_output)
    double_blocks_14_tensoritem_10_output = tensor_item(double_blocks_14_attn, double_blocks_14_tensoritem_10_index)
    double_blocks_14_img_attn_proj_transpose_output = transpose(double_blocks_14_img_attn_proj_weight, double_blocks_14_img_attn_proj_transpose_axes)
    double_blocks_14_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_14_tensoritem_10_output, double_blocks_14_img_attn_proj_transpose_output)
    double_blocks_14_img_proj = add(double_blocks_14_img_attn_proj_matrixmultiply_output, double_blocks_14_img_attn_proj_bias)
    double_blocks_14_tensoritem_11_output = tensor_item(double_blocks_14_img_mod_split_1_output, double_blocks_14_tensoritem_11_index)
    double_blocks_14_multiply_2_output = multiplication(double_blocks_14_tensoritem_11_output, double_blocks_14_img_proj)
    double_blocks_14_add_4_output = add(double_blocks_13_add_10_output, double_blocks_14_multiply_2_output)
    double_blocks_14_img_norm2_mean_output = reduce_mean(double_blocks_14_add_4_output, axis=double_blocks_14_img_norm2_mean_axis, keepdim=double_blocks_14_img_norm2_mean_keepdim)
    double_blocks_14_img_norm2_subtract_output = subtract(double_blocks_14_add_4_output, double_blocks_14_img_norm2_mean_output)
    double_blocks_14_img_norm2_variance_output = variance(double_blocks_14_add_4_output, axis=double_blocks_14_img_norm2_variance_axis, keepdim=double_blocks_14_img_norm2_variance_keepdim, correction=double_blocks_14_img_norm2_variance_correction)
    double_blocks_14_img_norm2_add_output = add(double_blocks_14_img_norm2_variance_output, double_blocks_14_img_norm2_add_right)
    double_blocks_14_img_norm2_sqrt_output = sqrt(double_blocks_14_img_norm2_add_output)
    double_blocks_14_img_norm2_divide_output = divide(double_blocks_14_img_norm2_subtract_output, double_blocks_14_img_norm2_sqrt_output)
    double_blocks_14_tensoritem_12_output = tensor_item(double_blocks_14_img_mod_split_2_output, double_blocks_14_tensoritem_12_index)
    double_blocks_14_add_5_output = add(double_blocks_14_add_5_left, double_blocks_14_tensoritem_12_output)
    double_blocks_14_multiply_3_output = multiplication(double_blocks_14_add_5_output, double_blocks_14_img_norm2_divide_output)
    double_blocks_14_tensoritem_13_output = tensor_item(double_blocks_14_img_mod_split_2_output, double_blocks_14_tensoritem_13_index)
    double_blocks_14_add_6_output = add(double_blocks_14_multiply_3_output, double_blocks_14_tensoritem_13_output)
    double_blocks_14_img_mlp_0_transpose_output = transpose(double_blocks_14_img_mlp_0_weight, double_blocks_14_img_mlp_0_transpose_axes)
    double_blocks_14_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_14_add_6_output, double_blocks_14_img_mlp_0_transpose_output)
    double_blocks_14_img_mlp_0_output = add(double_blocks_14_img_mlp_0_matrixmultiply_output, double_blocks_14_img_mlp_0_bias)
    double_blocks_14_img_mlp_gelu_output = gelu(double_blocks_14_img_mlp_0_output, double_blocks_14_img_mlp_gelu_approximate)
    double_blocks_14_img_mlp_2_transpose_output = transpose(double_blocks_14_img_mlp_2_weight, double_blocks_14_img_mlp_2_transpose_axes)
    double_blocks_14_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_14_img_mlp_gelu_output, double_blocks_14_img_mlp_2_transpose_output)
    double_blocks_14_img_mlp = add(double_blocks_14_img_mlp_2_matrixmultiply_output, double_blocks_14_img_mlp_2_bias)
    double_blocks_14_tensoritem_14_output = tensor_item(double_blocks_14_attn, double_blocks_14_tensoritem_14_index)
    double_blocks_14_txt_attn_proj_transpose_output = transpose(double_blocks_14_txt_attn_proj_weight, double_blocks_14_txt_attn_proj_transpose_axes)
    double_blocks_14_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_14_tensoritem_14_output, double_blocks_14_txt_attn_proj_transpose_output)
    double_blocks_14_txt_proj = add(double_blocks_14_txt_attn_proj_matrixmultiply_output, double_blocks_14_txt_attn_proj_bias)
    double_blocks_14_tensoritem_15_output = tensor_item(double_blocks_14_txt_mod_split_1_output, double_blocks_14_tensoritem_15_index)
    double_blocks_14_multiply_4_output = multiplication(double_blocks_14_tensoritem_15_output, double_blocks_14_txt_proj)
    double_blocks_14_add_7_output = add(double_blocks_13_add_11_output, double_blocks_14_multiply_4_output)
    double_blocks_14_txt_norm2_mean_output = reduce_mean(double_blocks_14_add_7_output, axis=double_blocks_14_txt_norm2_mean_axis, keepdim=double_blocks_14_txt_norm2_mean_keepdim)
    double_blocks_14_txt_norm2_subtract_output = subtract(double_blocks_14_add_7_output, double_blocks_14_txt_norm2_mean_output)
    double_blocks_14_txt_norm2_variance_output = variance(double_blocks_14_add_7_output, axis=double_blocks_14_txt_norm2_variance_axis, keepdim=double_blocks_14_txt_norm2_variance_keepdim, correction=double_blocks_14_txt_norm2_variance_correction)
    double_blocks_14_txt_norm2_add_output = add(double_blocks_14_txt_norm2_variance_output, double_blocks_14_txt_norm2_add_right)
    double_blocks_14_txt_norm2_sqrt_output = sqrt(double_blocks_14_txt_norm2_add_output)
    double_blocks_14_txt_norm2_divide_output = divide(double_blocks_14_txt_norm2_subtract_output, double_blocks_14_txt_norm2_sqrt_output)
    double_blocks_14_tensoritem_16_output = tensor_item(double_blocks_14_txt_mod_split_2_output, double_blocks_14_tensoritem_16_index)
    double_blocks_14_add_8_output = add(double_blocks_14_add_8_left, double_blocks_14_tensoritem_16_output)
    double_blocks_14_multiply_5_output = multiplication(double_blocks_14_add_8_output, double_blocks_14_txt_norm2_divide_output)
    double_blocks_14_tensoritem_17_output = tensor_item(double_blocks_14_txt_mod_split_2_output, double_blocks_14_tensoritem_17_index)
    double_blocks_14_add_9_output = add(double_blocks_14_multiply_5_output, double_blocks_14_tensoritem_17_output)
    double_blocks_14_txt_mlp_0_transpose_output = transpose(double_blocks_14_txt_mlp_0_weight, double_blocks_14_txt_mlp_0_transpose_axes)
    double_blocks_14_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_14_add_9_output, double_blocks_14_txt_mlp_0_transpose_output)
    double_blocks_14_txt_mlp_0_output = add(double_blocks_14_txt_mlp_0_matrixmultiply_output, double_blocks_14_txt_mlp_0_bias)
    double_blocks_14_txt_mlp_gelu_output = gelu(double_blocks_14_txt_mlp_0_output, double_blocks_14_txt_mlp_gelu_approximate)
    double_blocks_14_txt_mlp_2_transpose_output = transpose(double_blocks_14_txt_mlp_2_weight, double_blocks_14_txt_mlp_2_transpose_axes)
    double_blocks_14_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_14_txt_mlp_gelu_output, double_blocks_14_txt_mlp_2_transpose_output)
    double_blocks_14_txt_mlp = add(double_blocks_14_txt_mlp_2_matrixmultiply_output, double_blocks_14_txt_mlp_2_bias)
    double_blocks_14_tensoritem_18_output = tensor_item(double_blocks_14_img_mod_split_2_output, double_blocks_14_tensoritem_18_index)
    double_blocks_14_multiply_6_output = multiplication(double_blocks_14_tensoritem_18_output, double_blocks_14_img_mlp)
    double_blocks_14_add_10_output = add(double_blocks_14_add_4_output, double_blocks_14_multiply_6_output)
    double_blocks_14_tensoritem_19_output = tensor_item(double_blocks_14_txt_mod_split_2_output, double_blocks_14_tensoritem_19_index)
    double_blocks_14_multiply_7_output = multiplication(double_blocks_14_tensoritem_19_output, double_blocks_14_txt_mlp)
    double_blocks_14_add_11_output = add(double_blocks_14_add_7_output, double_blocks_14_multiply_7_output)
    double_blocks_15_img_mod_silu_minus = minus(vec)
    double_blocks_15_img_mod_silu_exp = exp(double_blocks_15_img_mod_silu_minus)
    double_blocks_15_img_mod_silu_add = add(double_blocks_15_img_mod_silu_add_left, double_blocks_15_img_mod_silu_exp)
    double_blocks_15_img_mod_silu_output = divide(vec, double_blocks_15_img_mod_silu_add)
    double_blocks_15_img_mod_lin_transpose_output = transpose(double_blocks_15_img_mod_lin_weight, double_blocks_15_img_mod_lin_transpose_axes)
    double_blocks_15_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_15_img_mod_silu_output, double_blocks_15_img_mod_lin_transpose_output)
    double_blocks_15_img_mod_lin_out = add(double_blocks_15_img_mod_lin_matrixmultiply_output, double_blocks_15_img_mod_lin_bias)
    double_blocks_15_img_mod_tensoritem_0_output = tensor_item(double_blocks_15_img_mod_lin_out, double_blocks_15_img_mod_tensoritem_0_index)
    double_blocks_15_img_mod_split_0_output = split(double_blocks_15_img_mod_tensoritem_0_output, double_blocks_15_img_mod_split_0_split_size, double_blocks_15_img_mod_split_0_axis)
    double_blocks_15_img_mod_tensoritem_1_output = tensor_item(double_blocks_15_img_mod_split_0_output, double_blocks_15_img_mod_tensoritem_1_index)
    double_blocks_15_img_mod_split_1_output = split(double_blocks_15_img_mod_tensoritem_1_output, double_blocks_15_img_mod_split_1_split_size, double_blocks_15_img_mod_split_1_axis)
    double_blocks_15_img_mod_tensoritem_2_output = tensor_item(double_blocks_15_img_mod_split_0_output, double_blocks_15_img_mod_tensoritem_2_index)
    double_blocks_15_img_mod_split_2_output = split(double_blocks_15_img_mod_tensoritem_2_output, double_blocks_15_img_mod_split_2_split_size, double_blocks_15_img_mod_split_2_axis)
    double_blocks_15_img_norm1_mean_output = reduce_mean(double_blocks_14_add_10_output, axis=double_blocks_15_img_norm1_mean_axis, keepdim=double_blocks_15_img_norm1_mean_keepdim)
    double_blocks_15_img_norm1_subtract_output = subtract(double_blocks_14_add_10_output, double_blocks_15_img_norm1_mean_output)
    double_blocks_15_img_norm1_variance_output = variance(double_blocks_14_add_10_output, axis=double_blocks_15_img_norm1_variance_axis, keepdim=double_blocks_15_img_norm1_variance_keepdim, correction=double_blocks_15_img_norm1_variance_correction)
    double_blocks_15_img_norm1_add_output = add(double_blocks_15_img_norm1_variance_output, double_blocks_15_img_norm1_add_right)
    double_blocks_15_img_norm1_sqrt_output = sqrt(double_blocks_15_img_norm1_add_output)
    double_blocks_15_img_norm1_divide_output = divide(double_blocks_15_img_norm1_subtract_output, double_blocks_15_img_norm1_sqrt_output)
    double_blocks_15_tensoritem_0_output = tensor_item(double_blocks_15_img_mod_split_1_output, double_blocks_15_tensoritem_0_index)
    double_blocks_15_add_0_output = add(double_blocks_15_add_0_left, double_blocks_15_tensoritem_0_output)
    double_blocks_15_multiply_0_output = multiplication(double_blocks_15_add_0_output, double_blocks_15_img_norm1_divide_output)
    double_blocks_15_tensoritem_1_output = tensor_item(double_blocks_15_img_mod_split_1_output, double_blocks_15_tensoritem_1_index)
    double_blocks_15_add_1_output = add(double_blocks_15_multiply_0_output, double_blocks_15_tensoritem_1_output)
    double_blocks_15_img_attn_qkv_transpose_output = transpose(double_blocks_15_img_attn_qkv_weight, double_blocks_15_img_attn_qkv_transpose_axes)
    double_blocks_15_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_15_add_1_output, double_blocks_15_img_attn_qkv_transpose_output)
    double_blocks_15_img_qkv = add(double_blocks_15_img_attn_qkv_matrixmultiply_output, double_blocks_15_img_attn_qkv_bias)
    double_blocks_15_reshape_0_output = reshape(double_blocks_15_img_qkv, double_blocks_15_totuple_0_output)
    double_blocks_15_transpose_out = transpose(double_blocks_15_reshape_0_output, double_blocks_15_transpose_0_axes)
    double_blocks_15_tensoritem_2_output = tensor_item(double_blocks_15_transpose_out, double_blocks_15_tensoritem_2_index)
    double_blocks_15_tensoritem_3_output = tensor_item(double_blocks_15_transpose_out, double_blocks_15_tensoritem_3_index)
    double_blocks_15_img_attn_norm_query_norm_power_output = power(double_blocks_15_tensoritem_2_output, double_blocks_15_img_attn_norm_query_norm_power_exponent)
    double_blocks_15_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_15_img_attn_norm_query_norm_power_output, axis=double_blocks_15_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_15_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_15_img_attn_norm_query_norm_add_output = add(double_blocks_15_img_attn_norm_query_norm_mean_output, double_blocks_15_img_attn_norm_query_norm_add_right)
    double_blocks_15_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_15_img_attn_norm_query_norm_add_output)
    double_blocks_15_img_attn_norm_query_norm_divide_output = divide(double_blocks_15_img_attn_norm_query_norm_divide_numerator, double_blocks_15_img_attn_norm_query_norm_sqrt_output)
    double_blocks_15_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_15_tensoritem_2_output, double_blocks_15_img_attn_norm_query_norm_divide_output)
    double_blocks_15_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_15_img_attn_norm_query_norm_multiply_0_output, double_blocks_15_img_attn_norm_query_norm_scale)
    double_blocks_15_img_attn_norm_key_norm_power_output = power(double_blocks_15_tensoritem_3_output, double_blocks_15_img_attn_norm_key_norm_power_exponent)
    double_blocks_15_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_15_img_attn_norm_key_norm_power_output, axis=double_blocks_15_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_15_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_15_img_attn_norm_key_norm_add_output = add(double_blocks_15_img_attn_norm_key_norm_mean_output, double_blocks_15_img_attn_norm_key_norm_add_right)
    double_blocks_15_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_15_img_attn_norm_key_norm_add_output)
    double_blocks_15_img_attn_norm_key_norm_divide_output = divide(double_blocks_15_img_attn_norm_key_norm_divide_numerator, double_blocks_15_img_attn_norm_key_norm_sqrt_output)
    double_blocks_15_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_15_tensoritem_3_output, double_blocks_15_img_attn_norm_key_norm_divide_output)
    double_blocks_15_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_15_img_attn_norm_key_norm_multiply_0_output, double_blocks_15_img_attn_norm_key_norm_scale)
    double_blocks_15_txt_mod_silu_minus = minus(vec)
    double_blocks_15_txt_mod_silu_exp = exp(double_blocks_15_txt_mod_silu_minus)
    double_blocks_15_txt_mod_silu_add = add(double_blocks_15_txt_mod_silu_add_left, double_blocks_15_txt_mod_silu_exp)
    double_blocks_15_txt_mod_silu_output = divide(vec, double_blocks_15_txt_mod_silu_add)
    double_blocks_15_txt_mod_lin_transpose_output = transpose(double_blocks_15_txt_mod_lin_weight, double_blocks_15_txt_mod_lin_transpose_axes)
    double_blocks_15_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_15_txt_mod_silu_output, double_blocks_15_txt_mod_lin_transpose_output)
    double_blocks_15_txt_mod_lin_out = add(double_blocks_15_txt_mod_lin_matrixmultiply_output, double_blocks_15_txt_mod_lin_bias)
    double_blocks_15_txt_mod_tensoritem_0_output = tensor_item(double_blocks_15_txt_mod_lin_out, double_blocks_15_txt_mod_tensoritem_0_index)
    double_blocks_15_txt_mod_split_0_output = split(double_blocks_15_txt_mod_tensoritem_0_output, double_blocks_15_txt_mod_split_0_split_size, double_blocks_15_txt_mod_split_0_axis)
    double_blocks_15_txt_mod_tensoritem_1_output = tensor_item(double_blocks_15_txt_mod_split_0_output, double_blocks_15_txt_mod_tensoritem_1_index)
    double_blocks_15_txt_mod_split_1_output = split(double_blocks_15_txt_mod_tensoritem_1_output, double_blocks_15_txt_mod_split_1_split_size, double_blocks_15_txt_mod_split_1_axis)
    double_blocks_15_txt_mod_tensoritem_2_output = tensor_item(double_blocks_15_txt_mod_split_0_output, double_blocks_15_txt_mod_tensoritem_2_index)
    double_blocks_15_txt_mod_split_2_output = split(double_blocks_15_txt_mod_tensoritem_2_output, double_blocks_15_txt_mod_split_2_split_size, double_blocks_15_txt_mod_split_2_axis)
    double_blocks_15_txt_norm1_mean_output = reduce_mean(double_blocks_14_add_11_output, axis=double_blocks_15_txt_norm1_mean_axis, keepdim=double_blocks_15_txt_norm1_mean_keepdim)
    double_blocks_15_txt_norm1_subtract_output = subtract(double_blocks_14_add_11_output, double_blocks_15_txt_norm1_mean_output)
    double_blocks_15_txt_norm1_variance_output = variance(double_blocks_14_add_11_output, axis=double_blocks_15_txt_norm1_variance_axis, keepdim=double_blocks_15_txt_norm1_variance_keepdim, correction=double_blocks_15_txt_norm1_variance_correction)
    double_blocks_15_txt_norm1_add_output = add(double_blocks_15_txt_norm1_variance_output, double_blocks_15_txt_norm1_add_right)
    double_blocks_15_txt_norm1_sqrt_output = sqrt(double_blocks_15_txt_norm1_add_output)
    double_blocks_15_txt_norm1_divide_output = divide(double_blocks_15_txt_norm1_subtract_output, double_blocks_15_txt_norm1_sqrt_output)
    double_blocks_15_tensoritem_4_output = tensor_item(double_blocks_15_txt_mod_split_1_output, double_blocks_15_tensoritem_4_index)
    double_blocks_15_add_2_output = add(double_blocks_15_add_2_left, double_blocks_15_tensoritem_4_output)
    double_blocks_15_multiply_1_output = multiplication(double_blocks_15_add_2_output, double_blocks_15_txt_norm1_divide_output)
    double_blocks_15_tensoritem_5_output = tensor_item(double_blocks_15_txt_mod_split_1_output, double_blocks_15_tensoritem_5_index)
    double_blocks_15_add_3_output = add(double_blocks_15_multiply_1_output, double_blocks_15_tensoritem_5_output)
    double_blocks_15_txt_attn_qkv_transpose_output = transpose(double_blocks_15_txt_attn_qkv_weight, double_blocks_15_txt_attn_qkv_transpose_axes)
    double_blocks_15_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_15_add_3_output, double_blocks_15_txt_attn_qkv_transpose_output)
    double_blocks_15_txt_qkv = add(double_blocks_15_txt_attn_qkv_matrixmultiply_output, double_blocks_15_txt_attn_qkv_bias)
    double_blocks_15_reshape_1_output = reshape(double_blocks_15_txt_qkv, double_blocks_15_totuple_1_output)
    double_blocks_15_txt_transpose_out = transpose(double_blocks_15_reshape_1_output, double_blocks_15_transpose_1_axes)
    double_blocks_15_tensoritem_6_output = tensor_item(double_blocks_15_txt_transpose_out, double_blocks_15_tensoritem_6_index)
    double_blocks_15_tensoritem_7_output = tensor_item(double_blocks_15_txt_transpose_out, double_blocks_15_tensoritem_7_index)
    double_blocks_15_txt_attn_norm_query_norm_power_output = power(double_blocks_15_tensoritem_6_output, double_blocks_15_txt_attn_norm_query_norm_power_exponent)
    double_blocks_15_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_15_txt_attn_norm_query_norm_power_output, axis=double_blocks_15_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_15_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_15_txt_attn_norm_query_norm_add_output = add(double_blocks_15_txt_attn_norm_query_norm_mean_output, double_blocks_15_txt_attn_norm_query_norm_add_right)
    double_blocks_15_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_15_txt_attn_norm_query_norm_add_output)
    double_blocks_15_txt_attn_norm_query_norm_divide_output = divide(double_blocks_15_txt_attn_norm_query_norm_divide_numerator, double_blocks_15_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_15_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_15_tensoritem_6_output, double_blocks_15_txt_attn_norm_query_norm_divide_output)
    double_blocks_15_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_15_txt_attn_norm_query_norm_multiply_0_output, double_blocks_15_txt_attn_norm_query_norm_scale)
    double_blocks_15_txt_attn_norm_key_norm_power_output = power(double_blocks_15_tensoritem_7_output, double_blocks_15_txt_attn_norm_key_norm_power_exponent)
    double_blocks_15_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_15_txt_attn_norm_key_norm_power_output, axis=double_blocks_15_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_15_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_15_txt_attn_norm_key_norm_add_output = add(double_blocks_15_txt_attn_norm_key_norm_mean_output, double_blocks_15_txt_attn_norm_key_norm_add_right)
    double_blocks_15_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_15_txt_attn_norm_key_norm_add_output)
    double_blocks_15_txt_attn_norm_key_norm_divide_output = divide(double_blocks_15_txt_attn_norm_key_norm_divide_numerator, double_blocks_15_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_15_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_15_tensoritem_7_output, double_blocks_15_txt_attn_norm_key_norm_divide_output)
    double_blocks_15_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_15_txt_attn_norm_key_norm_multiply_0_output, double_blocks_15_txt_attn_norm_key_norm_scale)
    double_blocks_15_q_concat = concat(double_blocks_15_txt_attn_norm_query_norm_multiply_1_output, double_blocks_15_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_15_concat_0_axis)
    double_blocks_15_k_concat = concat(double_blocks_15_txt_attn_norm_key_norm_multiply_1_output, double_blocks_15_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_15_concat_1_axis)
    double_blocks_15_tensoritem_8_output = tensor_item(double_blocks_15_txt_transpose_out, double_blocks_15_tensoritem_8_index)
    double_blocks_15_tensoritem_9_output = tensor_item(double_blocks_15_transpose_out, double_blocks_15_tensoritem_9_index)
    double_blocks_15_v_concat = concat(double_blocks_15_tensoritem_8_output, double_blocks_15_tensoritem_9_output, axis=double_blocks_15_concat_2_axis)
    double_blocks_15_model_model_xq_ = reshape(double_blocks_15_q_concat, double_blocks_15_model_model_totuple_0_output)
    double_blocks_15_model_model_xk_ = reshape(double_blocks_15_k_concat, double_blocks_15_model_model_totuple_1_output)
    double_blocks_15_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_15_model_model_tensoritem_0_index)
    double_blocks_15_model_model_tensoritem_1_output = tensor_item(double_blocks_15_model_model_xq_, double_blocks_15_model_model_tensoritem_1_index)
    double_blocks_15_model_model_multiply_0_output = multiplication(double_blocks_15_model_model_tensoritem_0_output, double_blocks_15_model_model_tensoritem_1_output)
    double_blocks_15_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_15_model_model_tensoritem_2_index)
    double_blocks_15_model_model_tensoritem_3_output = tensor_item(double_blocks_15_model_model_xq_, double_blocks_15_model_model_tensoritem_3_index)
    double_blocks_15_model_model_multiply_1_output = multiplication(double_blocks_15_model_model_tensoritem_2_output, double_blocks_15_model_model_tensoritem_3_output)
    double_blocks_15_model_model_add_0_output = add(double_blocks_15_model_model_multiply_0_output, double_blocks_15_model_model_multiply_1_output)
    double_blocks_15_model_q_out = reshape(double_blocks_15_model_model_add_0_output, double_blocks_15_model_model_shape_0_output)
    double_blocks_15_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_15_model_model_tensoritem_4_index)
    double_blocks_15_model_model_tensoritem_5_output = tensor_item(double_blocks_15_model_model_xk_, double_blocks_15_model_model_tensoritem_5_index)
    double_blocks_15_model_model_multiply_2_output = multiplication(double_blocks_15_model_model_tensoritem_4_output, double_blocks_15_model_model_tensoritem_5_output)
    double_blocks_15_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_15_model_model_tensoritem_6_index)
    double_blocks_15_model_model_tensoritem_7_output = tensor_item(double_blocks_15_model_model_xk_, double_blocks_15_model_model_tensoritem_7_index)
    double_blocks_15_model_model_multiply_3_output = multiplication(double_blocks_15_model_model_tensoritem_6_output, double_blocks_15_model_model_tensoritem_7_output)
    double_blocks_15_model_model_add_1_output = add(double_blocks_15_model_model_multiply_2_output, double_blocks_15_model_model_multiply_3_output)
    double_blocks_15_model_k_out = reshape(double_blocks_15_model_model_add_1_output, double_blocks_15_model_model_shape_1_output)
    double_blocks_15_model_context = scaled_dot_product_attention(double_blocks_15_model_q_out, double_blocks_15_model_k_out, double_blocks_15_v_concat, double_blocks_15_model_scaleddotproduct_attn_mask)
    double_blocks_15_model_transpose_output = transpose(double_blocks_15_model_context, double_blocks_15_model_transpose_axes)
    double_blocks_15_attn = reshape(double_blocks_15_model_transpose_output, double_blocks_15_model_totuple_output)
    double_blocks_15_tensoritem_10_output = tensor_item(double_blocks_15_attn, double_blocks_15_tensoritem_10_index)
    double_blocks_15_img_attn_proj_transpose_output = transpose(double_blocks_15_img_attn_proj_weight, double_blocks_15_img_attn_proj_transpose_axes)
    double_blocks_15_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_15_tensoritem_10_output, double_blocks_15_img_attn_proj_transpose_output)
    double_blocks_15_img_proj = add(double_blocks_15_img_attn_proj_matrixmultiply_output, double_blocks_15_img_attn_proj_bias)
    double_blocks_15_tensoritem_11_output = tensor_item(double_blocks_15_img_mod_split_1_output, double_blocks_15_tensoritem_11_index)
    double_blocks_15_multiply_2_output = multiplication(double_blocks_15_tensoritem_11_output, double_blocks_15_img_proj)
    double_blocks_15_add_4_output = add(double_blocks_14_add_10_output, double_blocks_15_multiply_2_output)
    double_blocks_15_img_norm2_mean_output = reduce_mean(double_blocks_15_add_4_output, axis=double_blocks_15_img_norm2_mean_axis, keepdim=double_blocks_15_img_norm2_mean_keepdim)
    double_blocks_15_img_norm2_subtract_output = subtract(double_blocks_15_add_4_output, double_blocks_15_img_norm2_mean_output)
    double_blocks_15_img_norm2_variance_output = variance(double_blocks_15_add_4_output, axis=double_blocks_15_img_norm2_variance_axis, keepdim=double_blocks_15_img_norm2_variance_keepdim, correction=double_blocks_15_img_norm2_variance_correction)
    double_blocks_15_img_norm2_add_output = add(double_blocks_15_img_norm2_variance_output, double_blocks_15_img_norm2_add_right)
    double_blocks_15_img_norm2_sqrt_output = sqrt(double_blocks_15_img_norm2_add_output)
    double_blocks_15_img_norm2_divide_output = divide(double_blocks_15_img_norm2_subtract_output, double_blocks_15_img_norm2_sqrt_output)
    double_blocks_15_tensoritem_12_output = tensor_item(double_blocks_15_img_mod_split_2_output, double_blocks_15_tensoritem_12_index)
    double_blocks_15_add_5_output = add(double_blocks_15_add_5_left, double_blocks_15_tensoritem_12_output)
    double_blocks_15_multiply_3_output = multiplication(double_blocks_15_add_5_output, double_blocks_15_img_norm2_divide_output)
    double_blocks_15_tensoritem_13_output = tensor_item(double_blocks_15_img_mod_split_2_output, double_blocks_15_tensoritem_13_index)
    double_blocks_15_add_6_output = add(double_blocks_15_multiply_3_output, double_blocks_15_tensoritem_13_output)
    double_blocks_15_img_mlp_0_transpose_output = transpose(double_blocks_15_img_mlp_0_weight, double_blocks_15_img_mlp_0_transpose_axes)
    double_blocks_15_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_15_add_6_output, double_blocks_15_img_mlp_0_transpose_output)
    double_blocks_15_img_mlp_0_output = add(double_blocks_15_img_mlp_0_matrixmultiply_output, double_blocks_15_img_mlp_0_bias)
    double_blocks_15_img_mlp_gelu_output = gelu(double_blocks_15_img_mlp_0_output, double_blocks_15_img_mlp_gelu_approximate)
    double_blocks_15_img_mlp_2_transpose_output = transpose(double_blocks_15_img_mlp_2_weight, double_blocks_15_img_mlp_2_transpose_axes)
    double_blocks_15_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_15_img_mlp_gelu_output, double_blocks_15_img_mlp_2_transpose_output)
    double_blocks_15_img_mlp = add(double_blocks_15_img_mlp_2_matrixmultiply_output, double_blocks_15_img_mlp_2_bias)
    double_blocks_15_tensoritem_14_output = tensor_item(double_blocks_15_attn, double_blocks_15_tensoritem_14_index)
    double_blocks_15_txt_attn_proj_transpose_output = transpose(double_blocks_15_txt_attn_proj_weight, double_blocks_15_txt_attn_proj_transpose_axes)
    double_blocks_15_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_15_tensoritem_14_output, double_blocks_15_txt_attn_proj_transpose_output)
    double_blocks_15_txt_proj = add(double_blocks_15_txt_attn_proj_matrixmultiply_output, double_blocks_15_txt_attn_proj_bias)
    double_blocks_15_tensoritem_15_output = tensor_item(double_blocks_15_txt_mod_split_1_output, double_blocks_15_tensoritem_15_index)
    double_blocks_15_multiply_4_output = multiplication(double_blocks_15_tensoritem_15_output, double_blocks_15_txt_proj)
    double_blocks_15_add_7_output = add(double_blocks_14_add_11_output, double_blocks_15_multiply_4_output)
    double_blocks_15_txt_norm2_mean_output = reduce_mean(double_blocks_15_add_7_output, axis=double_blocks_15_txt_norm2_mean_axis, keepdim=double_blocks_15_txt_norm2_mean_keepdim)
    double_blocks_15_txt_norm2_subtract_output = subtract(double_blocks_15_add_7_output, double_blocks_15_txt_norm2_mean_output)
    double_blocks_15_txt_norm2_variance_output = variance(double_blocks_15_add_7_output, axis=double_blocks_15_txt_norm2_variance_axis, keepdim=double_blocks_15_txt_norm2_variance_keepdim, correction=double_blocks_15_txt_norm2_variance_correction)
    double_blocks_15_txt_norm2_add_output = add(double_blocks_15_txt_norm2_variance_output, double_blocks_15_txt_norm2_add_right)
    double_blocks_15_txt_norm2_sqrt_output = sqrt(double_blocks_15_txt_norm2_add_output)
    double_blocks_15_txt_norm2_divide_output = divide(double_blocks_15_txt_norm2_subtract_output, double_blocks_15_txt_norm2_sqrt_output)
    double_blocks_15_tensoritem_16_output = tensor_item(double_blocks_15_txt_mod_split_2_output, double_blocks_15_tensoritem_16_index)
    double_blocks_15_add_8_output = add(double_blocks_15_add_8_left, double_blocks_15_tensoritem_16_output)
    double_blocks_15_multiply_5_output = multiplication(double_blocks_15_add_8_output, double_blocks_15_txt_norm2_divide_output)
    double_blocks_15_tensoritem_17_output = tensor_item(double_blocks_15_txt_mod_split_2_output, double_blocks_15_tensoritem_17_index)
    double_blocks_15_add_9_output = add(double_blocks_15_multiply_5_output, double_blocks_15_tensoritem_17_output)
    double_blocks_15_txt_mlp_0_transpose_output = transpose(double_blocks_15_txt_mlp_0_weight, double_blocks_15_txt_mlp_0_transpose_axes)
    double_blocks_15_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_15_add_9_output, double_blocks_15_txt_mlp_0_transpose_output)
    double_blocks_15_txt_mlp_0_output = add(double_blocks_15_txt_mlp_0_matrixmultiply_output, double_blocks_15_txt_mlp_0_bias)
    double_blocks_15_txt_mlp_gelu_output = gelu(double_blocks_15_txt_mlp_0_output, double_blocks_15_txt_mlp_gelu_approximate)
    double_blocks_15_txt_mlp_2_transpose_output = transpose(double_blocks_15_txt_mlp_2_weight, double_blocks_15_txt_mlp_2_transpose_axes)
    double_blocks_15_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_15_txt_mlp_gelu_output, double_blocks_15_txt_mlp_2_transpose_output)
    double_blocks_15_txt_mlp = add(double_blocks_15_txt_mlp_2_matrixmultiply_output, double_blocks_15_txt_mlp_2_bias)
    double_blocks_15_tensoritem_18_output = tensor_item(double_blocks_15_img_mod_split_2_output, double_blocks_15_tensoritem_18_index)
    double_blocks_15_multiply_6_output = multiplication(double_blocks_15_tensoritem_18_output, double_blocks_15_img_mlp)
    double_blocks_15_add_10_output = add(double_blocks_15_add_4_output, double_blocks_15_multiply_6_output)
    double_blocks_15_tensoritem_19_output = tensor_item(double_blocks_15_txt_mod_split_2_output, double_blocks_15_tensoritem_19_index)
    double_blocks_15_multiply_7_output = multiplication(double_blocks_15_tensoritem_19_output, double_blocks_15_txt_mlp)
    double_blocks_15_add_11_output = add(double_blocks_15_add_7_output, double_blocks_15_multiply_7_output)
    double_blocks_16_img_mod_silu_minus = minus(vec)
    double_blocks_16_img_mod_silu_exp = exp(double_blocks_16_img_mod_silu_minus)
    double_blocks_16_img_mod_silu_add = add(double_blocks_16_img_mod_silu_add_left, double_blocks_16_img_mod_silu_exp)
    double_blocks_16_img_mod_silu_output = divide(vec, double_blocks_16_img_mod_silu_add)
    double_blocks_16_img_mod_lin_transpose_output = transpose(double_blocks_16_img_mod_lin_weight, double_blocks_16_img_mod_lin_transpose_axes)
    double_blocks_16_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_16_img_mod_silu_output, double_blocks_16_img_mod_lin_transpose_output)
    double_blocks_16_img_mod_lin_out = add(double_blocks_16_img_mod_lin_matrixmultiply_output, double_blocks_16_img_mod_lin_bias)
    double_blocks_16_img_mod_tensoritem_0_output = tensor_item(double_blocks_16_img_mod_lin_out, double_blocks_16_img_mod_tensoritem_0_index)
    double_blocks_16_img_mod_split_0_output = split(double_blocks_16_img_mod_tensoritem_0_output, double_blocks_16_img_mod_split_0_split_size, double_blocks_16_img_mod_split_0_axis)
    double_blocks_16_img_mod_tensoritem_1_output = tensor_item(double_blocks_16_img_mod_split_0_output, double_blocks_16_img_mod_tensoritem_1_index)
    double_blocks_16_img_mod_split_1_output = split(double_blocks_16_img_mod_tensoritem_1_output, double_blocks_16_img_mod_split_1_split_size, double_blocks_16_img_mod_split_1_axis)
    double_blocks_16_img_mod_tensoritem_2_output = tensor_item(double_blocks_16_img_mod_split_0_output, double_blocks_16_img_mod_tensoritem_2_index)
    double_blocks_16_img_mod_split_2_output = split(double_blocks_16_img_mod_tensoritem_2_output, double_blocks_16_img_mod_split_2_split_size, double_blocks_16_img_mod_split_2_axis)
    double_blocks_16_img_norm1_mean_output = reduce_mean(double_blocks_15_add_10_output, axis=double_blocks_16_img_norm1_mean_axis, keepdim=double_blocks_16_img_norm1_mean_keepdim)
    double_blocks_16_img_norm1_subtract_output = subtract(double_blocks_15_add_10_output, double_blocks_16_img_norm1_mean_output)
    double_blocks_16_img_norm1_variance_output = variance(double_blocks_15_add_10_output, axis=double_blocks_16_img_norm1_variance_axis, keepdim=double_blocks_16_img_norm1_variance_keepdim, correction=double_blocks_16_img_norm1_variance_correction)
    double_blocks_16_img_norm1_add_output = add(double_blocks_16_img_norm1_variance_output, double_blocks_16_img_norm1_add_right)
    double_blocks_16_img_norm1_sqrt_output = sqrt(double_blocks_16_img_norm1_add_output)
    double_blocks_16_img_norm1_divide_output = divide(double_blocks_16_img_norm1_subtract_output, double_blocks_16_img_norm1_sqrt_output)
    double_blocks_16_tensoritem_0_output = tensor_item(double_blocks_16_img_mod_split_1_output, double_blocks_16_tensoritem_0_index)
    double_blocks_16_add_0_output = add(double_blocks_16_add_0_left, double_blocks_16_tensoritem_0_output)
    double_blocks_16_multiply_0_output = multiplication(double_blocks_16_add_0_output, double_blocks_16_img_norm1_divide_output)
    double_blocks_16_tensoritem_1_output = tensor_item(double_blocks_16_img_mod_split_1_output, double_blocks_16_tensoritem_1_index)
    double_blocks_16_add_1_output = add(double_blocks_16_multiply_0_output, double_blocks_16_tensoritem_1_output)
    double_blocks_16_img_attn_qkv_transpose_output = transpose(double_blocks_16_img_attn_qkv_weight, double_blocks_16_img_attn_qkv_transpose_axes)
    double_blocks_16_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_16_add_1_output, double_blocks_16_img_attn_qkv_transpose_output)
    double_blocks_16_img_qkv = add(double_blocks_16_img_attn_qkv_matrixmultiply_output, double_blocks_16_img_attn_qkv_bias)
    double_blocks_16_reshape_0_output = reshape(double_blocks_16_img_qkv, double_blocks_16_totuple_0_output)
    double_blocks_16_transpose_out = transpose(double_blocks_16_reshape_0_output, double_blocks_16_transpose_0_axes)
    double_blocks_16_tensoritem_2_output = tensor_item(double_blocks_16_transpose_out, double_blocks_16_tensoritem_2_index)
    double_blocks_16_tensoritem_3_output = tensor_item(double_blocks_16_transpose_out, double_blocks_16_tensoritem_3_index)
    double_blocks_16_img_attn_norm_query_norm_power_output = power(double_blocks_16_tensoritem_2_output, double_blocks_16_img_attn_norm_query_norm_power_exponent)
    double_blocks_16_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_16_img_attn_norm_query_norm_power_output, axis=double_blocks_16_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_16_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_16_img_attn_norm_query_norm_add_output = add(double_blocks_16_img_attn_norm_query_norm_mean_output, double_blocks_16_img_attn_norm_query_norm_add_right)
    double_blocks_16_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_16_img_attn_norm_query_norm_add_output)
    double_blocks_16_img_attn_norm_query_norm_divide_output = divide(double_blocks_16_img_attn_norm_query_norm_divide_numerator, double_blocks_16_img_attn_norm_query_norm_sqrt_output)
    double_blocks_16_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_16_tensoritem_2_output, double_blocks_16_img_attn_norm_query_norm_divide_output)
    double_blocks_16_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_16_img_attn_norm_query_norm_multiply_0_output, double_blocks_16_img_attn_norm_query_norm_scale)
    double_blocks_16_img_attn_norm_key_norm_power_output = power(double_blocks_16_tensoritem_3_output, double_blocks_16_img_attn_norm_key_norm_power_exponent)
    double_blocks_16_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_16_img_attn_norm_key_norm_power_output, axis=double_blocks_16_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_16_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_16_img_attn_norm_key_norm_add_output = add(double_blocks_16_img_attn_norm_key_norm_mean_output, double_blocks_16_img_attn_norm_key_norm_add_right)
    double_blocks_16_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_16_img_attn_norm_key_norm_add_output)
    double_blocks_16_img_attn_norm_key_norm_divide_output = divide(double_blocks_16_img_attn_norm_key_norm_divide_numerator, double_blocks_16_img_attn_norm_key_norm_sqrt_output)
    double_blocks_16_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_16_tensoritem_3_output, double_blocks_16_img_attn_norm_key_norm_divide_output)
    double_blocks_16_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_16_img_attn_norm_key_norm_multiply_0_output, double_blocks_16_img_attn_norm_key_norm_scale)
    double_blocks_16_txt_mod_silu_minus = minus(vec)
    double_blocks_16_txt_mod_silu_exp = exp(double_blocks_16_txt_mod_silu_minus)
    double_blocks_16_txt_mod_silu_add = add(double_blocks_16_txt_mod_silu_add_left, double_blocks_16_txt_mod_silu_exp)
    double_blocks_16_txt_mod_silu_output = divide(vec, double_blocks_16_txt_mod_silu_add)
    double_blocks_16_txt_mod_lin_transpose_output = transpose(double_blocks_16_txt_mod_lin_weight, double_blocks_16_txt_mod_lin_transpose_axes)
    double_blocks_16_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_16_txt_mod_silu_output, double_blocks_16_txt_mod_lin_transpose_output)
    double_blocks_16_txt_mod_lin_out = add(double_blocks_16_txt_mod_lin_matrixmultiply_output, double_blocks_16_txt_mod_lin_bias)
    double_blocks_16_txt_mod_tensoritem_0_output = tensor_item(double_blocks_16_txt_mod_lin_out, double_blocks_16_txt_mod_tensoritem_0_index)
    double_blocks_16_txt_mod_split_0_output = split(double_blocks_16_txt_mod_tensoritem_0_output, double_blocks_16_txt_mod_split_0_split_size, double_blocks_16_txt_mod_split_0_axis)
    double_blocks_16_txt_mod_tensoritem_1_output = tensor_item(double_blocks_16_txt_mod_split_0_output, double_blocks_16_txt_mod_tensoritem_1_index)
    double_blocks_16_txt_mod_split_1_output = split(double_blocks_16_txt_mod_tensoritem_1_output, double_blocks_16_txt_mod_split_1_split_size, double_blocks_16_txt_mod_split_1_axis)
    double_blocks_16_txt_mod_tensoritem_2_output = tensor_item(double_blocks_16_txt_mod_split_0_output, double_blocks_16_txt_mod_tensoritem_2_index)
    double_blocks_16_txt_mod_split_2_output = split(double_blocks_16_txt_mod_tensoritem_2_output, double_blocks_16_txt_mod_split_2_split_size, double_blocks_16_txt_mod_split_2_axis)
    double_blocks_16_txt_norm1_mean_output = reduce_mean(double_blocks_15_add_11_output, axis=double_blocks_16_txt_norm1_mean_axis, keepdim=double_blocks_16_txt_norm1_mean_keepdim)
    double_blocks_16_txt_norm1_subtract_output = subtract(double_blocks_15_add_11_output, double_blocks_16_txt_norm1_mean_output)
    double_blocks_16_txt_norm1_variance_output = variance(double_blocks_15_add_11_output, axis=double_blocks_16_txt_norm1_variance_axis, keepdim=double_blocks_16_txt_norm1_variance_keepdim, correction=double_blocks_16_txt_norm1_variance_correction)
    double_blocks_16_txt_norm1_add_output = add(double_blocks_16_txt_norm1_variance_output, double_blocks_16_txt_norm1_add_right)
    double_blocks_16_txt_norm1_sqrt_output = sqrt(double_blocks_16_txt_norm1_add_output)
    double_blocks_16_txt_norm1_divide_output = divide(double_blocks_16_txt_norm1_subtract_output, double_blocks_16_txt_norm1_sqrt_output)
    double_blocks_16_tensoritem_4_output = tensor_item(double_blocks_16_txt_mod_split_1_output, double_blocks_16_tensoritem_4_index)
    double_blocks_16_add_2_output = add(double_blocks_16_add_2_left, double_blocks_16_tensoritem_4_output)
    double_blocks_16_multiply_1_output = multiplication(double_blocks_16_add_2_output, double_blocks_16_txt_norm1_divide_output)
    double_blocks_16_tensoritem_5_output = tensor_item(double_blocks_16_txt_mod_split_1_output, double_blocks_16_tensoritem_5_index)
    double_blocks_16_add_3_output = add(double_blocks_16_multiply_1_output, double_blocks_16_tensoritem_5_output)
    double_blocks_16_txt_attn_qkv_transpose_output = transpose(double_blocks_16_txt_attn_qkv_weight, double_blocks_16_txt_attn_qkv_transpose_axes)
    double_blocks_16_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_16_add_3_output, double_blocks_16_txt_attn_qkv_transpose_output)
    double_blocks_16_txt_qkv = add(double_blocks_16_txt_attn_qkv_matrixmultiply_output, double_blocks_16_txt_attn_qkv_bias)
    double_blocks_16_reshape_1_output = reshape(double_blocks_16_txt_qkv, double_blocks_16_totuple_1_output)
    double_blocks_16_txt_transpose_out = transpose(double_blocks_16_reshape_1_output, double_blocks_16_transpose_1_axes)
    double_blocks_16_tensoritem_6_output = tensor_item(double_blocks_16_txt_transpose_out, double_blocks_16_tensoritem_6_index)
    double_blocks_16_tensoritem_7_output = tensor_item(double_blocks_16_txt_transpose_out, double_blocks_16_tensoritem_7_index)
    double_blocks_16_txt_attn_norm_query_norm_power_output = power(double_blocks_16_tensoritem_6_output, double_blocks_16_txt_attn_norm_query_norm_power_exponent)
    double_blocks_16_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_16_txt_attn_norm_query_norm_power_output, axis=double_blocks_16_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_16_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_16_txt_attn_norm_query_norm_add_output = add(double_blocks_16_txt_attn_norm_query_norm_mean_output, double_blocks_16_txt_attn_norm_query_norm_add_right)
    double_blocks_16_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_16_txt_attn_norm_query_norm_add_output)
    double_blocks_16_txt_attn_norm_query_norm_divide_output = divide(double_blocks_16_txt_attn_norm_query_norm_divide_numerator, double_blocks_16_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_16_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_16_tensoritem_6_output, double_blocks_16_txt_attn_norm_query_norm_divide_output)
    double_blocks_16_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_16_txt_attn_norm_query_norm_multiply_0_output, double_blocks_16_txt_attn_norm_query_norm_scale)
    double_blocks_16_txt_attn_norm_key_norm_power_output = power(double_blocks_16_tensoritem_7_output, double_blocks_16_txt_attn_norm_key_norm_power_exponent)
    double_blocks_16_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_16_txt_attn_norm_key_norm_power_output, axis=double_blocks_16_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_16_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_16_txt_attn_norm_key_norm_add_output = add(double_blocks_16_txt_attn_norm_key_norm_mean_output, double_blocks_16_txt_attn_norm_key_norm_add_right)
    double_blocks_16_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_16_txt_attn_norm_key_norm_add_output)
    double_blocks_16_txt_attn_norm_key_norm_divide_output = divide(double_blocks_16_txt_attn_norm_key_norm_divide_numerator, double_blocks_16_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_16_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_16_tensoritem_7_output, double_blocks_16_txt_attn_norm_key_norm_divide_output)
    double_blocks_16_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_16_txt_attn_norm_key_norm_multiply_0_output, double_blocks_16_txt_attn_norm_key_norm_scale)
    double_blocks_16_q_concat = concat(double_blocks_16_txt_attn_norm_query_norm_multiply_1_output, double_blocks_16_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_16_concat_0_axis)
    double_blocks_16_k_concat = concat(double_blocks_16_txt_attn_norm_key_norm_multiply_1_output, double_blocks_16_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_16_concat_1_axis)
    double_blocks_16_tensoritem_8_output = tensor_item(double_blocks_16_txt_transpose_out, double_blocks_16_tensoritem_8_index)
    double_blocks_16_tensoritem_9_output = tensor_item(double_blocks_16_transpose_out, double_blocks_16_tensoritem_9_index)
    double_blocks_16_v_concat = concat(double_blocks_16_tensoritem_8_output, double_blocks_16_tensoritem_9_output, axis=double_blocks_16_concat_2_axis)
    double_blocks_16_model_model_xq_ = reshape(double_blocks_16_q_concat, double_blocks_16_model_model_totuple_0_output)
    double_blocks_16_model_model_xk_ = reshape(double_blocks_16_k_concat, double_blocks_16_model_model_totuple_1_output)
    double_blocks_16_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_16_model_model_tensoritem_0_index)
    double_blocks_16_model_model_tensoritem_1_output = tensor_item(double_blocks_16_model_model_xq_, double_blocks_16_model_model_tensoritem_1_index)
    double_blocks_16_model_model_multiply_0_output = multiplication(double_blocks_16_model_model_tensoritem_0_output, double_blocks_16_model_model_tensoritem_1_output)
    double_blocks_16_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_16_model_model_tensoritem_2_index)
    double_blocks_16_model_model_tensoritem_3_output = tensor_item(double_blocks_16_model_model_xq_, double_blocks_16_model_model_tensoritem_3_index)
    double_blocks_16_model_model_multiply_1_output = multiplication(double_blocks_16_model_model_tensoritem_2_output, double_blocks_16_model_model_tensoritem_3_output)
    double_blocks_16_model_model_add_0_output = add(double_blocks_16_model_model_multiply_0_output, double_blocks_16_model_model_multiply_1_output)
    double_blocks_16_model_q_out = reshape(double_blocks_16_model_model_add_0_output, double_blocks_16_model_model_shape_0_output)
    double_blocks_16_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_16_model_model_tensoritem_4_index)
    double_blocks_16_model_model_tensoritem_5_output = tensor_item(double_blocks_16_model_model_xk_, double_blocks_16_model_model_tensoritem_5_index)
    double_blocks_16_model_model_multiply_2_output = multiplication(double_blocks_16_model_model_tensoritem_4_output, double_blocks_16_model_model_tensoritem_5_output)
    double_blocks_16_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_16_model_model_tensoritem_6_index)
    double_blocks_16_model_model_tensoritem_7_output = tensor_item(double_blocks_16_model_model_xk_, double_blocks_16_model_model_tensoritem_7_index)
    double_blocks_16_model_model_multiply_3_output = multiplication(double_blocks_16_model_model_tensoritem_6_output, double_blocks_16_model_model_tensoritem_7_output)
    double_blocks_16_model_model_add_1_output = add(double_blocks_16_model_model_multiply_2_output, double_blocks_16_model_model_multiply_3_output)
    double_blocks_16_model_k_out = reshape(double_blocks_16_model_model_add_1_output, double_blocks_16_model_model_shape_1_output)
    double_blocks_16_model_context = scaled_dot_product_attention(double_blocks_16_model_q_out, double_blocks_16_model_k_out, double_blocks_16_v_concat, double_blocks_16_model_scaleddotproduct_attn_mask)
    double_blocks_16_model_transpose_output = transpose(double_blocks_16_model_context, double_blocks_16_model_transpose_axes)
    double_blocks_16_attn = reshape(double_blocks_16_model_transpose_output, double_blocks_16_model_totuple_output)
    double_blocks_16_tensoritem_10_output = tensor_item(double_blocks_16_attn, double_blocks_16_tensoritem_10_index)
    double_blocks_16_img_attn_proj_transpose_output = transpose(double_blocks_16_img_attn_proj_weight, double_blocks_16_img_attn_proj_transpose_axes)
    double_blocks_16_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_16_tensoritem_10_output, double_blocks_16_img_attn_proj_transpose_output)
    double_blocks_16_img_proj = add(double_blocks_16_img_attn_proj_matrixmultiply_output, double_blocks_16_img_attn_proj_bias)
    double_blocks_16_tensoritem_11_output = tensor_item(double_blocks_16_img_mod_split_1_output, double_blocks_16_tensoritem_11_index)
    double_blocks_16_multiply_2_output = multiplication(double_blocks_16_tensoritem_11_output, double_blocks_16_img_proj)
    double_blocks_16_add_4_output = add(double_blocks_15_add_10_output, double_blocks_16_multiply_2_output)
    double_blocks_16_img_norm2_mean_output = reduce_mean(double_blocks_16_add_4_output, axis=double_blocks_16_img_norm2_mean_axis, keepdim=double_blocks_16_img_norm2_mean_keepdim)
    double_blocks_16_img_norm2_subtract_output = subtract(double_blocks_16_add_4_output, double_blocks_16_img_norm2_mean_output)
    double_blocks_16_img_norm2_variance_output = variance(double_blocks_16_add_4_output, axis=double_blocks_16_img_norm2_variance_axis, keepdim=double_blocks_16_img_norm2_variance_keepdim, correction=double_blocks_16_img_norm2_variance_correction)
    double_blocks_16_img_norm2_add_output = add(double_blocks_16_img_norm2_variance_output, double_blocks_16_img_norm2_add_right)
    double_blocks_16_img_norm2_sqrt_output = sqrt(double_blocks_16_img_norm2_add_output)
    double_blocks_16_img_norm2_divide_output = divide(double_blocks_16_img_norm2_subtract_output, double_blocks_16_img_norm2_sqrt_output)
    double_blocks_16_tensoritem_12_output = tensor_item(double_blocks_16_img_mod_split_2_output, double_blocks_16_tensoritem_12_index)
    double_blocks_16_add_5_output = add(double_blocks_16_add_5_left, double_blocks_16_tensoritem_12_output)
    double_blocks_16_multiply_3_output = multiplication(double_blocks_16_add_5_output, double_blocks_16_img_norm2_divide_output)
    double_blocks_16_tensoritem_13_output = tensor_item(double_blocks_16_img_mod_split_2_output, double_blocks_16_tensoritem_13_index)
    double_blocks_16_add_6_output = add(double_blocks_16_multiply_3_output, double_blocks_16_tensoritem_13_output)
    double_blocks_16_img_mlp_0_transpose_output = transpose(double_blocks_16_img_mlp_0_weight, double_blocks_16_img_mlp_0_transpose_axes)
    double_blocks_16_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_16_add_6_output, double_blocks_16_img_mlp_0_transpose_output)
    double_blocks_16_img_mlp_0_output = add(double_blocks_16_img_mlp_0_matrixmultiply_output, double_blocks_16_img_mlp_0_bias)
    double_blocks_16_img_mlp_gelu_output = gelu(double_blocks_16_img_mlp_0_output, double_blocks_16_img_mlp_gelu_approximate)
    double_blocks_16_img_mlp_2_transpose_output = transpose(double_blocks_16_img_mlp_2_weight, double_blocks_16_img_mlp_2_transpose_axes)
    double_blocks_16_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_16_img_mlp_gelu_output, double_blocks_16_img_mlp_2_transpose_output)
    double_blocks_16_img_mlp = add(double_blocks_16_img_mlp_2_matrixmultiply_output, double_blocks_16_img_mlp_2_bias)
    double_blocks_16_tensoritem_14_output = tensor_item(double_blocks_16_attn, double_blocks_16_tensoritem_14_index)
    double_blocks_16_txt_attn_proj_transpose_output = transpose(double_blocks_16_txt_attn_proj_weight, double_blocks_16_txt_attn_proj_transpose_axes)
    double_blocks_16_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_16_tensoritem_14_output, double_blocks_16_txt_attn_proj_transpose_output)
    double_blocks_16_txt_proj = add(double_blocks_16_txt_attn_proj_matrixmultiply_output, double_blocks_16_txt_attn_proj_bias)
    double_blocks_16_tensoritem_15_output = tensor_item(double_blocks_16_txt_mod_split_1_output, double_blocks_16_tensoritem_15_index)
    double_blocks_16_multiply_4_output = multiplication(double_blocks_16_tensoritem_15_output, double_blocks_16_txt_proj)
    double_blocks_16_add_7_output = add(double_blocks_15_add_11_output, double_blocks_16_multiply_4_output)
    double_blocks_16_txt_norm2_mean_output = reduce_mean(double_blocks_16_add_7_output, axis=double_blocks_16_txt_norm2_mean_axis, keepdim=double_blocks_16_txt_norm2_mean_keepdim)
    double_blocks_16_txt_norm2_subtract_output = subtract(double_blocks_16_add_7_output, double_blocks_16_txt_norm2_mean_output)
    double_blocks_16_txt_norm2_variance_output = variance(double_blocks_16_add_7_output, axis=double_blocks_16_txt_norm2_variance_axis, keepdim=double_blocks_16_txt_norm2_variance_keepdim, correction=double_blocks_16_txt_norm2_variance_correction)
    double_blocks_16_txt_norm2_add_output = add(double_blocks_16_txt_norm2_variance_output, double_blocks_16_txt_norm2_add_right)
    double_blocks_16_txt_norm2_sqrt_output = sqrt(double_blocks_16_txt_norm2_add_output)
    double_blocks_16_txt_norm2_divide_output = divide(double_blocks_16_txt_norm2_subtract_output, double_blocks_16_txt_norm2_sqrt_output)
    double_blocks_16_tensoritem_16_output = tensor_item(double_blocks_16_txt_mod_split_2_output, double_blocks_16_tensoritem_16_index)
    double_blocks_16_add_8_output = add(double_blocks_16_add_8_left, double_blocks_16_tensoritem_16_output)
    double_blocks_16_multiply_5_output = multiplication(double_blocks_16_add_8_output, double_blocks_16_txt_norm2_divide_output)
    double_blocks_16_tensoritem_17_output = tensor_item(double_blocks_16_txt_mod_split_2_output, double_blocks_16_tensoritem_17_index)
    double_blocks_16_add_9_output = add(double_blocks_16_multiply_5_output, double_blocks_16_tensoritem_17_output)
    double_blocks_16_txt_mlp_0_transpose_output = transpose(double_blocks_16_txt_mlp_0_weight, double_blocks_16_txt_mlp_0_transpose_axes)
    double_blocks_16_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_16_add_9_output, double_blocks_16_txt_mlp_0_transpose_output)
    double_blocks_16_txt_mlp_0_output = add(double_blocks_16_txt_mlp_0_matrixmultiply_output, double_blocks_16_txt_mlp_0_bias)
    double_blocks_16_txt_mlp_gelu_output = gelu(double_blocks_16_txt_mlp_0_output, double_blocks_16_txt_mlp_gelu_approximate)
    double_blocks_16_txt_mlp_2_transpose_output = transpose(double_blocks_16_txt_mlp_2_weight, double_blocks_16_txt_mlp_2_transpose_axes)
    double_blocks_16_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_16_txt_mlp_gelu_output, double_blocks_16_txt_mlp_2_transpose_output)
    double_blocks_16_txt_mlp = add(double_blocks_16_txt_mlp_2_matrixmultiply_output, double_blocks_16_txt_mlp_2_bias)
    double_blocks_16_tensoritem_18_output = tensor_item(double_blocks_16_img_mod_split_2_output, double_blocks_16_tensoritem_18_index)
    double_blocks_16_multiply_6_output = multiplication(double_blocks_16_tensoritem_18_output, double_blocks_16_img_mlp)
    double_blocks_16_add_10_output = add(double_blocks_16_add_4_output, double_blocks_16_multiply_6_output)
    double_blocks_16_tensoritem_19_output = tensor_item(double_blocks_16_txt_mod_split_2_output, double_blocks_16_tensoritem_19_index)
    double_blocks_16_multiply_7_output = multiplication(double_blocks_16_tensoritem_19_output, double_blocks_16_txt_mlp)
    double_blocks_16_add_11_output = add(double_blocks_16_add_7_output, double_blocks_16_multiply_7_output)
    double_blocks_17_img_mod_silu_minus = minus(vec)
    double_blocks_17_img_mod_silu_exp = exp(double_blocks_17_img_mod_silu_minus)
    double_blocks_17_img_mod_silu_add = add(double_blocks_17_img_mod_silu_add_left, double_blocks_17_img_mod_silu_exp)
    double_blocks_17_img_mod_silu_output = divide(vec, double_blocks_17_img_mod_silu_add)
    double_blocks_17_img_mod_lin_transpose_output = transpose(double_blocks_17_img_mod_lin_weight, double_blocks_17_img_mod_lin_transpose_axes)
    double_blocks_17_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_17_img_mod_silu_output, double_blocks_17_img_mod_lin_transpose_output)
    double_blocks_17_img_mod_lin_out = add(double_blocks_17_img_mod_lin_matrixmultiply_output, double_blocks_17_img_mod_lin_bias)
    double_blocks_17_img_mod_tensoritem_0_output = tensor_item(double_blocks_17_img_mod_lin_out, double_blocks_17_img_mod_tensoritem_0_index)
    double_blocks_17_img_mod_split_0_output = split(double_blocks_17_img_mod_tensoritem_0_output, double_blocks_17_img_mod_split_0_split_size, double_blocks_17_img_mod_split_0_axis)
    double_blocks_17_img_mod_tensoritem_1_output = tensor_item(double_blocks_17_img_mod_split_0_output, double_blocks_17_img_mod_tensoritem_1_index)
    double_blocks_17_img_mod_split_1_output = split(double_blocks_17_img_mod_tensoritem_1_output, double_blocks_17_img_mod_split_1_split_size, double_blocks_17_img_mod_split_1_axis)
    double_blocks_17_img_mod_tensoritem_2_output = tensor_item(double_blocks_17_img_mod_split_0_output, double_blocks_17_img_mod_tensoritem_2_index)
    double_blocks_17_img_mod_split_2_output = split(double_blocks_17_img_mod_tensoritem_2_output, double_blocks_17_img_mod_split_2_split_size, double_blocks_17_img_mod_split_2_axis)
    double_blocks_17_img_norm1_mean_output = reduce_mean(double_blocks_16_add_10_output, axis=double_blocks_17_img_norm1_mean_axis, keepdim=double_blocks_17_img_norm1_mean_keepdim)
    double_blocks_17_img_norm1_subtract_output = subtract(double_blocks_16_add_10_output, double_blocks_17_img_norm1_mean_output)
    double_blocks_17_img_norm1_variance_output = variance(double_blocks_16_add_10_output, axis=double_blocks_17_img_norm1_variance_axis, keepdim=double_blocks_17_img_norm1_variance_keepdim, correction=double_blocks_17_img_norm1_variance_correction)
    double_blocks_17_img_norm1_add_output = add(double_blocks_17_img_norm1_variance_output, double_blocks_17_img_norm1_add_right)
    double_blocks_17_img_norm1_sqrt_output = sqrt(double_blocks_17_img_norm1_add_output)
    double_blocks_17_img_norm1_divide_output = divide(double_blocks_17_img_norm1_subtract_output, double_blocks_17_img_norm1_sqrt_output)
    double_blocks_17_tensoritem_0_output = tensor_item(double_blocks_17_img_mod_split_1_output, double_blocks_17_tensoritem_0_index)
    double_blocks_17_add_0_output = add(double_blocks_17_add_0_left, double_blocks_17_tensoritem_0_output)
    double_blocks_17_multiply_0_output = multiplication(double_blocks_17_add_0_output, double_blocks_17_img_norm1_divide_output)
    double_blocks_17_tensoritem_1_output = tensor_item(double_blocks_17_img_mod_split_1_output, double_blocks_17_tensoritem_1_index)
    double_blocks_17_add_1_output = add(double_blocks_17_multiply_0_output, double_blocks_17_tensoritem_1_output)
    double_blocks_17_img_attn_qkv_transpose_output = transpose(double_blocks_17_img_attn_qkv_weight, double_blocks_17_img_attn_qkv_transpose_axes)
    double_blocks_17_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_17_add_1_output, double_blocks_17_img_attn_qkv_transpose_output)
    double_blocks_17_img_qkv = add(double_blocks_17_img_attn_qkv_matrixmultiply_output, double_blocks_17_img_attn_qkv_bias)
    double_blocks_17_reshape_0_output = reshape(double_blocks_17_img_qkv, double_blocks_17_totuple_0_output)
    double_blocks_17_transpose_out = transpose(double_blocks_17_reshape_0_output, double_blocks_17_transpose_0_axes)
    double_blocks_17_tensoritem_2_output = tensor_item(double_blocks_17_transpose_out, double_blocks_17_tensoritem_2_index)
    double_blocks_17_tensoritem_3_output = tensor_item(double_blocks_17_transpose_out, double_blocks_17_tensoritem_3_index)
    double_blocks_17_img_attn_norm_query_norm_power_output = power(double_blocks_17_tensoritem_2_output, double_blocks_17_img_attn_norm_query_norm_power_exponent)
    double_blocks_17_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_17_img_attn_norm_query_norm_power_output, axis=double_blocks_17_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_17_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_17_img_attn_norm_query_norm_add_output = add(double_blocks_17_img_attn_norm_query_norm_mean_output, double_blocks_17_img_attn_norm_query_norm_add_right)
    double_blocks_17_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_17_img_attn_norm_query_norm_add_output)
    double_blocks_17_img_attn_norm_query_norm_divide_output = divide(double_blocks_17_img_attn_norm_query_norm_divide_numerator, double_blocks_17_img_attn_norm_query_norm_sqrt_output)
    double_blocks_17_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_17_tensoritem_2_output, double_blocks_17_img_attn_norm_query_norm_divide_output)
    double_blocks_17_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_17_img_attn_norm_query_norm_multiply_0_output, double_blocks_17_img_attn_norm_query_norm_scale)
    double_blocks_17_img_attn_norm_key_norm_power_output = power(double_blocks_17_tensoritem_3_output, double_blocks_17_img_attn_norm_key_norm_power_exponent)
    double_blocks_17_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_17_img_attn_norm_key_norm_power_output, axis=double_blocks_17_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_17_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_17_img_attn_norm_key_norm_add_output = add(double_blocks_17_img_attn_norm_key_norm_mean_output, double_blocks_17_img_attn_norm_key_norm_add_right)
    double_blocks_17_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_17_img_attn_norm_key_norm_add_output)
    double_blocks_17_img_attn_norm_key_norm_divide_output = divide(double_blocks_17_img_attn_norm_key_norm_divide_numerator, double_blocks_17_img_attn_norm_key_norm_sqrt_output)
    double_blocks_17_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_17_tensoritem_3_output, double_blocks_17_img_attn_norm_key_norm_divide_output)
    double_blocks_17_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_17_img_attn_norm_key_norm_multiply_0_output, double_blocks_17_img_attn_norm_key_norm_scale)
    double_blocks_17_txt_mod_silu_minus = minus(vec)
    double_blocks_17_txt_mod_silu_exp = exp(double_blocks_17_txt_mod_silu_minus)
    double_blocks_17_txt_mod_silu_add = add(double_blocks_17_txt_mod_silu_add_left, double_blocks_17_txt_mod_silu_exp)
    double_blocks_17_txt_mod_silu_output = divide(vec, double_blocks_17_txt_mod_silu_add)
    double_blocks_17_txt_mod_lin_transpose_output = transpose(double_blocks_17_txt_mod_lin_weight, double_blocks_17_txt_mod_lin_transpose_axes)
    double_blocks_17_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_17_txt_mod_silu_output, double_blocks_17_txt_mod_lin_transpose_output)
    double_blocks_17_txt_mod_lin_out = add(double_blocks_17_txt_mod_lin_matrixmultiply_output, double_blocks_17_txt_mod_lin_bias)
    double_blocks_17_txt_mod_tensoritem_0_output = tensor_item(double_blocks_17_txt_mod_lin_out, double_blocks_17_txt_mod_tensoritem_0_index)
    double_blocks_17_txt_mod_split_0_output = split(double_blocks_17_txt_mod_tensoritem_0_output, double_blocks_17_txt_mod_split_0_split_size, double_blocks_17_txt_mod_split_0_axis)
    double_blocks_17_txt_mod_tensoritem_1_output = tensor_item(double_blocks_17_txt_mod_split_0_output, double_blocks_17_txt_mod_tensoritem_1_index)
    double_blocks_17_txt_mod_split_1_output = split(double_blocks_17_txt_mod_tensoritem_1_output, double_blocks_17_txt_mod_split_1_split_size, double_blocks_17_txt_mod_split_1_axis)
    double_blocks_17_txt_mod_tensoritem_2_output = tensor_item(double_blocks_17_txt_mod_split_0_output, double_blocks_17_txt_mod_tensoritem_2_index)
    double_blocks_17_txt_mod_split_2_output = split(double_blocks_17_txt_mod_tensoritem_2_output, double_blocks_17_txt_mod_split_2_split_size, double_blocks_17_txt_mod_split_2_axis)
    double_blocks_17_txt_norm1_mean_output = reduce_mean(double_blocks_16_add_11_output, axis=double_blocks_17_txt_norm1_mean_axis, keepdim=double_blocks_17_txt_norm1_mean_keepdim)
    double_blocks_17_txt_norm1_subtract_output = subtract(double_blocks_16_add_11_output, double_blocks_17_txt_norm1_mean_output)
    double_blocks_17_txt_norm1_variance_output = variance(double_blocks_16_add_11_output, axis=double_blocks_17_txt_norm1_variance_axis, keepdim=double_blocks_17_txt_norm1_variance_keepdim, correction=double_blocks_17_txt_norm1_variance_correction)
    double_blocks_17_txt_norm1_add_output = add(double_blocks_17_txt_norm1_variance_output, double_blocks_17_txt_norm1_add_right)
    double_blocks_17_txt_norm1_sqrt_output = sqrt(double_blocks_17_txt_norm1_add_output)
    double_blocks_17_txt_norm1_divide_output = divide(double_blocks_17_txt_norm1_subtract_output, double_blocks_17_txt_norm1_sqrt_output)
    double_blocks_17_tensoritem_4_output = tensor_item(double_blocks_17_txt_mod_split_1_output, double_blocks_17_tensoritem_4_index)
    double_blocks_17_add_2_output = add(double_blocks_17_add_2_left, double_blocks_17_tensoritem_4_output)
    double_blocks_17_multiply_1_output = multiplication(double_blocks_17_add_2_output, double_blocks_17_txt_norm1_divide_output)
    double_blocks_17_tensoritem_5_output = tensor_item(double_blocks_17_txt_mod_split_1_output, double_blocks_17_tensoritem_5_index)
    double_blocks_17_add_3_output = add(double_blocks_17_multiply_1_output, double_blocks_17_tensoritem_5_output)
    double_blocks_17_txt_attn_qkv_transpose_output = transpose(double_blocks_17_txt_attn_qkv_weight, double_blocks_17_txt_attn_qkv_transpose_axes)
    double_blocks_17_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_17_add_3_output, double_blocks_17_txt_attn_qkv_transpose_output)
    double_blocks_17_txt_qkv = add(double_blocks_17_txt_attn_qkv_matrixmultiply_output, double_blocks_17_txt_attn_qkv_bias)
    double_blocks_17_reshape_1_output = reshape(double_blocks_17_txt_qkv, double_blocks_17_totuple_1_output)
    double_blocks_17_txt_transpose_out = transpose(double_blocks_17_reshape_1_output, double_blocks_17_transpose_1_axes)
    double_blocks_17_tensoritem_6_output = tensor_item(double_blocks_17_txt_transpose_out, double_blocks_17_tensoritem_6_index)
    double_blocks_17_tensoritem_7_output = tensor_item(double_blocks_17_txt_transpose_out, double_blocks_17_tensoritem_7_index)
    double_blocks_17_txt_attn_norm_query_norm_power_output = power(double_blocks_17_tensoritem_6_output, double_blocks_17_txt_attn_norm_query_norm_power_exponent)
    double_blocks_17_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_17_txt_attn_norm_query_norm_power_output, axis=double_blocks_17_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_17_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_17_txt_attn_norm_query_norm_add_output = add(double_blocks_17_txt_attn_norm_query_norm_mean_output, double_blocks_17_txt_attn_norm_query_norm_add_right)
    double_blocks_17_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_17_txt_attn_norm_query_norm_add_output)
    double_blocks_17_txt_attn_norm_query_norm_divide_output = divide(double_blocks_17_txt_attn_norm_query_norm_divide_numerator, double_blocks_17_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_17_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_17_tensoritem_6_output, double_blocks_17_txt_attn_norm_query_norm_divide_output)
    double_blocks_17_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_17_txt_attn_norm_query_norm_multiply_0_output, double_blocks_17_txt_attn_norm_query_norm_scale)
    double_blocks_17_txt_attn_norm_key_norm_power_output = power(double_blocks_17_tensoritem_7_output, double_blocks_17_txt_attn_norm_key_norm_power_exponent)
    double_blocks_17_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_17_txt_attn_norm_key_norm_power_output, axis=double_blocks_17_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_17_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_17_txt_attn_norm_key_norm_add_output = add(double_blocks_17_txt_attn_norm_key_norm_mean_output, double_blocks_17_txt_attn_norm_key_norm_add_right)
    double_blocks_17_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_17_txt_attn_norm_key_norm_add_output)
    double_blocks_17_txt_attn_norm_key_norm_divide_output = divide(double_blocks_17_txt_attn_norm_key_norm_divide_numerator, double_blocks_17_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_17_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_17_tensoritem_7_output, double_blocks_17_txt_attn_norm_key_norm_divide_output)
    double_blocks_17_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_17_txt_attn_norm_key_norm_multiply_0_output, double_blocks_17_txt_attn_norm_key_norm_scale)
    double_blocks_17_q_concat = concat(double_blocks_17_txt_attn_norm_query_norm_multiply_1_output, double_blocks_17_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_17_concat_0_axis)
    double_blocks_17_k_concat = concat(double_blocks_17_txt_attn_norm_key_norm_multiply_1_output, double_blocks_17_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_17_concat_1_axis)
    double_blocks_17_tensoritem_8_output = tensor_item(double_blocks_17_txt_transpose_out, double_blocks_17_tensoritem_8_index)
    double_blocks_17_tensoritem_9_output = tensor_item(double_blocks_17_transpose_out, double_blocks_17_tensoritem_9_index)
    double_blocks_17_v_concat = concat(double_blocks_17_tensoritem_8_output, double_blocks_17_tensoritem_9_output, axis=double_blocks_17_concat_2_axis)
    double_blocks_17_model_model_xq_ = reshape(double_blocks_17_q_concat, double_blocks_17_model_model_totuple_0_output)
    double_blocks_17_model_model_xk_ = reshape(double_blocks_17_k_concat, double_blocks_17_model_model_totuple_1_output)
    double_blocks_17_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_17_model_model_tensoritem_0_index)
    double_blocks_17_model_model_tensoritem_1_output = tensor_item(double_blocks_17_model_model_xq_, double_blocks_17_model_model_tensoritem_1_index)
    double_blocks_17_model_model_multiply_0_output = multiplication(double_blocks_17_model_model_tensoritem_0_output, double_blocks_17_model_model_tensoritem_1_output)
    double_blocks_17_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_17_model_model_tensoritem_2_index)
    double_blocks_17_model_model_tensoritem_3_output = tensor_item(double_blocks_17_model_model_xq_, double_blocks_17_model_model_tensoritem_3_index)
    double_blocks_17_model_model_multiply_1_output = multiplication(double_blocks_17_model_model_tensoritem_2_output, double_blocks_17_model_model_tensoritem_3_output)
    double_blocks_17_model_model_add_0_output = add(double_blocks_17_model_model_multiply_0_output, double_blocks_17_model_model_multiply_1_output)
    double_blocks_17_model_q_out = reshape(double_blocks_17_model_model_add_0_output, double_blocks_17_model_model_shape_0_output)
    double_blocks_17_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_17_model_model_tensoritem_4_index)
    double_blocks_17_model_model_tensoritem_5_output = tensor_item(double_blocks_17_model_model_xk_, double_blocks_17_model_model_tensoritem_5_index)
    double_blocks_17_model_model_multiply_2_output = multiplication(double_blocks_17_model_model_tensoritem_4_output, double_blocks_17_model_model_tensoritem_5_output)
    double_blocks_17_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_17_model_model_tensoritem_6_index)
    double_blocks_17_model_model_tensoritem_7_output = tensor_item(double_blocks_17_model_model_xk_, double_blocks_17_model_model_tensoritem_7_index)
    double_blocks_17_model_model_multiply_3_output = multiplication(double_blocks_17_model_model_tensoritem_6_output, double_blocks_17_model_model_tensoritem_7_output)
    double_blocks_17_model_model_add_1_output = add(double_blocks_17_model_model_multiply_2_output, double_blocks_17_model_model_multiply_3_output)
    double_blocks_17_model_k_out = reshape(double_blocks_17_model_model_add_1_output, double_blocks_17_model_model_shape_1_output)
    double_blocks_17_model_context = scaled_dot_product_attention(double_blocks_17_model_q_out, double_blocks_17_model_k_out, double_blocks_17_v_concat, double_blocks_17_model_scaleddotproduct_attn_mask)
    double_blocks_17_model_transpose_output = transpose(double_blocks_17_model_context, double_blocks_17_model_transpose_axes)
    double_blocks_17_attn = reshape(double_blocks_17_model_transpose_output, double_blocks_17_model_totuple_output)
    double_blocks_17_tensoritem_10_output = tensor_item(double_blocks_17_attn, double_blocks_17_tensoritem_10_index)
    double_blocks_17_img_attn_proj_transpose_output = transpose(double_blocks_17_img_attn_proj_weight, double_blocks_17_img_attn_proj_transpose_axes)
    double_blocks_17_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_17_tensoritem_10_output, double_blocks_17_img_attn_proj_transpose_output)
    double_blocks_17_img_proj = add(double_blocks_17_img_attn_proj_matrixmultiply_output, double_blocks_17_img_attn_proj_bias)
    double_blocks_17_tensoritem_11_output = tensor_item(double_blocks_17_img_mod_split_1_output, double_blocks_17_tensoritem_11_index)
    double_blocks_17_multiply_2_output = multiplication(double_blocks_17_tensoritem_11_output, double_blocks_17_img_proj)
    double_blocks_17_add_4_output = add(double_blocks_16_add_10_output, double_blocks_17_multiply_2_output)
    double_blocks_17_img_norm2_mean_output = reduce_mean(double_blocks_17_add_4_output, axis=double_blocks_17_img_norm2_mean_axis, keepdim=double_blocks_17_img_norm2_mean_keepdim)
    double_blocks_17_img_norm2_subtract_output = subtract(double_blocks_17_add_4_output, double_blocks_17_img_norm2_mean_output)
    double_blocks_17_img_norm2_variance_output = variance(double_blocks_17_add_4_output, axis=double_blocks_17_img_norm2_variance_axis, keepdim=double_blocks_17_img_norm2_variance_keepdim, correction=double_blocks_17_img_norm2_variance_correction)
    double_blocks_17_img_norm2_add_output = add(double_blocks_17_img_norm2_variance_output, double_blocks_17_img_norm2_add_right)
    double_blocks_17_img_norm2_sqrt_output = sqrt(double_blocks_17_img_norm2_add_output)
    double_blocks_17_img_norm2_divide_output = divide(double_blocks_17_img_norm2_subtract_output, double_blocks_17_img_norm2_sqrt_output)
    double_blocks_17_tensoritem_12_output = tensor_item(double_blocks_17_img_mod_split_2_output, double_blocks_17_tensoritem_12_index)
    double_blocks_17_add_5_output = add(double_blocks_17_add_5_left, double_blocks_17_tensoritem_12_output)
    double_blocks_17_multiply_3_output = multiplication(double_blocks_17_add_5_output, double_blocks_17_img_norm2_divide_output)
    double_blocks_17_tensoritem_13_output = tensor_item(double_blocks_17_img_mod_split_2_output, double_blocks_17_tensoritem_13_index)
    double_blocks_17_add_6_output = add(double_blocks_17_multiply_3_output, double_blocks_17_tensoritem_13_output)
    double_blocks_17_img_mlp_0_transpose_output = transpose(double_blocks_17_img_mlp_0_weight, double_blocks_17_img_mlp_0_transpose_axes)
    double_blocks_17_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_17_add_6_output, double_blocks_17_img_mlp_0_transpose_output)
    double_blocks_17_img_mlp_0_output = add(double_blocks_17_img_mlp_0_matrixmultiply_output, double_blocks_17_img_mlp_0_bias)
    double_blocks_17_img_mlp_gelu_output = gelu(double_blocks_17_img_mlp_0_output, double_blocks_17_img_mlp_gelu_approximate)
    double_blocks_17_img_mlp_2_transpose_output = transpose(double_blocks_17_img_mlp_2_weight, double_blocks_17_img_mlp_2_transpose_axes)
    double_blocks_17_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_17_img_mlp_gelu_output, double_blocks_17_img_mlp_2_transpose_output)
    double_blocks_17_img_mlp = add(double_blocks_17_img_mlp_2_matrixmultiply_output, double_blocks_17_img_mlp_2_bias)
    double_blocks_17_tensoritem_14_output = tensor_item(double_blocks_17_attn, double_blocks_17_tensoritem_14_index)
    double_blocks_17_txt_attn_proj_transpose_output = transpose(double_blocks_17_txt_attn_proj_weight, double_blocks_17_txt_attn_proj_transpose_axes)
    double_blocks_17_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_17_tensoritem_14_output, double_blocks_17_txt_attn_proj_transpose_output)
    double_blocks_17_txt_proj = add(double_blocks_17_txt_attn_proj_matrixmultiply_output, double_blocks_17_txt_attn_proj_bias)
    double_blocks_17_tensoritem_15_output = tensor_item(double_blocks_17_txt_mod_split_1_output, double_blocks_17_tensoritem_15_index)
    double_blocks_17_multiply_4_output = multiplication(double_blocks_17_tensoritem_15_output, double_blocks_17_txt_proj)
    double_blocks_17_add_7_output = add(double_blocks_16_add_11_output, double_blocks_17_multiply_4_output)
    double_blocks_17_txt_norm2_mean_output = reduce_mean(double_blocks_17_add_7_output, axis=double_blocks_17_txt_norm2_mean_axis, keepdim=double_blocks_17_txt_norm2_mean_keepdim)
    double_blocks_17_txt_norm2_subtract_output = subtract(double_blocks_17_add_7_output, double_blocks_17_txt_norm2_mean_output)
    double_blocks_17_txt_norm2_variance_output = variance(double_blocks_17_add_7_output, axis=double_blocks_17_txt_norm2_variance_axis, keepdim=double_blocks_17_txt_norm2_variance_keepdim, correction=double_blocks_17_txt_norm2_variance_correction)
    double_blocks_17_txt_norm2_add_output = add(double_blocks_17_txt_norm2_variance_output, double_blocks_17_txt_norm2_add_right)
    double_blocks_17_txt_norm2_sqrt_output = sqrt(double_blocks_17_txt_norm2_add_output)
    double_blocks_17_txt_norm2_divide_output = divide(double_blocks_17_txt_norm2_subtract_output, double_blocks_17_txt_norm2_sqrt_output)
    double_blocks_17_tensoritem_16_output = tensor_item(double_blocks_17_txt_mod_split_2_output, double_blocks_17_tensoritem_16_index)
    double_blocks_17_add_8_output = add(double_blocks_17_add_8_left, double_blocks_17_tensoritem_16_output)
    double_blocks_17_multiply_5_output = multiplication(double_blocks_17_add_8_output, double_blocks_17_txt_norm2_divide_output)
    double_blocks_17_tensoritem_17_output = tensor_item(double_blocks_17_txt_mod_split_2_output, double_blocks_17_tensoritem_17_index)
    double_blocks_17_add_9_output = add(double_blocks_17_multiply_5_output, double_blocks_17_tensoritem_17_output)
    double_blocks_17_txt_mlp_0_transpose_output = transpose(double_blocks_17_txt_mlp_0_weight, double_blocks_17_txt_mlp_0_transpose_axes)
    double_blocks_17_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_17_add_9_output, double_blocks_17_txt_mlp_0_transpose_output)
    double_blocks_17_txt_mlp_0_output = add(double_blocks_17_txt_mlp_0_matrixmultiply_output, double_blocks_17_txt_mlp_0_bias)
    double_blocks_17_txt_mlp_gelu_output = gelu(double_blocks_17_txt_mlp_0_output, double_blocks_17_txt_mlp_gelu_approximate)
    double_blocks_17_txt_mlp_2_transpose_output = transpose(double_blocks_17_txt_mlp_2_weight, double_blocks_17_txt_mlp_2_transpose_axes)
    double_blocks_17_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_17_txt_mlp_gelu_output, double_blocks_17_txt_mlp_2_transpose_output)
    double_blocks_17_txt_mlp = add(double_blocks_17_txt_mlp_2_matrixmultiply_output, double_blocks_17_txt_mlp_2_bias)
    double_blocks_17_tensoritem_18_output = tensor_item(double_blocks_17_img_mod_split_2_output, double_blocks_17_tensoritem_18_index)
    double_blocks_17_multiply_6_output = multiplication(double_blocks_17_tensoritem_18_output, double_blocks_17_img_mlp)
    double_blocks_17_add_10_output = add(double_blocks_17_add_4_output, double_blocks_17_multiply_6_output)
    double_blocks_17_tensoritem_19_output = tensor_item(double_blocks_17_txt_mod_split_2_output, double_blocks_17_tensoritem_19_index)
    double_blocks_17_multiply_7_output = multiplication(double_blocks_17_tensoritem_19_output, double_blocks_17_txt_mlp)
    double_blocks_17_add_11_output = add(double_blocks_17_add_7_output, double_blocks_17_multiply_7_output)
    double_blocks_18_img_mod_silu_minus = minus(vec)
    double_blocks_18_img_mod_silu_exp = exp(double_blocks_18_img_mod_silu_minus)
    double_blocks_18_img_mod_silu_add = add(double_blocks_18_img_mod_silu_add_left, double_blocks_18_img_mod_silu_exp)
    double_blocks_18_img_mod_silu_output = divide(vec, double_blocks_18_img_mod_silu_add)
    double_blocks_18_img_mod_lin_transpose_output = transpose(double_blocks_18_img_mod_lin_weight, double_blocks_18_img_mod_lin_transpose_axes)
    double_blocks_18_img_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_18_img_mod_silu_output, double_blocks_18_img_mod_lin_transpose_output)
    double_blocks_18_img_mod_lin_out = add(double_blocks_18_img_mod_lin_matrixmultiply_output, double_blocks_18_img_mod_lin_bias)
    double_blocks_18_img_mod_tensoritem_0_output = tensor_item(double_blocks_18_img_mod_lin_out, double_blocks_18_img_mod_tensoritem_0_index)
    double_blocks_18_img_mod_split_0_output = split(double_blocks_18_img_mod_tensoritem_0_output, double_blocks_18_img_mod_split_0_split_size, double_blocks_18_img_mod_split_0_axis)
    double_blocks_18_img_mod_tensoritem_1_output = tensor_item(double_blocks_18_img_mod_split_0_output, double_blocks_18_img_mod_tensoritem_1_index)
    double_blocks_18_img_mod_split_1_output = split(double_blocks_18_img_mod_tensoritem_1_output, double_blocks_18_img_mod_split_1_split_size, double_blocks_18_img_mod_split_1_axis)
    double_blocks_18_img_mod_tensoritem_2_output = tensor_item(double_blocks_18_img_mod_split_0_output, double_blocks_18_img_mod_tensoritem_2_index)
    double_blocks_18_img_mod_split_2_output = split(double_blocks_18_img_mod_tensoritem_2_output, double_blocks_18_img_mod_split_2_split_size, double_blocks_18_img_mod_split_2_axis)
    double_blocks_18_img_norm1_mean_output = reduce_mean(double_blocks_17_add_10_output, axis=double_blocks_18_img_norm1_mean_axis, keepdim=double_blocks_18_img_norm1_mean_keepdim)
    double_blocks_18_img_norm1_subtract_output = subtract(double_blocks_17_add_10_output, double_blocks_18_img_norm1_mean_output)
    double_blocks_18_img_norm1_variance_output = variance(double_blocks_17_add_10_output, axis=double_blocks_18_img_norm1_variance_axis, keepdim=double_blocks_18_img_norm1_variance_keepdim, correction=double_blocks_18_img_norm1_variance_correction)
    double_blocks_18_img_norm1_add_output = add(double_blocks_18_img_norm1_variance_output, double_blocks_18_img_norm1_add_right)
    double_blocks_18_img_norm1_sqrt_output = sqrt(double_blocks_18_img_norm1_add_output)
    double_blocks_18_img_norm1_divide_output = divide(double_blocks_18_img_norm1_subtract_output, double_blocks_18_img_norm1_sqrt_output)
    double_blocks_18_tensoritem_0_output = tensor_item(double_blocks_18_img_mod_split_1_output, double_blocks_18_tensoritem_0_index)
    double_blocks_18_add_0_output = add(double_blocks_18_add_0_left, double_blocks_18_tensoritem_0_output)
    double_blocks_18_multiply_0_output = multiplication(double_blocks_18_add_0_output, double_blocks_18_img_norm1_divide_output)
    double_blocks_18_tensoritem_1_output = tensor_item(double_blocks_18_img_mod_split_1_output, double_blocks_18_tensoritem_1_index)
    double_blocks_18_add_1_output = add(double_blocks_18_multiply_0_output, double_blocks_18_tensoritem_1_output)
    double_blocks_18_img_attn_qkv_transpose_output = transpose(double_blocks_18_img_attn_qkv_weight, double_blocks_18_img_attn_qkv_transpose_axes)
    double_blocks_18_img_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_18_add_1_output, double_blocks_18_img_attn_qkv_transpose_output)
    double_blocks_18_img_qkv = add(double_blocks_18_img_attn_qkv_matrixmultiply_output, double_blocks_18_img_attn_qkv_bias)
    double_blocks_18_reshape_0_output = reshape(double_blocks_18_img_qkv, double_blocks_18_totuple_0_output)
    double_blocks_18_transpose_out = transpose(double_blocks_18_reshape_0_output, double_blocks_18_transpose_0_axes)
    double_blocks_18_tensoritem_2_output = tensor_item(double_blocks_18_transpose_out, double_blocks_18_tensoritem_2_index)
    double_blocks_18_tensoritem_3_output = tensor_item(double_blocks_18_transpose_out, double_blocks_18_tensoritem_3_index)
    double_blocks_18_img_attn_norm_query_norm_power_output = power(double_blocks_18_tensoritem_2_output, double_blocks_18_img_attn_norm_query_norm_power_exponent)
    double_blocks_18_img_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_18_img_attn_norm_query_norm_power_output, axis=double_blocks_18_img_attn_norm_query_norm_mean_axis, keepdim=double_blocks_18_img_attn_norm_query_norm_mean_keepdim)
    double_blocks_18_img_attn_norm_query_norm_add_output = add(double_blocks_18_img_attn_norm_query_norm_mean_output, double_blocks_18_img_attn_norm_query_norm_add_right)
    double_blocks_18_img_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_18_img_attn_norm_query_norm_add_output)
    double_blocks_18_img_attn_norm_query_norm_divide_output = divide(double_blocks_18_img_attn_norm_query_norm_divide_numerator, double_blocks_18_img_attn_norm_query_norm_sqrt_output)
    double_blocks_18_img_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_18_tensoritem_2_output, double_blocks_18_img_attn_norm_query_norm_divide_output)
    double_blocks_18_img_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_18_img_attn_norm_query_norm_multiply_0_output, double_blocks_18_img_attn_norm_query_norm_scale)
    double_blocks_18_img_attn_norm_key_norm_power_output = power(double_blocks_18_tensoritem_3_output, double_blocks_18_img_attn_norm_key_norm_power_exponent)
    double_blocks_18_img_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_18_img_attn_norm_key_norm_power_output, axis=double_blocks_18_img_attn_norm_key_norm_mean_axis, keepdim=double_blocks_18_img_attn_norm_key_norm_mean_keepdim)
    double_blocks_18_img_attn_norm_key_norm_add_output = add(double_blocks_18_img_attn_norm_key_norm_mean_output, double_blocks_18_img_attn_norm_key_norm_add_right)
    double_blocks_18_img_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_18_img_attn_norm_key_norm_add_output)
    double_blocks_18_img_attn_norm_key_norm_divide_output = divide(double_blocks_18_img_attn_norm_key_norm_divide_numerator, double_blocks_18_img_attn_norm_key_norm_sqrt_output)
    double_blocks_18_img_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_18_tensoritem_3_output, double_blocks_18_img_attn_norm_key_norm_divide_output)
    double_blocks_18_img_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_18_img_attn_norm_key_norm_multiply_0_output, double_blocks_18_img_attn_norm_key_norm_scale)
    double_blocks_18_txt_mod_silu_minus = minus(vec)
    double_blocks_18_txt_mod_silu_exp = exp(double_blocks_18_txt_mod_silu_minus)
    double_blocks_18_txt_mod_silu_add = add(double_blocks_18_txt_mod_silu_add_left, double_blocks_18_txt_mod_silu_exp)
    double_blocks_18_txt_mod_silu_output = divide(vec, double_blocks_18_txt_mod_silu_add)
    double_blocks_18_txt_mod_lin_transpose_output = transpose(double_blocks_18_txt_mod_lin_weight, double_blocks_18_txt_mod_lin_transpose_axes)
    double_blocks_18_txt_mod_lin_matrixmultiply_output = matrix_multiplication(double_blocks_18_txt_mod_silu_output, double_blocks_18_txt_mod_lin_transpose_output)
    double_blocks_18_txt_mod_lin_out = add(double_blocks_18_txt_mod_lin_matrixmultiply_output, double_blocks_18_txt_mod_lin_bias)
    double_blocks_18_txt_mod_tensoritem_0_output = tensor_item(double_blocks_18_txt_mod_lin_out, double_blocks_18_txt_mod_tensoritem_0_index)
    double_blocks_18_txt_mod_split_0_output = split(double_blocks_18_txt_mod_tensoritem_0_output, double_blocks_18_txt_mod_split_0_split_size, double_blocks_18_txt_mod_split_0_axis)
    double_blocks_18_txt_mod_tensoritem_1_output = tensor_item(double_blocks_18_txt_mod_split_0_output, double_blocks_18_txt_mod_tensoritem_1_index)
    double_blocks_18_txt_mod_split_1_output = split(double_blocks_18_txt_mod_tensoritem_1_output, double_blocks_18_txt_mod_split_1_split_size, double_blocks_18_txt_mod_split_1_axis)
    double_blocks_18_txt_mod_tensoritem_2_output = tensor_item(double_blocks_18_txt_mod_split_0_output, double_blocks_18_txt_mod_tensoritem_2_index)
    double_blocks_18_txt_mod_split_2_output = split(double_blocks_18_txt_mod_tensoritem_2_output, double_blocks_18_txt_mod_split_2_split_size, double_blocks_18_txt_mod_split_2_axis)
    double_blocks_18_txt_norm1_mean_output = reduce_mean(double_blocks_17_add_11_output, axis=double_blocks_18_txt_norm1_mean_axis, keepdim=double_blocks_18_txt_norm1_mean_keepdim)
    double_blocks_18_txt_norm1_subtract_output = subtract(double_blocks_17_add_11_output, double_blocks_18_txt_norm1_mean_output)
    double_blocks_18_txt_norm1_variance_output = variance(double_blocks_17_add_11_output, axis=double_blocks_18_txt_norm1_variance_axis, keepdim=double_blocks_18_txt_norm1_variance_keepdim, correction=double_blocks_18_txt_norm1_variance_correction)
    double_blocks_18_txt_norm1_add_output = add(double_blocks_18_txt_norm1_variance_output, double_blocks_18_txt_norm1_add_right)
    double_blocks_18_txt_norm1_sqrt_output = sqrt(double_blocks_18_txt_norm1_add_output)
    double_blocks_18_txt_norm1_divide_output = divide(double_blocks_18_txt_norm1_subtract_output, double_blocks_18_txt_norm1_sqrt_output)
    double_blocks_18_tensoritem_4_output = tensor_item(double_blocks_18_txt_mod_split_1_output, double_blocks_18_tensoritem_4_index)
    double_blocks_18_add_2_output = add(double_blocks_18_add_2_left, double_blocks_18_tensoritem_4_output)
    double_blocks_18_multiply_1_output = multiplication(double_blocks_18_add_2_output, double_blocks_18_txt_norm1_divide_output)
    double_blocks_18_tensoritem_5_output = tensor_item(double_blocks_18_txt_mod_split_1_output, double_blocks_18_tensoritem_5_index)
    double_blocks_18_add_3_output = add(double_blocks_18_multiply_1_output, double_blocks_18_tensoritem_5_output)
    double_blocks_18_txt_attn_qkv_transpose_output = transpose(double_blocks_18_txt_attn_qkv_weight, double_blocks_18_txt_attn_qkv_transpose_axes)
    double_blocks_18_txt_attn_qkv_matrixmultiply_output = matrix_multiplication(double_blocks_18_add_3_output, double_blocks_18_txt_attn_qkv_transpose_output)
    double_blocks_18_txt_qkv = add(double_blocks_18_txt_attn_qkv_matrixmultiply_output, double_blocks_18_txt_attn_qkv_bias)
    double_blocks_18_reshape_1_output = reshape(double_blocks_18_txt_qkv, double_blocks_18_totuple_1_output)
    double_blocks_18_txt_transpose_out = transpose(double_blocks_18_reshape_1_output, double_blocks_18_transpose_1_axes)
    double_blocks_18_tensoritem_6_output = tensor_item(double_blocks_18_txt_transpose_out, double_blocks_18_tensoritem_6_index)
    double_blocks_18_tensoritem_7_output = tensor_item(double_blocks_18_txt_transpose_out, double_blocks_18_tensoritem_7_index)
    double_blocks_18_txt_attn_norm_query_norm_power_output = power(double_blocks_18_tensoritem_6_output, double_blocks_18_txt_attn_norm_query_norm_power_exponent)
    double_blocks_18_txt_attn_norm_query_norm_mean_output = reduce_mean(double_blocks_18_txt_attn_norm_query_norm_power_output, axis=double_blocks_18_txt_attn_norm_query_norm_mean_axis, keepdim=double_blocks_18_txt_attn_norm_query_norm_mean_keepdim)
    double_blocks_18_txt_attn_norm_query_norm_add_output = add(double_blocks_18_txt_attn_norm_query_norm_mean_output, double_blocks_18_txt_attn_norm_query_norm_add_right)
    double_blocks_18_txt_attn_norm_query_norm_sqrt_output = sqrt(double_blocks_18_txt_attn_norm_query_norm_add_output)
    double_blocks_18_txt_attn_norm_query_norm_divide_output = divide(double_blocks_18_txt_attn_norm_query_norm_divide_numerator, double_blocks_18_txt_attn_norm_query_norm_sqrt_output)
    double_blocks_18_txt_attn_norm_query_norm_multiply_0_output = multiplication(double_blocks_18_tensoritem_6_output, double_blocks_18_txt_attn_norm_query_norm_divide_output)
    double_blocks_18_txt_attn_norm_query_norm_multiply_1_output = multiplication(double_blocks_18_txt_attn_norm_query_norm_multiply_0_output, double_blocks_18_txt_attn_norm_query_norm_scale)
    double_blocks_18_txt_attn_norm_key_norm_power_output = power(double_blocks_18_tensoritem_7_output, double_blocks_18_txt_attn_norm_key_norm_power_exponent)
    double_blocks_18_txt_attn_norm_key_norm_mean_output = reduce_mean(double_blocks_18_txt_attn_norm_key_norm_power_output, axis=double_blocks_18_txt_attn_norm_key_norm_mean_axis, keepdim=double_blocks_18_txt_attn_norm_key_norm_mean_keepdim)
    double_blocks_18_txt_attn_norm_key_norm_add_output = add(double_blocks_18_txt_attn_norm_key_norm_mean_output, double_blocks_18_txt_attn_norm_key_norm_add_right)
    double_blocks_18_txt_attn_norm_key_norm_sqrt_output = sqrt(double_blocks_18_txt_attn_norm_key_norm_add_output)
    double_blocks_18_txt_attn_norm_key_norm_divide_output = divide(double_blocks_18_txt_attn_norm_key_norm_divide_numerator, double_blocks_18_txt_attn_norm_key_norm_sqrt_output)
    double_blocks_18_txt_attn_norm_key_norm_multiply_0_output = multiplication(double_blocks_18_tensoritem_7_output, double_blocks_18_txt_attn_norm_key_norm_divide_output)
    double_blocks_18_txt_attn_norm_key_norm_multiply_1_output = multiplication(double_blocks_18_txt_attn_norm_key_norm_multiply_0_output, double_blocks_18_txt_attn_norm_key_norm_scale)
    double_blocks_18_q_concat = concat(double_blocks_18_txt_attn_norm_query_norm_multiply_1_output, double_blocks_18_img_attn_norm_query_norm_multiply_1_output, axis=double_blocks_18_concat_0_axis)
    double_blocks_18_k_concat = concat(double_blocks_18_txt_attn_norm_key_norm_multiply_1_output, double_blocks_18_img_attn_norm_key_norm_multiply_1_output, axis=double_blocks_18_concat_1_axis)
    double_blocks_18_tensoritem_8_output = tensor_item(double_blocks_18_txt_transpose_out, double_blocks_18_tensoritem_8_index)
    double_blocks_18_tensoritem_9_output = tensor_item(double_blocks_18_transpose_out, double_blocks_18_tensoritem_9_index)
    double_blocks_18_v_concat = concat(double_blocks_18_tensoritem_8_output, double_blocks_18_tensoritem_9_output, axis=double_blocks_18_concat_2_axis)
    double_blocks_18_model_model_xq_ = reshape(double_blocks_18_q_concat, double_blocks_18_model_model_totuple_0_output)
    double_blocks_18_model_model_xk_ = reshape(double_blocks_18_k_concat, double_blocks_18_model_model_totuple_1_output)
    double_blocks_18_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, double_blocks_18_model_model_tensoritem_0_index)
    double_blocks_18_model_model_tensoritem_1_output = tensor_item(double_blocks_18_model_model_xq_, double_blocks_18_model_model_tensoritem_1_index)
    double_blocks_18_model_model_multiply_0_output = multiplication(double_blocks_18_model_model_tensoritem_0_output, double_blocks_18_model_model_tensoritem_1_output)
    double_blocks_18_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, double_blocks_18_model_model_tensoritem_2_index)
    double_blocks_18_model_model_tensoritem_3_output = tensor_item(double_blocks_18_model_model_xq_, double_blocks_18_model_model_tensoritem_3_index)
    double_blocks_18_model_model_multiply_1_output = multiplication(double_blocks_18_model_model_tensoritem_2_output, double_blocks_18_model_model_tensoritem_3_output)
    double_blocks_18_model_model_add_0_output = add(double_blocks_18_model_model_multiply_0_output, double_blocks_18_model_model_multiply_1_output)
    double_blocks_18_model_q_out = reshape(double_blocks_18_model_model_add_0_output, double_blocks_18_model_model_shape_0_output)
    double_blocks_18_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, double_blocks_18_model_model_tensoritem_4_index)
    double_blocks_18_model_model_tensoritem_5_output = tensor_item(double_blocks_18_model_model_xk_, double_blocks_18_model_model_tensoritem_5_index)
    double_blocks_18_model_model_multiply_2_output = multiplication(double_blocks_18_model_model_tensoritem_4_output, double_blocks_18_model_model_tensoritem_5_output)
    double_blocks_18_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, double_blocks_18_model_model_tensoritem_6_index)
    double_blocks_18_model_model_tensoritem_7_output = tensor_item(double_blocks_18_model_model_xk_, double_blocks_18_model_model_tensoritem_7_index)
    double_blocks_18_model_model_multiply_3_output = multiplication(double_blocks_18_model_model_tensoritem_6_output, double_blocks_18_model_model_tensoritem_7_output)
    double_blocks_18_model_model_add_1_output = add(double_blocks_18_model_model_multiply_2_output, double_blocks_18_model_model_multiply_3_output)
    double_blocks_18_model_k_out = reshape(double_blocks_18_model_model_add_1_output, double_blocks_18_model_model_shape_1_output)
    double_blocks_18_model_context = scaled_dot_product_attention(double_blocks_18_model_q_out, double_blocks_18_model_k_out, double_blocks_18_v_concat, double_blocks_18_model_scaleddotproduct_attn_mask)
    double_blocks_18_model_transpose_output = transpose(double_blocks_18_model_context, double_blocks_18_model_transpose_axes)
    double_blocks_18_attn = reshape(double_blocks_18_model_transpose_output, double_blocks_18_model_totuple_output)
    double_blocks_18_tensoritem_10_output = tensor_item(double_blocks_18_attn, double_blocks_18_tensoritem_10_index)
    double_blocks_18_img_attn_proj_transpose_output = transpose(double_blocks_18_img_attn_proj_weight, double_blocks_18_img_attn_proj_transpose_axes)
    double_blocks_18_img_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_18_tensoritem_10_output, double_blocks_18_img_attn_proj_transpose_output)
    double_blocks_18_img_proj = add(double_blocks_18_img_attn_proj_matrixmultiply_output, double_blocks_18_img_attn_proj_bias)
    double_blocks_18_tensoritem_11_output = tensor_item(double_blocks_18_img_mod_split_1_output, double_blocks_18_tensoritem_11_index)
    double_blocks_18_multiply_2_output = multiplication(double_blocks_18_tensoritem_11_output, double_blocks_18_img_proj)
    double_blocks_18_add_4_output = add(double_blocks_17_add_10_output, double_blocks_18_multiply_2_output)
    double_blocks_18_img_norm2_mean_output = reduce_mean(double_blocks_18_add_4_output, axis=double_blocks_18_img_norm2_mean_axis, keepdim=double_blocks_18_img_norm2_mean_keepdim)
    double_blocks_18_img_norm2_subtract_output = subtract(double_blocks_18_add_4_output, double_blocks_18_img_norm2_mean_output)
    double_blocks_18_img_norm2_variance_output = variance(double_blocks_18_add_4_output, axis=double_blocks_18_img_norm2_variance_axis, keepdim=double_blocks_18_img_norm2_variance_keepdim, correction=double_blocks_18_img_norm2_variance_correction)
    double_blocks_18_img_norm2_add_output = add(double_blocks_18_img_norm2_variance_output, double_blocks_18_img_norm2_add_right)
    double_blocks_18_img_norm2_sqrt_output = sqrt(double_blocks_18_img_norm2_add_output)
    double_blocks_18_img_norm2_divide_output = divide(double_blocks_18_img_norm2_subtract_output, double_blocks_18_img_norm2_sqrt_output)
    double_blocks_18_tensoritem_12_output = tensor_item(double_blocks_18_img_mod_split_2_output, double_blocks_18_tensoritem_12_index)
    double_blocks_18_add_5_output = add(double_blocks_18_add_5_left, double_blocks_18_tensoritem_12_output)
    double_blocks_18_multiply_3_output = multiplication(double_blocks_18_add_5_output, double_blocks_18_img_norm2_divide_output)
    double_blocks_18_tensoritem_13_output = tensor_item(double_blocks_18_img_mod_split_2_output, double_blocks_18_tensoritem_13_index)
    double_blocks_18_add_6_output = add(double_blocks_18_multiply_3_output, double_blocks_18_tensoritem_13_output)
    double_blocks_18_img_mlp_0_transpose_output = transpose(double_blocks_18_img_mlp_0_weight, double_blocks_18_img_mlp_0_transpose_axes)
    double_blocks_18_img_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_18_add_6_output, double_blocks_18_img_mlp_0_transpose_output)
    double_blocks_18_img_mlp_0_output = add(double_blocks_18_img_mlp_0_matrixmultiply_output, double_blocks_18_img_mlp_0_bias)
    double_blocks_18_img_mlp_gelu_output = gelu(double_blocks_18_img_mlp_0_output, double_blocks_18_img_mlp_gelu_approximate)
    double_blocks_18_img_mlp_2_transpose_output = transpose(double_blocks_18_img_mlp_2_weight, double_blocks_18_img_mlp_2_transpose_axes)
    double_blocks_18_img_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_18_img_mlp_gelu_output, double_blocks_18_img_mlp_2_transpose_output)
    double_blocks_18_img_mlp = add(double_blocks_18_img_mlp_2_matrixmultiply_output, double_blocks_18_img_mlp_2_bias)
    double_blocks_18_tensoritem_14_output = tensor_item(double_blocks_18_attn, double_blocks_18_tensoritem_14_index)
    double_blocks_18_txt_attn_proj_transpose_output = transpose(double_blocks_18_txt_attn_proj_weight, double_blocks_18_txt_attn_proj_transpose_axes)
    double_blocks_18_txt_attn_proj_matrixmultiply_output = matrix_multiplication(double_blocks_18_tensoritem_14_output, double_blocks_18_txt_attn_proj_transpose_output)
    double_blocks_18_txt_proj = add(double_blocks_18_txt_attn_proj_matrixmultiply_output, double_blocks_18_txt_attn_proj_bias)
    double_blocks_18_tensoritem_15_output = tensor_item(double_blocks_18_txt_mod_split_1_output, double_blocks_18_tensoritem_15_index)
    double_blocks_18_multiply_4_output = multiplication(double_blocks_18_tensoritem_15_output, double_blocks_18_txt_proj)
    double_blocks_18_add_7_output = add(double_blocks_17_add_11_output, double_blocks_18_multiply_4_output)
    double_blocks_18_txt_norm2_mean_output = reduce_mean(double_blocks_18_add_7_output, axis=double_blocks_18_txt_norm2_mean_axis, keepdim=double_blocks_18_txt_norm2_mean_keepdim)
    double_blocks_18_txt_norm2_subtract_output = subtract(double_blocks_18_add_7_output, double_blocks_18_txt_norm2_mean_output)
    double_blocks_18_txt_norm2_variance_output = variance(double_blocks_18_add_7_output, axis=double_blocks_18_txt_norm2_variance_axis, keepdim=double_blocks_18_txt_norm2_variance_keepdim, correction=double_blocks_18_txt_norm2_variance_correction)
    double_blocks_18_txt_norm2_add_output = add(double_blocks_18_txt_norm2_variance_output, double_blocks_18_txt_norm2_add_right)
    double_blocks_18_txt_norm2_sqrt_output = sqrt(double_blocks_18_txt_norm2_add_output)
    double_blocks_18_txt_norm2_divide_output = divide(double_blocks_18_txt_norm2_subtract_output, double_blocks_18_txt_norm2_sqrt_output)
    double_blocks_18_tensoritem_16_output = tensor_item(double_blocks_18_txt_mod_split_2_output, double_blocks_18_tensoritem_16_index)
    double_blocks_18_add_8_output = add(double_blocks_18_add_8_left, double_blocks_18_tensoritem_16_output)
    double_blocks_18_multiply_5_output = multiplication(double_blocks_18_add_8_output, double_blocks_18_txt_norm2_divide_output)
    double_blocks_18_tensoritem_17_output = tensor_item(double_blocks_18_txt_mod_split_2_output, double_blocks_18_tensoritem_17_index)
    double_blocks_18_add_9_output = add(double_blocks_18_multiply_5_output, double_blocks_18_tensoritem_17_output)
    double_blocks_18_txt_mlp_0_transpose_output = transpose(double_blocks_18_txt_mlp_0_weight, double_blocks_18_txt_mlp_0_transpose_axes)
    double_blocks_18_txt_mlp_0_matrixmultiply_output = matrix_multiplication(double_blocks_18_add_9_output, double_blocks_18_txt_mlp_0_transpose_output)
    double_blocks_18_txt_mlp_0_output = add(double_blocks_18_txt_mlp_0_matrixmultiply_output, double_blocks_18_txt_mlp_0_bias)
    double_blocks_18_txt_mlp_gelu_output = gelu(double_blocks_18_txt_mlp_0_output, double_blocks_18_txt_mlp_gelu_approximate)
    double_blocks_18_txt_mlp_2_transpose_output = transpose(double_blocks_18_txt_mlp_2_weight, double_blocks_18_txt_mlp_2_transpose_axes)
    double_blocks_18_txt_mlp_2_matrixmultiply_output = matrix_multiplication(double_blocks_18_txt_mlp_gelu_output, double_blocks_18_txt_mlp_2_transpose_output)
    double_blocks_18_txt_mlp = add(double_blocks_18_txt_mlp_2_matrixmultiply_output, double_blocks_18_txt_mlp_2_bias)
    double_blocks_18_tensoritem_18_output = tensor_item(double_blocks_18_img_mod_split_2_output, double_blocks_18_tensoritem_18_index)
    double_blocks_18_multiply_6_output = multiplication(double_blocks_18_tensoritem_18_output, double_blocks_18_img_mlp)
    double_blocks_18_add_10_output = add(double_blocks_18_add_4_output, double_blocks_18_multiply_6_output)
    double_blocks_18_tensoritem_19_output = tensor_item(double_blocks_18_txt_mod_split_2_output, double_blocks_18_tensoritem_19_index)
    double_blocks_18_multiply_7_output = multiplication(double_blocks_18_tensoritem_19_output, double_blocks_18_txt_mlp)
    double_blocks_18_add_11_output = add(double_blocks_18_add_7_output, double_blocks_18_multiply_7_output)
    img_concat = concat(double_blocks_18_add_10_output, double_blocks_18_add_11_output, axis=concat_1_axis)
    single_blocks_0_modulation_silu_minus = minus(vec)
    single_blocks_0_modulation_silu_exp = exp(single_blocks_0_modulation_silu_minus)
    single_blocks_0_modulation_silu_add = add(single_blocks_0_modulation_silu_add_left, single_blocks_0_modulation_silu_exp)
    single_blocks_0_modulation_silu_output = divide(vec, single_blocks_0_modulation_silu_add)
    single_blocks_0_modulation_lin_transpose_output = transpose(single_blocks_0_modulation_lin_weight, single_blocks_0_modulation_lin_transpose_axes)
    single_blocks_0_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_0_modulation_silu_output, single_blocks_0_modulation_lin_transpose_output)
    single_blocks_0_modulation_lin_out = add(single_blocks_0_modulation_lin_matrixmultiply_output, single_blocks_0_modulation_lin_bias)
    single_blocks_0_modulation_tensoritem_output = tensor_item(single_blocks_0_modulation_lin_out, single_blocks_0_modulation_tensoritem_index)
    single_blocks_0_modulation_split_output = split(single_blocks_0_modulation_tensoritem_output, single_blocks_0_modulation_split_split_size, single_blocks_0_modulation_split_axis)
    single_blocks_0_pre_norm_mean_output = reduce_mean(img_concat, axis=single_blocks_0_pre_norm_mean_axis, keepdim=single_blocks_0_pre_norm_mean_keepdim)
    single_blocks_0_pre_norm_subtract_output = subtract(img_concat, single_blocks_0_pre_norm_mean_output)
    single_blocks_0_pre_norm_variance_output = variance(img_concat, axis=single_blocks_0_pre_norm_variance_axis, keepdim=single_blocks_0_pre_norm_variance_keepdim, correction=single_blocks_0_pre_norm_variance_correction)
    single_blocks_0_pre_norm_add_output = add(single_blocks_0_pre_norm_variance_output, single_blocks_0_pre_norm_add_right)
    single_blocks_0_pre_norm_sqrt_output = sqrt(single_blocks_0_pre_norm_add_output)
    single_blocks_0_pre_norm_divide_output = divide(single_blocks_0_pre_norm_subtract_output, single_blocks_0_pre_norm_sqrt_output)
    single_blocks_0_tensoritem_0_output = tensor_item(single_blocks_0_modulation_split_output, single_blocks_0_tensoritem_0_index)
    single_blocks_0_add_0_output = add(single_blocks_0_add_0_left, single_blocks_0_tensoritem_0_output)
    single_blocks_0_multiply_0_output = multiplication(single_blocks_0_add_0_output, single_blocks_0_pre_norm_divide_output)
    single_blocks_0_tensoritem_1_output = tensor_item(single_blocks_0_modulation_split_output, single_blocks_0_tensoritem_1_index)
    single_blocks_0_add_1_output = add(single_blocks_0_multiply_0_output, single_blocks_0_tensoritem_1_output)
    single_blocks_0_linear1_transpose_output = transpose(single_blocks_0_linear1_weight, single_blocks_0_linear1_transpose_axes)
    single_blocks_0_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_0_add_1_output, single_blocks_0_linear1_transpose_output)
    single_blocks_0_lin1_out = add(single_blocks_0_linear1_matrixmultiply_output, single_blocks_0_linear1_bias)
    single_blocks_0_tensoritem_2_output = tensor_item(single_blocks_0_lin1_out, single_blocks_0_tensoritem_2_index)
    single_blocks_0_reshape_output = reshape(single_blocks_0_tensoritem_2_output, single_blocks_0_totuple_output)
    single_blocks_0_transpose_out = transpose(single_blocks_0_reshape_output, single_blocks_0_transpose_axes)
    single_blocks_0_tensoritem_3_output = tensor_item(single_blocks_0_transpose_out, single_blocks_0_tensoritem_3_index)
    single_blocks_0_tensoritem_4_output = tensor_item(single_blocks_0_transpose_out, single_blocks_0_tensoritem_4_index)
    single_blocks_0_norm_query_norm_power_output = power(single_blocks_0_tensoritem_3_output, single_blocks_0_norm_query_norm_power_exponent)
    single_blocks_0_norm_query_norm_mean_output = reduce_mean(single_blocks_0_norm_query_norm_power_output, axis=single_blocks_0_norm_query_norm_mean_axis, keepdim=single_blocks_0_norm_query_norm_mean_keepdim)
    single_blocks_0_norm_query_norm_add_output = add(single_blocks_0_norm_query_norm_mean_output, single_blocks_0_norm_query_norm_add_right)
    single_blocks_0_norm_query_norm_sqrt_output = sqrt(single_blocks_0_norm_query_norm_add_output)
    single_blocks_0_norm_query_norm_divide_output = divide(single_blocks_0_norm_query_norm_divide_numerator, single_blocks_0_norm_query_norm_sqrt_output)
    single_blocks_0_norm_query_norm_multiply_0_output = multiplication(single_blocks_0_tensoritem_3_output, single_blocks_0_norm_query_norm_divide_output)
    single_blocks_0_norm_query_norm_multiply_1_output = multiplication(single_blocks_0_norm_query_norm_multiply_0_output, single_blocks_0_norm_query_norm_scale)
    single_blocks_0_norm_key_norm_power_output = power(single_blocks_0_tensoritem_4_output, single_blocks_0_norm_key_norm_power_exponent)
    single_blocks_0_norm_key_norm_mean_output = reduce_mean(single_blocks_0_norm_key_norm_power_output, axis=single_blocks_0_norm_key_norm_mean_axis, keepdim=single_blocks_0_norm_key_norm_mean_keepdim)
    single_blocks_0_norm_key_norm_add_output = add(single_blocks_0_norm_key_norm_mean_output, single_blocks_0_norm_key_norm_add_right)
    single_blocks_0_norm_key_norm_sqrt_output = sqrt(single_blocks_0_norm_key_norm_add_output)
    single_blocks_0_norm_key_norm_divide_output = divide(single_blocks_0_norm_key_norm_divide_numerator, single_blocks_0_norm_key_norm_sqrt_output)
    single_blocks_0_norm_key_norm_multiply_0_output = multiplication(single_blocks_0_tensoritem_4_output, single_blocks_0_norm_key_norm_divide_output)
    single_blocks_0_norm_key_norm_multiply_1_output = multiplication(single_blocks_0_norm_key_norm_multiply_0_output, single_blocks_0_norm_key_norm_scale)
    single_blocks_0_tensoritem_5_output = tensor_item(single_blocks_0_transpose_out, single_blocks_0_tensoritem_5_index)
    single_blocks_0_model_model_xq_ = reshape(single_blocks_0_norm_query_norm_multiply_1_output, single_blocks_0_model_model_totuple_0_output)
    single_blocks_0_model_model_xk_ = reshape(single_blocks_0_norm_key_norm_multiply_1_output, single_blocks_0_model_model_totuple_1_output)
    single_blocks_0_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_0_model_model_tensoritem_0_index)
    single_blocks_0_model_model_tensoritem_1_output = tensor_item(single_blocks_0_model_model_xq_, single_blocks_0_model_model_tensoritem_1_index)
    single_blocks_0_model_model_multiply_0_output = multiplication(single_blocks_0_model_model_tensoritem_0_output, single_blocks_0_model_model_tensoritem_1_output)
    single_blocks_0_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_0_model_model_tensoritem_2_index)
    single_blocks_0_model_model_tensoritem_3_output = tensor_item(single_blocks_0_model_model_xq_, single_blocks_0_model_model_tensoritem_3_index)
    single_blocks_0_model_model_multiply_1_output = multiplication(single_blocks_0_model_model_tensoritem_2_output, single_blocks_0_model_model_tensoritem_3_output)
    single_blocks_0_model_model_add_0_output = add(single_blocks_0_model_model_multiply_0_output, single_blocks_0_model_model_multiply_1_output)
    single_blocks_0_model_q_out = reshape(single_blocks_0_model_model_add_0_output, single_blocks_0_model_model_shape_0_output)
    single_blocks_0_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_0_model_model_tensoritem_4_index)
    single_blocks_0_model_model_tensoritem_5_output = tensor_item(single_blocks_0_model_model_xk_, single_blocks_0_model_model_tensoritem_5_index)
    single_blocks_0_model_model_multiply_2_output = multiplication(single_blocks_0_model_model_tensoritem_4_output, single_blocks_0_model_model_tensoritem_5_output)
    single_blocks_0_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_0_model_model_tensoritem_6_index)
    single_blocks_0_model_model_tensoritem_7_output = tensor_item(single_blocks_0_model_model_xk_, single_blocks_0_model_model_tensoritem_7_index)
    single_blocks_0_model_model_multiply_3_output = multiplication(single_blocks_0_model_model_tensoritem_6_output, single_blocks_0_model_model_tensoritem_7_output)
    single_blocks_0_model_model_add_1_output = add(single_blocks_0_model_model_multiply_2_output, single_blocks_0_model_model_multiply_3_output)
    single_blocks_0_model_k_out = reshape(single_blocks_0_model_model_add_1_output, single_blocks_0_model_model_shape_1_output)
    single_blocks_0_model_context = scaled_dot_product_attention(single_blocks_0_model_q_out, single_blocks_0_model_k_out, single_blocks_0_tensoritem_5_output, single_blocks_0_model_scaleddotproduct_attn_mask)
    single_blocks_0_model_transpose_output = transpose(single_blocks_0_model_context, single_blocks_0_model_transpose_axes)
    single_blocks_0_attn = reshape(single_blocks_0_model_transpose_output, single_blocks_0_model_totuple_output)
    single_blocks_0_tensoritem_6_output = tensor_item(single_blocks_0_lin1_out, single_blocks_0_tensoritem_6_index)
    single_blocks_0_mlp_act = gelu(single_blocks_0_tensoritem_6_output, single_blocks_0_gelu_approximate)
    single_blocks_0_concat_out = concat(single_blocks_0_attn, single_blocks_0_mlp_act, axis=single_blocks_0_concat_axis)
    single_blocks_0_linear2_transpose_output = transpose(single_blocks_0_linear2_weight, single_blocks_0_linear2_transpose_axes)
    single_blocks_0_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_0_concat_out, single_blocks_0_linear2_transpose_output)
    single_blocks_0_lin2_out = add(single_blocks_0_linear2_matrixmultiply_output, single_blocks_0_linear2_bias)
    single_blocks_0_tensoritem_7_output = tensor_item(single_blocks_0_modulation_split_output, single_blocks_0_tensoritem_7_index)
    single_blocks_0_multiply_1_output = multiplication(single_blocks_0_tensoritem_7_output, single_blocks_0_lin2_out)
    single_blocks_0_add_2_output = add(img_concat, single_blocks_0_multiply_1_output)
    single_blocks_1_modulation_silu_minus = minus(vec)
    single_blocks_1_modulation_silu_exp = exp(single_blocks_1_modulation_silu_minus)
    single_blocks_1_modulation_silu_add = add(single_blocks_1_modulation_silu_add_left, single_blocks_1_modulation_silu_exp)
    single_blocks_1_modulation_silu_output = divide(vec, single_blocks_1_modulation_silu_add)
    single_blocks_1_modulation_lin_transpose_output = transpose(single_blocks_1_modulation_lin_weight, single_blocks_1_modulation_lin_transpose_axes)
    single_blocks_1_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_1_modulation_silu_output, single_blocks_1_modulation_lin_transpose_output)
    single_blocks_1_modulation_lin_out = add(single_blocks_1_modulation_lin_matrixmultiply_output, single_blocks_1_modulation_lin_bias)
    single_blocks_1_modulation_tensoritem_output = tensor_item(single_blocks_1_modulation_lin_out, single_blocks_1_modulation_tensoritem_index)
    single_blocks_1_modulation_split_output = split(single_blocks_1_modulation_tensoritem_output, single_blocks_1_modulation_split_split_size, single_blocks_1_modulation_split_axis)
    single_blocks_1_pre_norm_mean_output = reduce_mean(single_blocks_0_add_2_output, axis=single_blocks_1_pre_norm_mean_axis, keepdim=single_blocks_1_pre_norm_mean_keepdim)
    single_blocks_1_pre_norm_subtract_output = subtract(single_blocks_0_add_2_output, single_blocks_1_pre_norm_mean_output)
    single_blocks_1_pre_norm_variance_output = variance(single_blocks_0_add_2_output, axis=single_blocks_1_pre_norm_variance_axis, keepdim=single_blocks_1_pre_norm_variance_keepdim, correction=single_blocks_1_pre_norm_variance_correction)
    single_blocks_1_pre_norm_add_output = add(single_blocks_1_pre_norm_variance_output, single_blocks_1_pre_norm_add_right)
    single_blocks_1_pre_norm_sqrt_output = sqrt(single_blocks_1_pre_norm_add_output)
    single_blocks_1_pre_norm_divide_output = divide(single_blocks_1_pre_norm_subtract_output, single_blocks_1_pre_norm_sqrt_output)
    single_blocks_1_tensoritem_0_output = tensor_item(single_blocks_1_modulation_split_output, single_blocks_1_tensoritem_0_index)
    single_blocks_1_add_0_output = add(single_blocks_1_add_0_left, single_blocks_1_tensoritem_0_output)
    single_blocks_1_multiply_0_output = multiplication(single_blocks_1_add_0_output, single_blocks_1_pre_norm_divide_output)
    single_blocks_1_tensoritem_1_output = tensor_item(single_blocks_1_modulation_split_output, single_blocks_1_tensoritem_1_index)
    single_blocks_1_add_1_output = add(single_blocks_1_multiply_0_output, single_blocks_1_tensoritem_1_output)
    single_blocks_1_linear1_transpose_output = transpose(single_blocks_1_linear1_weight, single_blocks_1_linear1_transpose_axes)
    single_blocks_1_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_1_add_1_output, single_blocks_1_linear1_transpose_output)
    single_blocks_1_lin1_out = add(single_blocks_1_linear1_matrixmultiply_output, single_blocks_1_linear1_bias)
    single_blocks_1_tensoritem_2_output = tensor_item(single_blocks_1_lin1_out, single_blocks_1_tensoritem_2_index)
    single_blocks_1_reshape_output = reshape(single_blocks_1_tensoritem_2_output, single_blocks_1_totuple_output)
    single_blocks_1_transpose_out = transpose(single_blocks_1_reshape_output, single_blocks_1_transpose_axes)
    single_blocks_1_tensoritem_3_output = tensor_item(single_blocks_1_transpose_out, single_blocks_1_tensoritem_3_index)
    single_blocks_1_tensoritem_4_output = tensor_item(single_blocks_1_transpose_out, single_blocks_1_tensoritem_4_index)
    single_blocks_1_norm_query_norm_power_output = power(single_blocks_1_tensoritem_3_output, single_blocks_1_norm_query_norm_power_exponent)
    single_blocks_1_norm_query_norm_mean_output = reduce_mean(single_blocks_1_norm_query_norm_power_output, axis=single_blocks_1_norm_query_norm_mean_axis, keepdim=single_blocks_1_norm_query_norm_mean_keepdim)
    single_blocks_1_norm_query_norm_add_output = add(single_blocks_1_norm_query_norm_mean_output, single_blocks_1_norm_query_norm_add_right)
    single_blocks_1_norm_query_norm_sqrt_output = sqrt(single_blocks_1_norm_query_norm_add_output)
    single_blocks_1_norm_query_norm_divide_output = divide(single_blocks_1_norm_query_norm_divide_numerator, single_blocks_1_norm_query_norm_sqrt_output)
    single_blocks_1_norm_query_norm_multiply_0_output = multiplication(single_blocks_1_tensoritem_3_output, single_blocks_1_norm_query_norm_divide_output)
    single_blocks_1_norm_query_norm_multiply_1_output = multiplication(single_blocks_1_norm_query_norm_multiply_0_output, single_blocks_1_norm_query_norm_scale)
    single_blocks_1_norm_key_norm_power_output = power(single_blocks_1_tensoritem_4_output, single_blocks_1_norm_key_norm_power_exponent)
    single_blocks_1_norm_key_norm_mean_output = reduce_mean(single_blocks_1_norm_key_norm_power_output, axis=single_blocks_1_norm_key_norm_mean_axis, keepdim=single_blocks_1_norm_key_norm_mean_keepdim)
    single_blocks_1_norm_key_norm_add_output = add(single_blocks_1_norm_key_norm_mean_output, single_blocks_1_norm_key_norm_add_right)
    single_blocks_1_norm_key_norm_sqrt_output = sqrt(single_blocks_1_norm_key_norm_add_output)
    single_blocks_1_norm_key_norm_divide_output = divide(single_blocks_1_norm_key_norm_divide_numerator, single_blocks_1_norm_key_norm_sqrt_output)
    single_blocks_1_norm_key_norm_multiply_0_output = multiplication(single_blocks_1_tensoritem_4_output, single_blocks_1_norm_key_norm_divide_output)
    single_blocks_1_norm_key_norm_multiply_1_output = multiplication(single_blocks_1_norm_key_norm_multiply_0_output, single_blocks_1_norm_key_norm_scale)
    single_blocks_1_tensoritem_5_output = tensor_item(single_blocks_1_transpose_out, single_blocks_1_tensoritem_5_index)
    single_blocks_1_model_model_xq_ = reshape(single_blocks_1_norm_query_norm_multiply_1_output, single_blocks_1_model_model_totuple_0_output)
    single_blocks_1_model_model_xk_ = reshape(single_blocks_1_norm_key_norm_multiply_1_output, single_blocks_1_model_model_totuple_1_output)
    single_blocks_1_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_1_model_model_tensoritem_0_index)
    single_blocks_1_model_model_tensoritem_1_output = tensor_item(single_blocks_1_model_model_xq_, single_blocks_1_model_model_tensoritem_1_index)
    single_blocks_1_model_model_multiply_0_output = multiplication(single_blocks_1_model_model_tensoritem_0_output, single_blocks_1_model_model_tensoritem_1_output)
    single_blocks_1_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_1_model_model_tensoritem_2_index)
    single_blocks_1_model_model_tensoritem_3_output = tensor_item(single_blocks_1_model_model_xq_, single_blocks_1_model_model_tensoritem_3_index)
    single_blocks_1_model_model_multiply_1_output = multiplication(single_blocks_1_model_model_tensoritem_2_output, single_blocks_1_model_model_tensoritem_3_output)
    single_blocks_1_model_model_add_0_output = add(single_blocks_1_model_model_multiply_0_output, single_blocks_1_model_model_multiply_1_output)
    single_blocks_1_model_q_out = reshape(single_blocks_1_model_model_add_0_output, single_blocks_1_model_model_shape_0_output)
    single_blocks_1_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_1_model_model_tensoritem_4_index)
    single_blocks_1_model_model_tensoritem_5_output = tensor_item(single_blocks_1_model_model_xk_, single_blocks_1_model_model_tensoritem_5_index)
    single_blocks_1_model_model_multiply_2_output = multiplication(single_blocks_1_model_model_tensoritem_4_output, single_blocks_1_model_model_tensoritem_5_output)
    single_blocks_1_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_1_model_model_tensoritem_6_index)
    single_blocks_1_model_model_tensoritem_7_output = tensor_item(single_blocks_1_model_model_xk_, single_blocks_1_model_model_tensoritem_7_index)
    single_blocks_1_model_model_multiply_3_output = multiplication(single_blocks_1_model_model_tensoritem_6_output, single_blocks_1_model_model_tensoritem_7_output)
    single_blocks_1_model_model_add_1_output = add(single_blocks_1_model_model_multiply_2_output, single_blocks_1_model_model_multiply_3_output)
    single_blocks_1_model_k_out = reshape(single_blocks_1_model_model_add_1_output, single_blocks_1_model_model_shape_1_output)
    single_blocks_1_model_context = scaled_dot_product_attention(single_blocks_1_model_q_out, single_blocks_1_model_k_out, single_blocks_1_tensoritem_5_output, single_blocks_1_model_scaleddotproduct_attn_mask)
    single_blocks_1_model_transpose_output = transpose(single_blocks_1_model_context, single_blocks_1_model_transpose_axes)
    single_blocks_1_attn = reshape(single_blocks_1_model_transpose_output, single_blocks_1_model_totuple_output)
    single_blocks_1_tensoritem_6_output = tensor_item(single_blocks_1_lin1_out, single_blocks_1_tensoritem_6_index)
    single_blocks_1_mlp_act = gelu(single_blocks_1_tensoritem_6_output, single_blocks_1_gelu_approximate)
    single_blocks_1_concat_out = concat(single_blocks_1_attn, single_blocks_1_mlp_act, axis=single_blocks_1_concat_axis)
    single_blocks_1_linear2_transpose_output = transpose(single_blocks_1_linear2_weight, single_blocks_1_linear2_transpose_axes)
    single_blocks_1_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_1_concat_out, single_blocks_1_linear2_transpose_output)
    single_blocks_1_lin2_out = add(single_blocks_1_linear2_matrixmultiply_output, single_blocks_1_linear2_bias)
    single_blocks_1_tensoritem_7_output = tensor_item(single_blocks_1_modulation_split_output, single_blocks_1_tensoritem_7_index)
    single_blocks_1_multiply_1_output = multiplication(single_blocks_1_tensoritem_7_output, single_blocks_1_lin2_out)
    single_blocks_1_add_2_output = add(single_blocks_0_add_2_output, single_blocks_1_multiply_1_output)
    single_blocks_2_modulation_silu_minus = minus(vec)
    single_blocks_2_modulation_silu_exp = exp(single_blocks_2_modulation_silu_minus)
    single_blocks_2_modulation_silu_add = add(single_blocks_2_modulation_silu_add_left, single_blocks_2_modulation_silu_exp)
    single_blocks_2_modulation_silu_output = divide(vec, single_blocks_2_modulation_silu_add)
    single_blocks_2_modulation_lin_transpose_output = transpose(single_blocks_2_modulation_lin_weight, single_blocks_2_modulation_lin_transpose_axes)
    single_blocks_2_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_2_modulation_silu_output, single_blocks_2_modulation_lin_transpose_output)
    single_blocks_2_modulation_lin_out = add(single_blocks_2_modulation_lin_matrixmultiply_output, single_blocks_2_modulation_lin_bias)
    single_blocks_2_modulation_tensoritem_output = tensor_item(single_blocks_2_modulation_lin_out, single_blocks_2_modulation_tensoritem_index)
    single_blocks_2_modulation_split_output = split(single_blocks_2_modulation_tensoritem_output, single_blocks_2_modulation_split_split_size, single_blocks_2_modulation_split_axis)
    single_blocks_2_pre_norm_mean_output = reduce_mean(single_blocks_1_add_2_output, axis=single_blocks_2_pre_norm_mean_axis, keepdim=single_blocks_2_pre_norm_mean_keepdim)
    single_blocks_2_pre_norm_subtract_output = subtract(single_blocks_1_add_2_output, single_blocks_2_pre_norm_mean_output)
    single_blocks_2_pre_norm_variance_output = variance(single_blocks_1_add_2_output, axis=single_blocks_2_pre_norm_variance_axis, keepdim=single_blocks_2_pre_norm_variance_keepdim, correction=single_blocks_2_pre_norm_variance_correction)
    single_blocks_2_pre_norm_add_output = add(single_blocks_2_pre_norm_variance_output, single_blocks_2_pre_norm_add_right)
    single_blocks_2_pre_norm_sqrt_output = sqrt(single_blocks_2_pre_norm_add_output)
    single_blocks_2_pre_norm_divide_output = divide(single_blocks_2_pre_norm_subtract_output, single_blocks_2_pre_norm_sqrt_output)
    single_blocks_2_tensoritem_0_output = tensor_item(single_blocks_2_modulation_split_output, single_blocks_2_tensoritem_0_index)
    single_blocks_2_add_0_output = add(single_blocks_2_add_0_left, single_blocks_2_tensoritem_0_output)
    single_blocks_2_multiply_0_output = multiplication(single_blocks_2_add_0_output, single_blocks_2_pre_norm_divide_output)
    single_blocks_2_tensoritem_1_output = tensor_item(single_blocks_2_modulation_split_output, single_blocks_2_tensoritem_1_index)
    single_blocks_2_add_1_output = add(single_blocks_2_multiply_0_output, single_blocks_2_tensoritem_1_output)
    single_blocks_2_linear1_transpose_output = transpose(single_blocks_2_linear1_weight, single_blocks_2_linear1_transpose_axes)
    single_blocks_2_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_2_add_1_output, single_blocks_2_linear1_transpose_output)
    single_blocks_2_lin1_out = add(single_blocks_2_linear1_matrixmultiply_output, single_blocks_2_linear1_bias)
    single_blocks_2_tensoritem_2_output = tensor_item(single_blocks_2_lin1_out, single_blocks_2_tensoritem_2_index)
    single_blocks_2_reshape_output = reshape(single_blocks_2_tensoritem_2_output, single_blocks_2_totuple_output)
    single_blocks_2_transpose_out = transpose(single_blocks_2_reshape_output, single_blocks_2_transpose_axes)
    single_blocks_2_tensoritem_3_output = tensor_item(single_blocks_2_transpose_out, single_blocks_2_tensoritem_3_index)
    single_blocks_2_tensoritem_4_output = tensor_item(single_blocks_2_transpose_out, single_blocks_2_tensoritem_4_index)
    single_blocks_2_norm_query_norm_power_output = power(single_blocks_2_tensoritem_3_output, single_blocks_2_norm_query_norm_power_exponent)
    single_blocks_2_norm_query_norm_mean_output = reduce_mean(single_blocks_2_norm_query_norm_power_output, axis=single_blocks_2_norm_query_norm_mean_axis, keepdim=single_blocks_2_norm_query_norm_mean_keepdim)
    single_blocks_2_norm_query_norm_add_output = add(single_blocks_2_norm_query_norm_mean_output, single_blocks_2_norm_query_norm_add_right)
    single_blocks_2_norm_query_norm_sqrt_output = sqrt(single_blocks_2_norm_query_norm_add_output)
    single_blocks_2_norm_query_norm_divide_output = divide(single_blocks_2_norm_query_norm_divide_numerator, single_blocks_2_norm_query_norm_sqrt_output)
    single_blocks_2_norm_query_norm_multiply_0_output = multiplication(single_blocks_2_tensoritem_3_output, single_blocks_2_norm_query_norm_divide_output)
    single_blocks_2_norm_query_norm_multiply_1_output = multiplication(single_blocks_2_norm_query_norm_multiply_0_output, single_blocks_2_norm_query_norm_scale)
    single_blocks_2_norm_key_norm_power_output = power(single_blocks_2_tensoritem_4_output, single_blocks_2_norm_key_norm_power_exponent)
    single_blocks_2_norm_key_norm_mean_output = reduce_mean(single_blocks_2_norm_key_norm_power_output, axis=single_blocks_2_norm_key_norm_mean_axis, keepdim=single_blocks_2_norm_key_norm_mean_keepdim)
    single_blocks_2_norm_key_norm_add_output = add(single_blocks_2_norm_key_norm_mean_output, single_blocks_2_norm_key_norm_add_right)
    single_blocks_2_norm_key_norm_sqrt_output = sqrt(single_blocks_2_norm_key_norm_add_output)
    single_blocks_2_norm_key_norm_divide_output = divide(single_blocks_2_norm_key_norm_divide_numerator, single_blocks_2_norm_key_norm_sqrt_output)
    single_blocks_2_norm_key_norm_multiply_0_output = multiplication(single_blocks_2_tensoritem_4_output, single_blocks_2_norm_key_norm_divide_output)
    single_blocks_2_norm_key_norm_multiply_1_output = multiplication(single_blocks_2_norm_key_norm_multiply_0_output, single_blocks_2_norm_key_norm_scale)
    single_blocks_2_tensoritem_5_output = tensor_item(single_blocks_2_transpose_out, single_blocks_2_tensoritem_5_index)
    single_blocks_2_model_model_xq_ = reshape(single_blocks_2_norm_query_norm_multiply_1_output, single_blocks_2_model_model_totuple_0_output)
    single_blocks_2_model_model_xk_ = reshape(single_blocks_2_norm_key_norm_multiply_1_output, single_blocks_2_model_model_totuple_1_output)
    single_blocks_2_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_2_model_model_tensoritem_0_index)
    single_blocks_2_model_model_tensoritem_1_output = tensor_item(single_blocks_2_model_model_xq_, single_blocks_2_model_model_tensoritem_1_index)
    single_blocks_2_model_model_multiply_0_output = multiplication(single_blocks_2_model_model_tensoritem_0_output, single_blocks_2_model_model_tensoritem_1_output)
    single_blocks_2_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_2_model_model_tensoritem_2_index)
    single_blocks_2_model_model_tensoritem_3_output = tensor_item(single_blocks_2_model_model_xq_, single_blocks_2_model_model_tensoritem_3_index)
    single_blocks_2_model_model_multiply_1_output = multiplication(single_blocks_2_model_model_tensoritem_2_output, single_blocks_2_model_model_tensoritem_3_output)
    single_blocks_2_model_model_add_0_output = add(single_blocks_2_model_model_multiply_0_output, single_blocks_2_model_model_multiply_1_output)
    single_blocks_2_model_q_out = reshape(single_blocks_2_model_model_add_0_output, single_blocks_2_model_model_shape_0_output)
    single_blocks_2_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_2_model_model_tensoritem_4_index)
    single_blocks_2_model_model_tensoritem_5_output = tensor_item(single_blocks_2_model_model_xk_, single_blocks_2_model_model_tensoritem_5_index)
    single_blocks_2_model_model_multiply_2_output = multiplication(single_blocks_2_model_model_tensoritem_4_output, single_blocks_2_model_model_tensoritem_5_output)
    single_blocks_2_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_2_model_model_tensoritem_6_index)
    single_blocks_2_model_model_tensoritem_7_output = tensor_item(single_blocks_2_model_model_xk_, single_blocks_2_model_model_tensoritem_7_index)
    single_blocks_2_model_model_multiply_3_output = multiplication(single_blocks_2_model_model_tensoritem_6_output, single_blocks_2_model_model_tensoritem_7_output)
    single_blocks_2_model_model_add_1_output = add(single_blocks_2_model_model_multiply_2_output, single_blocks_2_model_model_multiply_3_output)
    single_blocks_2_model_k_out = reshape(single_blocks_2_model_model_add_1_output, single_blocks_2_model_model_shape_1_output)
    single_blocks_2_model_context = scaled_dot_product_attention(single_blocks_2_model_q_out, single_blocks_2_model_k_out, single_blocks_2_tensoritem_5_output, single_blocks_2_model_scaleddotproduct_attn_mask)
    single_blocks_2_model_transpose_output = transpose(single_blocks_2_model_context, single_blocks_2_model_transpose_axes)
    single_blocks_2_attn = reshape(single_blocks_2_model_transpose_output, single_blocks_2_model_totuple_output)
    single_blocks_2_tensoritem_6_output = tensor_item(single_blocks_2_lin1_out, single_blocks_2_tensoritem_6_index)
    single_blocks_2_mlp_act = gelu(single_blocks_2_tensoritem_6_output, single_blocks_2_gelu_approximate)
    single_blocks_2_concat_out = concat(single_blocks_2_attn, single_blocks_2_mlp_act, axis=single_blocks_2_concat_axis)
    single_blocks_2_linear2_transpose_output = transpose(single_blocks_2_linear2_weight, single_blocks_2_linear2_transpose_axes)
    single_blocks_2_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_2_concat_out, single_blocks_2_linear2_transpose_output)
    single_blocks_2_lin2_out = add(single_blocks_2_linear2_matrixmultiply_output, single_blocks_2_linear2_bias)
    single_blocks_2_tensoritem_7_output = tensor_item(single_blocks_2_modulation_split_output, single_blocks_2_tensoritem_7_index)
    single_blocks_2_multiply_1_output = multiplication(single_blocks_2_tensoritem_7_output, single_blocks_2_lin2_out)
    single_blocks_2_add_2_output = add(single_blocks_1_add_2_output, single_blocks_2_multiply_1_output)
    single_blocks_3_modulation_silu_minus = minus(vec)
    single_blocks_3_modulation_silu_exp = exp(single_blocks_3_modulation_silu_minus)
    single_blocks_3_modulation_silu_add = add(single_blocks_3_modulation_silu_add_left, single_blocks_3_modulation_silu_exp)
    single_blocks_3_modulation_silu_output = divide(vec, single_blocks_3_modulation_silu_add)
    single_blocks_3_modulation_lin_transpose_output = transpose(single_blocks_3_modulation_lin_weight, single_blocks_3_modulation_lin_transpose_axes)
    single_blocks_3_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_3_modulation_silu_output, single_blocks_3_modulation_lin_transpose_output)
    single_blocks_3_modulation_lin_out = add(single_blocks_3_modulation_lin_matrixmultiply_output, single_blocks_3_modulation_lin_bias)
    single_blocks_3_modulation_tensoritem_output = tensor_item(single_blocks_3_modulation_lin_out, single_blocks_3_modulation_tensoritem_index)
    single_blocks_3_modulation_split_output = split(single_blocks_3_modulation_tensoritem_output, single_blocks_3_modulation_split_split_size, single_blocks_3_modulation_split_axis)
    single_blocks_3_pre_norm_mean_output = reduce_mean(single_blocks_2_add_2_output, axis=single_blocks_3_pre_norm_mean_axis, keepdim=single_blocks_3_pre_norm_mean_keepdim)
    single_blocks_3_pre_norm_subtract_output = subtract(single_blocks_2_add_2_output, single_blocks_3_pre_norm_mean_output)
    single_blocks_3_pre_norm_variance_output = variance(single_blocks_2_add_2_output, axis=single_blocks_3_pre_norm_variance_axis, keepdim=single_blocks_3_pre_norm_variance_keepdim, correction=single_blocks_3_pre_norm_variance_correction)
    single_blocks_3_pre_norm_add_output = add(single_blocks_3_pre_norm_variance_output, single_blocks_3_pre_norm_add_right)
    single_blocks_3_pre_norm_sqrt_output = sqrt(single_blocks_3_pre_norm_add_output)
    single_blocks_3_pre_norm_divide_output = divide(single_blocks_3_pre_norm_subtract_output, single_blocks_3_pre_norm_sqrt_output)
    single_blocks_3_tensoritem_0_output = tensor_item(single_blocks_3_modulation_split_output, single_blocks_3_tensoritem_0_index)
    single_blocks_3_add_0_output = add(single_blocks_3_add_0_left, single_blocks_3_tensoritem_0_output)
    single_blocks_3_multiply_0_output = multiplication(single_blocks_3_add_0_output, single_blocks_3_pre_norm_divide_output)
    single_blocks_3_tensoritem_1_output = tensor_item(single_blocks_3_modulation_split_output, single_blocks_3_tensoritem_1_index)
    single_blocks_3_add_1_output = add(single_blocks_3_multiply_0_output, single_blocks_3_tensoritem_1_output)
    single_blocks_3_linear1_transpose_output = transpose(single_blocks_3_linear1_weight, single_blocks_3_linear1_transpose_axes)
    single_blocks_3_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_3_add_1_output, single_blocks_3_linear1_transpose_output)
    single_blocks_3_lin1_out = add(single_blocks_3_linear1_matrixmultiply_output, single_blocks_3_linear1_bias)
    single_blocks_3_tensoritem_2_output = tensor_item(single_blocks_3_lin1_out, single_blocks_3_tensoritem_2_index)
    single_blocks_3_reshape_output = reshape(single_blocks_3_tensoritem_2_output, single_blocks_3_totuple_output)
    single_blocks_3_transpose_out = transpose(single_blocks_3_reshape_output, single_blocks_3_transpose_axes)
    single_blocks_3_tensoritem_3_output = tensor_item(single_blocks_3_transpose_out, single_blocks_3_tensoritem_3_index)
    single_blocks_3_tensoritem_4_output = tensor_item(single_blocks_3_transpose_out, single_blocks_3_tensoritem_4_index)
    single_blocks_3_norm_query_norm_power_output = power(single_blocks_3_tensoritem_3_output, single_blocks_3_norm_query_norm_power_exponent)
    single_blocks_3_norm_query_norm_mean_output = reduce_mean(single_blocks_3_norm_query_norm_power_output, axis=single_blocks_3_norm_query_norm_mean_axis, keepdim=single_blocks_3_norm_query_norm_mean_keepdim)
    single_blocks_3_norm_query_norm_add_output = add(single_blocks_3_norm_query_norm_mean_output, single_blocks_3_norm_query_norm_add_right)
    single_blocks_3_norm_query_norm_sqrt_output = sqrt(single_blocks_3_norm_query_norm_add_output)
    single_blocks_3_norm_query_norm_divide_output = divide(single_blocks_3_norm_query_norm_divide_numerator, single_blocks_3_norm_query_norm_sqrt_output)
    single_blocks_3_norm_query_norm_multiply_0_output = multiplication(single_blocks_3_tensoritem_3_output, single_blocks_3_norm_query_norm_divide_output)
    single_blocks_3_norm_query_norm_multiply_1_output = multiplication(single_blocks_3_norm_query_norm_multiply_0_output, single_blocks_3_norm_query_norm_scale)
    single_blocks_3_norm_key_norm_power_output = power(single_blocks_3_tensoritem_4_output, single_blocks_3_norm_key_norm_power_exponent)
    single_blocks_3_norm_key_norm_mean_output = reduce_mean(single_blocks_3_norm_key_norm_power_output, axis=single_blocks_3_norm_key_norm_mean_axis, keepdim=single_blocks_3_norm_key_norm_mean_keepdim)
    single_blocks_3_norm_key_norm_add_output = add(single_blocks_3_norm_key_norm_mean_output, single_blocks_3_norm_key_norm_add_right)
    single_blocks_3_norm_key_norm_sqrt_output = sqrt(single_blocks_3_norm_key_norm_add_output)
    single_blocks_3_norm_key_norm_divide_output = divide(single_blocks_3_norm_key_norm_divide_numerator, single_blocks_3_norm_key_norm_sqrt_output)
    single_blocks_3_norm_key_norm_multiply_0_output = multiplication(single_blocks_3_tensoritem_4_output, single_blocks_3_norm_key_norm_divide_output)
    single_blocks_3_norm_key_norm_multiply_1_output = multiplication(single_blocks_3_norm_key_norm_multiply_0_output, single_blocks_3_norm_key_norm_scale)
    single_blocks_3_tensoritem_5_output = tensor_item(single_blocks_3_transpose_out, single_blocks_3_tensoritem_5_index)
    single_blocks_3_model_model_xq_ = reshape(single_blocks_3_norm_query_norm_multiply_1_output, single_blocks_3_model_model_totuple_0_output)
    single_blocks_3_model_model_xk_ = reshape(single_blocks_3_norm_key_norm_multiply_1_output, single_blocks_3_model_model_totuple_1_output)
    single_blocks_3_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_3_model_model_tensoritem_0_index)
    single_blocks_3_model_model_tensoritem_1_output = tensor_item(single_blocks_3_model_model_xq_, single_blocks_3_model_model_tensoritem_1_index)
    single_blocks_3_model_model_multiply_0_output = multiplication(single_blocks_3_model_model_tensoritem_0_output, single_blocks_3_model_model_tensoritem_1_output)
    single_blocks_3_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_3_model_model_tensoritem_2_index)
    single_blocks_3_model_model_tensoritem_3_output = tensor_item(single_blocks_3_model_model_xq_, single_blocks_3_model_model_tensoritem_3_index)
    single_blocks_3_model_model_multiply_1_output = multiplication(single_blocks_3_model_model_tensoritem_2_output, single_blocks_3_model_model_tensoritem_3_output)
    single_blocks_3_model_model_add_0_output = add(single_blocks_3_model_model_multiply_0_output, single_blocks_3_model_model_multiply_1_output)
    single_blocks_3_model_q_out = reshape(single_blocks_3_model_model_add_0_output, single_blocks_3_model_model_shape_0_output)
    single_blocks_3_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_3_model_model_tensoritem_4_index)
    single_blocks_3_model_model_tensoritem_5_output = tensor_item(single_blocks_3_model_model_xk_, single_blocks_3_model_model_tensoritem_5_index)
    single_blocks_3_model_model_multiply_2_output = multiplication(single_blocks_3_model_model_tensoritem_4_output, single_blocks_3_model_model_tensoritem_5_output)
    single_blocks_3_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_3_model_model_tensoritem_6_index)
    single_blocks_3_model_model_tensoritem_7_output = tensor_item(single_blocks_3_model_model_xk_, single_blocks_3_model_model_tensoritem_7_index)
    single_blocks_3_model_model_multiply_3_output = multiplication(single_blocks_3_model_model_tensoritem_6_output, single_blocks_3_model_model_tensoritem_7_output)
    single_blocks_3_model_model_add_1_output = add(single_blocks_3_model_model_multiply_2_output, single_blocks_3_model_model_multiply_3_output)
    single_blocks_3_model_k_out = reshape(single_blocks_3_model_model_add_1_output, single_blocks_3_model_model_shape_1_output)
    single_blocks_3_model_context = scaled_dot_product_attention(single_blocks_3_model_q_out, single_blocks_3_model_k_out, single_blocks_3_tensoritem_5_output, single_blocks_3_model_scaleddotproduct_attn_mask)
    single_blocks_3_model_transpose_output = transpose(single_blocks_3_model_context, single_blocks_3_model_transpose_axes)
    single_blocks_3_attn = reshape(single_blocks_3_model_transpose_output, single_blocks_3_model_totuple_output)
    single_blocks_3_tensoritem_6_output = tensor_item(single_blocks_3_lin1_out, single_blocks_3_tensoritem_6_index)
    single_blocks_3_mlp_act = gelu(single_blocks_3_tensoritem_6_output, single_blocks_3_gelu_approximate)
    single_blocks_3_concat_out = concat(single_blocks_3_attn, single_blocks_3_mlp_act, axis=single_blocks_3_concat_axis)
    single_blocks_3_linear2_transpose_output = transpose(single_blocks_3_linear2_weight, single_blocks_3_linear2_transpose_axes)
    single_blocks_3_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_3_concat_out, single_blocks_3_linear2_transpose_output)
    single_blocks_3_lin2_out = add(single_blocks_3_linear2_matrixmultiply_output, single_blocks_3_linear2_bias)
    single_blocks_3_tensoritem_7_output = tensor_item(single_blocks_3_modulation_split_output, single_blocks_3_tensoritem_7_index)
    single_blocks_3_multiply_1_output = multiplication(single_blocks_3_tensoritem_7_output, single_blocks_3_lin2_out)
    single_blocks_3_add_2_output = add(single_blocks_2_add_2_output, single_blocks_3_multiply_1_output)
    single_blocks_4_modulation_silu_minus = minus(vec)
    single_blocks_4_modulation_silu_exp = exp(single_blocks_4_modulation_silu_minus)
    single_blocks_4_modulation_silu_add = add(single_blocks_4_modulation_silu_add_left, single_blocks_4_modulation_silu_exp)
    single_blocks_4_modulation_silu_output = divide(vec, single_blocks_4_modulation_silu_add)
    single_blocks_4_modulation_lin_transpose_output = transpose(single_blocks_4_modulation_lin_weight, single_blocks_4_modulation_lin_transpose_axes)
    single_blocks_4_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_4_modulation_silu_output, single_blocks_4_modulation_lin_transpose_output)
    single_blocks_4_modulation_lin_out = add(single_blocks_4_modulation_lin_matrixmultiply_output, single_blocks_4_modulation_lin_bias)
    single_blocks_4_modulation_tensoritem_output = tensor_item(single_blocks_4_modulation_lin_out, single_blocks_4_modulation_tensoritem_index)
    single_blocks_4_modulation_split_output = split(single_blocks_4_modulation_tensoritem_output, single_blocks_4_modulation_split_split_size, single_blocks_4_modulation_split_axis)
    single_blocks_4_pre_norm_mean_output = reduce_mean(single_blocks_3_add_2_output, axis=single_blocks_4_pre_norm_mean_axis, keepdim=single_blocks_4_pre_norm_mean_keepdim)
    single_blocks_4_pre_norm_subtract_output = subtract(single_blocks_3_add_2_output, single_blocks_4_pre_norm_mean_output)
    single_blocks_4_pre_norm_variance_output = variance(single_blocks_3_add_2_output, axis=single_blocks_4_pre_norm_variance_axis, keepdim=single_blocks_4_pre_norm_variance_keepdim, correction=single_blocks_4_pre_norm_variance_correction)
    single_blocks_4_pre_norm_add_output = add(single_blocks_4_pre_norm_variance_output, single_blocks_4_pre_norm_add_right)
    single_blocks_4_pre_norm_sqrt_output = sqrt(single_blocks_4_pre_norm_add_output)
    single_blocks_4_pre_norm_divide_output = divide(single_blocks_4_pre_norm_subtract_output, single_blocks_4_pre_norm_sqrt_output)
    single_blocks_4_tensoritem_0_output = tensor_item(single_blocks_4_modulation_split_output, single_blocks_4_tensoritem_0_index)
    single_blocks_4_add_0_output = add(single_blocks_4_add_0_left, single_blocks_4_tensoritem_0_output)
    single_blocks_4_multiply_0_output = multiplication(single_blocks_4_add_0_output, single_blocks_4_pre_norm_divide_output)
    single_blocks_4_tensoritem_1_output = tensor_item(single_blocks_4_modulation_split_output, single_blocks_4_tensoritem_1_index)
    single_blocks_4_add_1_output = add(single_blocks_4_multiply_0_output, single_blocks_4_tensoritem_1_output)
    single_blocks_4_linear1_transpose_output = transpose(single_blocks_4_linear1_weight, single_blocks_4_linear1_transpose_axes)
    single_blocks_4_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_4_add_1_output, single_blocks_4_linear1_transpose_output)
    single_blocks_4_lin1_out = add(single_blocks_4_linear1_matrixmultiply_output, single_blocks_4_linear1_bias)
    single_blocks_4_tensoritem_2_output = tensor_item(single_blocks_4_lin1_out, single_blocks_4_tensoritem_2_index)
    single_blocks_4_reshape_output = reshape(single_blocks_4_tensoritem_2_output, single_blocks_4_totuple_output)
    single_blocks_4_transpose_out = transpose(single_blocks_4_reshape_output, single_blocks_4_transpose_axes)
    single_blocks_4_tensoritem_3_output = tensor_item(single_blocks_4_transpose_out, single_blocks_4_tensoritem_3_index)
    single_blocks_4_tensoritem_4_output = tensor_item(single_blocks_4_transpose_out, single_blocks_4_tensoritem_4_index)
    single_blocks_4_norm_query_norm_power_output = power(single_blocks_4_tensoritem_3_output, single_blocks_4_norm_query_norm_power_exponent)
    single_blocks_4_norm_query_norm_mean_output = reduce_mean(single_blocks_4_norm_query_norm_power_output, axis=single_blocks_4_norm_query_norm_mean_axis, keepdim=single_blocks_4_norm_query_norm_mean_keepdim)
    single_blocks_4_norm_query_norm_add_output = add(single_blocks_4_norm_query_norm_mean_output, single_blocks_4_norm_query_norm_add_right)
    single_blocks_4_norm_query_norm_sqrt_output = sqrt(single_blocks_4_norm_query_norm_add_output)
    single_blocks_4_norm_query_norm_divide_output = divide(single_blocks_4_norm_query_norm_divide_numerator, single_blocks_4_norm_query_norm_sqrt_output)
    single_blocks_4_norm_query_norm_multiply_0_output = multiplication(single_blocks_4_tensoritem_3_output, single_blocks_4_norm_query_norm_divide_output)
    single_blocks_4_norm_query_norm_multiply_1_output = multiplication(single_blocks_4_norm_query_norm_multiply_0_output, single_blocks_4_norm_query_norm_scale)
    single_blocks_4_norm_key_norm_power_output = power(single_blocks_4_tensoritem_4_output, single_blocks_4_norm_key_norm_power_exponent)
    single_blocks_4_norm_key_norm_mean_output = reduce_mean(single_blocks_4_norm_key_norm_power_output, axis=single_blocks_4_norm_key_norm_mean_axis, keepdim=single_blocks_4_norm_key_norm_mean_keepdim)
    single_blocks_4_norm_key_norm_add_output = add(single_blocks_4_norm_key_norm_mean_output, single_blocks_4_norm_key_norm_add_right)
    single_blocks_4_norm_key_norm_sqrt_output = sqrt(single_blocks_4_norm_key_norm_add_output)
    single_blocks_4_norm_key_norm_divide_output = divide(single_blocks_4_norm_key_norm_divide_numerator, single_blocks_4_norm_key_norm_sqrt_output)
    single_blocks_4_norm_key_norm_multiply_0_output = multiplication(single_blocks_4_tensoritem_4_output, single_blocks_4_norm_key_norm_divide_output)
    single_blocks_4_norm_key_norm_multiply_1_output = multiplication(single_blocks_4_norm_key_norm_multiply_0_output, single_blocks_4_norm_key_norm_scale)
    single_blocks_4_tensoritem_5_output = tensor_item(single_blocks_4_transpose_out, single_blocks_4_tensoritem_5_index)
    single_blocks_4_model_model_xq_ = reshape(single_blocks_4_norm_query_norm_multiply_1_output, single_blocks_4_model_model_totuple_0_output)
    single_blocks_4_model_model_xk_ = reshape(single_blocks_4_norm_key_norm_multiply_1_output, single_blocks_4_model_model_totuple_1_output)
    single_blocks_4_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_4_model_model_tensoritem_0_index)
    single_blocks_4_model_model_tensoritem_1_output = tensor_item(single_blocks_4_model_model_xq_, single_blocks_4_model_model_tensoritem_1_index)
    single_blocks_4_model_model_multiply_0_output = multiplication(single_blocks_4_model_model_tensoritem_0_output, single_blocks_4_model_model_tensoritem_1_output)
    single_blocks_4_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_4_model_model_tensoritem_2_index)
    single_blocks_4_model_model_tensoritem_3_output = tensor_item(single_blocks_4_model_model_xq_, single_blocks_4_model_model_tensoritem_3_index)
    single_blocks_4_model_model_multiply_1_output = multiplication(single_blocks_4_model_model_tensoritem_2_output, single_blocks_4_model_model_tensoritem_3_output)
    single_blocks_4_model_model_add_0_output = add(single_blocks_4_model_model_multiply_0_output, single_blocks_4_model_model_multiply_1_output)
    single_blocks_4_model_q_out = reshape(single_blocks_4_model_model_add_0_output, single_blocks_4_model_model_shape_0_output)
    single_blocks_4_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_4_model_model_tensoritem_4_index)
    single_blocks_4_model_model_tensoritem_5_output = tensor_item(single_blocks_4_model_model_xk_, single_blocks_4_model_model_tensoritem_5_index)
    single_blocks_4_model_model_multiply_2_output = multiplication(single_blocks_4_model_model_tensoritem_4_output, single_blocks_4_model_model_tensoritem_5_output)
    single_blocks_4_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_4_model_model_tensoritem_6_index)
    single_blocks_4_model_model_tensoritem_7_output = tensor_item(single_blocks_4_model_model_xk_, single_blocks_4_model_model_tensoritem_7_index)
    single_blocks_4_model_model_multiply_3_output = multiplication(single_blocks_4_model_model_tensoritem_6_output, single_blocks_4_model_model_tensoritem_7_output)
    single_blocks_4_model_model_add_1_output = add(single_blocks_4_model_model_multiply_2_output, single_blocks_4_model_model_multiply_3_output)
    single_blocks_4_model_k_out = reshape(single_blocks_4_model_model_add_1_output, single_blocks_4_model_model_shape_1_output)
    single_blocks_4_model_context = scaled_dot_product_attention(single_blocks_4_model_q_out, single_blocks_4_model_k_out, single_blocks_4_tensoritem_5_output, single_blocks_4_model_scaleddotproduct_attn_mask)
    single_blocks_4_model_transpose_output = transpose(single_blocks_4_model_context, single_blocks_4_model_transpose_axes)
    single_blocks_4_attn = reshape(single_blocks_4_model_transpose_output, single_blocks_4_model_totuple_output)
    single_blocks_4_tensoritem_6_output = tensor_item(single_blocks_4_lin1_out, single_blocks_4_tensoritem_6_index)
    single_blocks_4_mlp_act = gelu(single_blocks_4_tensoritem_6_output, single_blocks_4_gelu_approximate)
    single_blocks_4_concat_out = concat(single_blocks_4_attn, single_blocks_4_mlp_act, axis=single_blocks_4_concat_axis)
    single_blocks_4_linear2_transpose_output = transpose(single_blocks_4_linear2_weight, single_blocks_4_linear2_transpose_axes)
    single_blocks_4_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_4_concat_out, single_blocks_4_linear2_transpose_output)
    single_blocks_4_lin2_out = add(single_blocks_4_linear2_matrixmultiply_output, single_blocks_4_linear2_bias)
    single_blocks_4_tensoritem_7_output = tensor_item(single_blocks_4_modulation_split_output, single_blocks_4_tensoritem_7_index)
    single_blocks_4_multiply_1_output = multiplication(single_blocks_4_tensoritem_7_output, single_blocks_4_lin2_out)
    single_blocks_4_add_2_output = add(single_blocks_3_add_2_output, single_blocks_4_multiply_1_output)
    single_blocks_5_modulation_silu_minus = minus(vec)
    single_blocks_5_modulation_silu_exp = exp(single_blocks_5_modulation_silu_minus)
    single_blocks_5_modulation_silu_add = add(single_blocks_5_modulation_silu_add_left, single_blocks_5_modulation_silu_exp)
    single_blocks_5_modulation_silu_output = divide(vec, single_blocks_5_modulation_silu_add)
    single_blocks_5_modulation_lin_transpose_output = transpose(single_blocks_5_modulation_lin_weight, single_blocks_5_modulation_lin_transpose_axes)
    single_blocks_5_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_5_modulation_silu_output, single_blocks_5_modulation_lin_transpose_output)
    single_blocks_5_modulation_lin_out = add(single_blocks_5_modulation_lin_matrixmultiply_output, single_blocks_5_modulation_lin_bias)
    single_blocks_5_modulation_tensoritem_output = tensor_item(single_blocks_5_modulation_lin_out, single_blocks_5_modulation_tensoritem_index)
    single_blocks_5_modulation_split_output = split(single_blocks_5_modulation_tensoritem_output, single_blocks_5_modulation_split_split_size, single_blocks_5_modulation_split_axis)
    single_blocks_5_pre_norm_mean_output = reduce_mean(single_blocks_4_add_2_output, axis=single_blocks_5_pre_norm_mean_axis, keepdim=single_blocks_5_pre_norm_mean_keepdim)
    single_blocks_5_pre_norm_subtract_output = subtract(single_blocks_4_add_2_output, single_blocks_5_pre_norm_mean_output)
    single_blocks_5_pre_norm_variance_output = variance(single_blocks_4_add_2_output, axis=single_blocks_5_pre_norm_variance_axis, keepdim=single_blocks_5_pre_norm_variance_keepdim, correction=single_blocks_5_pre_norm_variance_correction)
    single_blocks_5_pre_norm_add_output = add(single_blocks_5_pre_norm_variance_output, single_blocks_5_pre_norm_add_right)
    single_blocks_5_pre_norm_sqrt_output = sqrt(single_blocks_5_pre_norm_add_output)
    single_blocks_5_pre_norm_divide_output = divide(single_blocks_5_pre_norm_subtract_output, single_blocks_5_pre_norm_sqrt_output)
    single_blocks_5_tensoritem_0_output = tensor_item(single_blocks_5_modulation_split_output, single_blocks_5_tensoritem_0_index)
    single_blocks_5_add_0_output = add(single_blocks_5_add_0_left, single_blocks_5_tensoritem_0_output)
    single_blocks_5_multiply_0_output = multiplication(single_blocks_5_add_0_output, single_blocks_5_pre_norm_divide_output)
    single_blocks_5_tensoritem_1_output = tensor_item(single_blocks_5_modulation_split_output, single_blocks_5_tensoritem_1_index)
    single_blocks_5_add_1_output = add(single_blocks_5_multiply_0_output, single_blocks_5_tensoritem_1_output)
    single_blocks_5_linear1_transpose_output = transpose(single_blocks_5_linear1_weight, single_blocks_5_linear1_transpose_axes)
    single_blocks_5_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_5_add_1_output, single_blocks_5_linear1_transpose_output)
    single_blocks_5_lin1_out = add(single_blocks_5_linear1_matrixmultiply_output, single_blocks_5_linear1_bias)
    single_blocks_5_tensoritem_2_output = tensor_item(single_blocks_5_lin1_out, single_blocks_5_tensoritem_2_index)
    single_blocks_5_reshape_output = reshape(single_blocks_5_tensoritem_2_output, single_blocks_5_totuple_output)
    single_blocks_5_transpose_out = transpose(single_blocks_5_reshape_output, single_blocks_5_transpose_axes)
    single_blocks_5_tensoritem_3_output = tensor_item(single_blocks_5_transpose_out, single_blocks_5_tensoritem_3_index)
    single_blocks_5_tensoritem_4_output = tensor_item(single_blocks_5_transpose_out, single_blocks_5_tensoritem_4_index)
    single_blocks_5_norm_query_norm_power_output = power(single_blocks_5_tensoritem_3_output, single_blocks_5_norm_query_norm_power_exponent)
    single_blocks_5_norm_query_norm_mean_output = reduce_mean(single_blocks_5_norm_query_norm_power_output, axis=single_blocks_5_norm_query_norm_mean_axis, keepdim=single_blocks_5_norm_query_norm_mean_keepdim)
    single_blocks_5_norm_query_norm_add_output = add(single_blocks_5_norm_query_norm_mean_output, single_blocks_5_norm_query_norm_add_right)
    single_blocks_5_norm_query_norm_sqrt_output = sqrt(single_blocks_5_norm_query_norm_add_output)
    single_blocks_5_norm_query_norm_divide_output = divide(single_blocks_5_norm_query_norm_divide_numerator, single_blocks_5_norm_query_norm_sqrt_output)
    single_blocks_5_norm_query_norm_multiply_0_output = multiplication(single_blocks_5_tensoritem_3_output, single_blocks_5_norm_query_norm_divide_output)
    single_blocks_5_norm_query_norm_multiply_1_output = multiplication(single_blocks_5_norm_query_norm_multiply_0_output, single_blocks_5_norm_query_norm_scale)
    single_blocks_5_norm_key_norm_power_output = power(single_blocks_5_tensoritem_4_output, single_blocks_5_norm_key_norm_power_exponent)
    single_blocks_5_norm_key_norm_mean_output = reduce_mean(single_blocks_5_norm_key_norm_power_output, axis=single_blocks_5_norm_key_norm_mean_axis, keepdim=single_blocks_5_norm_key_norm_mean_keepdim)
    single_blocks_5_norm_key_norm_add_output = add(single_blocks_5_norm_key_norm_mean_output, single_blocks_5_norm_key_norm_add_right)
    single_blocks_5_norm_key_norm_sqrt_output = sqrt(single_blocks_5_norm_key_norm_add_output)
    single_blocks_5_norm_key_norm_divide_output = divide(single_blocks_5_norm_key_norm_divide_numerator, single_blocks_5_norm_key_norm_sqrt_output)
    single_blocks_5_norm_key_norm_multiply_0_output = multiplication(single_blocks_5_tensoritem_4_output, single_blocks_5_norm_key_norm_divide_output)
    single_blocks_5_norm_key_norm_multiply_1_output = multiplication(single_blocks_5_norm_key_norm_multiply_0_output, single_blocks_5_norm_key_norm_scale)
    single_blocks_5_tensoritem_5_output = tensor_item(single_blocks_5_transpose_out, single_blocks_5_tensoritem_5_index)
    single_blocks_5_model_model_xq_ = reshape(single_blocks_5_norm_query_norm_multiply_1_output, single_blocks_5_model_model_totuple_0_output)
    single_blocks_5_model_model_xk_ = reshape(single_blocks_5_norm_key_norm_multiply_1_output, single_blocks_5_model_model_totuple_1_output)
    single_blocks_5_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_5_model_model_tensoritem_0_index)
    single_blocks_5_model_model_tensoritem_1_output = tensor_item(single_blocks_5_model_model_xq_, single_blocks_5_model_model_tensoritem_1_index)
    single_blocks_5_model_model_multiply_0_output = multiplication(single_blocks_5_model_model_tensoritem_0_output, single_blocks_5_model_model_tensoritem_1_output)
    single_blocks_5_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_5_model_model_tensoritem_2_index)
    single_blocks_5_model_model_tensoritem_3_output = tensor_item(single_blocks_5_model_model_xq_, single_blocks_5_model_model_tensoritem_3_index)
    single_blocks_5_model_model_multiply_1_output = multiplication(single_blocks_5_model_model_tensoritem_2_output, single_blocks_5_model_model_tensoritem_3_output)
    single_blocks_5_model_model_add_0_output = add(single_blocks_5_model_model_multiply_0_output, single_blocks_5_model_model_multiply_1_output)
    single_blocks_5_model_q_out = reshape(single_blocks_5_model_model_add_0_output, single_blocks_5_model_model_shape_0_output)
    single_blocks_5_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_5_model_model_tensoritem_4_index)
    single_blocks_5_model_model_tensoritem_5_output = tensor_item(single_blocks_5_model_model_xk_, single_blocks_5_model_model_tensoritem_5_index)
    single_blocks_5_model_model_multiply_2_output = multiplication(single_blocks_5_model_model_tensoritem_4_output, single_blocks_5_model_model_tensoritem_5_output)
    single_blocks_5_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_5_model_model_tensoritem_6_index)
    single_blocks_5_model_model_tensoritem_7_output = tensor_item(single_blocks_5_model_model_xk_, single_blocks_5_model_model_tensoritem_7_index)
    single_blocks_5_model_model_multiply_3_output = multiplication(single_blocks_5_model_model_tensoritem_6_output, single_blocks_5_model_model_tensoritem_7_output)
    single_blocks_5_model_model_add_1_output = add(single_blocks_5_model_model_multiply_2_output, single_blocks_5_model_model_multiply_3_output)
    single_blocks_5_model_k_out = reshape(single_blocks_5_model_model_add_1_output, single_blocks_5_model_model_shape_1_output)
    single_blocks_5_model_context = scaled_dot_product_attention(single_blocks_5_model_q_out, single_blocks_5_model_k_out, single_blocks_5_tensoritem_5_output, single_blocks_5_model_scaleddotproduct_attn_mask)
    single_blocks_5_model_transpose_output = transpose(single_blocks_5_model_context, single_blocks_5_model_transpose_axes)
    single_blocks_5_attn = reshape(single_blocks_5_model_transpose_output, single_blocks_5_model_totuple_output)
    single_blocks_5_tensoritem_6_output = tensor_item(single_blocks_5_lin1_out, single_blocks_5_tensoritem_6_index)
    single_blocks_5_mlp_act = gelu(single_blocks_5_tensoritem_6_output, single_blocks_5_gelu_approximate)
    single_blocks_5_concat_out = concat(single_blocks_5_attn, single_blocks_5_mlp_act, axis=single_blocks_5_concat_axis)
    single_blocks_5_linear2_transpose_output = transpose(single_blocks_5_linear2_weight, single_blocks_5_linear2_transpose_axes)
    single_blocks_5_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_5_concat_out, single_blocks_5_linear2_transpose_output)
    single_blocks_5_lin2_out = add(single_blocks_5_linear2_matrixmultiply_output, single_blocks_5_linear2_bias)
    single_blocks_5_tensoritem_7_output = tensor_item(single_blocks_5_modulation_split_output, single_blocks_5_tensoritem_7_index)
    single_blocks_5_multiply_1_output = multiplication(single_blocks_5_tensoritem_7_output, single_blocks_5_lin2_out)
    single_blocks_5_add_2_output = add(single_blocks_4_add_2_output, single_blocks_5_multiply_1_output)
    single_blocks_6_modulation_silu_minus = minus(vec)
    single_blocks_6_modulation_silu_exp = exp(single_blocks_6_modulation_silu_minus)
    single_blocks_6_modulation_silu_add = add(single_blocks_6_modulation_silu_add_left, single_blocks_6_modulation_silu_exp)
    single_blocks_6_modulation_silu_output = divide(vec, single_blocks_6_modulation_silu_add)
    single_blocks_6_modulation_lin_transpose_output = transpose(single_blocks_6_modulation_lin_weight, single_blocks_6_modulation_lin_transpose_axes)
    single_blocks_6_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_6_modulation_silu_output, single_blocks_6_modulation_lin_transpose_output)
    single_blocks_6_modulation_lin_out = add(single_blocks_6_modulation_lin_matrixmultiply_output, single_blocks_6_modulation_lin_bias)
    single_blocks_6_modulation_tensoritem_output = tensor_item(single_blocks_6_modulation_lin_out, single_blocks_6_modulation_tensoritem_index)
    single_blocks_6_modulation_split_output = split(single_blocks_6_modulation_tensoritem_output, single_blocks_6_modulation_split_split_size, single_blocks_6_modulation_split_axis)
    single_blocks_6_pre_norm_mean_output = reduce_mean(single_blocks_5_add_2_output, axis=single_blocks_6_pre_norm_mean_axis, keepdim=single_blocks_6_pre_norm_mean_keepdim)
    single_blocks_6_pre_norm_subtract_output = subtract(single_blocks_5_add_2_output, single_blocks_6_pre_norm_mean_output)
    single_blocks_6_pre_norm_variance_output = variance(single_blocks_5_add_2_output, axis=single_blocks_6_pre_norm_variance_axis, keepdim=single_blocks_6_pre_norm_variance_keepdim, correction=single_blocks_6_pre_norm_variance_correction)
    single_blocks_6_pre_norm_add_output = add(single_blocks_6_pre_norm_variance_output, single_blocks_6_pre_norm_add_right)
    single_blocks_6_pre_norm_sqrt_output = sqrt(single_blocks_6_pre_norm_add_output)
    single_blocks_6_pre_norm_divide_output = divide(single_blocks_6_pre_norm_subtract_output, single_blocks_6_pre_norm_sqrt_output)
    single_blocks_6_tensoritem_0_output = tensor_item(single_blocks_6_modulation_split_output, single_blocks_6_tensoritem_0_index)
    single_blocks_6_add_0_output = add(single_blocks_6_add_0_left, single_blocks_6_tensoritem_0_output)
    single_blocks_6_multiply_0_output = multiplication(single_blocks_6_add_0_output, single_blocks_6_pre_norm_divide_output)
    single_blocks_6_tensoritem_1_output = tensor_item(single_blocks_6_modulation_split_output, single_blocks_6_tensoritem_1_index)
    single_blocks_6_add_1_output = add(single_blocks_6_multiply_0_output, single_blocks_6_tensoritem_1_output)
    single_blocks_6_linear1_transpose_output = transpose(single_blocks_6_linear1_weight, single_blocks_6_linear1_transpose_axes)
    single_blocks_6_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_6_add_1_output, single_blocks_6_linear1_transpose_output)
    single_blocks_6_lin1_out = add(single_blocks_6_linear1_matrixmultiply_output, single_blocks_6_linear1_bias)
    single_blocks_6_tensoritem_2_output = tensor_item(single_blocks_6_lin1_out, single_blocks_6_tensoritem_2_index)
    single_blocks_6_reshape_output = reshape(single_blocks_6_tensoritem_2_output, single_blocks_6_totuple_output)
    single_blocks_6_transpose_out = transpose(single_blocks_6_reshape_output, single_blocks_6_transpose_axes)
    single_blocks_6_tensoritem_3_output = tensor_item(single_blocks_6_transpose_out, single_blocks_6_tensoritem_3_index)
    single_blocks_6_tensoritem_4_output = tensor_item(single_blocks_6_transpose_out, single_blocks_6_tensoritem_4_index)
    single_blocks_6_norm_query_norm_power_output = power(single_blocks_6_tensoritem_3_output, single_blocks_6_norm_query_norm_power_exponent)
    single_blocks_6_norm_query_norm_mean_output = reduce_mean(single_blocks_6_norm_query_norm_power_output, axis=single_blocks_6_norm_query_norm_mean_axis, keepdim=single_blocks_6_norm_query_norm_mean_keepdim)
    single_blocks_6_norm_query_norm_add_output = add(single_blocks_6_norm_query_norm_mean_output, single_blocks_6_norm_query_norm_add_right)
    single_blocks_6_norm_query_norm_sqrt_output = sqrt(single_blocks_6_norm_query_norm_add_output)
    single_blocks_6_norm_query_norm_divide_output = divide(single_blocks_6_norm_query_norm_divide_numerator, single_blocks_6_norm_query_norm_sqrt_output)
    single_blocks_6_norm_query_norm_multiply_0_output = multiplication(single_blocks_6_tensoritem_3_output, single_blocks_6_norm_query_norm_divide_output)
    single_blocks_6_norm_query_norm_multiply_1_output = multiplication(single_blocks_6_norm_query_norm_multiply_0_output, single_blocks_6_norm_query_norm_scale)
    single_blocks_6_norm_key_norm_power_output = power(single_blocks_6_tensoritem_4_output, single_blocks_6_norm_key_norm_power_exponent)
    single_blocks_6_norm_key_norm_mean_output = reduce_mean(single_blocks_6_norm_key_norm_power_output, axis=single_blocks_6_norm_key_norm_mean_axis, keepdim=single_blocks_6_norm_key_norm_mean_keepdim)
    single_blocks_6_norm_key_norm_add_output = add(single_blocks_6_norm_key_norm_mean_output, single_blocks_6_norm_key_norm_add_right)
    single_blocks_6_norm_key_norm_sqrt_output = sqrt(single_blocks_6_norm_key_norm_add_output)
    single_blocks_6_norm_key_norm_divide_output = divide(single_blocks_6_norm_key_norm_divide_numerator, single_blocks_6_norm_key_norm_sqrt_output)
    single_blocks_6_norm_key_norm_multiply_0_output = multiplication(single_blocks_6_tensoritem_4_output, single_blocks_6_norm_key_norm_divide_output)
    single_blocks_6_norm_key_norm_multiply_1_output = multiplication(single_blocks_6_norm_key_norm_multiply_0_output, single_blocks_6_norm_key_norm_scale)
    single_blocks_6_tensoritem_5_output = tensor_item(single_blocks_6_transpose_out, single_blocks_6_tensoritem_5_index)
    single_blocks_6_model_model_xq_ = reshape(single_blocks_6_norm_query_norm_multiply_1_output, single_blocks_6_model_model_totuple_0_output)
    single_blocks_6_model_model_xk_ = reshape(single_blocks_6_norm_key_norm_multiply_1_output, single_blocks_6_model_model_totuple_1_output)
    single_blocks_6_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_6_model_model_tensoritem_0_index)
    single_blocks_6_model_model_tensoritem_1_output = tensor_item(single_blocks_6_model_model_xq_, single_blocks_6_model_model_tensoritem_1_index)
    single_blocks_6_model_model_multiply_0_output = multiplication(single_blocks_6_model_model_tensoritem_0_output, single_blocks_6_model_model_tensoritem_1_output)
    single_blocks_6_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_6_model_model_tensoritem_2_index)
    single_blocks_6_model_model_tensoritem_3_output = tensor_item(single_blocks_6_model_model_xq_, single_blocks_6_model_model_tensoritem_3_index)
    single_blocks_6_model_model_multiply_1_output = multiplication(single_blocks_6_model_model_tensoritem_2_output, single_blocks_6_model_model_tensoritem_3_output)
    single_blocks_6_model_model_add_0_output = add(single_blocks_6_model_model_multiply_0_output, single_blocks_6_model_model_multiply_1_output)
    single_blocks_6_model_q_out = reshape(single_blocks_6_model_model_add_0_output, single_blocks_6_model_model_shape_0_output)
    single_blocks_6_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_6_model_model_tensoritem_4_index)
    single_blocks_6_model_model_tensoritem_5_output = tensor_item(single_blocks_6_model_model_xk_, single_blocks_6_model_model_tensoritem_5_index)
    single_blocks_6_model_model_multiply_2_output = multiplication(single_blocks_6_model_model_tensoritem_4_output, single_blocks_6_model_model_tensoritem_5_output)
    single_blocks_6_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_6_model_model_tensoritem_6_index)
    single_blocks_6_model_model_tensoritem_7_output = tensor_item(single_blocks_6_model_model_xk_, single_blocks_6_model_model_tensoritem_7_index)
    single_blocks_6_model_model_multiply_3_output = multiplication(single_blocks_6_model_model_tensoritem_6_output, single_blocks_6_model_model_tensoritem_7_output)
    single_blocks_6_model_model_add_1_output = add(single_blocks_6_model_model_multiply_2_output, single_blocks_6_model_model_multiply_3_output)
    single_blocks_6_model_k_out = reshape(single_blocks_6_model_model_add_1_output, single_blocks_6_model_model_shape_1_output)
    single_blocks_6_model_context = scaled_dot_product_attention(single_blocks_6_model_q_out, single_blocks_6_model_k_out, single_blocks_6_tensoritem_5_output, single_blocks_6_model_scaleddotproduct_attn_mask)
    single_blocks_6_model_transpose_output = transpose(single_blocks_6_model_context, single_blocks_6_model_transpose_axes)
    single_blocks_6_attn = reshape(single_blocks_6_model_transpose_output, single_blocks_6_model_totuple_output)
    single_blocks_6_tensoritem_6_output = tensor_item(single_blocks_6_lin1_out, single_blocks_6_tensoritem_6_index)
    single_blocks_6_mlp_act = gelu(single_blocks_6_tensoritem_6_output, single_blocks_6_gelu_approximate)
    single_blocks_6_concat_out = concat(single_blocks_6_attn, single_blocks_6_mlp_act, axis=single_blocks_6_concat_axis)
    single_blocks_6_linear2_transpose_output = transpose(single_blocks_6_linear2_weight, single_blocks_6_linear2_transpose_axes)
    single_blocks_6_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_6_concat_out, single_blocks_6_linear2_transpose_output)
    single_blocks_6_lin2_out = add(single_blocks_6_linear2_matrixmultiply_output, single_blocks_6_linear2_bias)
    single_blocks_6_tensoritem_7_output = tensor_item(single_blocks_6_modulation_split_output, single_blocks_6_tensoritem_7_index)
    single_blocks_6_multiply_1_output = multiplication(single_blocks_6_tensoritem_7_output, single_blocks_6_lin2_out)
    single_blocks_6_add_2_output = add(single_blocks_5_add_2_output, single_blocks_6_multiply_1_output)
    single_blocks_7_modulation_silu_minus = minus(vec)
    single_blocks_7_modulation_silu_exp = exp(single_blocks_7_modulation_silu_minus)
    single_blocks_7_modulation_silu_add = add(single_blocks_7_modulation_silu_add_left, single_blocks_7_modulation_silu_exp)
    single_blocks_7_modulation_silu_output = divide(vec, single_blocks_7_modulation_silu_add)
    single_blocks_7_modulation_lin_transpose_output = transpose(single_blocks_7_modulation_lin_weight, single_blocks_7_modulation_lin_transpose_axes)
    single_blocks_7_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_7_modulation_silu_output, single_blocks_7_modulation_lin_transpose_output)
    single_blocks_7_modulation_lin_out = add(single_blocks_7_modulation_lin_matrixmultiply_output, single_blocks_7_modulation_lin_bias)
    single_blocks_7_modulation_tensoritem_output = tensor_item(single_blocks_7_modulation_lin_out, single_blocks_7_modulation_tensoritem_index)
    single_blocks_7_modulation_split_output = split(single_blocks_7_modulation_tensoritem_output, single_blocks_7_modulation_split_split_size, single_blocks_7_modulation_split_axis)
    single_blocks_7_pre_norm_mean_output = reduce_mean(single_blocks_6_add_2_output, axis=single_blocks_7_pre_norm_mean_axis, keepdim=single_blocks_7_pre_norm_mean_keepdim)
    single_blocks_7_pre_norm_subtract_output = subtract(single_blocks_6_add_2_output, single_blocks_7_pre_norm_mean_output)
    single_blocks_7_pre_norm_variance_output = variance(single_blocks_6_add_2_output, axis=single_blocks_7_pre_norm_variance_axis, keepdim=single_blocks_7_pre_norm_variance_keepdim, correction=single_blocks_7_pre_norm_variance_correction)
    single_blocks_7_pre_norm_add_output = add(single_blocks_7_pre_norm_variance_output, single_blocks_7_pre_norm_add_right)
    single_blocks_7_pre_norm_sqrt_output = sqrt(single_blocks_7_pre_norm_add_output)
    single_blocks_7_pre_norm_divide_output = divide(single_blocks_7_pre_norm_subtract_output, single_blocks_7_pre_norm_sqrt_output)
    single_blocks_7_tensoritem_0_output = tensor_item(single_blocks_7_modulation_split_output, single_blocks_7_tensoritem_0_index)
    single_blocks_7_add_0_output = add(single_blocks_7_add_0_left, single_blocks_7_tensoritem_0_output)
    single_blocks_7_multiply_0_output = multiplication(single_blocks_7_add_0_output, single_blocks_7_pre_norm_divide_output)
    single_blocks_7_tensoritem_1_output = tensor_item(single_blocks_7_modulation_split_output, single_blocks_7_tensoritem_1_index)
    single_blocks_7_add_1_output = add(single_blocks_7_multiply_0_output, single_blocks_7_tensoritem_1_output)
    single_blocks_7_linear1_transpose_output = transpose(single_blocks_7_linear1_weight, single_blocks_7_linear1_transpose_axes)
    single_blocks_7_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_7_add_1_output, single_blocks_7_linear1_transpose_output)
    single_blocks_7_lin1_out = add(single_blocks_7_linear1_matrixmultiply_output, single_blocks_7_linear1_bias)
    single_blocks_7_tensoritem_2_output = tensor_item(single_blocks_7_lin1_out, single_blocks_7_tensoritem_2_index)
    single_blocks_7_reshape_output = reshape(single_blocks_7_tensoritem_2_output, single_blocks_7_totuple_output)
    single_blocks_7_transpose_out = transpose(single_blocks_7_reshape_output, single_blocks_7_transpose_axes)
    single_blocks_7_tensoritem_3_output = tensor_item(single_blocks_7_transpose_out, single_blocks_7_tensoritem_3_index)
    single_blocks_7_tensoritem_4_output = tensor_item(single_blocks_7_transpose_out, single_blocks_7_tensoritem_4_index)
    single_blocks_7_norm_query_norm_power_output = power(single_blocks_7_tensoritem_3_output, single_blocks_7_norm_query_norm_power_exponent)
    single_blocks_7_norm_query_norm_mean_output = reduce_mean(single_blocks_7_norm_query_norm_power_output, axis=single_blocks_7_norm_query_norm_mean_axis, keepdim=single_blocks_7_norm_query_norm_mean_keepdim)
    single_blocks_7_norm_query_norm_add_output = add(single_blocks_7_norm_query_norm_mean_output, single_blocks_7_norm_query_norm_add_right)
    single_blocks_7_norm_query_norm_sqrt_output = sqrt(single_blocks_7_norm_query_norm_add_output)
    single_blocks_7_norm_query_norm_divide_output = divide(single_blocks_7_norm_query_norm_divide_numerator, single_blocks_7_norm_query_norm_sqrt_output)
    single_blocks_7_norm_query_norm_multiply_0_output = multiplication(single_blocks_7_tensoritem_3_output, single_blocks_7_norm_query_norm_divide_output)
    single_blocks_7_norm_query_norm_multiply_1_output = multiplication(single_blocks_7_norm_query_norm_multiply_0_output, single_blocks_7_norm_query_norm_scale)
    single_blocks_7_norm_key_norm_power_output = power(single_blocks_7_tensoritem_4_output, single_blocks_7_norm_key_norm_power_exponent)
    single_blocks_7_norm_key_norm_mean_output = reduce_mean(single_blocks_7_norm_key_norm_power_output, axis=single_blocks_7_norm_key_norm_mean_axis, keepdim=single_blocks_7_norm_key_norm_mean_keepdim)
    single_blocks_7_norm_key_norm_add_output = add(single_blocks_7_norm_key_norm_mean_output, single_blocks_7_norm_key_norm_add_right)
    single_blocks_7_norm_key_norm_sqrt_output = sqrt(single_blocks_7_norm_key_norm_add_output)
    single_blocks_7_norm_key_norm_divide_output = divide(single_blocks_7_norm_key_norm_divide_numerator, single_blocks_7_norm_key_norm_sqrt_output)
    single_blocks_7_norm_key_norm_multiply_0_output = multiplication(single_blocks_7_tensoritem_4_output, single_blocks_7_norm_key_norm_divide_output)
    single_blocks_7_norm_key_norm_multiply_1_output = multiplication(single_blocks_7_norm_key_norm_multiply_0_output, single_blocks_7_norm_key_norm_scale)
    single_blocks_7_tensoritem_5_output = tensor_item(single_blocks_7_transpose_out, single_blocks_7_tensoritem_5_index)
    single_blocks_7_model_model_xq_ = reshape(single_blocks_7_norm_query_norm_multiply_1_output, single_blocks_7_model_model_totuple_0_output)
    single_blocks_7_model_model_xk_ = reshape(single_blocks_7_norm_key_norm_multiply_1_output, single_blocks_7_model_model_totuple_1_output)
    single_blocks_7_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_7_model_model_tensoritem_0_index)
    single_blocks_7_model_model_tensoritem_1_output = tensor_item(single_blocks_7_model_model_xq_, single_blocks_7_model_model_tensoritem_1_index)
    single_blocks_7_model_model_multiply_0_output = multiplication(single_blocks_7_model_model_tensoritem_0_output, single_blocks_7_model_model_tensoritem_1_output)
    single_blocks_7_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_7_model_model_tensoritem_2_index)
    single_blocks_7_model_model_tensoritem_3_output = tensor_item(single_blocks_7_model_model_xq_, single_blocks_7_model_model_tensoritem_3_index)
    single_blocks_7_model_model_multiply_1_output = multiplication(single_blocks_7_model_model_tensoritem_2_output, single_blocks_7_model_model_tensoritem_3_output)
    single_blocks_7_model_model_add_0_output = add(single_blocks_7_model_model_multiply_0_output, single_blocks_7_model_model_multiply_1_output)
    single_blocks_7_model_q_out = reshape(single_blocks_7_model_model_add_0_output, single_blocks_7_model_model_shape_0_output)
    single_blocks_7_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_7_model_model_tensoritem_4_index)
    single_blocks_7_model_model_tensoritem_5_output = tensor_item(single_blocks_7_model_model_xk_, single_blocks_7_model_model_tensoritem_5_index)
    single_blocks_7_model_model_multiply_2_output = multiplication(single_blocks_7_model_model_tensoritem_4_output, single_blocks_7_model_model_tensoritem_5_output)
    single_blocks_7_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_7_model_model_tensoritem_6_index)
    single_blocks_7_model_model_tensoritem_7_output = tensor_item(single_blocks_7_model_model_xk_, single_blocks_7_model_model_tensoritem_7_index)
    single_blocks_7_model_model_multiply_3_output = multiplication(single_blocks_7_model_model_tensoritem_6_output, single_blocks_7_model_model_tensoritem_7_output)
    single_blocks_7_model_model_add_1_output = add(single_blocks_7_model_model_multiply_2_output, single_blocks_7_model_model_multiply_3_output)
    single_blocks_7_model_k_out = reshape(single_blocks_7_model_model_add_1_output, single_blocks_7_model_model_shape_1_output)
    single_blocks_7_model_context = scaled_dot_product_attention(single_blocks_7_model_q_out, single_blocks_7_model_k_out, single_blocks_7_tensoritem_5_output, single_blocks_7_model_scaleddotproduct_attn_mask)
    single_blocks_7_model_transpose_output = transpose(single_blocks_7_model_context, single_blocks_7_model_transpose_axes)
    single_blocks_7_attn = reshape(single_blocks_7_model_transpose_output, single_blocks_7_model_totuple_output)
    single_blocks_7_tensoritem_6_output = tensor_item(single_blocks_7_lin1_out, single_blocks_7_tensoritem_6_index)
    single_blocks_7_mlp_act = gelu(single_blocks_7_tensoritem_6_output, single_blocks_7_gelu_approximate)
    single_blocks_7_concat_out = concat(single_blocks_7_attn, single_blocks_7_mlp_act, axis=single_blocks_7_concat_axis)
    single_blocks_7_linear2_transpose_output = transpose(single_blocks_7_linear2_weight, single_blocks_7_linear2_transpose_axes)
    single_blocks_7_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_7_concat_out, single_blocks_7_linear2_transpose_output)
    single_blocks_7_lin2_out = add(single_blocks_7_linear2_matrixmultiply_output, single_blocks_7_linear2_bias)
    single_blocks_7_tensoritem_7_output = tensor_item(single_blocks_7_modulation_split_output, single_blocks_7_tensoritem_7_index)
    single_blocks_7_multiply_1_output = multiplication(single_blocks_7_tensoritem_7_output, single_blocks_7_lin2_out)
    single_blocks_7_add_2_output = add(single_blocks_6_add_2_output, single_blocks_7_multiply_1_output)
    single_blocks_8_modulation_silu_minus = minus(vec)
    single_blocks_8_modulation_silu_exp = exp(single_blocks_8_modulation_silu_minus)
    single_blocks_8_modulation_silu_add = add(single_blocks_8_modulation_silu_add_left, single_blocks_8_modulation_silu_exp)
    single_blocks_8_modulation_silu_output = divide(vec, single_blocks_8_modulation_silu_add)
    single_blocks_8_modulation_lin_transpose_output = transpose(single_blocks_8_modulation_lin_weight, single_blocks_8_modulation_lin_transpose_axes)
    single_blocks_8_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_8_modulation_silu_output, single_blocks_8_modulation_lin_transpose_output)
    single_blocks_8_modulation_lin_out = add(single_blocks_8_modulation_lin_matrixmultiply_output, single_blocks_8_modulation_lin_bias)
    single_blocks_8_modulation_tensoritem_output = tensor_item(single_blocks_8_modulation_lin_out, single_blocks_8_modulation_tensoritem_index)
    single_blocks_8_modulation_split_output = split(single_blocks_8_modulation_tensoritem_output, single_blocks_8_modulation_split_split_size, single_blocks_8_modulation_split_axis)
    single_blocks_8_pre_norm_mean_output = reduce_mean(single_blocks_7_add_2_output, axis=single_blocks_8_pre_norm_mean_axis, keepdim=single_blocks_8_pre_norm_mean_keepdim)
    single_blocks_8_pre_norm_subtract_output = subtract(single_blocks_7_add_2_output, single_blocks_8_pre_norm_mean_output)
    single_blocks_8_pre_norm_variance_output = variance(single_blocks_7_add_2_output, axis=single_blocks_8_pre_norm_variance_axis, keepdim=single_blocks_8_pre_norm_variance_keepdim, correction=single_blocks_8_pre_norm_variance_correction)
    single_blocks_8_pre_norm_add_output = add(single_blocks_8_pre_norm_variance_output, single_blocks_8_pre_norm_add_right)
    single_blocks_8_pre_norm_sqrt_output = sqrt(single_blocks_8_pre_norm_add_output)
    single_blocks_8_pre_norm_divide_output = divide(single_blocks_8_pre_norm_subtract_output, single_blocks_8_pre_norm_sqrt_output)
    single_blocks_8_tensoritem_0_output = tensor_item(single_blocks_8_modulation_split_output, single_blocks_8_tensoritem_0_index)
    single_blocks_8_add_0_output = add(single_blocks_8_add_0_left, single_blocks_8_tensoritem_0_output)
    single_blocks_8_multiply_0_output = multiplication(single_blocks_8_add_0_output, single_blocks_8_pre_norm_divide_output)
    single_blocks_8_tensoritem_1_output = tensor_item(single_blocks_8_modulation_split_output, single_blocks_8_tensoritem_1_index)
    single_blocks_8_add_1_output = add(single_blocks_8_multiply_0_output, single_blocks_8_tensoritem_1_output)
    single_blocks_8_linear1_transpose_output = transpose(single_blocks_8_linear1_weight, single_blocks_8_linear1_transpose_axes)
    single_blocks_8_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_8_add_1_output, single_blocks_8_linear1_transpose_output)
    single_blocks_8_lin1_out = add(single_blocks_8_linear1_matrixmultiply_output, single_blocks_8_linear1_bias)
    single_blocks_8_tensoritem_2_output = tensor_item(single_blocks_8_lin1_out, single_blocks_8_tensoritem_2_index)
    single_blocks_8_reshape_output = reshape(single_blocks_8_tensoritem_2_output, single_blocks_8_totuple_output)
    single_blocks_8_transpose_out = transpose(single_blocks_8_reshape_output, single_blocks_8_transpose_axes)
    single_blocks_8_tensoritem_3_output = tensor_item(single_blocks_8_transpose_out, single_blocks_8_tensoritem_3_index)
    single_blocks_8_tensoritem_4_output = tensor_item(single_blocks_8_transpose_out, single_blocks_8_tensoritem_4_index)
    single_blocks_8_norm_query_norm_power_output = power(single_blocks_8_tensoritem_3_output, single_blocks_8_norm_query_norm_power_exponent)
    single_blocks_8_norm_query_norm_mean_output = reduce_mean(single_blocks_8_norm_query_norm_power_output, axis=single_blocks_8_norm_query_norm_mean_axis, keepdim=single_blocks_8_norm_query_norm_mean_keepdim)
    single_blocks_8_norm_query_norm_add_output = add(single_blocks_8_norm_query_norm_mean_output, single_blocks_8_norm_query_norm_add_right)
    single_blocks_8_norm_query_norm_sqrt_output = sqrt(single_blocks_8_norm_query_norm_add_output)
    single_blocks_8_norm_query_norm_divide_output = divide(single_blocks_8_norm_query_norm_divide_numerator, single_blocks_8_norm_query_norm_sqrt_output)
    single_blocks_8_norm_query_norm_multiply_0_output = multiplication(single_blocks_8_tensoritem_3_output, single_blocks_8_norm_query_norm_divide_output)
    single_blocks_8_norm_query_norm_multiply_1_output = multiplication(single_blocks_8_norm_query_norm_multiply_0_output, single_blocks_8_norm_query_norm_scale)
    single_blocks_8_norm_key_norm_power_output = power(single_blocks_8_tensoritem_4_output, single_blocks_8_norm_key_norm_power_exponent)
    single_blocks_8_norm_key_norm_mean_output = reduce_mean(single_blocks_8_norm_key_norm_power_output, axis=single_blocks_8_norm_key_norm_mean_axis, keepdim=single_blocks_8_norm_key_norm_mean_keepdim)
    single_blocks_8_norm_key_norm_add_output = add(single_blocks_8_norm_key_norm_mean_output, single_blocks_8_norm_key_norm_add_right)
    single_blocks_8_norm_key_norm_sqrt_output = sqrt(single_blocks_8_norm_key_norm_add_output)
    single_blocks_8_norm_key_norm_divide_output = divide(single_blocks_8_norm_key_norm_divide_numerator, single_blocks_8_norm_key_norm_sqrt_output)
    single_blocks_8_norm_key_norm_multiply_0_output = multiplication(single_blocks_8_tensoritem_4_output, single_blocks_8_norm_key_norm_divide_output)
    single_blocks_8_norm_key_norm_multiply_1_output = multiplication(single_blocks_8_norm_key_norm_multiply_0_output, single_blocks_8_norm_key_norm_scale)
    single_blocks_8_tensoritem_5_output = tensor_item(single_blocks_8_transpose_out, single_blocks_8_tensoritem_5_index)
    single_blocks_8_model_model_xq_ = reshape(single_blocks_8_norm_query_norm_multiply_1_output, single_blocks_8_model_model_totuple_0_output)
    single_blocks_8_model_model_xk_ = reshape(single_blocks_8_norm_key_norm_multiply_1_output, single_blocks_8_model_model_totuple_1_output)
    single_blocks_8_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_8_model_model_tensoritem_0_index)
    single_blocks_8_model_model_tensoritem_1_output = tensor_item(single_blocks_8_model_model_xq_, single_blocks_8_model_model_tensoritem_1_index)
    single_blocks_8_model_model_multiply_0_output = multiplication(single_blocks_8_model_model_tensoritem_0_output, single_blocks_8_model_model_tensoritem_1_output)
    single_blocks_8_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_8_model_model_tensoritem_2_index)
    single_blocks_8_model_model_tensoritem_3_output = tensor_item(single_blocks_8_model_model_xq_, single_blocks_8_model_model_tensoritem_3_index)
    single_blocks_8_model_model_multiply_1_output = multiplication(single_blocks_8_model_model_tensoritem_2_output, single_blocks_8_model_model_tensoritem_3_output)
    single_blocks_8_model_model_add_0_output = add(single_blocks_8_model_model_multiply_0_output, single_blocks_8_model_model_multiply_1_output)
    single_blocks_8_model_q_out = reshape(single_blocks_8_model_model_add_0_output, single_blocks_8_model_model_shape_0_output)
    single_blocks_8_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_8_model_model_tensoritem_4_index)
    single_blocks_8_model_model_tensoritem_5_output = tensor_item(single_blocks_8_model_model_xk_, single_blocks_8_model_model_tensoritem_5_index)
    single_blocks_8_model_model_multiply_2_output = multiplication(single_blocks_8_model_model_tensoritem_4_output, single_blocks_8_model_model_tensoritem_5_output)
    single_blocks_8_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_8_model_model_tensoritem_6_index)
    single_blocks_8_model_model_tensoritem_7_output = tensor_item(single_blocks_8_model_model_xk_, single_blocks_8_model_model_tensoritem_7_index)
    single_blocks_8_model_model_multiply_3_output = multiplication(single_blocks_8_model_model_tensoritem_6_output, single_blocks_8_model_model_tensoritem_7_output)
    single_blocks_8_model_model_add_1_output = add(single_blocks_8_model_model_multiply_2_output, single_blocks_8_model_model_multiply_3_output)
    single_blocks_8_model_k_out = reshape(single_blocks_8_model_model_add_1_output, single_blocks_8_model_model_shape_1_output)
    single_blocks_8_model_context = scaled_dot_product_attention(single_blocks_8_model_q_out, single_blocks_8_model_k_out, single_blocks_8_tensoritem_5_output, single_blocks_8_model_scaleddotproduct_attn_mask)
    single_blocks_8_model_transpose_output = transpose(single_blocks_8_model_context, single_blocks_8_model_transpose_axes)
    single_blocks_8_attn = reshape(single_blocks_8_model_transpose_output, single_blocks_8_model_totuple_output)
    single_blocks_8_tensoritem_6_output = tensor_item(single_blocks_8_lin1_out, single_blocks_8_tensoritem_6_index)
    single_blocks_8_mlp_act = gelu(single_blocks_8_tensoritem_6_output, single_blocks_8_gelu_approximate)
    single_blocks_8_concat_out = concat(single_blocks_8_attn, single_blocks_8_mlp_act, axis=single_blocks_8_concat_axis)
    single_blocks_8_linear2_transpose_output = transpose(single_blocks_8_linear2_weight, single_blocks_8_linear2_transpose_axes)
    single_blocks_8_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_8_concat_out, single_blocks_8_linear2_transpose_output)
    single_blocks_8_lin2_out = add(single_blocks_8_linear2_matrixmultiply_output, single_blocks_8_linear2_bias)
    single_blocks_8_tensoritem_7_output = tensor_item(single_blocks_8_modulation_split_output, single_blocks_8_tensoritem_7_index)
    single_blocks_8_multiply_1_output = multiplication(single_blocks_8_tensoritem_7_output, single_blocks_8_lin2_out)
    single_blocks_8_add_2_output = add(single_blocks_7_add_2_output, single_blocks_8_multiply_1_output)
    single_blocks_9_modulation_silu_minus = minus(vec)
    single_blocks_9_modulation_silu_exp = exp(single_blocks_9_modulation_silu_minus)
    single_blocks_9_modulation_silu_add = add(single_blocks_9_modulation_silu_add_left, single_blocks_9_modulation_silu_exp)
    single_blocks_9_modulation_silu_output = divide(vec, single_blocks_9_modulation_silu_add)
    single_blocks_9_modulation_lin_transpose_output = transpose(single_blocks_9_modulation_lin_weight, single_blocks_9_modulation_lin_transpose_axes)
    single_blocks_9_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_9_modulation_silu_output, single_blocks_9_modulation_lin_transpose_output)
    single_blocks_9_modulation_lin_out = add(single_blocks_9_modulation_lin_matrixmultiply_output, single_blocks_9_modulation_lin_bias)
    single_blocks_9_modulation_tensoritem_output = tensor_item(single_blocks_9_modulation_lin_out, single_blocks_9_modulation_tensoritem_index)
    single_blocks_9_modulation_split_output = split(single_blocks_9_modulation_tensoritem_output, single_blocks_9_modulation_split_split_size, single_blocks_9_modulation_split_axis)
    single_blocks_9_pre_norm_mean_output = reduce_mean(single_blocks_8_add_2_output, axis=single_blocks_9_pre_norm_mean_axis, keepdim=single_blocks_9_pre_norm_mean_keepdim)
    single_blocks_9_pre_norm_subtract_output = subtract(single_blocks_8_add_2_output, single_blocks_9_pre_norm_mean_output)
    single_blocks_9_pre_norm_variance_output = variance(single_blocks_8_add_2_output, axis=single_blocks_9_pre_norm_variance_axis, keepdim=single_blocks_9_pre_norm_variance_keepdim, correction=single_blocks_9_pre_norm_variance_correction)
    single_blocks_9_pre_norm_add_output = add(single_blocks_9_pre_norm_variance_output, single_blocks_9_pre_norm_add_right)
    single_blocks_9_pre_norm_sqrt_output = sqrt(single_blocks_9_pre_norm_add_output)
    single_blocks_9_pre_norm_divide_output = divide(single_blocks_9_pre_norm_subtract_output, single_blocks_9_pre_norm_sqrt_output)
    single_blocks_9_tensoritem_0_output = tensor_item(single_blocks_9_modulation_split_output, single_blocks_9_tensoritem_0_index)
    single_blocks_9_add_0_output = add(single_blocks_9_add_0_left, single_blocks_9_tensoritem_0_output)
    single_blocks_9_multiply_0_output = multiplication(single_blocks_9_add_0_output, single_blocks_9_pre_norm_divide_output)
    single_blocks_9_tensoritem_1_output = tensor_item(single_blocks_9_modulation_split_output, single_blocks_9_tensoritem_1_index)
    single_blocks_9_add_1_output = add(single_blocks_9_multiply_0_output, single_blocks_9_tensoritem_1_output)
    single_blocks_9_linear1_transpose_output = transpose(single_blocks_9_linear1_weight, single_blocks_9_linear1_transpose_axes)
    single_blocks_9_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_9_add_1_output, single_blocks_9_linear1_transpose_output)
    single_blocks_9_lin1_out = add(single_blocks_9_linear1_matrixmultiply_output, single_blocks_9_linear1_bias)
    single_blocks_9_tensoritem_2_output = tensor_item(single_blocks_9_lin1_out, single_blocks_9_tensoritem_2_index)
    single_blocks_9_reshape_output = reshape(single_blocks_9_tensoritem_2_output, single_blocks_9_totuple_output)
    single_blocks_9_transpose_out = transpose(single_blocks_9_reshape_output, single_blocks_9_transpose_axes)
    single_blocks_9_tensoritem_3_output = tensor_item(single_blocks_9_transpose_out, single_blocks_9_tensoritem_3_index)
    single_blocks_9_tensoritem_4_output = tensor_item(single_blocks_9_transpose_out, single_blocks_9_tensoritem_4_index)
    single_blocks_9_norm_query_norm_power_output = power(single_blocks_9_tensoritem_3_output, single_blocks_9_norm_query_norm_power_exponent)
    single_blocks_9_norm_query_norm_mean_output = reduce_mean(single_blocks_9_norm_query_norm_power_output, axis=single_blocks_9_norm_query_norm_mean_axis, keepdim=single_blocks_9_norm_query_norm_mean_keepdim)
    single_blocks_9_norm_query_norm_add_output = add(single_blocks_9_norm_query_norm_mean_output, single_blocks_9_norm_query_norm_add_right)
    single_blocks_9_norm_query_norm_sqrt_output = sqrt(single_blocks_9_norm_query_norm_add_output)
    single_blocks_9_norm_query_norm_divide_output = divide(single_blocks_9_norm_query_norm_divide_numerator, single_blocks_9_norm_query_norm_sqrt_output)
    single_blocks_9_norm_query_norm_multiply_0_output = multiplication(single_blocks_9_tensoritem_3_output, single_blocks_9_norm_query_norm_divide_output)
    single_blocks_9_norm_query_norm_multiply_1_output = multiplication(single_blocks_9_norm_query_norm_multiply_0_output, single_blocks_9_norm_query_norm_scale)
    single_blocks_9_norm_key_norm_power_output = power(single_blocks_9_tensoritem_4_output, single_blocks_9_norm_key_norm_power_exponent)
    single_blocks_9_norm_key_norm_mean_output = reduce_mean(single_blocks_9_norm_key_norm_power_output, axis=single_blocks_9_norm_key_norm_mean_axis, keepdim=single_blocks_9_norm_key_norm_mean_keepdim)
    single_blocks_9_norm_key_norm_add_output = add(single_blocks_9_norm_key_norm_mean_output, single_blocks_9_norm_key_norm_add_right)
    single_blocks_9_norm_key_norm_sqrt_output = sqrt(single_blocks_9_norm_key_norm_add_output)
    single_blocks_9_norm_key_norm_divide_output = divide(single_blocks_9_norm_key_norm_divide_numerator, single_blocks_9_norm_key_norm_sqrt_output)
    single_blocks_9_norm_key_norm_multiply_0_output = multiplication(single_blocks_9_tensoritem_4_output, single_blocks_9_norm_key_norm_divide_output)
    single_blocks_9_norm_key_norm_multiply_1_output = multiplication(single_blocks_9_norm_key_norm_multiply_0_output, single_blocks_9_norm_key_norm_scale)
    single_blocks_9_tensoritem_5_output = tensor_item(single_blocks_9_transpose_out, single_blocks_9_tensoritem_5_index)
    single_blocks_9_model_model_xq_ = reshape(single_blocks_9_norm_query_norm_multiply_1_output, single_blocks_9_model_model_totuple_0_output)
    single_blocks_9_model_model_xk_ = reshape(single_blocks_9_norm_key_norm_multiply_1_output, single_blocks_9_model_model_totuple_1_output)
    single_blocks_9_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_9_model_model_tensoritem_0_index)
    single_blocks_9_model_model_tensoritem_1_output = tensor_item(single_blocks_9_model_model_xq_, single_blocks_9_model_model_tensoritem_1_index)
    single_blocks_9_model_model_multiply_0_output = multiplication(single_blocks_9_model_model_tensoritem_0_output, single_blocks_9_model_model_tensoritem_1_output)
    single_blocks_9_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_9_model_model_tensoritem_2_index)
    single_blocks_9_model_model_tensoritem_3_output = tensor_item(single_blocks_9_model_model_xq_, single_blocks_9_model_model_tensoritem_3_index)
    single_blocks_9_model_model_multiply_1_output = multiplication(single_blocks_9_model_model_tensoritem_2_output, single_blocks_9_model_model_tensoritem_3_output)
    single_blocks_9_model_model_add_0_output = add(single_blocks_9_model_model_multiply_0_output, single_blocks_9_model_model_multiply_1_output)
    single_blocks_9_model_q_out = reshape(single_blocks_9_model_model_add_0_output, single_blocks_9_model_model_shape_0_output)
    single_blocks_9_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_9_model_model_tensoritem_4_index)
    single_blocks_9_model_model_tensoritem_5_output = tensor_item(single_blocks_9_model_model_xk_, single_blocks_9_model_model_tensoritem_5_index)
    single_blocks_9_model_model_multiply_2_output = multiplication(single_blocks_9_model_model_tensoritem_4_output, single_blocks_9_model_model_tensoritem_5_output)
    single_blocks_9_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_9_model_model_tensoritem_6_index)
    single_blocks_9_model_model_tensoritem_7_output = tensor_item(single_blocks_9_model_model_xk_, single_blocks_9_model_model_tensoritem_7_index)
    single_blocks_9_model_model_multiply_3_output = multiplication(single_blocks_9_model_model_tensoritem_6_output, single_blocks_9_model_model_tensoritem_7_output)
    single_blocks_9_model_model_add_1_output = add(single_blocks_9_model_model_multiply_2_output, single_blocks_9_model_model_multiply_3_output)
    single_blocks_9_model_k_out = reshape(single_blocks_9_model_model_add_1_output, single_blocks_9_model_model_shape_1_output)
    single_blocks_9_model_context = scaled_dot_product_attention(single_blocks_9_model_q_out, single_blocks_9_model_k_out, single_blocks_9_tensoritem_5_output, single_blocks_9_model_scaleddotproduct_attn_mask)
    single_blocks_9_model_transpose_output = transpose(single_blocks_9_model_context, single_blocks_9_model_transpose_axes)
    single_blocks_9_attn = reshape(single_blocks_9_model_transpose_output, single_blocks_9_model_totuple_output)
    single_blocks_9_tensoritem_6_output = tensor_item(single_blocks_9_lin1_out, single_blocks_9_tensoritem_6_index)
    single_blocks_9_mlp_act = gelu(single_blocks_9_tensoritem_6_output, single_blocks_9_gelu_approximate)
    single_blocks_9_concat_out = concat(single_blocks_9_attn, single_blocks_9_mlp_act, axis=single_blocks_9_concat_axis)
    single_blocks_9_linear2_transpose_output = transpose(single_blocks_9_linear2_weight, single_blocks_9_linear2_transpose_axes)
    single_blocks_9_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_9_concat_out, single_blocks_9_linear2_transpose_output)
    single_blocks_9_lin2_out = add(single_blocks_9_linear2_matrixmultiply_output, single_blocks_9_linear2_bias)
    single_blocks_9_tensoritem_7_output = tensor_item(single_blocks_9_modulation_split_output, single_blocks_9_tensoritem_7_index)
    single_blocks_9_multiply_1_output = multiplication(single_blocks_9_tensoritem_7_output, single_blocks_9_lin2_out)
    single_blocks_9_add_2_output = add(single_blocks_8_add_2_output, single_blocks_9_multiply_1_output)
    single_blocks_10_modulation_silu_minus = minus(vec)
    single_blocks_10_modulation_silu_exp = exp(single_blocks_10_modulation_silu_minus)
    single_blocks_10_modulation_silu_add = add(single_blocks_10_modulation_silu_add_left, single_blocks_10_modulation_silu_exp)
    single_blocks_10_modulation_silu_output = divide(vec, single_blocks_10_modulation_silu_add)
    single_blocks_10_modulation_lin_transpose_output = transpose(single_blocks_10_modulation_lin_weight, single_blocks_10_modulation_lin_transpose_axes)
    single_blocks_10_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_10_modulation_silu_output, single_blocks_10_modulation_lin_transpose_output)
    single_blocks_10_modulation_lin_out = add(single_blocks_10_modulation_lin_matrixmultiply_output, single_blocks_10_modulation_lin_bias)
    single_blocks_10_modulation_tensoritem_output = tensor_item(single_blocks_10_modulation_lin_out, single_blocks_10_modulation_tensoritem_index)
    single_blocks_10_modulation_split_output = split(single_blocks_10_modulation_tensoritem_output, single_blocks_10_modulation_split_split_size, single_blocks_10_modulation_split_axis)
    single_blocks_10_pre_norm_mean_output = reduce_mean(single_blocks_9_add_2_output, axis=single_blocks_10_pre_norm_mean_axis, keepdim=single_blocks_10_pre_norm_mean_keepdim)
    single_blocks_10_pre_norm_subtract_output = subtract(single_blocks_9_add_2_output, single_blocks_10_pre_norm_mean_output)
    single_blocks_10_pre_norm_variance_output = variance(single_blocks_9_add_2_output, axis=single_blocks_10_pre_norm_variance_axis, keepdim=single_blocks_10_pre_norm_variance_keepdim, correction=single_blocks_10_pre_norm_variance_correction)
    single_blocks_10_pre_norm_add_output = add(single_blocks_10_pre_norm_variance_output, single_blocks_10_pre_norm_add_right)
    single_blocks_10_pre_norm_sqrt_output = sqrt(single_blocks_10_pre_norm_add_output)
    single_blocks_10_pre_norm_divide_output = divide(single_blocks_10_pre_norm_subtract_output, single_blocks_10_pre_norm_sqrt_output)
    single_blocks_10_tensoritem_0_output = tensor_item(single_blocks_10_modulation_split_output, single_blocks_10_tensoritem_0_index)
    single_blocks_10_add_0_output = add(single_blocks_10_add_0_left, single_blocks_10_tensoritem_0_output)
    single_blocks_10_multiply_0_output = multiplication(single_blocks_10_add_0_output, single_blocks_10_pre_norm_divide_output)
    single_blocks_10_tensoritem_1_output = tensor_item(single_blocks_10_modulation_split_output, single_blocks_10_tensoritem_1_index)
    single_blocks_10_add_1_output = add(single_blocks_10_multiply_0_output, single_blocks_10_tensoritem_1_output)
    single_blocks_10_linear1_transpose_output = transpose(single_blocks_10_linear1_weight, single_blocks_10_linear1_transpose_axes)
    single_blocks_10_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_10_add_1_output, single_blocks_10_linear1_transpose_output)
    single_blocks_10_lin1_out = add(single_blocks_10_linear1_matrixmultiply_output, single_blocks_10_linear1_bias)
    single_blocks_10_tensoritem_2_output = tensor_item(single_blocks_10_lin1_out, single_blocks_10_tensoritem_2_index)
    single_blocks_10_reshape_output = reshape(single_blocks_10_tensoritem_2_output, single_blocks_10_totuple_output)
    single_blocks_10_transpose_out = transpose(single_blocks_10_reshape_output, single_blocks_10_transpose_axes)
    single_blocks_10_tensoritem_3_output = tensor_item(single_blocks_10_transpose_out, single_blocks_10_tensoritem_3_index)
    single_blocks_10_tensoritem_4_output = tensor_item(single_blocks_10_transpose_out, single_blocks_10_tensoritem_4_index)
    single_blocks_10_norm_query_norm_power_output = power(single_blocks_10_tensoritem_3_output, single_blocks_10_norm_query_norm_power_exponent)
    single_blocks_10_norm_query_norm_mean_output = reduce_mean(single_blocks_10_norm_query_norm_power_output, axis=single_blocks_10_norm_query_norm_mean_axis, keepdim=single_blocks_10_norm_query_norm_mean_keepdim)
    single_blocks_10_norm_query_norm_add_output = add(single_blocks_10_norm_query_norm_mean_output, single_blocks_10_norm_query_norm_add_right)
    single_blocks_10_norm_query_norm_sqrt_output = sqrt(single_blocks_10_norm_query_norm_add_output)
    single_blocks_10_norm_query_norm_divide_output = divide(single_blocks_10_norm_query_norm_divide_numerator, single_blocks_10_norm_query_norm_sqrt_output)
    single_blocks_10_norm_query_norm_multiply_0_output = multiplication(single_blocks_10_tensoritem_3_output, single_blocks_10_norm_query_norm_divide_output)
    single_blocks_10_norm_query_norm_multiply_1_output = multiplication(single_blocks_10_norm_query_norm_multiply_0_output, single_blocks_10_norm_query_norm_scale)
    single_blocks_10_norm_key_norm_power_output = power(single_blocks_10_tensoritem_4_output, single_blocks_10_norm_key_norm_power_exponent)
    single_blocks_10_norm_key_norm_mean_output = reduce_mean(single_blocks_10_norm_key_norm_power_output, axis=single_blocks_10_norm_key_norm_mean_axis, keepdim=single_blocks_10_norm_key_norm_mean_keepdim)
    single_blocks_10_norm_key_norm_add_output = add(single_blocks_10_norm_key_norm_mean_output, single_blocks_10_norm_key_norm_add_right)
    single_blocks_10_norm_key_norm_sqrt_output = sqrt(single_blocks_10_norm_key_norm_add_output)
    single_blocks_10_norm_key_norm_divide_output = divide(single_blocks_10_norm_key_norm_divide_numerator, single_blocks_10_norm_key_norm_sqrt_output)
    single_blocks_10_norm_key_norm_multiply_0_output = multiplication(single_blocks_10_tensoritem_4_output, single_blocks_10_norm_key_norm_divide_output)
    single_blocks_10_norm_key_norm_multiply_1_output = multiplication(single_blocks_10_norm_key_norm_multiply_0_output, single_blocks_10_norm_key_norm_scale)
    single_blocks_10_tensoritem_5_output = tensor_item(single_blocks_10_transpose_out, single_blocks_10_tensoritem_5_index)
    single_blocks_10_model_model_xq_ = reshape(single_blocks_10_norm_query_norm_multiply_1_output, single_blocks_10_model_model_totuple_0_output)
    single_blocks_10_model_model_xk_ = reshape(single_blocks_10_norm_key_norm_multiply_1_output, single_blocks_10_model_model_totuple_1_output)
    single_blocks_10_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_10_model_model_tensoritem_0_index)
    single_blocks_10_model_model_tensoritem_1_output = tensor_item(single_blocks_10_model_model_xq_, single_blocks_10_model_model_tensoritem_1_index)
    single_blocks_10_model_model_multiply_0_output = multiplication(single_blocks_10_model_model_tensoritem_0_output, single_blocks_10_model_model_tensoritem_1_output)
    single_blocks_10_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_10_model_model_tensoritem_2_index)
    single_blocks_10_model_model_tensoritem_3_output = tensor_item(single_blocks_10_model_model_xq_, single_blocks_10_model_model_tensoritem_3_index)
    single_blocks_10_model_model_multiply_1_output = multiplication(single_blocks_10_model_model_tensoritem_2_output, single_blocks_10_model_model_tensoritem_3_output)
    single_blocks_10_model_model_add_0_output = add(single_blocks_10_model_model_multiply_0_output, single_blocks_10_model_model_multiply_1_output)
    single_blocks_10_model_q_out = reshape(single_blocks_10_model_model_add_0_output, single_blocks_10_model_model_shape_0_output)
    single_blocks_10_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_10_model_model_tensoritem_4_index)
    single_blocks_10_model_model_tensoritem_5_output = tensor_item(single_blocks_10_model_model_xk_, single_blocks_10_model_model_tensoritem_5_index)
    single_blocks_10_model_model_multiply_2_output = multiplication(single_blocks_10_model_model_tensoritem_4_output, single_blocks_10_model_model_tensoritem_5_output)
    single_blocks_10_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_10_model_model_tensoritem_6_index)
    single_blocks_10_model_model_tensoritem_7_output = tensor_item(single_blocks_10_model_model_xk_, single_blocks_10_model_model_tensoritem_7_index)
    single_blocks_10_model_model_multiply_3_output = multiplication(single_blocks_10_model_model_tensoritem_6_output, single_blocks_10_model_model_tensoritem_7_output)
    single_blocks_10_model_model_add_1_output = add(single_blocks_10_model_model_multiply_2_output, single_blocks_10_model_model_multiply_3_output)
    single_blocks_10_model_k_out = reshape(single_blocks_10_model_model_add_1_output, single_blocks_10_model_model_shape_1_output)
    single_blocks_10_model_context = scaled_dot_product_attention(single_blocks_10_model_q_out, single_blocks_10_model_k_out, single_blocks_10_tensoritem_5_output, single_blocks_10_model_scaleddotproduct_attn_mask)
    single_blocks_10_model_transpose_output = transpose(single_blocks_10_model_context, single_blocks_10_model_transpose_axes)
    single_blocks_10_attn = reshape(single_blocks_10_model_transpose_output, single_blocks_10_model_totuple_output)
    single_blocks_10_tensoritem_6_output = tensor_item(single_blocks_10_lin1_out, single_blocks_10_tensoritem_6_index)
    single_blocks_10_mlp_act = gelu(single_blocks_10_tensoritem_6_output, single_blocks_10_gelu_approximate)
    single_blocks_10_concat_out = concat(single_blocks_10_attn, single_blocks_10_mlp_act, axis=single_blocks_10_concat_axis)
    single_blocks_10_linear2_transpose_output = transpose(single_blocks_10_linear2_weight, single_blocks_10_linear2_transpose_axes)
    single_blocks_10_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_10_concat_out, single_blocks_10_linear2_transpose_output)
    single_blocks_10_lin2_out = add(single_blocks_10_linear2_matrixmultiply_output, single_blocks_10_linear2_bias)
    single_blocks_10_tensoritem_7_output = tensor_item(single_blocks_10_modulation_split_output, single_blocks_10_tensoritem_7_index)
    single_blocks_10_multiply_1_output = multiplication(single_blocks_10_tensoritem_7_output, single_blocks_10_lin2_out)
    single_blocks_10_add_2_output = add(single_blocks_9_add_2_output, single_blocks_10_multiply_1_output)
    single_blocks_11_modulation_silu_minus = minus(vec)
    single_blocks_11_modulation_silu_exp = exp(single_blocks_11_modulation_silu_minus)
    single_blocks_11_modulation_silu_add = add(single_blocks_11_modulation_silu_add_left, single_blocks_11_modulation_silu_exp)
    single_blocks_11_modulation_silu_output = divide(vec, single_blocks_11_modulation_silu_add)
    single_blocks_11_modulation_lin_transpose_output = transpose(single_blocks_11_modulation_lin_weight, single_blocks_11_modulation_lin_transpose_axes)
    single_blocks_11_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_11_modulation_silu_output, single_blocks_11_modulation_lin_transpose_output)
    single_blocks_11_modulation_lin_out = add(single_blocks_11_modulation_lin_matrixmultiply_output, single_blocks_11_modulation_lin_bias)
    single_blocks_11_modulation_tensoritem_output = tensor_item(single_blocks_11_modulation_lin_out, single_blocks_11_modulation_tensoritem_index)
    single_blocks_11_modulation_split_output = split(single_blocks_11_modulation_tensoritem_output, single_blocks_11_modulation_split_split_size, single_blocks_11_modulation_split_axis)
    single_blocks_11_pre_norm_mean_output = reduce_mean(single_blocks_10_add_2_output, axis=single_blocks_11_pre_norm_mean_axis, keepdim=single_blocks_11_pre_norm_mean_keepdim)
    single_blocks_11_pre_norm_subtract_output = subtract(single_blocks_10_add_2_output, single_blocks_11_pre_norm_mean_output)
    single_blocks_11_pre_norm_variance_output = variance(single_blocks_10_add_2_output, axis=single_blocks_11_pre_norm_variance_axis, keepdim=single_blocks_11_pre_norm_variance_keepdim, correction=single_blocks_11_pre_norm_variance_correction)
    single_blocks_11_pre_norm_add_output = add(single_blocks_11_pre_norm_variance_output, single_blocks_11_pre_norm_add_right)
    single_blocks_11_pre_norm_sqrt_output = sqrt(single_blocks_11_pre_norm_add_output)
    single_blocks_11_pre_norm_divide_output = divide(single_blocks_11_pre_norm_subtract_output, single_blocks_11_pre_norm_sqrt_output)
    single_blocks_11_tensoritem_0_output = tensor_item(single_blocks_11_modulation_split_output, single_blocks_11_tensoritem_0_index)
    single_blocks_11_add_0_output = add(single_blocks_11_add_0_left, single_blocks_11_tensoritem_0_output)
    single_blocks_11_multiply_0_output = multiplication(single_blocks_11_add_0_output, single_blocks_11_pre_norm_divide_output)
    single_blocks_11_tensoritem_1_output = tensor_item(single_blocks_11_modulation_split_output, single_blocks_11_tensoritem_1_index)
    single_blocks_11_add_1_output = add(single_blocks_11_multiply_0_output, single_blocks_11_tensoritem_1_output)
    single_blocks_11_linear1_transpose_output = transpose(single_blocks_11_linear1_weight, single_blocks_11_linear1_transpose_axes)
    single_blocks_11_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_11_add_1_output, single_blocks_11_linear1_transpose_output)
    single_blocks_11_lin1_out = add(single_blocks_11_linear1_matrixmultiply_output, single_blocks_11_linear1_bias)
    single_blocks_11_tensoritem_2_output = tensor_item(single_blocks_11_lin1_out, single_blocks_11_tensoritem_2_index)
    single_blocks_11_reshape_output = reshape(single_blocks_11_tensoritem_2_output, single_blocks_11_totuple_output)
    single_blocks_11_transpose_out = transpose(single_blocks_11_reshape_output, single_blocks_11_transpose_axes)
    single_blocks_11_tensoritem_3_output = tensor_item(single_blocks_11_transpose_out, single_blocks_11_tensoritem_3_index)
    single_blocks_11_tensoritem_4_output = tensor_item(single_blocks_11_transpose_out, single_blocks_11_tensoritem_4_index)
    single_blocks_11_norm_query_norm_power_output = power(single_blocks_11_tensoritem_3_output, single_blocks_11_norm_query_norm_power_exponent)
    single_blocks_11_norm_query_norm_mean_output = reduce_mean(single_blocks_11_norm_query_norm_power_output, axis=single_blocks_11_norm_query_norm_mean_axis, keepdim=single_blocks_11_norm_query_norm_mean_keepdim)
    single_blocks_11_norm_query_norm_add_output = add(single_blocks_11_norm_query_norm_mean_output, single_blocks_11_norm_query_norm_add_right)
    single_blocks_11_norm_query_norm_sqrt_output = sqrt(single_blocks_11_norm_query_norm_add_output)
    single_blocks_11_norm_query_norm_divide_output = divide(single_blocks_11_norm_query_norm_divide_numerator, single_blocks_11_norm_query_norm_sqrt_output)
    single_blocks_11_norm_query_norm_multiply_0_output = multiplication(single_blocks_11_tensoritem_3_output, single_blocks_11_norm_query_norm_divide_output)
    single_blocks_11_norm_query_norm_multiply_1_output = multiplication(single_blocks_11_norm_query_norm_multiply_0_output, single_blocks_11_norm_query_norm_scale)
    single_blocks_11_norm_key_norm_power_output = power(single_blocks_11_tensoritem_4_output, single_blocks_11_norm_key_norm_power_exponent)
    single_blocks_11_norm_key_norm_mean_output = reduce_mean(single_blocks_11_norm_key_norm_power_output, axis=single_blocks_11_norm_key_norm_mean_axis, keepdim=single_blocks_11_norm_key_norm_mean_keepdim)
    single_blocks_11_norm_key_norm_add_output = add(single_blocks_11_norm_key_norm_mean_output, single_blocks_11_norm_key_norm_add_right)
    single_blocks_11_norm_key_norm_sqrt_output = sqrt(single_blocks_11_norm_key_norm_add_output)
    single_blocks_11_norm_key_norm_divide_output = divide(single_blocks_11_norm_key_norm_divide_numerator, single_blocks_11_norm_key_norm_sqrt_output)
    single_blocks_11_norm_key_norm_multiply_0_output = multiplication(single_blocks_11_tensoritem_4_output, single_blocks_11_norm_key_norm_divide_output)
    single_blocks_11_norm_key_norm_multiply_1_output = multiplication(single_blocks_11_norm_key_norm_multiply_0_output, single_blocks_11_norm_key_norm_scale)
    single_blocks_11_tensoritem_5_output = tensor_item(single_blocks_11_transpose_out, single_blocks_11_tensoritem_5_index)
    single_blocks_11_model_model_xq_ = reshape(single_blocks_11_norm_query_norm_multiply_1_output, single_blocks_11_model_model_totuple_0_output)
    single_blocks_11_model_model_xk_ = reshape(single_blocks_11_norm_key_norm_multiply_1_output, single_blocks_11_model_model_totuple_1_output)
    single_blocks_11_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_11_model_model_tensoritem_0_index)
    single_blocks_11_model_model_tensoritem_1_output = tensor_item(single_blocks_11_model_model_xq_, single_blocks_11_model_model_tensoritem_1_index)
    single_blocks_11_model_model_multiply_0_output = multiplication(single_blocks_11_model_model_tensoritem_0_output, single_blocks_11_model_model_tensoritem_1_output)
    single_blocks_11_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_11_model_model_tensoritem_2_index)
    single_blocks_11_model_model_tensoritem_3_output = tensor_item(single_blocks_11_model_model_xq_, single_blocks_11_model_model_tensoritem_3_index)
    single_blocks_11_model_model_multiply_1_output = multiplication(single_blocks_11_model_model_tensoritem_2_output, single_blocks_11_model_model_tensoritem_3_output)
    single_blocks_11_model_model_add_0_output = add(single_blocks_11_model_model_multiply_0_output, single_blocks_11_model_model_multiply_1_output)
    single_blocks_11_model_q_out = reshape(single_blocks_11_model_model_add_0_output, single_blocks_11_model_model_shape_0_output)
    single_blocks_11_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_11_model_model_tensoritem_4_index)
    single_blocks_11_model_model_tensoritem_5_output = tensor_item(single_blocks_11_model_model_xk_, single_blocks_11_model_model_tensoritem_5_index)
    single_blocks_11_model_model_multiply_2_output = multiplication(single_blocks_11_model_model_tensoritem_4_output, single_blocks_11_model_model_tensoritem_5_output)
    single_blocks_11_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_11_model_model_tensoritem_6_index)
    single_blocks_11_model_model_tensoritem_7_output = tensor_item(single_blocks_11_model_model_xk_, single_blocks_11_model_model_tensoritem_7_index)
    single_blocks_11_model_model_multiply_3_output = multiplication(single_blocks_11_model_model_tensoritem_6_output, single_blocks_11_model_model_tensoritem_7_output)
    single_blocks_11_model_model_add_1_output = add(single_blocks_11_model_model_multiply_2_output, single_blocks_11_model_model_multiply_3_output)
    single_blocks_11_model_k_out = reshape(single_blocks_11_model_model_add_1_output, single_blocks_11_model_model_shape_1_output)
    single_blocks_11_model_context = scaled_dot_product_attention(single_blocks_11_model_q_out, single_blocks_11_model_k_out, single_blocks_11_tensoritem_5_output, single_blocks_11_model_scaleddotproduct_attn_mask)
    single_blocks_11_model_transpose_output = transpose(single_blocks_11_model_context, single_blocks_11_model_transpose_axes)
    single_blocks_11_attn = reshape(single_blocks_11_model_transpose_output, single_blocks_11_model_totuple_output)
    single_blocks_11_tensoritem_6_output = tensor_item(single_blocks_11_lin1_out, single_blocks_11_tensoritem_6_index)
    single_blocks_11_mlp_act = gelu(single_blocks_11_tensoritem_6_output, single_blocks_11_gelu_approximate)
    single_blocks_11_concat_out = concat(single_blocks_11_attn, single_blocks_11_mlp_act, axis=single_blocks_11_concat_axis)
    single_blocks_11_linear2_transpose_output = transpose(single_blocks_11_linear2_weight, single_blocks_11_linear2_transpose_axes)
    single_blocks_11_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_11_concat_out, single_blocks_11_linear2_transpose_output)
    single_blocks_11_lin2_out = add(single_blocks_11_linear2_matrixmultiply_output, single_blocks_11_linear2_bias)
    single_blocks_11_tensoritem_7_output = tensor_item(single_blocks_11_modulation_split_output, single_blocks_11_tensoritem_7_index)
    single_blocks_11_multiply_1_output = multiplication(single_blocks_11_tensoritem_7_output, single_blocks_11_lin2_out)
    single_blocks_11_add_2_output = add(single_blocks_10_add_2_output, single_blocks_11_multiply_1_output)
    single_blocks_12_modulation_silu_minus = minus(vec)
    single_blocks_12_modulation_silu_exp = exp(single_blocks_12_modulation_silu_minus)
    single_blocks_12_modulation_silu_add = add(single_blocks_12_modulation_silu_add_left, single_blocks_12_modulation_silu_exp)
    single_blocks_12_modulation_silu_output = divide(vec, single_blocks_12_modulation_silu_add)
    single_blocks_12_modulation_lin_transpose_output = transpose(single_blocks_12_modulation_lin_weight, single_blocks_12_modulation_lin_transpose_axes)
    single_blocks_12_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_12_modulation_silu_output, single_blocks_12_modulation_lin_transpose_output)
    single_blocks_12_modulation_lin_out = add(single_blocks_12_modulation_lin_matrixmultiply_output, single_blocks_12_modulation_lin_bias)
    single_blocks_12_modulation_tensoritem_output = tensor_item(single_blocks_12_modulation_lin_out, single_blocks_12_modulation_tensoritem_index)
    single_blocks_12_modulation_split_output = split(single_blocks_12_modulation_tensoritem_output, single_blocks_12_modulation_split_split_size, single_blocks_12_modulation_split_axis)
    single_blocks_12_pre_norm_mean_output = reduce_mean(single_blocks_11_add_2_output, axis=single_blocks_12_pre_norm_mean_axis, keepdim=single_blocks_12_pre_norm_mean_keepdim)
    single_blocks_12_pre_norm_subtract_output = subtract(single_blocks_11_add_2_output, single_blocks_12_pre_norm_mean_output)
    single_blocks_12_pre_norm_variance_output = variance(single_blocks_11_add_2_output, axis=single_blocks_12_pre_norm_variance_axis, keepdim=single_blocks_12_pre_norm_variance_keepdim, correction=single_blocks_12_pre_norm_variance_correction)
    single_blocks_12_pre_norm_add_output = add(single_blocks_12_pre_norm_variance_output, single_blocks_12_pre_norm_add_right)
    single_blocks_12_pre_norm_sqrt_output = sqrt(single_blocks_12_pre_norm_add_output)
    single_blocks_12_pre_norm_divide_output = divide(single_blocks_12_pre_norm_subtract_output, single_blocks_12_pre_norm_sqrt_output)
    single_blocks_12_tensoritem_0_output = tensor_item(single_blocks_12_modulation_split_output, single_blocks_12_tensoritem_0_index)
    single_blocks_12_add_0_output = add(single_blocks_12_add_0_left, single_blocks_12_tensoritem_0_output)
    single_blocks_12_multiply_0_output = multiplication(single_blocks_12_add_0_output, single_blocks_12_pre_norm_divide_output)
    single_blocks_12_tensoritem_1_output = tensor_item(single_blocks_12_modulation_split_output, single_blocks_12_tensoritem_1_index)
    single_blocks_12_add_1_output = add(single_blocks_12_multiply_0_output, single_blocks_12_tensoritem_1_output)
    single_blocks_12_linear1_transpose_output = transpose(single_blocks_12_linear1_weight, single_blocks_12_linear1_transpose_axes)
    single_blocks_12_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_12_add_1_output, single_blocks_12_linear1_transpose_output)
    single_blocks_12_lin1_out = add(single_blocks_12_linear1_matrixmultiply_output, single_blocks_12_linear1_bias)
    single_blocks_12_tensoritem_2_output = tensor_item(single_blocks_12_lin1_out, single_blocks_12_tensoritem_2_index)
    single_blocks_12_reshape_output = reshape(single_blocks_12_tensoritem_2_output, single_blocks_12_totuple_output)
    single_blocks_12_transpose_out = transpose(single_blocks_12_reshape_output, single_blocks_12_transpose_axes)
    single_blocks_12_tensoritem_3_output = tensor_item(single_blocks_12_transpose_out, single_blocks_12_tensoritem_3_index)
    single_blocks_12_tensoritem_4_output = tensor_item(single_blocks_12_transpose_out, single_blocks_12_tensoritem_4_index)
    single_blocks_12_norm_query_norm_power_output = power(single_blocks_12_tensoritem_3_output, single_blocks_12_norm_query_norm_power_exponent)
    single_blocks_12_norm_query_norm_mean_output = reduce_mean(single_blocks_12_norm_query_norm_power_output, axis=single_blocks_12_norm_query_norm_mean_axis, keepdim=single_blocks_12_norm_query_norm_mean_keepdim)
    single_blocks_12_norm_query_norm_add_output = add(single_blocks_12_norm_query_norm_mean_output, single_blocks_12_norm_query_norm_add_right)
    single_blocks_12_norm_query_norm_sqrt_output = sqrt(single_blocks_12_norm_query_norm_add_output)
    single_blocks_12_norm_query_norm_divide_output = divide(single_blocks_12_norm_query_norm_divide_numerator, single_blocks_12_norm_query_norm_sqrt_output)
    single_blocks_12_norm_query_norm_multiply_0_output = multiplication(single_blocks_12_tensoritem_3_output, single_blocks_12_norm_query_norm_divide_output)
    single_blocks_12_norm_query_norm_multiply_1_output = multiplication(single_blocks_12_norm_query_norm_multiply_0_output, single_blocks_12_norm_query_norm_scale)
    single_blocks_12_norm_key_norm_power_output = power(single_blocks_12_tensoritem_4_output, single_blocks_12_norm_key_norm_power_exponent)
    single_blocks_12_norm_key_norm_mean_output = reduce_mean(single_blocks_12_norm_key_norm_power_output, axis=single_blocks_12_norm_key_norm_mean_axis, keepdim=single_blocks_12_norm_key_norm_mean_keepdim)
    single_blocks_12_norm_key_norm_add_output = add(single_blocks_12_norm_key_norm_mean_output, single_blocks_12_norm_key_norm_add_right)
    single_blocks_12_norm_key_norm_sqrt_output = sqrt(single_blocks_12_norm_key_norm_add_output)
    single_blocks_12_norm_key_norm_divide_output = divide(single_blocks_12_norm_key_norm_divide_numerator, single_blocks_12_norm_key_norm_sqrt_output)
    single_blocks_12_norm_key_norm_multiply_0_output = multiplication(single_blocks_12_tensoritem_4_output, single_blocks_12_norm_key_norm_divide_output)
    single_blocks_12_norm_key_norm_multiply_1_output = multiplication(single_blocks_12_norm_key_norm_multiply_0_output, single_blocks_12_norm_key_norm_scale)
    single_blocks_12_tensoritem_5_output = tensor_item(single_blocks_12_transpose_out, single_blocks_12_tensoritem_5_index)
    single_blocks_12_model_model_xq_ = reshape(single_blocks_12_norm_query_norm_multiply_1_output, single_blocks_12_model_model_totuple_0_output)
    single_blocks_12_model_model_xk_ = reshape(single_blocks_12_norm_key_norm_multiply_1_output, single_blocks_12_model_model_totuple_1_output)
    single_blocks_12_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_12_model_model_tensoritem_0_index)
    single_blocks_12_model_model_tensoritem_1_output = tensor_item(single_blocks_12_model_model_xq_, single_blocks_12_model_model_tensoritem_1_index)
    single_blocks_12_model_model_multiply_0_output = multiplication(single_blocks_12_model_model_tensoritem_0_output, single_blocks_12_model_model_tensoritem_1_output)
    single_blocks_12_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_12_model_model_tensoritem_2_index)
    single_blocks_12_model_model_tensoritem_3_output = tensor_item(single_blocks_12_model_model_xq_, single_blocks_12_model_model_tensoritem_3_index)
    single_blocks_12_model_model_multiply_1_output = multiplication(single_blocks_12_model_model_tensoritem_2_output, single_blocks_12_model_model_tensoritem_3_output)
    single_blocks_12_model_model_add_0_output = add(single_blocks_12_model_model_multiply_0_output, single_blocks_12_model_model_multiply_1_output)
    single_blocks_12_model_q_out = reshape(single_blocks_12_model_model_add_0_output, single_blocks_12_model_model_shape_0_output)
    single_blocks_12_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_12_model_model_tensoritem_4_index)
    single_blocks_12_model_model_tensoritem_5_output = tensor_item(single_blocks_12_model_model_xk_, single_blocks_12_model_model_tensoritem_5_index)
    single_blocks_12_model_model_multiply_2_output = multiplication(single_blocks_12_model_model_tensoritem_4_output, single_blocks_12_model_model_tensoritem_5_output)
    single_blocks_12_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_12_model_model_tensoritem_6_index)
    single_blocks_12_model_model_tensoritem_7_output = tensor_item(single_blocks_12_model_model_xk_, single_blocks_12_model_model_tensoritem_7_index)
    single_blocks_12_model_model_multiply_3_output = multiplication(single_blocks_12_model_model_tensoritem_6_output, single_blocks_12_model_model_tensoritem_7_output)
    single_blocks_12_model_model_add_1_output = add(single_blocks_12_model_model_multiply_2_output, single_blocks_12_model_model_multiply_3_output)
    single_blocks_12_model_k_out = reshape(single_blocks_12_model_model_add_1_output, single_blocks_12_model_model_shape_1_output)
    single_blocks_12_model_context = scaled_dot_product_attention(single_blocks_12_model_q_out, single_blocks_12_model_k_out, single_blocks_12_tensoritem_5_output, single_blocks_12_model_scaleddotproduct_attn_mask)
    single_blocks_12_model_transpose_output = transpose(single_blocks_12_model_context, single_blocks_12_model_transpose_axes)
    single_blocks_12_attn = reshape(single_blocks_12_model_transpose_output, single_blocks_12_model_totuple_output)
    single_blocks_12_tensoritem_6_output = tensor_item(single_blocks_12_lin1_out, single_blocks_12_tensoritem_6_index)
    single_blocks_12_mlp_act = gelu(single_blocks_12_tensoritem_6_output, single_blocks_12_gelu_approximate)
    single_blocks_12_concat_out = concat(single_blocks_12_attn, single_blocks_12_mlp_act, axis=single_blocks_12_concat_axis)
    single_blocks_12_linear2_transpose_output = transpose(single_blocks_12_linear2_weight, single_blocks_12_linear2_transpose_axes)
    single_blocks_12_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_12_concat_out, single_blocks_12_linear2_transpose_output)
    single_blocks_12_lin2_out = add(single_blocks_12_linear2_matrixmultiply_output, single_blocks_12_linear2_bias)
    single_blocks_12_tensoritem_7_output = tensor_item(single_blocks_12_modulation_split_output, single_blocks_12_tensoritem_7_index)
    single_blocks_12_multiply_1_output = multiplication(single_blocks_12_tensoritem_7_output, single_blocks_12_lin2_out)
    single_blocks_12_add_2_output = add(single_blocks_11_add_2_output, single_blocks_12_multiply_1_output)
    single_blocks_13_modulation_silu_minus = minus(vec)
    single_blocks_13_modulation_silu_exp = exp(single_blocks_13_modulation_silu_minus)
    single_blocks_13_modulation_silu_add = add(single_blocks_13_modulation_silu_add_left, single_blocks_13_modulation_silu_exp)
    single_blocks_13_modulation_silu_output = divide(vec, single_blocks_13_modulation_silu_add)
    single_blocks_13_modulation_lin_transpose_output = transpose(single_blocks_13_modulation_lin_weight, single_blocks_13_modulation_lin_transpose_axes)
    single_blocks_13_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_13_modulation_silu_output, single_blocks_13_modulation_lin_transpose_output)
    single_blocks_13_modulation_lin_out = add(single_blocks_13_modulation_lin_matrixmultiply_output, single_blocks_13_modulation_lin_bias)
    single_blocks_13_modulation_tensoritem_output = tensor_item(single_blocks_13_modulation_lin_out, single_blocks_13_modulation_tensoritem_index)
    single_blocks_13_modulation_split_output = split(single_blocks_13_modulation_tensoritem_output, single_blocks_13_modulation_split_split_size, single_blocks_13_modulation_split_axis)
    single_blocks_13_pre_norm_mean_output = reduce_mean(single_blocks_12_add_2_output, axis=single_blocks_13_pre_norm_mean_axis, keepdim=single_blocks_13_pre_norm_mean_keepdim)
    single_blocks_13_pre_norm_subtract_output = subtract(single_blocks_12_add_2_output, single_blocks_13_pre_norm_mean_output)
    single_blocks_13_pre_norm_variance_output = variance(single_blocks_12_add_2_output, axis=single_blocks_13_pre_norm_variance_axis, keepdim=single_blocks_13_pre_norm_variance_keepdim, correction=single_blocks_13_pre_norm_variance_correction)
    single_blocks_13_pre_norm_add_output = add(single_blocks_13_pre_norm_variance_output, single_blocks_13_pre_norm_add_right)
    single_blocks_13_pre_norm_sqrt_output = sqrt(single_blocks_13_pre_norm_add_output)
    single_blocks_13_pre_norm_divide_output = divide(single_blocks_13_pre_norm_subtract_output, single_blocks_13_pre_norm_sqrt_output)
    single_blocks_13_tensoritem_0_output = tensor_item(single_blocks_13_modulation_split_output, single_blocks_13_tensoritem_0_index)
    single_blocks_13_add_0_output = add(single_blocks_13_add_0_left, single_blocks_13_tensoritem_0_output)
    single_blocks_13_multiply_0_output = multiplication(single_blocks_13_add_0_output, single_blocks_13_pre_norm_divide_output)
    single_blocks_13_tensoritem_1_output = tensor_item(single_blocks_13_modulation_split_output, single_blocks_13_tensoritem_1_index)
    single_blocks_13_add_1_output = add(single_blocks_13_multiply_0_output, single_blocks_13_tensoritem_1_output)
    single_blocks_13_linear1_transpose_output = transpose(single_blocks_13_linear1_weight, single_blocks_13_linear1_transpose_axes)
    single_blocks_13_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_13_add_1_output, single_blocks_13_linear1_transpose_output)
    single_blocks_13_lin1_out = add(single_blocks_13_linear1_matrixmultiply_output, single_blocks_13_linear1_bias)
    single_blocks_13_tensoritem_2_output = tensor_item(single_blocks_13_lin1_out, single_blocks_13_tensoritem_2_index)
    single_blocks_13_reshape_output = reshape(single_blocks_13_tensoritem_2_output, single_blocks_13_totuple_output)
    single_blocks_13_transpose_out = transpose(single_blocks_13_reshape_output, single_blocks_13_transpose_axes)
    single_blocks_13_tensoritem_3_output = tensor_item(single_blocks_13_transpose_out, single_blocks_13_tensoritem_3_index)
    single_blocks_13_tensoritem_4_output = tensor_item(single_blocks_13_transpose_out, single_blocks_13_tensoritem_4_index)
    single_blocks_13_norm_query_norm_power_output = power(single_blocks_13_tensoritem_3_output, single_blocks_13_norm_query_norm_power_exponent)
    single_blocks_13_norm_query_norm_mean_output = reduce_mean(single_blocks_13_norm_query_norm_power_output, axis=single_blocks_13_norm_query_norm_mean_axis, keepdim=single_blocks_13_norm_query_norm_mean_keepdim)
    single_blocks_13_norm_query_norm_add_output = add(single_blocks_13_norm_query_norm_mean_output, single_blocks_13_norm_query_norm_add_right)
    single_blocks_13_norm_query_norm_sqrt_output = sqrt(single_blocks_13_norm_query_norm_add_output)
    single_blocks_13_norm_query_norm_divide_output = divide(single_blocks_13_norm_query_norm_divide_numerator, single_blocks_13_norm_query_norm_sqrt_output)
    single_blocks_13_norm_query_norm_multiply_0_output = multiplication(single_blocks_13_tensoritem_3_output, single_blocks_13_norm_query_norm_divide_output)
    single_blocks_13_norm_query_norm_multiply_1_output = multiplication(single_blocks_13_norm_query_norm_multiply_0_output, single_blocks_13_norm_query_norm_scale)
    single_blocks_13_norm_key_norm_power_output = power(single_blocks_13_tensoritem_4_output, single_blocks_13_norm_key_norm_power_exponent)
    single_blocks_13_norm_key_norm_mean_output = reduce_mean(single_blocks_13_norm_key_norm_power_output, axis=single_blocks_13_norm_key_norm_mean_axis, keepdim=single_blocks_13_norm_key_norm_mean_keepdim)
    single_blocks_13_norm_key_norm_add_output = add(single_blocks_13_norm_key_norm_mean_output, single_blocks_13_norm_key_norm_add_right)
    single_blocks_13_norm_key_norm_sqrt_output = sqrt(single_blocks_13_norm_key_norm_add_output)
    single_blocks_13_norm_key_norm_divide_output = divide(single_blocks_13_norm_key_norm_divide_numerator, single_blocks_13_norm_key_norm_sqrt_output)
    single_blocks_13_norm_key_norm_multiply_0_output = multiplication(single_blocks_13_tensoritem_4_output, single_blocks_13_norm_key_norm_divide_output)
    single_blocks_13_norm_key_norm_multiply_1_output = multiplication(single_blocks_13_norm_key_norm_multiply_0_output, single_blocks_13_norm_key_norm_scale)
    single_blocks_13_tensoritem_5_output = tensor_item(single_blocks_13_transpose_out, single_blocks_13_tensoritem_5_index)
    single_blocks_13_model_model_xq_ = reshape(single_blocks_13_norm_query_norm_multiply_1_output, single_blocks_13_model_model_totuple_0_output)
    single_blocks_13_model_model_xk_ = reshape(single_blocks_13_norm_key_norm_multiply_1_output, single_blocks_13_model_model_totuple_1_output)
    single_blocks_13_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_13_model_model_tensoritem_0_index)
    single_blocks_13_model_model_tensoritem_1_output = tensor_item(single_blocks_13_model_model_xq_, single_blocks_13_model_model_tensoritem_1_index)
    single_blocks_13_model_model_multiply_0_output = multiplication(single_blocks_13_model_model_tensoritem_0_output, single_blocks_13_model_model_tensoritem_1_output)
    single_blocks_13_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_13_model_model_tensoritem_2_index)
    single_blocks_13_model_model_tensoritem_3_output = tensor_item(single_blocks_13_model_model_xq_, single_blocks_13_model_model_tensoritem_3_index)
    single_blocks_13_model_model_multiply_1_output = multiplication(single_blocks_13_model_model_tensoritem_2_output, single_blocks_13_model_model_tensoritem_3_output)
    single_blocks_13_model_model_add_0_output = add(single_blocks_13_model_model_multiply_0_output, single_blocks_13_model_model_multiply_1_output)
    single_blocks_13_model_q_out = reshape(single_blocks_13_model_model_add_0_output, single_blocks_13_model_model_shape_0_output)
    single_blocks_13_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_13_model_model_tensoritem_4_index)
    single_blocks_13_model_model_tensoritem_5_output = tensor_item(single_blocks_13_model_model_xk_, single_blocks_13_model_model_tensoritem_5_index)
    single_blocks_13_model_model_multiply_2_output = multiplication(single_blocks_13_model_model_tensoritem_4_output, single_blocks_13_model_model_tensoritem_5_output)
    single_blocks_13_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_13_model_model_tensoritem_6_index)
    single_blocks_13_model_model_tensoritem_7_output = tensor_item(single_blocks_13_model_model_xk_, single_blocks_13_model_model_tensoritem_7_index)
    single_blocks_13_model_model_multiply_3_output = multiplication(single_blocks_13_model_model_tensoritem_6_output, single_blocks_13_model_model_tensoritem_7_output)
    single_blocks_13_model_model_add_1_output = add(single_blocks_13_model_model_multiply_2_output, single_blocks_13_model_model_multiply_3_output)
    single_blocks_13_model_k_out = reshape(single_blocks_13_model_model_add_1_output, single_blocks_13_model_model_shape_1_output)
    single_blocks_13_model_context = scaled_dot_product_attention(single_blocks_13_model_q_out, single_blocks_13_model_k_out, single_blocks_13_tensoritem_5_output, single_blocks_13_model_scaleddotproduct_attn_mask)
    single_blocks_13_model_transpose_output = transpose(single_blocks_13_model_context, single_blocks_13_model_transpose_axes)
    single_blocks_13_attn = reshape(single_blocks_13_model_transpose_output, single_blocks_13_model_totuple_output)
    single_blocks_13_tensoritem_6_output = tensor_item(single_blocks_13_lin1_out, single_blocks_13_tensoritem_6_index)
    single_blocks_13_mlp_act = gelu(single_blocks_13_tensoritem_6_output, single_blocks_13_gelu_approximate)
    single_blocks_13_concat_out = concat(single_blocks_13_attn, single_blocks_13_mlp_act, axis=single_blocks_13_concat_axis)
    single_blocks_13_linear2_transpose_output = transpose(single_blocks_13_linear2_weight, single_blocks_13_linear2_transpose_axes)
    single_blocks_13_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_13_concat_out, single_blocks_13_linear2_transpose_output)
    single_blocks_13_lin2_out = add(single_blocks_13_linear2_matrixmultiply_output, single_blocks_13_linear2_bias)
    single_blocks_13_tensoritem_7_output = tensor_item(single_blocks_13_modulation_split_output, single_blocks_13_tensoritem_7_index)
    single_blocks_13_multiply_1_output = multiplication(single_blocks_13_tensoritem_7_output, single_blocks_13_lin2_out)
    single_blocks_13_add_2_output = add(single_blocks_12_add_2_output, single_blocks_13_multiply_1_output)
    single_blocks_14_modulation_silu_minus = minus(vec)
    single_blocks_14_modulation_silu_exp = exp(single_blocks_14_modulation_silu_minus)
    single_blocks_14_modulation_silu_add = add(single_blocks_14_modulation_silu_add_left, single_blocks_14_modulation_silu_exp)
    single_blocks_14_modulation_silu_output = divide(vec, single_blocks_14_modulation_silu_add)
    single_blocks_14_modulation_lin_transpose_output = transpose(single_blocks_14_modulation_lin_weight, single_blocks_14_modulation_lin_transpose_axes)
    single_blocks_14_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_14_modulation_silu_output, single_blocks_14_modulation_lin_transpose_output)
    single_blocks_14_modulation_lin_out = add(single_blocks_14_modulation_lin_matrixmultiply_output, single_blocks_14_modulation_lin_bias)
    single_blocks_14_modulation_tensoritem_output = tensor_item(single_blocks_14_modulation_lin_out, single_blocks_14_modulation_tensoritem_index)
    single_blocks_14_modulation_split_output = split(single_blocks_14_modulation_tensoritem_output, single_blocks_14_modulation_split_split_size, single_blocks_14_modulation_split_axis)
    single_blocks_14_pre_norm_mean_output = reduce_mean(single_blocks_13_add_2_output, axis=single_blocks_14_pre_norm_mean_axis, keepdim=single_blocks_14_pre_norm_mean_keepdim)
    single_blocks_14_pre_norm_subtract_output = subtract(single_blocks_13_add_2_output, single_blocks_14_pre_norm_mean_output)
    single_blocks_14_pre_norm_variance_output = variance(single_blocks_13_add_2_output, axis=single_blocks_14_pre_norm_variance_axis, keepdim=single_blocks_14_pre_norm_variance_keepdim, correction=single_blocks_14_pre_norm_variance_correction)
    single_blocks_14_pre_norm_add_output = add(single_blocks_14_pre_norm_variance_output, single_blocks_14_pre_norm_add_right)
    single_blocks_14_pre_norm_sqrt_output = sqrt(single_blocks_14_pre_norm_add_output)
    single_blocks_14_pre_norm_divide_output = divide(single_blocks_14_pre_norm_subtract_output, single_blocks_14_pre_norm_sqrt_output)
    single_blocks_14_tensoritem_0_output = tensor_item(single_blocks_14_modulation_split_output, single_blocks_14_tensoritem_0_index)
    single_blocks_14_add_0_output = add(single_blocks_14_add_0_left, single_blocks_14_tensoritem_0_output)
    single_blocks_14_multiply_0_output = multiplication(single_blocks_14_add_0_output, single_blocks_14_pre_norm_divide_output)
    single_blocks_14_tensoritem_1_output = tensor_item(single_blocks_14_modulation_split_output, single_blocks_14_tensoritem_1_index)
    single_blocks_14_add_1_output = add(single_blocks_14_multiply_0_output, single_blocks_14_tensoritem_1_output)
    single_blocks_14_linear1_transpose_output = transpose(single_blocks_14_linear1_weight, single_blocks_14_linear1_transpose_axes)
    single_blocks_14_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_14_add_1_output, single_blocks_14_linear1_transpose_output)
    single_blocks_14_lin1_out = add(single_blocks_14_linear1_matrixmultiply_output, single_blocks_14_linear1_bias)
    single_blocks_14_tensoritem_2_output = tensor_item(single_blocks_14_lin1_out, single_blocks_14_tensoritem_2_index)
    single_blocks_14_reshape_output = reshape(single_blocks_14_tensoritem_2_output, single_blocks_14_totuple_output)
    single_blocks_14_transpose_out = transpose(single_blocks_14_reshape_output, single_blocks_14_transpose_axes)
    single_blocks_14_tensoritem_3_output = tensor_item(single_blocks_14_transpose_out, single_blocks_14_tensoritem_3_index)
    single_blocks_14_tensoritem_4_output = tensor_item(single_blocks_14_transpose_out, single_blocks_14_tensoritem_4_index)
    single_blocks_14_norm_query_norm_power_output = power(single_blocks_14_tensoritem_3_output, single_blocks_14_norm_query_norm_power_exponent)
    single_blocks_14_norm_query_norm_mean_output = reduce_mean(single_blocks_14_norm_query_norm_power_output, axis=single_blocks_14_norm_query_norm_mean_axis, keepdim=single_blocks_14_norm_query_norm_mean_keepdim)
    single_blocks_14_norm_query_norm_add_output = add(single_blocks_14_norm_query_norm_mean_output, single_blocks_14_norm_query_norm_add_right)
    single_blocks_14_norm_query_norm_sqrt_output = sqrt(single_blocks_14_norm_query_norm_add_output)
    single_blocks_14_norm_query_norm_divide_output = divide(single_blocks_14_norm_query_norm_divide_numerator, single_blocks_14_norm_query_norm_sqrt_output)
    single_blocks_14_norm_query_norm_multiply_0_output = multiplication(single_blocks_14_tensoritem_3_output, single_blocks_14_norm_query_norm_divide_output)
    single_blocks_14_norm_query_norm_multiply_1_output = multiplication(single_blocks_14_norm_query_norm_multiply_0_output, single_blocks_14_norm_query_norm_scale)
    single_blocks_14_norm_key_norm_power_output = power(single_blocks_14_tensoritem_4_output, single_blocks_14_norm_key_norm_power_exponent)
    single_blocks_14_norm_key_norm_mean_output = reduce_mean(single_blocks_14_norm_key_norm_power_output, axis=single_blocks_14_norm_key_norm_mean_axis, keepdim=single_blocks_14_norm_key_norm_mean_keepdim)
    single_blocks_14_norm_key_norm_add_output = add(single_blocks_14_norm_key_norm_mean_output, single_blocks_14_norm_key_norm_add_right)
    single_blocks_14_norm_key_norm_sqrt_output = sqrt(single_blocks_14_norm_key_norm_add_output)
    single_blocks_14_norm_key_norm_divide_output = divide(single_blocks_14_norm_key_norm_divide_numerator, single_blocks_14_norm_key_norm_sqrt_output)
    single_blocks_14_norm_key_norm_multiply_0_output = multiplication(single_blocks_14_tensoritem_4_output, single_blocks_14_norm_key_norm_divide_output)
    single_blocks_14_norm_key_norm_multiply_1_output = multiplication(single_blocks_14_norm_key_norm_multiply_0_output, single_blocks_14_norm_key_norm_scale)
    single_blocks_14_tensoritem_5_output = tensor_item(single_blocks_14_transpose_out, single_blocks_14_tensoritem_5_index)
    single_blocks_14_model_model_xq_ = reshape(single_blocks_14_norm_query_norm_multiply_1_output, single_blocks_14_model_model_totuple_0_output)
    single_blocks_14_model_model_xk_ = reshape(single_blocks_14_norm_key_norm_multiply_1_output, single_blocks_14_model_model_totuple_1_output)
    single_blocks_14_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_14_model_model_tensoritem_0_index)
    single_blocks_14_model_model_tensoritem_1_output = tensor_item(single_blocks_14_model_model_xq_, single_blocks_14_model_model_tensoritem_1_index)
    single_blocks_14_model_model_multiply_0_output = multiplication(single_blocks_14_model_model_tensoritem_0_output, single_blocks_14_model_model_tensoritem_1_output)
    single_blocks_14_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_14_model_model_tensoritem_2_index)
    single_blocks_14_model_model_tensoritem_3_output = tensor_item(single_blocks_14_model_model_xq_, single_blocks_14_model_model_tensoritem_3_index)
    single_blocks_14_model_model_multiply_1_output = multiplication(single_blocks_14_model_model_tensoritem_2_output, single_blocks_14_model_model_tensoritem_3_output)
    single_blocks_14_model_model_add_0_output = add(single_blocks_14_model_model_multiply_0_output, single_blocks_14_model_model_multiply_1_output)
    single_blocks_14_model_q_out = reshape(single_blocks_14_model_model_add_0_output, single_blocks_14_model_model_shape_0_output)
    single_blocks_14_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_14_model_model_tensoritem_4_index)
    single_blocks_14_model_model_tensoritem_5_output = tensor_item(single_blocks_14_model_model_xk_, single_blocks_14_model_model_tensoritem_5_index)
    single_blocks_14_model_model_multiply_2_output = multiplication(single_blocks_14_model_model_tensoritem_4_output, single_blocks_14_model_model_tensoritem_5_output)
    single_blocks_14_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_14_model_model_tensoritem_6_index)
    single_blocks_14_model_model_tensoritem_7_output = tensor_item(single_blocks_14_model_model_xk_, single_blocks_14_model_model_tensoritem_7_index)
    single_blocks_14_model_model_multiply_3_output = multiplication(single_blocks_14_model_model_tensoritem_6_output, single_blocks_14_model_model_tensoritem_7_output)
    single_blocks_14_model_model_add_1_output = add(single_blocks_14_model_model_multiply_2_output, single_blocks_14_model_model_multiply_3_output)
    single_blocks_14_model_k_out = reshape(single_blocks_14_model_model_add_1_output, single_blocks_14_model_model_shape_1_output)
    single_blocks_14_model_context = scaled_dot_product_attention(single_blocks_14_model_q_out, single_blocks_14_model_k_out, single_blocks_14_tensoritem_5_output, single_blocks_14_model_scaleddotproduct_attn_mask)
    single_blocks_14_model_transpose_output = transpose(single_blocks_14_model_context, single_blocks_14_model_transpose_axes)
    single_blocks_14_attn = reshape(single_blocks_14_model_transpose_output, single_blocks_14_model_totuple_output)
    single_blocks_14_tensoritem_6_output = tensor_item(single_blocks_14_lin1_out, single_blocks_14_tensoritem_6_index)
    single_blocks_14_mlp_act = gelu(single_blocks_14_tensoritem_6_output, single_blocks_14_gelu_approximate)
    single_blocks_14_concat_out = concat(single_blocks_14_attn, single_blocks_14_mlp_act, axis=single_blocks_14_concat_axis)
    single_blocks_14_linear2_transpose_output = transpose(single_blocks_14_linear2_weight, single_blocks_14_linear2_transpose_axes)
    single_blocks_14_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_14_concat_out, single_blocks_14_linear2_transpose_output)
    single_blocks_14_lin2_out = add(single_blocks_14_linear2_matrixmultiply_output, single_blocks_14_linear2_bias)
    single_blocks_14_tensoritem_7_output = tensor_item(single_blocks_14_modulation_split_output, single_blocks_14_tensoritem_7_index)
    single_blocks_14_multiply_1_output = multiplication(single_blocks_14_tensoritem_7_output, single_blocks_14_lin2_out)
    single_blocks_14_add_2_output = add(single_blocks_13_add_2_output, single_blocks_14_multiply_1_output)
    single_blocks_15_modulation_silu_minus = minus(vec)
    single_blocks_15_modulation_silu_exp = exp(single_blocks_15_modulation_silu_minus)
    single_blocks_15_modulation_silu_add = add(single_blocks_15_modulation_silu_add_left, single_blocks_15_modulation_silu_exp)
    single_blocks_15_modulation_silu_output = divide(vec, single_blocks_15_modulation_silu_add)
    single_blocks_15_modulation_lin_transpose_output = transpose(single_blocks_15_modulation_lin_weight, single_blocks_15_modulation_lin_transpose_axes)
    single_blocks_15_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_15_modulation_silu_output, single_blocks_15_modulation_lin_transpose_output)
    single_blocks_15_modulation_lin_out = add(single_blocks_15_modulation_lin_matrixmultiply_output, single_blocks_15_modulation_lin_bias)
    single_blocks_15_modulation_tensoritem_output = tensor_item(single_blocks_15_modulation_lin_out, single_blocks_15_modulation_tensoritem_index)
    single_blocks_15_modulation_split_output = split(single_blocks_15_modulation_tensoritem_output, single_blocks_15_modulation_split_split_size, single_blocks_15_modulation_split_axis)
    single_blocks_15_pre_norm_mean_output = reduce_mean(single_blocks_14_add_2_output, axis=single_blocks_15_pre_norm_mean_axis, keepdim=single_blocks_15_pre_norm_mean_keepdim)
    single_blocks_15_pre_norm_subtract_output = subtract(single_blocks_14_add_2_output, single_blocks_15_pre_norm_mean_output)
    single_blocks_15_pre_norm_variance_output = variance(single_blocks_14_add_2_output, axis=single_blocks_15_pre_norm_variance_axis, keepdim=single_blocks_15_pre_norm_variance_keepdim, correction=single_blocks_15_pre_norm_variance_correction)
    single_blocks_15_pre_norm_add_output = add(single_blocks_15_pre_norm_variance_output, single_blocks_15_pre_norm_add_right)
    single_blocks_15_pre_norm_sqrt_output = sqrt(single_blocks_15_pre_norm_add_output)
    single_blocks_15_pre_norm_divide_output = divide(single_blocks_15_pre_norm_subtract_output, single_blocks_15_pre_norm_sqrt_output)
    single_blocks_15_tensoritem_0_output = tensor_item(single_blocks_15_modulation_split_output, single_blocks_15_tensoritem_0_index)
    single_blocks_15_add_0_output = add(single_blocks_15_add_0_left, single_blocks_15_tensoritem_0_output)
    single_blocks_15_multiply_0_output = multiplication(single_blocks_15_add_0_output, single_blocks_15_pre_norm_divide_output)
    single_blocks_15_tensoritem_1_output = tensor_item(single_blocks_15_modulation_split_output, single_blocks_15_tensoritem_1_index)
    single_blocks_15_add_1_output = add(single_blocks_15_multiply_0_output, single_blocks_15_tensoritem_1_output)
    single_blocks_15_linear1_transpose_output = transpose(single_blocks_15_linear1_weight, single_blocks_15_linear1_transpose_axes)
    single_blocks_15_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_15_add_1_output, single_blocks_15_linear1_transpose_output)
    single_blocks_15_lin1_out = add(single_blocks_15_linear1_matrixmultiply_output, single_blocks_15_linear1_bias)
    single_blocks_15_tensoritem_2_output = tensor_item(single_blocks_15_lin1_out, single_blocks_15_tensoritem_2_index)
    single_blocks_15_reshape_output = reshape(single_blocks_15_tensoritem_2_output, single_blocks_15_totuple_output)
    single_blocks_15_transpose_out = transpose(single_blocks_15_reshape_output, single_blocks_15_transpose_axes)
    single_blocks_15_tensoritem_3_output = tensor_item(single_blocks_15_transpose_out, single_blocks_15_tensoritem_3_index)
    single_blocks_15_tensoritem_4_output = tensor_item(single_blocks_15_transpose_out, single_blocks_15_tensoritem_4_index)
    single_blocks_15_norm_query_norm_power_output = power(single_blocks_15_tensoritem_3_output, single_blocks_15_norm_query_norm_power_exponent)
    single_blocks_15_norm_query_norm_mean_output = reduce_mean(single_blocks_15_norm_query_norm_power_output, axis=single_blocks_15_norm_query_norm_mean_axis, keepdim=single_blocks_15_norm_query_norm_mean_keepdim)
    single_blocks_15_norm_query_norm_add_output = add(single_blocks_15_norm_query_norm_mean_output, single_blocks_15_norm_query_norm_add_right)
    single_blocks_15_norm_query_norm_sqrt_output = sqrt(single_blocks_15_norm_query_norm_add_output)
    single_blocks_15_norm_query_norm_divide_output = divide(single_blocks_15_norm_query_norm_divide_numerator, single_blocks_15_norm_query_norm_sqrt_output)
    single_blocks_15_norm_query_norm_multiply_0_output = multiplication(single_blocks_15_tensoritem_3_output, single_blocks_15_norm_query_norm_divide_output)
    single_blocks_15_norm_query_norm_multiply_1_output = multiplication(single_blocks_15_norm_query_norm_multiply_0_output, single_blocks_15_norm_query_norm_scale)
    single_blocks_15_norm_key_norm_power_output = power(single_blocks_15_tensoritem_4_output, single_blocks_15_norm_key_norm_power_exponent)
    single_blocks_15_norm_key_norm_mean_output = reduce_mean(single_blocks_15_norm_key_norm_power_output, axis=single_blocks_15_norm_key_norm_mean_axis, keepdim=single_blocks_15_norm_key_norm_mean_keepdim)
    single_blocks_15_norm_key_norm_add_output = add(single_blocks_15_norm_key_norm_mean_output, single_blocks_15_norm_key_norm_add_right)
    single_blocks_15_norm_key_norm_sqrt_output = sqrt(single_blocks_15_norm_key_norm_add_output)
    single_blocks_15_norm_key_norm_divide_output = divide(single_blocks_15_norm_key_norm_divide_numerator, single_blocks_15_norm_key_norm_sqrt_output)
    single_blocks_15_norm_key_norm_multiply_0_output = multiplication(single_blocks_15_tensoritem_4_output, single_blocks_15_norm_key_norm_divide_output)
    single_blocks_15_norm_key_norm_multiply_1_output = multiplication(single_blocks_15_norm_key_norm_multiply_0_output, single_blocks_15_norm_key_norm_scale)
    single_blocks_15_tensoritem_5_output = tensor_item(single_blocks_15_transpose_out, single_blocks_15_tensoritem_5_index)
    single_blocks_15_model_model_xq_ = reshape(single_blocks_15_norm_query_norm_multiply_1_output, single_blocks_15_model_model_totuple_0_output)
    single_blocks_15_model_model_xk_ = reshape(single_blocks_15_norm_key_norm_multiply_1_output, single_blocks_15_model_model_totuple_1_output)
    single_blocks_15_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_15_model_model_tensoritem_0_index)
    single_blocks_15_model_model_tensoritem_1_output = tensor_item(single_blocks_15_model_model_xq_, single_blocks_15_model_model_tensoritem_1_index)
    single_blocks_15_model_model_multiply_0_output = multiplication(single_blocks_15_model_model_tensoritem_0_output, single_blocks_15_model_model_tensoritem_1_output)
    single_blocks_15_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_15_model_model_tensoritem_2_index)
    single_blocks_15_model_model_tensoritem_3_output = tensor_item(single_blocks_15_model_model_xq_, single_blocks_15_model_model_tensoritem_3_index)
    single_blocks_15_model_model_multiply_1_output = multiplication(single_blocks_15_model_model_tensoritem_2_output, single_blocks_15_model_model_tensoritem_3_output)
    single_blocks_15_model_model_add_0_output = add(single_blocks_15_model_model_multiply_0_output, single_blocks_15_model_model_multiply_1_output)
    single_blocks_15_model_q_out = reshape(single_blocks_15_model_model_add_0_output, single_blocks_15_model_model_shape_0_output)
    single_blocks_15_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_15_model_model_tensoritem_4_index)
    single_blocks_15_model_model_tensoritem_5_output = tensor_item(single_blocks_15_model_model_xk_, single_blocks_15_model_model_tensoritem_5_index)
    single_blocks_15_model_model_multiply_2_output = multiplication(single_blocks_15_model_model_tensoritem_4_output, single_blocks_15_model_model_tensoritem_5_output)
    single_blocks_15_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_15_model_model_tensoritem_6_index)
    single_blocks_15_model_model_tensoritem_7_output = tensor_item(single_blocks_15_model_model_xk_, single_blocks_15_model_model_tensoritem_7_index)
    single_blocks_15_model_model_multiply_3_output = multiplication(single_blocks_15_model_model_tensoritem_6_output, single_blocks_15_model_model_tensoritem_7_output)
    single_blocks_15_model_model_add_1_output = add(single_blocks_15_model_model_multiply_2_output, single_blocks_15_model_model_multiply_3_output)
    single_blocks_15_model_k_out = reshape(single_blocks_15_model_model_add_1_output, single_blocks_15_model_model_shape_1_output)
    single_blocks_15_model_context = scaled_dot_product_attention(single_blocks_15_model_q_out, single_blocks_15_model_k_out, single_blocks_15_tensoritem_5_output, single_blocks_15_model_scaleddotproduct_attn_mask)
    single_blocks_15_model_transpose_output = transpose(single_blocks_15_model_context, single_blocks_15_model_transpose_axes)
    single_blocks_15_attn = reshape(single_blocks_15_model_transpose_output, single_blocks_15_model_totuple_output)
    single_blocks_15_tensoritem_6_output = tensor_item(single_blocks_15_lin1_out, single_blocks_15_tensoritem_6_index)
    single_blocks_15_mlp_act = gelu(single_blocks_15_tensoritem_6_output, single_blocks_15_gelu_approximate)
    single_blocks_15_concat_out = concat(single_blocks_15_attn, single_blocks_15_mlp_act, axis=single_blocks_15_concat_axis)
    single_blocks_15_linear2_transpose_output = transpose(single_blocks_15_linear2_weight, single_blocks_15_linear2_transpose_axes)
    single_blocks_15_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_15_concat_out, single_blocks_15_linear2_transpose_output)
    single_blocks_15_lin2_out = add(single_blocks_15_linear2_matrixmultiply_output, single_blocks_15_linear2_bias)
    single_blocks_15_tensoritem_7_output = tensor_item(single_blocks_15_modulation_split_output, single_blocks_15_tensoritem_7_index)
    single_blocks_15_multiply_1_output = multiplication(single_blocks_15_tensoritem_7_output, single_blocks_15_lin2_out)
    single_blocks_15_add_2_output = add(single_blocks_14_add_2_output, single_blocks_15_multiply_1_output)
    single_blocks_16_modulation_silu_minus = minus(vec)
    single_blocks_16_modulation_silu_exp = exp(single_blocks_16_modulation_silu_minus)
    single_blocks_16_modulation_silu_add = add(single_blocks_16_modulation_silu_add_left, single_blocks_16_modulation_silu_exp)
    single_blocks_16_modulation_silu_output = divide(vec, single_blocks_16_modulation_silu_add)
    single_blocks_16_modulation_lin_transpose_output = transpose(single_blocks_16_modulation_lin_weight, single_blocks_16_modulation_lin_transpose_axes)
    single_blocks_16_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_16_modulation_silu_output, single_blocks_16_modulation_lin_transpose_output)
    single_blocks_16_modulation_lin_out = add(single_blocks_16_modulation_lin_matrixmultiply_output, single_blocks_16_modulation_lin_bias)
    single_blocks_16_modulation_tensoritem_output = tensor_item(single_blocks_16_modulation_lin_out, single_blocks_16_modulation_tensoritem_index)
    single_blocks_16_modulation_split_output = split(single_blocks_16_modulation_tensoritem_output, single_blocks_16_modulation_split_split_size, single_blocks_16_modulation_split_axis)
    single_blocks_16_pre_norm_mean_output = reduce_mean(single_blocks_15_add_2_output, axis=single_blocks_16_pre_norm_mean_axis, keepdim=single_blocks_16_pre_norm_mean_keepdim)
    single_blocks_16_pre_norm_subtract_output = subtract(single_blocks_15_add_2_output, single_blocks_16_pre_norm_mean_output)
    single_blocks_16_pre_norm_variance_output = variance(single_blocks_15_add_2_output, axis=single_blocks_16_pre_norm_variance_axis, keepdim=single_blocks_16_pre_norm_variance_keepdim, correction=single_blocks_16_pre_norm_variance_correction)
    single_blocks_16_pre_norm_add_output = add(single_blocks_16_pre_norm_variance_output, single_blocks_16_pre_norm_add_right)
    single_blocks_16_pre_norm_sqrt_output = sqrt(single_blocks_16_pre_norm_add_output)
    single_blocks_16_pre_norm_divide_output = divide(single_blocks_16_pre_norm_subtract_output, single_blocks_16_pre_norm_sqrt_output)
    single_blocks_16_tensoritem_0_output = tensor_item(single_blocks_16_modulation_split_output, single_blocks_16_tensoritem_0_index)
    single_blocks_16_add_0_output = add(single_blocks_16_add_0_left, single_blocks_16_tensoritem_0_output)
    single_blocks_16_multiply_0_output = multiplication(single_blocks_16_add_0_output, single_blocks_16_pre_norm_divide_output)
    single_blocks_16_tensoritem_1_output = tensor_item(single_blocks_16_modulation_split_output, single_blocks_16_tensoritem_1_index)
    single_blocks_16_add_1_output = add(single_blocks_16_multiply_0_output, single_blocks_16_tensoritem_1_output)
    single_blocks_16_linear1_transpose_output = transpose(single_blocks_16_linear1_weight, single_blocks_16_linear1_transpose_axes)
    single_blocks_16_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_16_add_1_output, single_blocks_16_linear1_transpose_output)
    single_blocks_16_lin1_out = add(single_blocks_16_linear1_matrixmultiply_output, single_blocks_16_linear1_bias)
    single_blocks_16_tensoritem_2_output = tensor_item(single_blocks_16_lin1_out, single_blocks_16_tensoritem_2_index)
    single_blocks_16_reshape_output = reshape(single_blocks_16_tensoritem_2_output, single_blocks_16_totuple_output)
    single_blocks_16_transpose_out = transpose(single_blocks_16_reshape_output, single_blocks_16_transpose_axes)
    single_blocks_16_tensoritem_3_output = tensor_item(single_blocks_16_transpose_out, single_blocks_16_tensoritem_3_index)
    single_blocks_16_tensoritem_4_output = tensor_item(single_blocks_16_transpose_out, single_blocks_16_tensoritem_4_index)
    single_blocks_16_norm_query_norm_power_output = power(single_blocks_16_tensoritem_3_output, single_blocks_16_norm_query_norm_power_exponent)
    single_blocks_16_norm_query_norm_mean_output = reduce_mean(single_blocks_16_norm_query_norm_power_output, axis=single_blocks_16_norm_query_norm_mean_axis, keepdim=single_blocks_16_norm_query_norm_mean_keepdim)
    single_blocks_16_norm_query_norm_add_output = add(single_blocks_16_norm_query_norm_mean_output, single_blocks_16_norm_query_norm_add_right)
    single_blocks_16_norm_query_norm_sqrt_output = sqrt(single_blocks_16_norm_query_norm_add_output)
    single_blocks_16_norm_query_norm_divide_output = divide(single_blocks_16_norm_query_norm_divide_numerator, single_blocks_16_norm_query_norm_sqrt_output)
    single_blocks_16_norm_query_norm_multiply_0_output = multiplication(single_blocks_16_tensoritem_3_output, single_blocks_16_norm_query_norm_divide_output)
    single_blocks_16_norm_query_norm_multiply_1_output = multiplication(single_blocks_16_norm_query_norm_multiply_0_output, single_blocks_16_norm_query_norm_scale)
    single_blocks_16_norm_key_norm_power_output = power(single_blocks_16_tensoritem_4_output, single_blocks_16_norm_key_norm_power_exponent)
    single_blocks_16_norm_key_norm_mean_output = reduce_mean(single_blocks_16_norm_key_norm_power_output, axis=single_blocks_16_norm_key_norm_mean_axis, keepdim=single_blocks_16_norm_key_norm_mean_keepdim)
    single_blocks_16_norm_key_norm_add_output = add(single_blocks_16_norm_key_norm_mean_output, single_blocks_16_norm_key_norm_add_right)
    single_blocks_16_norm_key_norm_sqrt_output = sqrt(single_blocks_16_norm_key_norm_add_output)
    single_blocks_16_norm_key_norm_divide_output = divide(single_blocks_16_norm_key_norm_divide_numerator, single_blocks_16_norm_key_norm_sqrt_output)
    single_blocks_16_norm_key_norm_multiply_0_output = multiplication(single_blocks_16_tensoritem_4_output, single_blocks_16_norm_key_norm_divide_output)
    single_blocks_16_norm_key_norm_multiply_1_output = multiplication(single_blocks_16_norm_key_norm_multiply_0_output, single_blocks_16_norm_key_norm_scale)
    single_blocks_16_tensoritem_5_output = tensor_item(single_blocks_16_transpose_out, single_blocks_16_tensoritem_5_index)
    single_blocks_16_model_model_xq_ = reshape(single_blocks_16_norm_query_norm_multiply_1_output, single_blocks_16_model_model_totuple_0_output)
    single_blocks_16_model_model_xk_ = reshape(single_blocks_16_norm_key_norm_multiply_1_output, single_blocks_16_model_model_totuple_1_output)
    single_blocks_16_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_16_model_model_tensoritem_0_index)
    single_blocks_16_model_model_tensoritem_1_output = tensor_item(single_blocks_16_model_model_xq_, single_blocks_16_model_model_tensoritem_1_index)
    single_blocks_16_model_model_multiply_0_output = multiplication(single_blocks_16_model_model_tensoritem_0_output, single_blocks_16_model_model_tensoritem_1_output)
    single_blocks_16_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_16_model_model_tensoritem_2_index)
    single_blocks_16_model_model_tensoritem_3_output = tensor_item(single_blocks_16_model_model_xq_, single_blocks_16_model_model_tensoritem_3_index)
    single_blocks_16_model_model_multiply_1_output = multiplication(single_blocks_16_model_model_tensoritem_2_output, single_blocks_16_model_model_tensoritem_3_output)
    single_blocks_16_model_model_add_0_output = add(single_blocks_16_model_model_multiply_0_output, single_blocks_16_model_model_multiply_1_output)
    single_blocks_16_model_q_out = reshape(single_blocks_16_model_model_add_0_output, single_blocks_16_model_model_shape_0_output)
    single_blocks_16_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_16_model_model_tensoritem_4_index)
    single_blocks_16_model_model_tensoritem_5_output = tensor_item(single_blocks_16_model_model_xk_, single_blocks_16_model_model_tensoritem_5_index)
    single_blocks_16_model_model_multiply_2_output = multiplication(single_blocks_16_model_model_tensoritem_4_output, single_blocks_16_model_model_tensoritem_5_output)
    single_blocks_16_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_16_model_model_tensoritem_6_index)
    single_blocks_16_model_model_tensoritem_7_output = tensor_item(single_blocks_16_model_model_xk_, single_blocks_16_model_model_tensoritem_7_index)
    single_blocks_16_model_model_multiply_3_output = multiplication(single_blocks_16_model_model_tensoritem_6_output, single_blocks_16_model_model_tensoritem_7_output)
    single_blocks_16_model_model_add_1_output = add(single_blocks_16_model_model_multiply_2_output, single_blocks_16_model_model_multiply_3_output)
    single_blocks_16_model_k_out = reshape(single_blocks_16_model_model_add_1_output, single_blocks_16_model_model_shape_1_output)
    single_blocks_16_model_context = scaled_dot_product_attention(single_blocks_16_model_q_out, single_blocks_16_model_k_out, single_blocks_16_tensoritem_5_output, single_blocks_16_model_scaleddotproduct_attn_mask)
    single_blocks_16_model_transpose_output = transpose(single_blocks_16_model_context, single_blocks_16_model_transpose_axes)
    single_blocks_16_attn = reshape(single_blocks_16_model_transpose_output, single_blocks_16_model_totuple_output)
    single_blocks_16_tensoritem_6_output = tensor_item(single_blocks_16_lin1_out, single_blocks_16_tensoritem_6_index)
    single_blocks_16_mlp_act = gelu(single_blocks_16_tensoritem_6_output, single_blocks_16_gelu_approximate)
    single_blocks_16_concat_out = concat(single_blocks_16_attn, single_blocks_16_mlp_act, axis=single_blocks_16_concat_axis)
    single_blocks_16_linear2_transpose_output = transpose(single_blocks_16_linear2_weight, single_blocks_16_linear2_transpose_axes)
    single_blocks_16_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_16_concat_out, single_blocks_16_linear2_transpose_output)
    single_blocks_16_lin2_out = add(single_blocks_16_linear2_matrixmultiply_output, single_blocks_16_linear2_bias)
    single_blocks_16_tensoritem_7_output = tensor_item(single_blocks_16_modulation_split_output, single_blocks_16_tensoritem_7_index)
    single_blocks_16_multiply_1_output = multiplication(single_blocks_16_tensoritem_7_output, single_blocks_16_lin2_out)
    single_blocks_16_add_2_output = add(single_blocks_15_add_2_output, single_blocks_16_multiply_1_output)
    single_blocks_17_modulation_silu_minus = minus(vec)
    single_blocks_17_modulation_silu_exp = exp(single_blocks_17_modulation_silu_minus)
    single_blocks_17_modulation_silu_add = add(single_blocks_17_modulation_silu_add_left, single_blocks_17_modulation_silu_exp)
    single_blocks_17_modulation_silu_output = divide(vec, single_blocks_17_modulation_silu_add)
    single_blocks_17_modulation_lin_transpose_output = transpose(single_blocks_17_modulation_lin_weight, single_blocks_17_modulation_lin_transpose_axes)
    single_blocks_17_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_17_modulation_silu_output, single_blocks_17_modulation_lin_transpose_output)
    single_blocks_17_modulation_lin_out = add(single_blocks_17_modulation_lin_matrixmultiply_output, single_blocks_17_modulation_lin_bias)
    single_blocks_17_modulation_tensoritem_output = tensor_item(single_blocks_17_modulation_lin_out, single_blocks_17_modulation_tensoritem_index)
    single_blocks_17_modulation_split_output = split(single_blocks_17_modulation_tensoritem_output, single_blocks_17_modulation_split_split_size, single_blocks_17_modulation_split_axis)
    single_blocks_17_pre_norm_mean_output = reduce_mean(single_blocks_16_add_2_output, axis=single_blocks_17_pre_norm_mean_axis, keepdim=single_blocks_17_pre_norm_mean_keepdim)
    single_blocks_17_pre_norm_subtract_output = subtract(single_blocks_16_add_2_output, single_blocks_17_pre_norm_mean_output)
    single_blocks_17_pre_norm_variance_output = variance(single_blocks_16_add_2_output, axis=single_blocks_17_pre_norm_variance_axis, keepdim=single_blocks_17_pre_norm_variance_keepdim, correction=single_blocks_17_pre_norm_variance_correction)
    single_blocks_17_pre_norm_add_output = add(single_blocks_17_pre_norm_variance_output, single_blocks_17_pre_norm_add_right)
    single_blocks_17_pre_norm_sqrt_output = sqrt(single_blocks_17_pre_norm_add_output)
    single_blocks_17_pre_norm_divide_output = divide(single_blocks_17_pre_norm_subtract_output, single_blocks_17_pre_norm_sqrt_output)
    single_blocks_17_tensoritem_0_output = tensor_item(single_blocks_17_modulation_split_output, single_blocks_17_tensoritem_0_index)
    single_blocks_17_add_0_output = add(single_blocks_17_add_0_left, single_blocks_17_tensoritem_0_output)
    single_blocks_17_multiply_0_output = multiplication(single_blocks_17_add_0_output, single_blocks_17_pre_norm_divide_output)
    single_blocks_17_tensoritem_1_output = tensor_item(single_blocks_17_modulation_split_output, single_blocks_17_tensoritem_1_index)
    single_blocks_17_add_1_output = add(single_blocks_17_multiply_0_output, single_blocks_17_tensoritem_1_output)
    single_blocks_17_linear1_transpose_output = transpose(single_blocks_17_linear1_weight, single_blocks_17_linear1_transpose_axes)
    single_blocks_17_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_17_add_1_output, single_blocks_17_linear1_transpose_output)
    single_blocks_17_lin1_out = add(single_blocks_17_linear1_matrixmultiply_output, single_blocks_17_linear1_bias)
    single_blocks_17_tensoritem_2_output = tensor_item(single_blocks_17_lin1_out, single_blocks_17_tensoritem_2_index)
    single_blocks_17_reshape_output = reshape(single_blocks_17_tensoritem_2_output, single_blocks_17_totuple_output)
    single_blocks_17_transpose_out = transpose(single_blocks_17_reshape_output, single_blocks_17_transpose_axes)
    single_blocks_17_tensoritem_3_output = tensor_item(single_blocks_17_transpose_out, single_blocks_17_tensoritem_3_index)
    single_blocks_17_tensoritem_4_output = tensor_item(single_blocks_17_transpose_out, single_blocks_17_tensoritem_4_index)
    single_blocks_17_norm_query_norm_power_output = power(single_blocks_17_tensoritem_3_output, single_blocks_17_norm_query_norm_power_exponent)
    single_blocks_17_norm_query_norm_mean_output = reduce_mean(single_blocks_17_norm_query_norm_power_output, axis=single_blocks_17_norm_query_norm_mean_axis, keepdim=single_blocks_17_norm_query_norm_mean_keepdim)
    single_blocks_17_norm_query_norm_add_output = add(single_blocks_17_norm_query_norm_mean_output, single_blocks_17_norm_query_norm_add_right)
    single_blocks_17_norm_query_norm_sqrt_output = sqrt(single_blocks_17_norm_query_norm_add_output)
    single_blocks_17_norm_query_norm_divide_output = divide(single_blocks_17_norm_query_norm_divide_numerator, single_blocks_17_norm_query_norm_sqrt_output)
    single_blocks_17_norm_query_norm_multiply_0_output = multiplication(single_blocks_17_tensoritem_3_output, single_blocks_17_norm_query_norm_divide_output)
    single_blocks_17_norm_query_norm_multiply_1_output = multiplication(single_blocks_17_norm_query_norm_multiply_0_output, single_blocks_17_norm_query_norm_scale)
    single_blocks_17_norm_key_norm_power_output = power(single_blocks_17_tensoritem_4_output, single_blocks_17_norm_key_norm_power_exponent)
    single_blocks_17_norm_key_norm_mean_output = reduce_mean(single_blocks_17_norm_key_norm_power_output, axis=single_blocks_17_norm_key_norm_mean_axis, keepdim=single_blocks_17_norm_key_norm_mean_keepdim)
    single_blocks_17_norm_key_norm_add_output = add(single_blocks_17_norm_key_norm_mean_output, single_blocks_17_norm_key_norm_add_right)
    single_blocks_17_norm_key_norm_sqrt_output = sqrt(single_blocks_17_norm_key_norm_add_output)
    single_blocks_17_norm_key_norm_divide_output = divide(single_blocks_17_norm_key_norm_divide_numerator, single_blocks_17_norm_key_norm_sqrt_output)
    single_blocks_17_norm_key_norm_multiply_0_output = multiplication(single_blocks_17_tensoritem_4_output, single_blocks_17_norm_key_norm_divide_output)
    single_blocks_17_norm_key_norm_multiply_1_output = multiplication(single_blocks_17_norm_key_norm_multiply_0_output, single_blocks_17_norm_key_norm_scale)
    single_blocks_17_tensoritem_5_output = tensor_item(single_blocks_17_transpose_out, single_blocks_17_tensoritem_5_index)
    single_blocks_17_model_model_xq_ = reshape(single_blocks_17_norm_query_norm_multiply_1_output, single_blocks_17_model_model_totuple_0_output)
    single_blocks_17_model_model_xk_ = reshape(single_blocks_17_norm_key_norm_multiply_1_output, single_blocks_17_model_model_totuple_1_output)
    single_blocks_17_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_17_model_model_tensoritem_0_index)
    single_blocks_17_model_model_tensoritem_1_output = tensor_item(single_blocks_17_model_model_xq_, single_blocks_17_model_model_tensoritem_1_index)
    single_blocks_17_model_model_multiply_0_output = multiplication(single_blocks_17_model_model_tensoritem_0_output, single_blocks_17_model_model_tensoritem_1_output)
    single_blocks_17_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_17_model_model_tensoritem_2_index)
    single_blocks_17_model_model_tensoritem_3_output = tensor_item(single_blocks_17_model_model_xq_, single_blocks_17_model_model_tensoritem_3_index)
    single_blocks_17_model_model_multiply_1_output = multiplication(single_blocks_17_model_model_tensoritem_2_output, single_blocks_17_model_model_tensoritem_3_output)
    single_blocks_17_model_model_add_0_output = add(single_blocks_17_model_model_multiply_0_output, single_blocks_17_model_model_multiply_1_output)
    single_blocks_17_model_q_out = reshape(single_blocks_17_model_model_add_0_output, single_blocks_17_model_model_shape_0_output)
    single_blocks_17_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_17_model_model_tensoritem_4_index)
    single_blocks_17_model_model_tensoritem_5_output = tensor_item(single_blocks_17_model_model_xk_, single_blocks_17_model_model_tensoritem_5_index)
    single_blocks_17_model_model_multiply_2_output = multiplication(single_blocks_17_model_model_tensoritem_4_output, single_blocks_17_model_model_tensoritem_5_output)
    single_blocks_17_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_17_model_model_tensoritem_6_index)
    single_blocks_17_model_model_tensoritem_7_output = tensor_item(single_blocks_17_model_model_xk_, single_blocks_17_model_model_tensoritem_7_index)
    single_blocks_17_model_model_multiply_3_output = multiplication(single_blocks_17_model_model_tensoritem_6_output, single_blocks_17_model_model_tensoritem_7_output)
    single_blocks_17_model_model_add_1_output = add(single_blocks_17_model_model_multiply_2_output, single_blocks_17_model_model_multiply_3_output)
    single_blocks_17_model_k_out = reshape(single_blocks_17_model_model_add_1_output, single_blocks_17_model_model_shape_1_output)
    single_blocks_17_model_context = scaled_dot_product_attention(single_blocks_17_model_q_out, single_blocks_17_model_k_out, single_blocks_17_tensoritem_5_output, single_blocks_17_model_scaleddotproduct_attn_mask)
    single_blocks_17_model_transpose_output = transpose(single_blocks_17_model_context, single_blocks_17_model_transpose_axes)
    single_blocks_17_attn = reshape(single_blocks_17_model_transpose_output, single_blocks_17_model_totuple_output)
    single_blocks_17_tensoritem_6_output = tensor_item(single_blocks_17_lin1_out, single_blocks_17_tensoritem_6_index)
    single_blocks_17_mlp_act = gelu(single_blocks_17_tensoritem_6_output, single_blocks_17_gelu_approximate)
    single_blocks_17_concat_out = concat(single_blocks_17_attn, single_blocks_17_mlp_act, axis=single_blocks_17_concat_axis)
    single_blocks_17_linear2_transpose_output = transpose(single_blocks_17_linear2_weight, single_blocks_17_linear2_transpose_axes)
    single_blocks_17_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_17_concat_out, single_blocks_17_linear2_transpose_output)
    single_blocks_17_lin2_out = add(single_blocks_17_linear2_matrixmultiply_output, single_blocks_17_linear2_bias)
    single_blocks_17_tensoritem_7_output = tensor_item(single_blocks_17_modulation_split_output, single_blocks_17_tensoritem_7_index)
    single_blocks_17_multiply_1_output = multiplication(single_blocks_17_tensoritem_7_output, single_blocks_17_lin2_out)
    single_blocks_17_add_2_output = add(single_blocks_16_add_2_output, single_blocks_17_multiply_1_output)
    single_blocks_18_modulation_silu_minus = minus(vec)
    single_blocks_18_modulation_silu_exp = exp(single_blocks_18_modulation_silu_minus)
    single_blocks_18_modulation_silu_add = add(single_blocks_18_modulation_silu_add_left, single_blocks_18_modulation_silu_exp)
    single_blocks_18_modulation_silu_output = divide(vec, single_blocks_18_modulation_silu_add)
    single_blocks_18_modulation_lin_transpose_output = transpose(single_blocks_18_modulation_lin_weight, single_blocks_18_modulation_lin_transpose_axes)
    single_blocks_18_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_18_modulation_silu_output, single_blocks_18_modulation_lin_transpose_output)
    single_blocks_18_modulation_lin_out = add(single_blocks_18_modulation_lin_matrixmultiply_output, single_blocks_18_modulation_lin_bias)
    single_blocks_18_modulation_tensoritem_output = tensor_item(single_blocks_18_modulation_lin_out, single_blocks_18_modulation_tensoritem_index)
    single_blocks_18_modulation_split_output = split(single_blocks_18_modulation_tensoritem_output, single_blocks_18_modulation_split_split_size, single_blocks_18_modulation_split_axis)
    single_blocks_18_pre_norm_mean_output = reduce_mean(single_blocks_17_add_2_output, axis=single_blocks_18_pre_norm_mean_axis, keepdim=single_blocks_18_pre_norm_mean_keepdim)
    single_blocks_18_pre_norm_subtract_output = subtract(single_blocks_17_add_2_output, single_blocks_18_pre_norm_mean_output)
    single_blocks_18_pre_norm_variance_output = variance(single_blocks_17_add_2_output, axis=single_blocks_18_pre_norm_variance_axis, keepdim=single_blocks_18_pre_norm_variance_keepdim, correction=single_blocks_18_pre_norm_variance_correction)
    single_blocks_18_pre_norm_add_output = add(single_blocks_18_pre_norm_variance_output, single_blocks_18_pre_norm_add_right)
    single_blocks_18_pre_norm_sqrt_output = sqrt(single_blocks_18_pre_norm_add_output)
    single_blocks_18_pre_norm_divide_output = divide(single_blocks_18_pre_norm_subtract_output, single_blocks_18_pre_norm_sqrt_output)
    single_blocks_18_tensoritem_0_output = tensor_item(single_blocks_18_modulation_split_output, single_blocks_18_tensoritem_0_index)
    single_blocks_18_add_0_output = add(single_blocks_18_add_0_left, single_blocks_18_tensoritem_0_output)
    single_blocks_18_multiply_0_output = multiplication(single_blocks_18_add_0_output, single_blocks_18_pre_norm_divide_output)
    single_blocks_18_tensoritem_1_output = tensor_item(single_blocks_18_modulation_split_output, single_blocks_18_tensoritem_1_index)
    single_blocks_18_add_1_output = add(single_blocks_18_multiply_0_output, single_blocks_18_tensoritem_1_output)
    single_blocks_18_linear1_transpose_output = transpose(single_blocks_18_linear1_weight, single_blocks_18_linear1_transpose_axes)
    single_blocks_18_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_18_add_1_output, single_blocks_18_linear1_transpose_output)
    single_blocks_18_lin1_out = add(single_blocks_18_linear1_matrixmultiply_output, single_blocks_18_linear1_bias)
    single_blocks_18_tensoritem_2_output = tensor_item(single_blocks_18_lin1_out, single_blocks_18_tensoritem_2_index)
    single_blocks_18_reshape_output = reshape(single_blocks_18_tensoritem_2_output, single_blocks_18_totuple_output)
    single_blocks_18_transpose_out = transpose(single_blocks_18_reshape_output, single_blocks_18_transpose_axes)
    single_blocks_18_tensoritem_3_output = tensor_item(single_blocks_18_transpose_out, single_blocks_18_tensoritem_3_index)
    single_blocks_18_tensoritem_4_output = tensor_item(single_blocks_18_transpose_out, single_blocks_18_tensoritem_4_index)
    single_blocks_18_norm_query_norm_power_output = power(single_blocks_18_tensoritem_3_output, single_blocks_18_norm_query_norm_power_exponent)
    single_blocks_18_norm_query_norm_mean_output = reduce_mean(single_blocks_18_norm_query_norm_power_output, axis=single_blocks_18_norm_query_norm_mean_axis, keepdim=single_blocks_18_norm_query_norm_mean_keepdim)
    single_blocks_18_norm_query_norm_add_output = add(single_blocks_18_norm_query_norm_mean_output, single_blocks_18_norm_query_norm_add_right)
    single_blocks_18_norm_query_norm_sqrt_output = sqrt(single_blocks_18_norm_query_norm_add_output)
    single_blocks_18_norm_query_norm_divide_output = divide(single_blocks_18_norm_query_norm_divide_numerator, single_blocks_18_norm_query_norm_sqrt_output)
    single_blocks_18_norm_query_norm_multiply_0_output = multiplication(single_blocks_18_tensoritem_3_output, single_blocks_18_norm_query_norm_divide_output)
    single_blocks_18_norm_query_norm_multiply_1_output = multiplication(single_blocks_18_norm_query_norm_multiply_0_output, single_blocks_18_norm_query_norm_scale)
    single_blocks_18_norm_key_norm_power_output = power(single_blocks_18_tensoritem_4_output, single_blocks_18_norm_key_norm_power_exponent)
    single_blocks_18_norm_key_norm_mean_output = reduce_mean(single_blocks_18_norm_key_norm_power_output, axis=single_blocks_18_norm_key_norm_mean_axis, keepdim=single_blocks_18_norm_key_norm_mean_keepdim)
    single_blocks_18_norm_key_norm_add_output = add(single_blocks_18_norm_key_norm_mean_output, single_blocks_18_norm_key_norm_add_right)
    single_blocks_18_norm_key_norm_sqrt_output = sqrt(single_blocks_18_norm_key_norm_add_output)
    single_blocks_18_norm_key_norm_divide_output = divide(single_blocks_18_norm_key_norm_divide_numerator, single_blocks_18_norm_key_norm_sqrt_output)
    single_blocks_18_norm_key_norm_multiply_0_output = multiplication(single_blocks_18_tensoritem_4_output, single_blocks_18_norm_key_norm_divide_output)
    single_blocks_18_norm_key_norm_multiply_1_output = multiplication(single_blocks_18_norm_key_norm_multiply_0_output, single_blocks_18_norm_key_norm_scale)
    single_blocks_18_tensoritem_5_output = tensor_item(single_blocks_18_transpose_out, single_blocks_18_tensoritem_5_index)
    single_blocks_18_model_model_xq_ = reshape(single_blocks_18_norm_query_norm_multiply_1_output, single_blocks_18_model_model_totuple_0_output)
    single_blocks_18_model_model_xk_ = reshape(single_blocks_18_norm_key_norm_multiply_1_output, single_blocks_18_model_model_totuple_1_output)
    single_blocks_18_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_18_model_model_tensoritem_0_index)
    single_blocks_18_model_model_tensoritem_1_output = tensor_item(single_blocks_18_model_model_xq_, single_blocks_18_model_model_tensoritem_1_index)
    single_blocks_18_model_model_multiply_0_output = multiplication(single_blocks_18_model_model_tensoritem_0_output, single_blocks_18_model_model_tensoritem_1_output)
    single_blocks_18_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_18_model_model_tensoritem_2_index)
    single_blocks_18_model_model_tensoritem_3_output = tensor_item(single_blocks_18_model_model_xq_, single_blocks_18_model_model_tensoritem_3_index)
    single_blocks_18_model_model_multiply_1_output = multiplication(single_blocks_18_model_model_tensoritem_2_output, single_blocks_18_model_model_tensoritem_3_output)
    single_blocks_18_model_model_add_0_output = add(single_blocks_18_model_model_multiply_0_output, single_blocks_18_model_model_multiply_1_output)
    single_blocks_18_model_q_out = reshape(single_blocks_18_model_model_add_0_output, single_blocks_18_model_model_shape_0_output)
    single_blocks_18_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_18_model_model_tensoritem_4_index)
    single_blocks_18_model_model_tensoritem_5_output = tensor_item(single_blocks_18_model_model_xk_, single_blocks_18_model_model_tensoritem_5_index)
    single_blocks_18_model_model_multiply_2_output = multiplication(single_blocks_18_model_model_tensoritem_4_output, single_blocks_18_model_model_tensoritem_5_output)
    single_blocks_18_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_18_model_model_tensoritem_6_index)
    single_blocks_18_model_model_tensoritem_7_output = tensor_item(single_blocks_18_model_model_xk_, single_blocks_18_model_model_tensoritem_7_index)
    single_blocks_18_model_model_multiply_3_output = multiplication(single_blocks_18_model_model_tensoritem_6_output, single_blocks_18_model_model_tensoritem_7_output)
    single_blocks_18_model_model_add_1_output = add(single_blocks_18_model_model_multiply_2_output, single_blocks_18_model_model_multiply_3_output)
    single_blocks_18_model_k_out = reshape(single_blocks_18_model_model_add_1_output, single_blocks_18_model_model_shape_1_output)
    single_blocks_18_model_context = scaled_dot_product_attention(single_blocks_18_model_q_out, single_blocks_18_model_k_out, single_blocks_18_tensoritem_5_output, single_blocks_18_model_scaleddotproduct_attn_mask)
    single_blocks_18_model_transpose_output = transpose(single_blocks_18_model_context, single_blocks_18_model_transpose_axes)
    single_blocks_18_attn = reshape(single_blocks_18_model_transpose_output, single_blocks_18_model_totuple_output)
    single_blocks_18_tensoritem_6_output = tensor_item(single_blocks_18_lin1_out, single_blocks_18_tensoritem_6_index)
    single_blocks_18_mlp_act = gelu(single_blocks_18_tensoritem_6_output, single_blocks_18_gelu_approximate)
    single_blocks_18_concat_out = concat(single_blocks_18_attn, single_blocks_18_mlp_act, axis=single_blocks_18_concat_axis)
    single_blocks_18_linear2_transpose_output = transpose(single_blocks_18_linear2_weight, single_blocks_18_linear2_transpose_axes)
    single_blocks_18_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_18_concat_out, single_blocks_18_linear2_transpose_output)
    single_blocks_18_lin2_out = add(single_blocks_18_linear2_matrixmultiply_output, single_blocks_18_linear2_bias)
    single_blocks_18_tensoritem_7_output = tensor_item(single_blocks_18_modulation_split_output, single_blocks_18_tensoritem_7_index)
    single_blocks_18_multiply_1_output = multiplication(single_blocks_18_tensoritem_7_output, single_blocks_18_lin2_out)
    single_blocks_18_add_2_output = add(single_blocks_17_add_2_output, single_blocks_18_multiply_1_output)
    single_blocks_19_modulation_silu_minus = minus(vec)
    single_blocks_19_modulation_silu_exp = exp(single_blocks_19_modulation_silu_minus)
    single_blocks_19_modulation_silu_add = add(single_blocks_19_modulation_silu_add_left, single_blocks_19_modulation_silu_exp)
    single_blocks_19_modulation_silu_output = divide(vec, single_blocks_19_modulation_silu_add)
    single_blocks_19_modulation_lin_transpose_output = transpose(single_blocks_19_modulation_lin_weight, single_blocks_19_modulation_lin_transpose_axes)
    single_blocks_19_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_19_modulation_silu_output, single_blocks_19_modulation_lin_transpose_output)
    single_blocks_19_modulation_lin_out = add(single_blocks_19_modulation_lin_matrixmultiply_output, single_blocks_19_modulation_lin_bias)
    single_blocks_19_modulation_tensoritem_output = tensor_item(single_blocks_19_modulation_lin_out, single_blocks_19_modulation_tensoritem_index)
    single_blocks_19_modulation_split_output = split(single_blocks_19_modulation_tensoritem_output, single_blocks_19_modulation_split_split_size, single_blocks_19_modulation_split_axis)
    single_blocks_19_pre_norm_mean_output = reduce_mean(single_blocks_18_add_2_output, axis=single_blocks_19_pre_norm_mean_axis, keepdim=single_blocks_19_pre_norm_mean_keepdim)
    single_blocks_19_pre_norm_subtract_output = subtract(single_blocks_18_add_2_output, single_blocks_19_pre_norm_mean_output)
    single_blocks_19_pre_norm_variance_output = variance(single_blocks_18_add_2_output, axis=single_blocks_19_pre_norm_variance_axis, keepdim=single_blocks_19_pre_norm_variance_keepdim, correction=single_blocks_19_pre_norm_variance_correction)
    single_blocks_19_pre_norm_add_output = add(single_blocks_19_pre_norm_variance_output, single_blocks_19_pre_norm_add_right)
    single_blocks_19_pre_norm_sqrt_output = sqrt(single_blocks_19_pre_norm_add_output)
    single_blocks_19_pre_norm_divide_output = divide(single_blocks_19_pre_norm_subtract_output, single_blocks_19_pre_norm_sqrt_output)
    single_blocks_19_tensoritem_0_output = tensor_item(single_blocks_19_modulation_split_output, single_blocks_19_tensoritem_0_index)
    single_blocks_19_add_0_output = add(single_blocks_19_add_0_left, single_blocks_19_tensoritem_0_output)
    single_blocks_19_multiply_0_output = multiplication(single_blocks_19_add_0_output, single_blocks_19_pre_norm_divide_output)
    single_blocks_19_tensoritem_1_output = tensor_item(single_blocks_19_modulation_split_output, single_blocks_19_tensoritem_1_index)
    single_blocks_19_add_1_output = add(single_blocks_19_multiply_0_output, single_blocks_19_tensoritem_1_output)
    single_blocks_19_linear1_transpose_output = transpose(single_blocks_19_linear1_weight, single_blocks_19_linear1_transpose_axes)
    single_blocks_19_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_19_add_1_output, single_blocks_19_linear1_transpose_output)
    single_blocks_19_lin1_out = add(single_blocks_19_linear1_matrixmultiply_output, single_blocks_19_linear1_bias)
    single_blocks_19_tensoritem_2_output = tensor_item(single_blocks_19_lin1_out, single_blocks_19_tensoritem_2_index)
    single_blocks_19_reshape_output = reshape(single_blocks_19_tensoritem_2_output, single_blocks_19_totuple_output)
    single_blocks_19_transpose_out = transpose(single_blocks_19_reshape_output, single_blocks_19_transpose_axes)
    single_blocks_19_tensoritem_3_output = tensor_item(single_blocks_19_transpose_out, single_blocks_19_tensoritem_3_index)
    single_blocks_19_tensoritem_4_output = tensor_item(single_blocks_19_transpose_out, single_blocks_19_tensoritem_4_index)
    single_blocks_19_norm_query_norm_power_output = power(single_blocks_19_tensoritem_3_output, single_blocks_19_norm_query_norm_power_exponent)
    single_blocks_19_norm_query_norm_mean_output = reduce_mean(single_blocks_19_norm_query_norm_power_output, axis=single_blocks_19_norm_query_norm_mean_axis, keepdim=single_blocks_19_norm_query_norm_mean_keepdim)
    single_blocks_19_norm_query_norm_add_output = add(single_blocks_19_norm_query_norm_mean_output, single_blocks_19_norm_query_norm_add_right)
    single_blocks_19_norm_query_norm_sqrt_output = sqrt(single_blocks_19_norm_query_norm_add_output)
    single_blocks_19_norm_query_norm_divide_output = divide(single_blocks_19_norm_query_norm_divide_numerator, single_blocks_19_norm_query_norm_sqrt_output)
    single_blocks_19_norm_query_norm_multiply_0_output = multiplication(single_blocks_19_tensoritem_3_output, single_blocks_19_norm_query_norm_divide_output)
    single_blocks_19_norm_query_norm_multiply_1_output = multiplication(single_blocks_19_norm_query_norm_multiply_0_output, single_blocks_19_norm_query_norm_scale)
    single_blocks_19_norm_key_norm_power_output = power(single_blocks_19_tensoritem_4_output, single_blocks_19_norm_key_norm_power_exponent)
    single_blocks_19_norm_key_norm_mean_output = reduce_mean(single_blocks_19_norm_key_norm_power_output, axis=single_blocks_19_norm_key_norm_mean_axis, keepdim=single_blocks_19_norm_key_norm_mean_keepdim)
    single_blocks_19_norm_key_norm_add_output = add(single_blocks_19_norm_key_norm_mean_output, single_blocks_19_norm_key_norm_add_right)
    single_blocks_19_norm_key_norm_sqrt_output = sqrt(single_blocks_19_norm_key_norm_add_output)
    single_blocks_19_norm_key_norm_divide_output = divide(single_blocks_19_norm_key_norm_divide_numerator, single_blocks_19_norm_key_norm_sqrt_output)
    single_blocks_19_norm_key_norm_multiply_0_output = multiplication(single_blocks_19_tensoritem_4_output, single_blocks_19_norm_key_norm_divide_output)
    single_blocks_19_norm_key_norm_multiply_1_output = multiplication(single_blocks_19_norm_key_norm_multiply_0_output, single_blocks_19_norm_key_norm_scale)
    single_blocks_19_tensoritem_5_output = tensor_item(single_blocks_19_transpose_out, single_blocks_19_tensoritem_5_index)
    single_blocks_19_model_model_xq_ = reshape(single_blocks_19_norm_query_norm_multiply_1_output, single_blocks_19_model_model_totuple_0_output)
    single_blocks_19_model_model_xk_ = reshape(single_blocks_19_norm_key_norm_multiply_1_output, single_blocks_19_model_model_totuple_1_output)
    single_blocks_19_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_19_model_model_tensoritem_0_index)
    single_blocks_19_model_model_tensoritem_1_output = tensor_item(single_blocks_19_model_model_xq_, single_blocks_19_model_model_tensoritem_1_index)
    single_blocks_19_model_model_multiply_0_output = multiplication(single_blocks_19_model_model_tensoritem_0_output, single_blocks_19_model_model_tensoritem_1_output)
    single_blocks_19_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_19_model_model_tensoritem_2_index)
    single_blocks_19_model_model_tensoritem_3_output = tensor_item(single_blocks_19_model_model_xq_, single_blocks_19_model_model_tensoritem_3_index)
    single_blocks_19_model_model_multiply_1_output = multiplication(single_blocks_19_model_model_tensoritem_2_output, single_blocks_19_model_model_tensoritem_3_output)
    single_blocks_19_model_model_add_0_output = add(single_blocks_19_model_model_multiply_0_output, single_blocks_19_model_model_multiply_1_output)
    single_blocks_19_model_q_out = reshape(single_blocks_19_model_model_add_0_output, single_blocks_19_model_model_shape_0_output)
    single_blocks_19_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_19_model_model_tensoritem_4_index)
    single_blocks_19_model_model_tensoritem_5_output = tensor_item(single_blocks_19_model_model_xk_, single_blocks_19_model_model_tensoritem_5_index)
    single_blocks_19_model_model_multiply_2_output = multiplication(single_blocks_19_model_model_tensoritem_4_output, single_blocks_19_model_model_tensoritem_5_output)
    single_blocks_19_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_19_model_model_tensoritem_6_index)
    single_blocks_19_model_model_tensoritem_7_output = tensor_item(single_blocks_19_model_model_xk_, single_blocks_19_model_model_tensoritem_7_index)
    single_blocks_19_model_model_multiply_3_output = multiplication(single_blocks_19_model_model_tensoritem_6_output, single_blocks_19_model_model_tensoritem_7_output)
    single_blocks_19_model_model_add_1_output = add(single_blocks_19_model_model_multiply_2_output, single_blocks_19_model_model_multiply_3_output)
    single_blocks_19_model_k_out = reshape(single_blocks_19_model_model_add_1_output, single_blocks_19_model_model_shape_1_output)
    single_blocks_19_model_context = scaled_dot_product_attention(single_blocks_19_model_q_out, single_blocks_19_model_k_out, single_blocks_19_tensoritem_5_output, single_blocks_19_model_scaleddotproduct_attn_mask)
    single_blocks_19_model_transpose_output = transpose(single_blocks_19_model_context, single_blocks_19_model_transpose_axes)
    single_blocks_19_attn = reshape(single_blocks_19_model_transpose_output, single_blocks_19_model_totuple_output)
    single_blocks_19_tensoritem_6_output = tensor_item(single_blocks_19_lin1_out, single_blocks_19_tensoritem_6_index)
    single_blocks_19_mlp_act = gelu(single_blocks_19_tensoritem_6_output, single_blocks_19_gelu_approximate)
    single_blocks_19_concat_out = concat(single_blocks_19_attn, single_blocks_19_mlp_act, axis=single_blocks_19_concat_axis)
    single_blocks_19_linear2_transpose_output = transpose(single_blocks_19_linear2_weight, single_blocks_19_linear2_transpose_axes)
    single_blocks_19_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_19_concat_out, single_blocks_19_linear2_transpose_output)
    single_blocks_19_lin2_out = add(single_blocks_19_linear2_matrixmultiply_output, single_blocks_19_linear2_bias)
    single_blocks_19_tensoritem_7_output = tensor_item(single_blocks_19_modulation_split_output, single_blocks_19_tensoritem_7_index)
    single_blocks_19_multiply_1_output = multiplication(single_blocks_19_tensoritem_7_output, single_blocks_19_lin2_out)
    single_blocks_19_add_2_output = add(single_blocks_18_add_2_output, single_blocks_19_multiply_1_output)
    single_blocks_20_modulation_silu_minus = minus(vec)
    single_blocks_20_modulation_silu_exp = exp(single_blocks_20_modulation_silu_minus)
    single_blocks_20_modulation_silu_add = add(single_blocks_20_modulation_silu_add_left, single_blocks_20_modulation_silu_exp)
    single_blocks_20_modulation_silu_output = divide(vec, single_blocks_20_modulation_silu_add)
    single_blocks_20_modulation_lin_transpose_output = transpose(single_blocks_20_modulation_lin_weight, single_blocks_20_modulation_lin_transpose_axes)
    single_blocks_20_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_20_modulation_silu_output, single_blocks_20_modulation_lin_transpose_output)
    single_blocks_20_modulation_lin_out = add(single_blocks_20_modulation_lin_matrixmultiply_output, single_blocks_20_modulation_lin_bias)
    single_blocks_20_modulation_tensoritem_output = tensor_item(single_blocks_20_modulation_lin_out, single_blocks_20_modulation_tensoritem_index)
    single_blocks_20_modulation_split_output = split(single_blocks_20_modulation_tensoritem_output, single_blocks_20_modulation_split_split_size, single_blocks_20_modulation_split_axis)
    single_blocks_20_pre_norm_mean_output = reduce_mean(single_blocks_19_add_2_output, axis=single_blocks_20_pre_norm_mean_axis, keepdim=single_blocks_20_pre_norm_mean_keepdim)
    single_blocks_20_pre_norm_subtract_output = subtract(single_blocks_19_add_2_output, single_blocks_20_pre_norm_mean_output)
    single_blocks_20_pre_norm_variance_output = variance(single_blocks_19_add_2_output, axis=single_blocks_20_pre_norm_variance_axis, keepdim=single_blocks_20_pre_norm_variance_keepdim, correction=single_blocks_20_pre_norm_variance_correction)
    single_blocks_20_pre_norm_add_output = add(single_blocks_20_pre_norm_variance_output, single_blocks_20_pre_norm_add_right)
    single_blocks_20_pre_norm_sqrt_output = sqrt(single_blocks_20_pre_norm_add_output)
    single_blocks_20_pre_norm_divide_output = divide(single_blocks_20_pre_norm_subtract_output, single_blocks_20_pre_norm_sqrt_output)
    single_blocks_20_tensoritem_0_output = tensor_item(single_blocks_20_modulation_split_output, single_blocks_20_tensoritem_0_index)
    single_blocks_20_add_0_output = add(single_blocks_20_add_0_left, single_blocks_20_tensoritem_0_output)
    single_blocks_20_multiply_0_output = multiplication(single_blocks_20_add_0_output, single_blocks_20_pre_norm_divide_output)
    single_blocks_20_tensoritem_1_output = tensor_item(single_blocks_20_modulation_split_output, single_blocks_20_tensoritem_1_index)
    single_blocks_20_add_1_output = add(single_blocks_20_multiply_0_output, single_blocks_20_tensoritem_1_output)
    single_blocks_20_linear1_transpose_output = transpose(single_blocks_20_linear1_weight, single_blocks_20_linear1_transpose_axes)
    single_blocks_20_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_20_add_1_output, single_blocks_20_linear1_transpose_output)
    single_blocks_20_lin1_out = add(single_blocks_20_linear1_matrixmultiply_output, single_blocks_20_linear1_bias)
    single_blocks_20_tensoritem_2_output = tensor_item(single_blocks_20_lin1_out, single_blocks_20_tensoritem_2_index)
    single_blocks_20_reshape_output = reshape(single_blocks_20_tensoritem_2_output, single_blocks_20_totuple_output)
    single_blocks_20_transpose_out = transpose(single_blocks_20_reshape_output, single_blocks_20_transpose_axes)
    single_blocks_20_tensoritem_3_output = tensor_item(single_blocks_20_transpose_out, single_blocks_20_tensoritem_3_index)
    single_blocks_20_tensoritem_4_output = tensor_item(single_blocks_20_transpose_out, single_blocks_20_tensoritem_4_index)
    single_blocks_20_norm_query_norm_power_output = power(single_blocks_20_tensoritem_3_output, single_blocks_20_norm_query_norm_power_exponent)
    single_blocks_20_norm_query_norm_mean_output = reduce_mean(single_blocks_20_norm_query_norm_power_output, axis=single_blocks_20_norm_query_norm_mean_axis, keepdim=single_blocks_20_norm_query_norm_mean_keepdim)
    single_blocks_20_norm_query_norm_add_output = add(single_blocks_20_norm_query_norm_mean_output, single_blocks_20_norm_query_norm_add_right)
    single_blocks_20_norm_query_norm_sqrt_output = sqrt(single_blocks_20_norm_query_norm_add_output)
    single_blocks_20_norm_query_norm_divide_output = divide(single_blocks_20_norm_query_norm_divide_numerator, single_blocks_20_norm_query_norm_sqrt_output)
    single_blocks_20_norm_query_norm_multiply_0_output = multiplication(single_blocks_20_tensoritem_3_output, single_blocks_20_norm_query_norm_divide_output)
    single_blocks_20_norm_query_norm_multiply_1_output = multiplication(single_blocks_20_norm_query_norm_multiply_0_output, single_blocks_20_norm_query_norm_scale)
    single_blocks_20_norm_key_norm_power_output = power(single_blocks_20_tensoritem_4_output, single_blocks_20_norm_key_norm_power_exponent)
    single_blocks_20_norm_key_norm_mean_output = reduce_mean(single_blocks_20_norm_key_norm_power_output, axis=single_blocks_20_norm_key_norm_mean_axis, keepdim=single_blocks_20_norm_key_norm_mean_keepdim)
    single_blocks_20_norm_key_norm_add_output = add(single_blocks_20_norm_key_norm_mean_output, single_blocks_20_norm_key_norm_add_right)
    single_blocks_20_norm_key_norm_sqrt_output = sqrt(single_blocks_20_norm_key_norm_add_output)
    single_blocks_20_norm_key_norm_divide_output = divide(single_blocks_20_norm_key_norm_divide_numerator, single_blocks_20_norm_key_norm_sqrt_output)
    single_blocks_20_norm_key_norm_multiply_0_output = multiplication(single_blocks_20_tensoritem_4_output, single_blocks_20_norm_key_norm_divide_output)
    single_blocks_20_norm_key_norm_multiply_1_output = multiplication(single_blocks_20_norm_key_norm_multiply_0_output, single_blocks_20_norm_key_norm_scale)
    single_blocks_20_tensoritem_5_output = tensor_item(single_blocks_20_transpose_out, single_blocks_20_tensoritem_5_index)
    single_blocks_20_model_model_xq_ = reshape(single_blocks_20_norm_query_norm_multiply_1_output, single_blocks_20_model_model_totuple_0_output)
    single_blocks_20_model_model_xk_ = reshape(single_blocks_20_norm_key_norm_multiply_1_output, single_blocks_20_model_model_totuple_1_output)
    single_blocks_20_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_20_model_model_tensoritem_0_index)
    single_blocks_20_model_model_tensoritem_1_output = tensor_item(single_blocks_20_model_model_xq_, single_blocks_20_model_model_tensoritem_1_index)
    single_blocks_20_model_model_multiply_0_output = multiplication(single_blocks_20_model_model_tensoritem_0_output, single_blocks_20_model_model_tensoritem_1_output)
    single_blocks_20_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_20_model_model_tensoritem_2_index)
    single_blocks_20_model_model_tensoritem_3_output = tensor_item(single_blocks_20_model_model_xq_, single_blocks_20_model_model_tensoritem_3_index)
    single_blocks_20_model_model_multiply_1_output = multiplication(single_blocks_20_model_model_tensoritem_2_output, single_blocks_20_model_model_tensoritem_3_output)
    single_blocks_20_model_model_add_0_output = add(single_blocks_20_model_model_multiply_0_output, single_blocks_20_model_model_multiply_1_output)
    single_blocks_20_model_q_out = reshape(single_blocks_20_model_model_add_0_output, single_blocks_20_model_model_shape_0_output)
    single_blocks_20_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_20_model_model_tensoritem_4_index)
    single_blocks_20_model_model_tensoritem_5_output = tensor_item(single_blocks_20_model_model_xk_, single_blocks_20_model_model_tensoritem_5_index)
    single_blocks_20_model_model_multiply_2_output = multiplication(single_blocks_20_model_model_tensoritem_4_output, single_blocks_20_model_model_tensoritem_5_output)
    single_blocks_20_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_20_model_model_tensoritem_6_index)
    single_blocks_20_model_model_tensoritem_7_output = tensor_item(single_blocks_20_model_model_xk_, single_blocks_20_model_model_tensoritem_7_index)
    single_blocks_20_model_model_multiply_3_output = multiplication(single_blocks_20_model_model_tensoritem_6_output, single_blocks_20_model_model_tensoritem_7_output)
    single_blocks_20_model_model_add_1_output = add(single_blocks_20_model_model_multiply_2_output, single_blocks_20_model_model_multiply_3_output)
    single_blocks_20_model_k_out = reshape(single_blocks_20_model_model_add_1_output, single_blocks_20_model_model_shape_1_output)
    single_blocks_20_model_context = scaled_dot_product_attention(single_blocks_20_model_q_out, single_blocks_20_model_k_out, single_blocks_20_tensoritem_5_output, single_blocks_20_model_scaleddotproduct_attn_mask)
    single_blocks_20_model_transpose_output = transpose(single_blocks_20_model_context, single_blocks_20_model_transpose_axes)
    single_blocks_20_attn = reshape(single_blocks_20_model_transpose_output, single_blocks_20_model_totuple_output)
    single_blocks_20_tensoritem_6_output = tensor_item(single_blocks_20_lin1_out, single_blocks_20_tensoritem_6_index)
    single_blocks_20_mlp_act = gelu(single_blocks_20_tensoritem_6_output, single_blocks_20_gelu_approximate)
    single_blocks_20_concat_out = concat(single_blocks_20_attn, single_blocks_20_mlp_act, axis=single_blocks_20_concat_axis)
    single_blocks_20_linear2_transpose_output = transpose(single_blocks_20_linear2_weight, single_blocks_20_linear2_transpose_axes)
    single_blocks_20_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_20_concat_out, single_blocks_20_linear2_transpose_output)
    single_blocks_20_lin2_out = add(single_blocks_20_linear2_matrixmultiply_output, single_blocks_20_linear2_bias)
    single_blocks_20_tensoritem_7_output = tensor_item(single_blocks_20_modulation_split_output, single_blocks_20_tensoritem_7_index)
    single_blocks_20_multiply_1_output = multiplication(single_blocks_20_tensoritem_7_output, single_blocks_20_lin2_out)
    single_blocks_20_add_2_output = add(single_blocks_19_add_2_output, single_blocks_20_multiply_1_output)
    single_blocks_21_modulation_silu_minus = minus(vec)
    single_blocks_21_modulation_silu_exp = exp(single_blocks_21_modulation_silu_minus)
    single_blocks_21_modulation_silu_add = add(single_blocks_21_modulation_silu_add_left, single_blocks_21_modulation_silu_exp)
    single_blocks_21_modulation_silu_output = divide(vec, single_blocks_21_modulation_silu_add)
    single_blocks_21_modulation_lin_transpose_output = transpose(single_blocks_21_modulation_lin_weight, single_blocks_21_modulation_lin_transpose_axes)
    single_blocks_21_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_21_modulation_silu_output, single_blocks_21_modulation_lin_transpose_output)
    single_blocks_21_modulation_lin_out = add(single_blocks_21_modulation_lin_matrixmultiply_output, single_blocks_21_modulation_lin_bias)
    single_blocks_21_modulation_tensoritem_output = tensor_item(single_blocks_21_modulation_lin_out, single_blocks_21_modulation_tensoritem_index)
    single_blocks_21_modulation_split_output = split(single_blocks_21_modulation_tensoritem_output, single_blocks_21_modulation_split_split_size, single_blocks_21_modulation_split_axis)
    single_blocks_21_pre_norm_mean_output = reduce_mean(single_blocks_20_add_2_output, axis=single_blocks_21_pre_norm_mean_axis, keepdim=single_blocks_21_pre_norm_mean_keepdim)
    single_blocks_21_pre_norm_subtract_output = subtract(single_blocks_20_add_2_output, single_blocks_21_pre_norm_mean_output)
    single_blocks_21_pre_norm_variance_output = variance(single_blocks_20_add_2_output, axis=single_blocks_21_pre_norm_variance_axis, keepdim=single_blocks_21_pre_norm_variance_keepdim, correction=single_blocks_21_pre_norm_variance_correction)
    single_blocks_21_pre_norm_add_output = add(single_blocks_21_pre_norm_variance_output, single_blocks_21_pre_norm_add_right)
    single_blocks_21_pre_norm_sqrt_output = sqrt(single_blocks_21_pre_norm_add_output)
    single_blocks_21_pre_norm_divide_output = divide(single_blocks_21_pre_norm_subtract_output, single_blocks_21_pre_norm_sqrt_output)
    single_blocks_21_tensoritem_0_output = tensor_item(single_blocks_21_modulation_split_output, single_blocks_21_tensoritem_0_index)
    single_blocks_21_add_0_output = add(single_blocks_21_add_0_left, single_blocks_21_tensoritem_0_output)
    single_blocks_21_multiply_0_output = multiplication(single_blocks_21_add_0_output, single_blocks_21_pre_norm_divide_output)
    single_blocks_21_tensoritem_1_output = tensor_item(single_blocks_21_modulation_split_output, single_blocks_21_tensoritem_1_index)
    single_blocks_21_add_1_output = add(single_blocks_21_multiply_0_output, single_blocks_21_tensoritem_1_output)
    single_blocks_21_linear1_transpose_output = transpose(single_blocks_21_linear1_weight, single_blocks_21_linear1_transpose_axes)
    single_blocks_21_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_21_add_1_output, single_blocks_21_linear1_transpose_output)
    single_blocks_21_lin1_out = add(single_blocks_21_linear1_matrixmultiply_output, single_blocks_21_linear1_bias)
    single_blocks_21_tensoritem_2_output = tensor_item(single_blocks_21_lin1_out, single_blocks_21_tensoritem_2_index)
    single_blocks_21_reshape_output = reshape(single_blocks_21_tensoritem_2_output, single_blocks_21_totuple_output)
    single_blocks_21_transpose_out = transpose(single_blocks_21_reshape_output, single_blocks_21_transpose_axes)
    single_blocks_21_tensoritem_3_output = tensor_item(single_blocks_21_transpose_out, single_blocks_21_tensoritem_3_index)
    single_blocks_21_tensoritem_4_output = tensor_item(single_blocks_21_transpose_out, single_blocks_21_tensoritem_4_index)
    single_blocks_21_norm_query_norm_power_output = power(single_blocks_21_tensoritem_3_output, single_blocks_21_norm_query_norm_power_exponent)
    single_blocks_21_norm_query_norm_mean_output = reduce_mean(single_blocks_21_norm_query_norm_power_output, axis=single_blocks_21_norm_query_norm_mean_axis, keepdim=single_blocks_21_norm_query_norm_mean_keepdim)
    single_blocks_21_norm_query_norm_add_output = add(single_blocks_21_norm_query_norm_mean_output, single_blocks_21_norm_query_norm_add_right)
    single_blocks_21_norm_query_norm_sqrt_output = sqrt(single_blocks_21_norm_query_norm_add_output)
    single_blocks_21_norm_query_norm_divide_output = divide(single_blocks_21_norm_query_norm_divide_numerator, single_blocks_21_norm_query_norm_sqrt_output)
    single_blocks_21_norm_query_norm_multiply_0_output = multiplication(single_blocks_21_tensoritem_3_output, single_blocks_21_norm_query_norm_divide_output)
    single_blocks_21_norm_query_norm_multiply_1_output = multiplication(single_blocks_21_norm_query_norm_multiply_0_output, single_blocks_21_norm_query_norm_scale)
    single_blocks_21_norm_key_norm_power_output = power(single_blocks_21_tensoritem_4_output, single_blocks_21_norm_key_norm_power_exponent)
    single_blocks_21_norm_key_norm_mean_output = reduce_mean(single_blocks_21_norm_key_norm_power_output, axis=single_blocks_21_norm_key_norm_mean_axis, keepdim=single_blocks_21_norm_key_norm_mean_keepdim)
    single_blocks_21_norm_key_norm_add_output = add(single_blocks_21_norm_key_norm_mean_output, single_blocks_21_norm_key_norm_add_right)
    single_blocks_21_norm_key_norm_sqrt_output = sqrt(single_blocks_21_norm_key_norm_add_output)
    single_blocks_21_norm_key_norm_divide_output = divide(single_blocks_21_norm_key_norm_divide_numerator, single_blocks_21_norm_key_norm_sqrt_output)
    single_blocks_21_norm_key_norm_multiply_0_output = multiplication(single_blocks_21_tensoritem_4_output, single_blocks_21_norm_key_norm_divide_output)
    single_blocks_21_norm_key_norm_multiply_1_output = multiplication(single_blocks_21_norm_key_norm_multiply_0_output, single_blocks_21_norm_key_norm_scale)
    single_blocks_21_tensoritem_5_output = tensor_item(single_blocks_21_transpose_out, single_blocks_21_tensoritem_5_index)
    single_blocks_21_model_model_xq_ = reshape(single_blocks_21_norm_query_norm_multiply_1_output, single_blocks_21_model_model_totuple_0_output)
    single_blocks_21_model_model_xk_ = reshape(single_blocks_21_norm_key_norm_multiply_1_output, single_blocks_21_model_model_totuple_1_output)
    single_blocks_21_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_21_model_model_tensoritem_0_index)
    single_blocks_21_model_model_tensoritem_1_output = tensor_item(single_blocks_21_model_model_xq_, single_blocks_21_model_model_tensoritem_1_index)
    single_blocks_21_model_model_multiply_0_output = multiplication(single_blocks_21_model_model_tensoritem_0_output, single_blocks_21_model_model_tensoritem_1_output)
    single_blocks_21_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_21_model_model_tensoritem_2_index)
    single_blocks_21_model_model_tensoritem_3_output = tensor_item(single_blocks_21_model_model_xq_, single_blocks_21_model_model_tensoritem_3_index)
    single_blocks_21_model_model_multiply_1_output = multiplication(single_blocks_21_model_model_tensoritem_2_output, single_blocks_21_model_model_tensoritem_3_output)
    single_blocks_21_model_model_add_0_output = add(single_blocks_21_model_model_multiply_0_output, single_blocks_21_model_model_multiply_1_output)
    single_blocks_21_model_q_out = reshape(single_blocks_21_model_model_add_0_output, single_blocks_21_model_model_shape_0_output)
    single_blocks_21_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_21_model_model_tensoritem_4_index)
    single_blocks_21_model_model_tensoritem_5_output = tensor_item(single_blocks_21_model_model_xk_, single_blocks_21_model_model_tensoritem_5_index)
    single_blocks_21_model_model_multiply_2_output = multiplication(single_blocks_21_model_model_tensoritem_4_output, single_blocks_21_model_model_tensoritem_5_output)
    single_blocks_21_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_21_model_model_tensoritem_6_index)
    single_blocks_21_model_model_tensoritem_7_output = tensor_item(single_blocks_21_model_model_xk_, single_blocks_21_model_model_tensoritem_7_index)
    single_blocks_21_model_model_multiply_3_output = multiplication(single_blocks_21_model_model_tensoritem_6_output, single_blocks_21_model_model_tensoritem_7_output)
    single_blocks_21_model_model_add_1_output = add(single_blocks_21_model_model_multiply_2_output, single_blocks_21_model_model_multiply_3_output)
    single_blocks_21_model_k_out = reshape(single_blocks_21_model_model_add_1_output, single_blocks_21_model_model_shape_1_output)
    single_blocks_21_model_context = scaled_dot_product_attention(single_blocks_21_model_q_out, single_blocks_21_model_k_out, single_blocks_21_tensoritem_5_output, single_blocks_21_model_scaleddotproduct_attn_mask)
    single_blocks_21_model_transpose_output = transpose(single_blocks_21_model_context, single_blocks_21_model_transpose_axes)
    single_blocks_21_attn = reshape(single_blocks_21_model_transpose_output, single_blocks_21_model_totuple_output)
    single_blocks_21_tensoritem_6_output = tensor_item(single_blocks_21_lin1_out, single_blocks_21_tensoritem_6_index)
    single_blocks_21_mlp_act = gelu(single_blocks_21_tensoritem_6_output, single_blocks_21_gelu_approximate)
    single_blocks_21_concat_out = concat(single_blocks_21_attn, single_blocks_21_mlp_act, axis=single_blocks_21_concat_axis)
    single_blocks_21_linear2_transpose_output = transpose(single_blocks_21_linear2_weight, single_blocks_21_linear2_transpose_axes)
    single_blocks_21_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_21_concat_out, single_blocks_21_linear2_transpose_output)
    single_blocks_21_lin2_out = add(single_blocks_21_linear2_matrixmultiply_output, single_blocks_21_linear2_bias)
    single_blocks_21_tensoritem_7_output = tensor_item(single_blocks_21_modulation_split_output, single_blocks_21_tensoritem_7_index)
    single_blocks_21_multiply_1_output = multiplication(single_blocks_21_tensoritem_7_output, single_blocks_21_lin2_out)
    single_blocks_21_add_2_output = add(single_blocks_20_add_2_output, single_blocks_21_multiply_1_output)
    single_blocks_22_modulation_silu_minus = minus(vec)
    single_blocks_22_modulation_silu_exp = exp(single_blocks_22_modulation_silu_minus)
    single_blocks_22_modulation_silu_add = add(single_blocks_22_modulation_silu_add_left, single_blocks_22_modulation_silu_exp)
    single_blocks_22_modulation_silu_output = divide(vec, single_blocks_22_modulation_silu_add)
    single_blocks_22_modulation_lin_transpose_output = transpose(single_blocks_22_modulation_lin_weight, single_blocks_22_modulation_lin_transpose_axes)
    single_blocks_22_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_22_modulation_silu_output, single_blocks_22_modulation_lin_transpose_output)
    single_blocks_22_modulation_lin_out = add(single_blocks_22_modulation_lin_matrixmultiply_output, single_blocks_22_modulation_lin_bias)
    single_blocks_22_modulation_tensoritem_output = tensor_item(single_blocks_22_modulation_lin_out, single_blocks_22_modulation_tensoritem_index)
    single_blocks_22_modulation_split_output = split(single_blocks_22_modulation_tensoritem_output, single_blocks_22_modulation_split_split_size, single_blocks_22_modulation_split_axis)
    single_blocks_22_pre_norm_mean_output = reduce_mean(single_blocks_21_add_2_output, axis=single_blocks_22_pre_norm_mean_axis, keepdim=single_blocks_22_pre_norm_mean_keepdim)
    single_blocks_22_pre_norm_subtract_output = subtract(single_blocks_21_add_2_output, single_blocks_22_pre_norm_mean_output)
    single_blocks_22_pre_norm_variance_output = variance(single_blocks_21_add_2_output, axis=single_blocks_22_pre_norm_variance_axis, keepdim=single_blocks_22_pre_norm_variance_keepdim, correction=single_blocks_22_pre_norm_variance_correction)
    single_blocks_22_pre_norm_add_output = add(single_blocks_22_pre_norm_variance_output, single_blocks_22_pre_norm_add_right)
    single_blocks_22_pre_norm_sqrt_output = sqrt(single_blocks_22_pre_norm_add_output)
    single_blocks_22_pre_norm_divide_output = divide(single_blocks_22_pre_norm_subtract_output, single_blocks_22_pre_norm_sqrt_output)
    single_blocks_22_tensoritem_0_output = tensor_item(single_blocks_22_modulation_split_output, single_blocks_22_tensoritem_0_index)
    single_blocks_22_add_0_output = add(single_blocks_22_add_0_left, single_blocks_22_tensoritem_0_output)
    single_blocks_22_multiply_0_output = multiplication(single_blocks_22_add_0_output, single_blocks_22_pre_norm_divide_output)
    single_blocks_22_tensoritem_1_output = tensor_item(single_blocks_22_modulation_split_output, single_blocks_22_tensoritem_1_index)
    single_blocks_22_add_1_output = add(single_blocks_22_multiply_0_output, single_blocks_22_tensoritem_1_output)
    single_blocks_22_linear1_transpose_output = transpose(single_blocks_22_linear1_weight, single_blocks_22_linear1_transpose_axes)
    single_blocks_22_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_22_add_1_output, single_blocks_22_linear1_transpose_output)
    single_blocks_22_lin1_out = add(single_blocks_22_linear1_matrixmultiply_output, single_blocks_22_linear1_bias)
    single_blocks_22_tensoritem_2_output = tensor_item(single_blocks_22_lin1_out, single_blocks_22_tensoritem_2_index)
    single_blocks_22_reshape_output = reshape(single_blocks_22_tensoritem_2_output, single_blocks_22_totuple_output)
    single_blocks_22_transpose_out = transpose(single_blocks_22_reshape_output, single_blocks_22_transpose_axes)
    single_blocks_22_tensoritem_3_output = tensor_item(single_blocks_22_transpose_out, single_blocks_22_tensoritem_3_index)
    single_blocks_22_tensoritem_4_output = tensor_item(single_blocks_22_transpose_out, single_blocks_22_tensoritem_4_index)
    single_blocks_22_norm_query_norm_power_output = power(single_blocks_22_tensoritem_3_output, single_blocks_22_norm_query_norm_power_exponent)
    single_blocks_22_norm_query_norm_mean_output = reduce_mean(single_blocks_22_norm_query_norm_power_output, axis=single_blocks_22_norm_query_norm_mean_axis, keepdim=single_blocks_22_norm_query_norm_mean_keepdim)
    single_blocks_22_norm_query_norm_add_output = add(single_blocks_22_norm_query_norm_mean_output, single_blocks_22_norm_query_norm_add_right)
    single_blocks_22_norm_query_norm_sqrt_output = sqrt(single_blocks_22_norm_query_norm_add_output)
    single_blocks_22_norm_query_norm_divide_output = divide(single_blocks_22_norm_query_norm_divide_numerator, single_blocks_22_norm_query_norm_sqrt_output)
    single_blocks_22_norm_query_norm_multiply_0_output = multiplication(single_blocks_22_tensoritem_3_output, single_blocks_22_norm_query_norm_divide_output)
    single_blocks_22_norm_query_norm_multiply_1_output = multiplication(single_blocks_22_norm_query_norm_multiply_0_output, single_blocks_22_norm_query_norm_scale)
    single_blocks_22_norm_key_norm_power_output = power(single_blocks_22_tensoritem_4_output, single_blocks_22_norm_key_norm_power_exponent)
    single_blocks_22_norm_key_norm_mean_output = reduce_mean(single_blocks_22_norm_key_norm_power_output, axis=single_blocks_22_norm_key_norm_mean_axis, keepdim=single_blocks_22_norm_key_norm_mean_keepdim)
    single_blocks_22_norm_key_norm_add_output = add(single_blocks_22_norm_key_norm_mean_output, single_blocks_22_norm_key_norm_add_right)
    single_blocks_22_norm_key_norm_sqrt_output = sqrt(single_blocks_22_norm_key_norm_add_output)
    single_blocks_22_norm_key_norm_divide_output = divide(single_blocks_22_norm_key_norm_divide_numerator, single_blocks_22_norm_key_norm_sqrt_output)
    single_blocks_22_norm_key_norm_multiply_0_output = multiplication(single_blocks_22_tensoritem_4_output, single_blocks_22_norm_key_norm_divide_output)
    single_blocks_22_norm_key_norm_multiply_1_output = multiplication(single_blocks_22_norm_key_norm_multiply_0_output, single_blocks_22_norm_key_norm_scale)
    single_blocks_22_tensoritem_5_output = tensor_item(single_blocks_22_transpose_out, single_blocks_22_tensoritem_5_index)
    single_blocks_22_model_model_xq_ = reshape(single_blocks_22_norm_query_norm_multiply_1_output, single_blocks_22_model_model_totuple_0_output)
    single_blocks_22_model_model_xk_ = reshape(single_blocks_22_norm_key_norm_multiply_1_output, single_blocks_22_model_model_totuple_1_output)
    single_blocks_22_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_22_model_model_tensoritem_0_index)
    single_blocks_22_model_model_tensoritem_1_output = tensor_item(single_blocks_22_model_model_xq_, single_blocks_22_model_model_tensoritem_1_index)
    single_blocks_22_model_model_multiply_0_output = multiplication(single_blocks_22_model_model_tensoritem_0_output, single_blocks_22_model_model_tensoritem_1_output)
    single_blocks_22_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_22_model_model_tensoritem_2_index)
    single_blocks_22_model_model_tensoritem_3_output = tensor_item(single_blocks_22_model_model_xq_, single_blocks_22_model_model_tensoritem_3_index)
    single_blocks_22_model_model_multiply_1_output = multiplication(single_blocks_22_model_model_tensoritem_2_output, single_blocks_22_model_model_tensoritem_3_output)
    single_blocks_22_model_model_add_0_output = add(single_blocks_22_model_model_multiply_0_output, single_blocks_22_model_model_multiply_1_output)
    single_blocks_22_model_q_out = reshape(single_blocks_22_model_model_add_0_output, single_blocks_22_model_model_shape_0_output)
    single_blocks_22_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_22_model_model_tensoritem_4_index)
    single_blocks_22_model_model_tensoritem_5_output = tensor_item(single_blocks_22_model_model_xk_, single_blocks_22_model_model_tensoritem_5_index)
    single_blocks_22_model_model_multiply_2_output = multiplication(single_blocks_22_model_model_tensoritem_4_output, single_blocks_22_model_model_tensoritem_5_output)
    single_blocks_22_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_22_model_model_tensoritem_6_index)
    single_blocks_22_model_model_tensoritem_7_output = tensor_item(single_blocks_22_model_model_xk_, single_blocks_22_model_model_tensoritem_7_index)
    single_blocks_22_model_model_multiply_3_output = multiplication(single_blocks_22_model_model_tensoritem_6_output, single_blocks_22_model_model_tensoritem_7_output)
    single_blocks_22_model_model_add_1_output = add(single_blocks_22_model_model_multiply_2_output, single_blocks_22_model_model_multiply_3_output)
    single_blocks_22_model_k_out = reshape(single_blocks_22_model_model_add_1_output, single_blocks_22_model_model_shape_1_output)
    single_blocks_22_model_context = scaled_dot_product_attention(single_blocks_22_model_q_out, single_blocks_22_model_k_out, single_blocks_22_tensoritem_5_output, single_blocks_22_model_scaleddotproduct_attn_mask)
    single_blocks_22_model_transpose_output = transpose(single_blocks_22_model_context, single_blocks_22_model_transpose_axes)
    single_blocks_22_attn = reshape(single_blocks_22_model_transpose_output, single_blocks_22_model_totuple_output)
    single_blocks_22_tensoritem_6_output = tensor_item(single_blocks_22_lin1_out, single_blocks_22_tensoritem_6_index)
    single_blocks_22_mlp_act = gelu(single_blocks_22_tensoritem_6_output, single_blocks_22_gelu_approximate)
    single_blocks_22_concat_out = concat(single_blocks_22_attn, single_blocks_22_mlp_act, axis=single_blocks_22_concat_axis)
    single_blocks_22_linear2_transpose_output = transpose(single_blocks_22_linear2_weight, single_blocks_22_linear2_transpose_axes)
    single_blocks_22_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_22_concat_out, single_blocks_22_linear2_transpose_output)
    single_blocks_22_lin2_out = add(single_blocks_22_linear2_matrixmultiply_output, single_blocks_22_linear2_bias)
    single_blocks_22_tensoritem_7_output = tensor_item(single_blocks_22_modulation_split_output, single_blocks_22_tensoritem_7_index)
    single_blocks_22_multiply_1_output = multiplication(single_blocks_22_tensoritem_7_output, single_blocks_22_lin2_out)
    single_blocks_22_add_2_output = add(single_blocks_21_add_2_output, single_blocks_22_multiply_1_output)
    single_blocks_23_modulation_silu_minus = minus(vec)
    single_blocks_23_modulation_silu_exp = exp(single_blocks_23_modulation_silu_minus)
    single_blocks_23_modulation_silu_add = add(single_blocks_23_modulation_silu_add_left, single_blocks_23_modulation_silu_exp)
    single_blocks_23_modulation_silu_output = divide(vec, single_blocks_23_modulation_silu_add)
    single_blocks_23_modulation_lin_transpose_output = transpose(single_blocks_23_modulation_lin_weight, single_blocks_23_modulation_lin_transpose_axes)
    single_blocks_23_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_23_modulation_silu_output, single_blocks_23_modulation_lin_transpose_output)
    single_blocks_23_modulation_lin_out = add(single_blocks_23_modulation_lin_matrixmultiply_output, single_blocks_23_modulation_lin_bias)
    single_blocks_23_modulation_tensoritem_output = tensor_item(single_blocks_23_modulation_lin_out, single_blocks_23_modulation_tensoritem_index)
    single_blocks_23_modulation_split_output = split(single_blocks_23_modulation_tensoritem_output, single_blocks_23_modulation_split_split_size, single_blocks_23_modulation_split_axis)
    single_blocks_23_pre_norm_mean_output = reduce_mean(single_blocks_22_add_2_output, axis=single_blocks_23_pre_norm_mean_axis, keepdim=single_blocks_23_pre_norm_mean_keepdim)
    single_blocks_23_pre_norm_subtract_output = subtract(single_blocks_22_add_2_output, single_blocks_23_pre_norm_mean_output)
    single_blocks_23_pre_norm_variance_output = variance(single_blocks_22_add_2_output, axis=single_blocks_23_pre_norm_variance_axis, keepdim=single_blocks_23_pre_norm_variance_keepdim, correction=single_blocks_23_pre_norm_variance_correction)
    single_blocks_23_pre_norm_add_output = add(single_blocks_23_pre_norm_variance_output, single_blocks_23_pre_norm_add_right)
    single_blocks_23_pre_norm_sqrt_output = sqrt(single_blocks_23_pre_norm_add_output)
    single_blocks_23_pre_norm_divide_output = divide(single_blocks_23_pre_norm_subtract_output, single_blocks_23_pre_norm_sqrt_output)
    single_blocks_23_tensoritem_0_output = tensor_item(single_blocks_23_modulation_split_output, single_blocks_23_tensoritem_0_index)
    single_blocks_23_add_0_output = add(single_blocks_23_add_0_left, single_blocks_23_tensoritem_0_output)
    single_blocks_23_multiply_0_output = multiplication(single_blocks_23_add_0_output, single_blocks_23_pre_norm_divide_output)
    single_blocks_23_tensoritem_1_output = tensor_item(single_blocks_23_modulation_split_output, single_blocks_23_tensoritem_1_index)
    single_blocks_23_add_1_output = add(single_blocks_23_multiply_0_output, single_blocks_23_tensoritem_1_output)
    single_blocks_23_linear1_transpose_output = transpose(single_blocks_23_linear1_weight, single_blocks_23_linear1_transpose_axes)
    single_blocks_23_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_23_add_1_output, single_blocks_23_linear1_transpose_output)
    single_blocks_23_lin1_out = add(single_blocks_23_linear1_matrixmultiply_output, single_blocks_23_linear1_bias)
    single_blocks_23_tensoritem_2_output = tensor_item(single_blocks_23_lin1_out, single_blocks_23_tensoritem_2_index)
    single_blocks_23_reshape_output = reshape(single_blocks_23_tensoritem_2_output, single_blocks_23_totuple_output)
    single_blocks_23_transpose_out = transpose(single_blocks_23_reshape_output, single_blocks_23_transpose_axes)
    single_blocks_23_tensoritem_3_output = tensor_item(single_blocks_23_transpose_out, single_blocks_23_tensoritem_3_index)
    single_blocks_23_tensoritem_4_output = tensor_item(single_blocks_23_transpose_out, single_blocks_23_tensoritem_4_index)
    single_blocks_23_norm_query_norm_power_output = power(single_blocks_23_tensoritem_3_output, single_blocks_23_norm_query_norm_power_exponent)
    single_blocks_23_norm_query_norm_mean_output = reduce_mean(single_blocks_23_norm_query_norm_power_output, axis=single_blocks_23_norm_query_norm_mean_axis, keepdim=single_blocks_23_norm_query_norm_mean_keepdim)
    single_blocks_23_norm_query_norm_add_output = add(single_blocks_23_norm_query_norm_mean_output, single_blocks_23_norm_query_norm_add_right)
    single_blocks_23_norm_query_norm_sqrt_output = sqrt(single_blocks_23_norm_query_norm_add_output)
    single_blocks_23_norm_query_norm_divide_output = divide(single_blocks_23_norm_query_norm_divide_numerator, single_blocks_23_norm_query_norm_sqrt_output)
    single_blocks_23_norm_query_norm_multiply_0_output = multiplication(single_blocks_23_tensoritem_3_output, single_blocks_23_norm_query_norm_divide_output)
    single_blocks_23_norm_query_norm_multiply_1_output = multiplication(single_blocks_23_norm_query_norm_multiply_0_output, single_blocks_23_norm_query_norm_scale)
    single_blocks_23_norm_key_norm_power_output = power(single_blocks_23_tensoritem_4_output, single_blocks_23_norm_key_norm_power_exponent)
    single_blocks_23_norm_key_norm_mean_output = reduce_mean(single_blocks_23_norm_key_norm_power_output, axis=single_blocks_23_norm_key_norm_mean_axis, keepdim=single_blocks_23_norm_key_norm_mean_keepdim)
    single_blocks_23_norm_key_norm_add_output = add(single_blocks_23_norm_key_norm_mean_output, single_blocks_23_norm_key_norm_add_right)
    single_blocks_23_norm_key_norm_sqrt_output = sqrt(single_blocks_23_norm_key_norm_add_output)
    single_blocks_23_norm_key_norm_divide_output = divide(single_blocks_23_norm_key_norm_divide_numerator, single_blocks_23_norm_key_norm_sqrt_output)
    single_blocks_23_norm_key_norm_multiply_0_output = multiplication(single_blocks_23_tensoritem_4_output, single_blocks_23_norm_key_norm_divide_output)
    single_blocks_23_norm_key_norm_multiply_1_output = multiplication(single_blocks_23_norm_key_norm_multiply_0_output, single_blocks_23_norm_key_norm_scale)
    single_blocks_23_tensoritem_5_output = tensor_item(single_blocks_23_transpose_out, single_blocks_23_tensoritem_5_index)
    single_blocks_23_model_model_xq_ = reshape(single_blocks_23_norm_query_norm_multiply_1_output, single_blocks_23_model_model_totuple_0_output)
    single_blocks_23_model_model_xk_ = reshape(single_blocks_23_norm_key_norm_multiply_1_output, single_blocks_23_model_model_totuple_1_output)
    single_blocks_23_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_23_model_model_tensoritem_0_index)
    single_blocks_23_model_model_tensoritem_1_output = tensor_item(single_blocks_23_model_model_xq_, single_blocks_23_model_model_tensoritem_1_index)
    single_blocks_23_model_model_multiply_0_output = multiplication(single_blocks_23_model_model_tensoritem_0_output, single_blocks_23_model_model_tensoritem_1_output)
    single_blocks_23_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_23_model_model_tensoritem_2_index)
    single_blocks_23_model_model_tensoritem_3_output = tensor_item(single_blocks_23_model_model_xq_, single_blocks_23_model_model_tensoritem_3_index)
    single_blocks_23_model_model_multiply_1_output = multiplication(single_blocks_23_model_model_tensoritem_2_output, single_blocks_23_model_model_tensoritem_3_output)
    single_blocks_23_model_model_add_0_output = add(single_blocks_23_model_model_multiply_0_output, single_blocks_23_model_model_multiply_1_output)
    single_blocks_23_model_q_out = reshape(single_blocks_23_model_model_add_0_output, single_blocks_23_model_model_shape_0_output)
    single_blocks_23_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_23_model_model_tensoritem_4_index)
    single_blocks_23_model_model_tensoritem_5_output = tensor_item(single_blocks_23_model_model_xk_, single_blocks_23_model_model_tensoritem_5_index)
    single_blocks_23_model_model_multiply_2_output = multiplication(single_blocks_23_model_model_tensoritem_4_output, single_blocks_23_model_model_tensoritem_5_output)
    single_blocks_23_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_23_model_model_tensoritem_6_index)
    single_blocks_23_model_model_tensoritem_7_output = tensor_item(single_blocks_23_model_model_xk_, single_blocks_23_model_model_tensoritem_7_index)
    single_blocks_23_model_model_multiply_3_output = multiplication(single_blocks_23_model_model_tensoritem_6_output, single_blocks_23_model_model_tensoritem_7_output)
    single_blocks_23_model_model_add_1_output = add(single_blocks_23_model_model_multiply_2_output, single_blocks_23_model_model_multiply_3_output)
    single_blocks_23_model_k_out = reshape(single_blocks_23_model_model_add_1_output, single_blocks_23_model_model_shape_1_output)
    single_blocks_23_model_context = scaled_dot_product_attention(single_blocks_23_model_q_out, single_blocks_23_model_k_out, single_blocks_23_tensoritem_5_output, single_blocks_23_model_scaleddotproduct_attn_mask)
    single_blocks_23_model_transpose_output = transpose(single_blocks_23_model_context, single_blocks_23_model_transpose_axes)
    single_blocks_23_attn = reshape(single_blocks_23_model_transpose_output, single_blocks_23_model_totuple_output)
    single_blocks_23_tensoritem_6_output = tensor_item(single_blocks_23_lin1_out, single_blocks_23_tensoritem_6_index)
    single_blocks_23_mlp_act = gelu(single_blocks_23_tensoritem_6_output, single_blocks_23_gelu_approximate)
    single_blocks_23_concat_out = concat(single_blocks_23_attn, single_blocks_23_mlp_act, axis=single_blocks_23_concat_axis)
    single_blocks_23_linear2_transpose_output = transpose(single_blocks_23_linear2_weight, single_blocks_23_linear2_transpose_axes)
    single_blocks_23_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_23_concat_out, single_blocks_23_linear2_transpose_output)
    single_blocks_23_lin2_out = add(single_blocks_23_linear2_matrixmultiply_output, single_blocks_23_linear2_bias)
    single_blocks_23_tensoritem_7_output = tensor_item(single_blocks_23_modulation_split_output, single_blocks_23_tensoritem_7_index)
    single_blocks_23_multiply_1_output = multiplication(single_blocks_23_tensoritem_7_output, single_blocks_23_lin2_out)
    single_blocks_23_add_2_output = add(single_blocks_22_add_2_output, single_blocks_23_multiply_1_output)
    single_blocks_24_modulation_silu_minus = minus(vec)
    single_blocks_24_modulation_silu_exp = exp(single_blocks_24_modulation_silu_minus)
    single_blocks_24_modulation_silu_add = add(single_blocks_24_modulation_silu_add_left, single_blocks_24_modulation_silu_exp)
    single_blocks_24_modulation_silu_output = divide(vec, single_blocks_24_modulation_silu_add)
    single_blocks_24_modulation_lin_transpose_output = transpose(single_blocks_24_modulation_lin_weight, single_blocks_24_modulation_lin_transpose_axes)
    single_blocks_24_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_24_modulation_silu_output, single_blocks_24_modulation_lin_transpose_output)
    single_blocks_24_modulation_lin_out = add(single_blocks_24_modulation_lin_matrixmultiply_output, single_blocks_24_modulation_lin_bias)
    single_blocks_24_modulation_tensoritem_output = tensor_item(single_blocks_24_modulation_lin_out, single_blocks_24_modulation_tensoritem_index)
    single_blocks_24_modulation_split_output = split(single_blocks_24_modulation_tensoritem_output, single_blocks_24_modulation_split_split_size, single_blocks_24_modulation_split_axis)
    single_blocks_24_pre_norm_mean_output = reduce_mean(single_blocks_23_add_2_output, axis=single_blocks_24_pre_norm_mean_axis, keepdim=single_blocks_24_pre_norm_mean_keepdim)
    single_blocks_24_pre_norm_subtract_output = subtract(single_blocks_23_add_2_output, single_blocks_24_pre_norm_mean_output)
    single_blocks_24_pre_norm_variance_output = variance(single_blocks_23_add_2_output, axis=single_blocks_24_pre_norm_variance_axis, keepdim=single_blocks_24_pre_norm_variance_keepdim, correction=single_blocks_24_pre_norm_variance_correction)
    single_blocks_24_pre_norm_add_output = add(single_blocks_24_pre_norm_variance_output, single_blocks_24_pre_norm_add_right)
    single_blocks_24_pre_norm_sqrt_output = sqrt(single_blocks_24_pre_norm_add_output)
    single_blocks_24_pre_norm_divide_output = divide(single_blocks_24_pre_norm_subtract_output, single_blocks_24_pre_norm_sqrt_output)
    single_blocks_24_tensoritem_0_output = tensor_item(single_blocks_24_modulation_split_output, single_blocks_24_tensoritem_0_index)
    single_blocks_24_add_0_output = add(single_blocks_24_add_0_left, single_blocks_24_tensoritem_0_output)
    single_blocks_24_multiply_0_output = multiplication(single_blocks_24_add_0_output, single_blocks_24_pre_norm_divide_output)
    single_blocks_24_tensoritem_1_output = tensor_item(single_blocks_24_modulation_split_output, single_blocks_24_tensoritem_1_index)
    single_blocks_24_add_1_output = add(single_blocks_24_multiply_0_output, single_blocks_24_tensoritem_1_output)
    single_blocks_24_linear1_transpose_output = transpose(single_blocks_24_linear1_weight, single_blocks_24_linear1_transpose_axes)
    single_blocks_24_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_24_add_1_output, single_blocks_24_linear1_transpose_output)
    single_blocks_24_lin1_out = add(single_blocks_24_linear1_matrixmultiply_output, single_blocks_24_linear1_bias)
    single_blocks_24_tensoritem_2_output = tensor_item(single_blocks_24_lin1_out, single_blocks_24_tensoritem_2_index)
    single_blocks_24_reshape_output = reshape(single_blocks_24_tensoritem_2_output, single_blocks_24_totuple_output)
    single_blocks_24_transpose_out = transpose(single_blocks_24_reshape_output, single_blocks_24_transpose_axes)
    single_blocks_24_tensoritem_3_output = tensor_item(single_blocks_24_transpose_out, single_blocks_24_tensoritem_3_index)
    single_blocks_24_tensoritem_4_output = tensor_item(single_blocks_24_transpose_out, single_blocks_24_tensoritem_4_index)
    single_blocks_24_norm_query_norm_power_output = power(single_blocks_24_tensoritem_3_output, single_blocks_24_norm_query_norm_power_exponent)
    single_blocks_24_norm_query_norm_mean_output = reduce_mean(single_blocks_24_norm_query_norm_power_output, axis=single_blocks_24_norm_query_norm_mean_axis, keepdim=single_blocks_24_norm_query_norm_mean_keepdim)
    single_blocks_24_norm_query_norm_add_output = add(single_blocks_24_norm_query_norm_mean_output, single_blocks_24_norm_query_norm_add_right)
    single_blocks_24_norm_query_norm_sqrt_output = sqrt(single_blocks_24_norm_query_norm_add_output)
    single_blocks_24_norm_query_norm_divide_output = divide(single_blocks_24_norm_query_norm_divide_numerator, single_blocks_24_norm_query_norm_sqrt_output)
    single_blocks_24_norm_query_norm_multiply_0_output = multiplication(single_blocks_24_tensoritem_3_output, single_blocks_24_norm_query_norm_divide_output)
    single_blocks_24_norm_query_norm_multiply_1_output = multiplication(single_blocks_24_norm_query_norm_multiply_0_output, single_blocks_24_norm_query_norm_scale)
    single_blocks_24_norm_key_norm_power_output = power(single_blocks_24_tensoritem_4_output, single_blocks_24_norm_key_norm_power_exponent)
    single_blocks_24_norm_key_norm_mean_output = reduce_mean(single_blocks_24_norm_key_norm_power_output, axis=single_blocks_24_norm_key_norm_mean_axis, keepdim=single_blocks_24_norm_key_norm_mean_keepdim)
    single_blocks_24_norm_key_norm_add_output = add(single_blocks_24_norm_key_norm_mean_output, single_blocks_24_norm_key_norm_add_right)
    single_blocks_24_norm_key_norm_sqrt_output = sqrt(single_blocks_24_norm_key_norm_add_output)
    single_blocks_24_norm_key_norm_divide_output = divide(single_blocks_24_norm_key_norm_divide_numerator, single_blocks_24_norm_key_norm_sqrt_output)
    single_blocks_24_norm_key_norm_multiply_0_output = multiplication(single_blocks_24_tensoritem_4_output, single_blocks_24_norm_key_norm_divide_output)
    single_blocks_24_norm_key_norm_multiply_1_output = multiplication(single_blocks_24_norm_key_norm_multiply_0_output, single_blocks_24_norm_key_norm_scale)
    single_blocks_24_tensoritem_5_output = tensor_item(single_blocks_24_transpose_out, single_blocks_24_tensoritem_5_index)
    single_blocks_24_model_model_xq_ = reshape(single_blocks_24_norm_query_norm_multiply_1_output, single_blocks_24_model_model_totuple_0_output)
    single_blocks_24_model_model_xk_ = reshape(single_blocks_24_norm_key_norm_multiply_1_output, single_blocks_24_model_model_totuple_1_output)
    single_blocks_24_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_24_model_model_tensoritem_0_index)
    single_blocks_24_model_model_tensoritem_1_output = tensor_item(single_blocks_24_model_model_xq_, single_blocks_24_model_model_tensoritem_1_index)
    single_blocks_24_model_model_multiply_0_output = multiplication(single_blocks_24_model_model_tensoritem_0_output, single_blocks_24_model_model_tensoritem_1_output)
    single_blocks_24_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_24_model_model_tensoritem_2_index)
    single_blocks_24_model_model_tensoritem_3_output = tensor_item(single_blocks_24_model_model_xq_, single_blocks_24_model_model_tensoritem_3_index)
    single_blocks_24_model_model_multiply_1_output = multiplication(single_blocks_24_model_model_tensoritem_2_output, single_blocks_24_model_model_tensoritem_3_output)
    single_blocks_24_model_model_add_0_output = add(single_blocks_24_model_model_multiply_0_output, single_blocks_24_model_model_multiply_1_output)
    single_blocks_24_model_q_out = reshape(single_blocks_24_model_model_add_0_output, single_blocks_24_model_model_shape_0_output)
    single_blocks_24_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_24_model_model_tensoritem_4_index)
    single_blocks_24_model_model_tensoritem_5_output = tensor_item(single_blocks_24_model_model_xk_, single_blocks_24_model_model_tensoritem_5_index)
    single_blocks_24_model_model_multiply_2_output = multiplication(single_blocks_24_model_model_tensoritem_4_output, single_blocks_24_model_model_tensoritem_5_output)
    single_blocks_24_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_24_model_model_tensoritem_6_index)
    single_blocks_24_model_model_tensoritem_7_output = tensor_item(single_blocks_24_model_model_xk_, single_blocks_24_model_model_tensoritem_7_index)
    single_blocks_24_model_model_multiply_3_output = multiplication(single_blocks_24_model_model_tensoritem_6_output, single_blocks_24_model_model_tensoritem_7_output)
    single_blocks_24_model_model_add_1_output = add(single_blocks_24_model_model_multiply_2_output, single_blocks_24_model_model_multiply_3_output)
    single_blocks_24_model_k_out = reshape(single_blocks_24_model_model_add_1_output, single_blocks_24_model_model_shape_1_output)
    single_blocks_24_model_context = scaled_dot_product_attention(single_blocks_24_model_q_out, single_blocks_24_model_k_out, single_blocks_24_tensoritem_5_output, single_blocks_24_model_scaleddotproduct_attn_mask)
    single_blocks_24_model_transpose_output = transpose(single_blocks_24_model_context, single_blocks_24_model_transpose_axes)
    single_blocks_24_attn = reshape(single_blocks_24_model_transpose_output, single_blocks_24_model_totuple_output)
    single_blocks_24_tensoritem_6_output = tensor_item(single_blocks_24_lin1_out, single_blocks_24_tensoritem_6_index)
    single_blocks_24_mlp_act = gelu(single_blocks_24_tensoritem_6_output, single_blocks_24_gelu_approximate)
    single_blocks_24_concat_out = concat(single_blocks_24_attn, single_blocks_24_mlp_act, axis=single_blocks_24_concat_axis)
    single_blocks_24_linear2_transpose_output = transpose(single_blocks_24_linear2_weight, single_blocks_24_linear2_transpose_axes)
    single_blocks_24_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_24_concat_out, single_blocks_24_linear2_transpose_output)
    single_blocks_24_lin2_out = add(single_blocks_24_linear2_matrixmultiply_output, single_blocks_24_linear2_bias)
    single_blocks_24_tensoritem_7_output = tensor_item(single_blocks_24_modulation_split_output, single_blocks_24_tensoritem_7_index)
    single_blocks_24_multiply_1_output = multiplication(single_blocks_24_tensoritem_7_output, single_blocks_24_lin2_out)
    single_blocks_24_add_2_output = add(single_blocks_23_add_2_output, single_blocks_24_multiply_1_output)
    single_blocks_25_modulation_silu_minus = minus(vec)
    single_blocks_25_modulation_silu_exp = exp(single_blocks_25_modulation_silu_minus)
    single_blocks_25_modulation_silu_add = add(single_blocks_25_modulation_silu_add_left, single_blocks_25_modulation_silu_exp)
    single_blocks_25_modulation_silu_output = divide(vec, single_blocks_25_modulation_silu_add)
    single_blocks_25_modulation_lin_transpose_output = transpose(single_blocks_25_modulation_lin_weight, single_blocks_25_modulation_lin_transpose_axes)
    single_blocks_25_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_25_modulation_silu_output, single_blocks_25_modulation_lin_transpose_output)
    single_blocks_25_modulation_lin_out = add(single_blocks_25_modulation_lin_matrixmultiply_output, single_blocks_25_modulation_lin_bias)
    single_blocks_25_modulation_tensoritem_output = tensor_item(single_blocks_25_modulation_lin_out, single_blocks_25_modulation_tensoritem_index)
    single_blocks_25_modulation_split_output = split(single_blocks_25_modulation_tensoritem_output, single_blocks_25_modulation_split_split_size, single_blocks_25_modulation_split_axis)
    single_blocks_25_pre_norm_mean_output = reduce_mean(single_blocks_24_add_2_output, axis=single_blocks_25_pre_norm_mean_axis, keepdim=single_blocks_25_pre_norm_mean_keepdim)
    single_blocks_25_pre_norm_subtract_output = subtract(single_blocks_24_add_2_output, single_blocks_25_pre_norm_mean_output)
    single_blocks_25_pre_norm_variance_output = variance(single_blocks_24_add_2_output, axis=single_blocks_25_pre_norm_variance_axis, keepdim=single_blocks_25_pre_norm_variance_keepdim, correction=single_blocks_25_pre_norm_variance_correction)
    single_blocks_25_pre_norm_add_output = add(single_blocks_25_pre_norm_variance_output, single_blocks_25_pre_norm_add_right)
    single_blocks_25_pre_norm_sqrt_output = sqrt(single_blocks_25_pre_norm_add_output)
    single_blocks_25_pre_norm_divide_output = divide(single_blocks_25_pre_norm_subtract_output, single_blocks_25_pre_norm_sqrt_output)
    single_blocks_25_tensoritem_0_output = tensor_item(single_blocks_25_modulation_split_output, single_blocks_25_tensoritem_0_index)
    single_blocks_25_add_0_output = add(single_blocks_25_add_0_left, single_blocks_25_tensoritem_0_output)
    single_blocks_25_multiply_0_output = multiplication(single_blocks_25_add_0_output, single_blocks_25_pre_norm_divide_output)
    single_blocks_25_tensoritem_1_output = tensor_item(single_blocks_25_modulation_split_output, single_blocks_25_tensoritem_1_index)
    single_blocks_25_add_1_output = add(single_blocks_25_multiply_0_output, single_blocks_25_tensoritem_1_output)
    single_blocks_25_linear1_transpose_output = transpose(single_blocks_25_linear1_weight, single_blocks_25_linear1_transpose_axes)
    single_blocks_25_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_25_add_1_output, single_blocks_25_linear1_transpose_output)
    single_blocks_25_lin1_out = add(single_blocks_25_linear1_matrixmultiply_output, single_blocks_25_linear1_bias)
    single_blocks_25_tensoritem_2_output = tensor_item(single_blocks_25_lin1_out, single_blocks_25_tensoritem_2_index)
    single_blocks_25_reshape_output = reshape(single_blocks_25_tensoritem_2_output, single_blocks_25_totuple_output)
    single_blocks_25_transpose_out = transpose(single_blocks_25_reshape_output, single_blocks_25_transpose_axes)
    single_blocks_25_tensoritem_3_output = tensor_item(single_blocks_25_transpose_out, single_blocks_25_tensoritem_3_index)
    single_blocks_25_tensoritem_4_output = tensor_item(single_blocks_25_transpose_out, single_blocks_25_tensoritem_4_index)
    single_blocks_25_norm_query_norm_power_output = power(single_blocks_25_tensoritem_3_output, single_blocks_25_norm_query_norm_power_exponent)
    single_blocks_25_norm_query_norm_mean_output = reduce_mean(single_blocks_25_norm_query_norm_power_output, axis=single_blocks_25_norm_query_norm_mean_axis, keepdim=single_blocks_25_norm_query_norm_mean_keepdim)
    single_blocks_25_norm_query_norm_add_output = add(single_blocks_25_norm_query_norm_mean_output, single_blocks_25_norm_query_norm_add_right)
    single_blocks_25_norm_query_norm_sqrt_output = sqrt(single_blocks_25_norm_query_norm_add_output)
    single_blocks_25_norm_query_norm_divide_output = divide(single_blocks_25_norm_query_norm_divide_numerator, single_blocks_25_norm_query_norm_sqrt_output)
    single_blocks_25_norm_query_norm_multiply_0_output = multiplication(single_blocks_25_tensoritem_3_output, single_blocks_25_norm_query_norm_divide_output)
    single_blocks_25_norm_query_norm_multiply_1_output = multiplication(single_blocks_25_norm_query_norm_multiply_0_output, single_blocks_25_norm_query_norm_scale)
    single_blocks_25_norm_key_norm_power_output = power(single_blocks_25_tensoritem_4_output, single_blocks_25_norm_key_norm_power_exponent)
    single_blocks_25_norm_key_norm_mean_output = reduce_mean(single_blocks_25_norm_key_norm_power_output, axis=single_blocks_25_norm_key_norm_mean_axis, keepdim=single_blocks_25_norm_key_norm_mean_keepdim)
    single_blocks_25_norm_key_norm_add_output = add(single_blocks_25_norm_key_norm_mean_output, single_blocks_25_norm_key_norm_add_right)
    single_blocks_25_norm_key_norm_sqrt_output = sqrt(single_blocks_25_norm_key_norm_add_output)
    single_blocks_25_norm_key_norm_divide_output = divide(single_blocks_25_norm_key_norm_divide_numerator, single_blocks_25_norm_key_norm_sqrt_output)
    single_blocks_25_norm_key_norm_multiply_0_output = multiplication(single_blocks_25_tensoritem_4_output, single_blocks_25_norm_key_norm_divide_output)
    single_blocks_25_norm_key_norm_multiply_1_output = multiplication(single_blocks_25_norm_key_norm_multiply_0_output, single_blocks_25_norm_key_norm_scale)
    single_blocks_25_tensoritem_5_output = tensor_item(single_blocks_25_transpose_out, single_blocks_25_tensoritem_5_index)
    single_blocks_25_model_model_xq_ = reshape(single_blocks_25_norm_query_norm_multiply_1_output, single_blocks_25_model_model_totuple_0_output)
    single_blocks_25_model_model_xk_ = reshape(single_blocks_25_norm_key_norm_multiply_1_output, single_blocks_25_model_model_totuple_1_output)
    single_blocks_25_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_25_model_model_tensoritem_0_index)
    single_blocks_25_model_model_tensoritem_1_output = tensor_item(single_blocks_25_model_model_xq_, single_blocks_25_model_model_tensoritem_1_index)
    single_blocks_25_model_model_multiply_0_output = multiplication(single_blocks_25_model_model_tensoritem_0_output, single_blocks_25_model_model_tensoritem_1_output)
    single_blocks_25_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_25_model_model_tensoritem_2_index)
    single_blocks_25_model_model_tensoritem_3_output = tensor_item(single_blocks_25_model_model_xq_, single_blocks_25_model_model_tensoritem_3_index)
    single_blocks_25_model_model_multiply_1_output = multiplication(single_blocks_25_model_model_tensoritem_2_output, single_blocks_25_model_model_tensoritem_3_output)
    single_blocks_25_model_model_add_0_output = add(single_blocks_25_model_model_multiply_0_output, single_blocks_25_model_model_multiply_1_output)
    single_blocks_25_model_q_out = reshape(single_blocks_25_model_model_add_0_output, single_blocks_25_model_model_shape_0_output)
    single_blocks_25_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_25_model_model_tensoritem_4_index)
    single_blocks_25_model_model_tensoritem_5_output = tensor_item(single_blocks_25_model_model_xk_, single_blocks_25_model_model_tensoritem_5_index)
    single_blocks_25_model_model_multiply_2_output = multiplication(single_blocks_25_model_model_tensoritem_4_output, single_blocks_25_model_model_tensoritem_5_output)
    single_blocks_25_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_25_model_model_tensoritem_6_index)
    single_blocks_25_model_model_tensoritem_7_output = tensor_item(single_blocks_25_model_model_xk_, single_blocks_25_model_model_tensoritem_7_index)
    single_blocks_25_model_model_multiply_3_output = multiplication(single_blocks_25_model_model_tensoritem_6_output, single_blocks_25_model_model_tensoritem_7_output)
    single_blocks_25_model_model_add_1_output = add(single_blocks_25_model_model_multiply_2_output, single_blocks_25_model_model_multiply_3_output)
    single_blocks_25_model_k_out = reshape(single_blocks_25_model_model_add_1_output, single_blocks_25_model_model_shape_1_output)
    single_blocks_25_model_context = scaled_dot_product_attention(single_blocks_25_model_q_out, single_blocks_25_model_k_out, single_blocks_25_tensoritem_5_output, single_blocks_25_model_scaleddotproduct_attn_mask)
    single_blocks_25_model_transpose_output = transpose(single_blocks_25_model_context, single_blocks_25_model_transpose_axes)
    single_blocks_25_attn = reshape(single_blocks_25_model_transpose_output, single_blocks_25_model_totuple_output)
    single_blocks_25_tensoritem_6_output = tensor_item(single_blocks_25_lin1_out, single_blocks_25_tensoritem_6_index)
    single_blocks_25_mlp_act = gelu(single_blocks_25_tensoritem_6_output, single_blocks_25_gelu_approximate)
    single_blocks_25_concat_out = concat(single_blocks_25_attn, single_blocks_25_mlp_act, axis=single_blocks_25_concat_axis)
    single_blocks_25_linear2_transpose_output = transpose(single_blocks_25_linear2_weight, single_blocks_25_linear2_transpose_axes)
    single_blocks_25_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_25_concat_out, single_blocks_25_linear2_transpose_output)
    single_blocks_25_lin2_out = add(single_blocks_25_linear2_matrixmultiply_output, single_blocks_25_linear2_bias)
    single_blocks_25_tensoritem_7_output = tensor_item(single_blocks_25_modulation_split_output, single_blocks_25_tensoritem_7_index)
    single_blocks_25_multiply_1_output = multiplication(single_blocks_25_tensoritem_7_output, single_blocks_25_lin2_out)
    single_blocks_25_add_2_output = add(single_blocks_24_add_2_output, single_blocks_25_multiply_1_output)
    single_blocks_26_modulation_silu_minus = minus(vec)
    single_blocks_26_modulation_silu_exp = exp(single_blocks_26_modulation_silu_minus)
    single_blocks_26_modulation_silu_add = add(single_blocks_26_modulation_silu_add_left, single_blocks_26_modulation_silu_exp)
    single_blocks_26_modulation_silu_output = divide(vec, single_blocks_26_modulation_silu_add)
    single_blocks_26_modulation_lin_transpose_output = transpose(single_blocks_26_modulation_lin_weight, single_blocks_26_modulation_lin_transpose_axes)
    single_blocks_26_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_26_modulation_silu_output, single_blocks_26_modulation_lin_transpose_output)
    single_blocks_26_modulation_lin_out = add(single_blocks_26_modulation_lin_matrixmultiply_output, single_blocks_26_modulation_lin_bias)
    single_blocks_26_modulation_tensoritem_output = tensor_item(single_blocks_26_modulation_lin_out, single_blocks_26_modulation_tensoritem_index)
    single_blocks_26_modulation_split_output = split(single_blocks_26_modulation_tensoritem_output, single_blocks_26_modulation_split_split_size, single_blocks_26_modulation_split_axis)
    single_blocks_26_pre_norm_mean_output = reduce_mean(single_blocks_25_add_2_output, axis=single_blocks_26_pre_norm_mean_axis, keepdim=single_blocks_26_pre_norm_mean_keepdim)
    single_blocks_26_pre_norm_subtract_output = subtract(single_blocks_25_add_2_output, single_blocks_26_pre_norm_mean_output)
    single_blocks_26_pre_norm_variance_output = variance(single_blocks_25_add_2_output, axis=single_blocks_26_pre_norm_variance_axis, keepdim=single_blocks_26_pre_norm_variance_keepdim, correction=single_blocks_26_pre_norm_variance_correction)
    single_blocks_26_pre_norm_add_output = add(single_blocks_26_pre_norm_variance_output, single_blocks_26_pre_norm_add_right)
    single_blocks_26_pre_norm_sqrt_output = sqrt(single_blocks_26_pre_norm_add_output)
    single_blocks_26_pre_norm_divide_output = divide(single_blocks_26_pre_norm_subtract_output, single_blocks_26_pre_norm_sqrt_output)
    single_blocks_26_tensoritem_0_output = tensor_item(single_blocks_26_modulation_split_output, single_blocks_26_tensoritem_0_index)
    single_blocks_26_add_0_output = add(single_blocks_26_add_0_left, single_blocks_26_tensoritem_0_output)
    single_blocks_26_multiply_0_output = multiplication(single_blocks_26_add_0_output, single_blocks_26_pre_norm_divide_output)
    single_blocks_26_tensoritem_1_output = tensor_item(single_blocks_26_modulation_split_output, single_blocks_26_tensoritem_1_index)
    single_blocks_26_add_1_output = add(single_blocks_26_multiply_0_output, single_blocks_26_tensoritem_1_output)
    single_blocks_26_linear1_transpose_output = transpose(single_blocks_26_linear1_weight, single_blocks_26_linear1_transpose_axes)
    single_blocks_26_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_26_add_1_output, single_blocks_26_linear1_transpose_output)
    single_blocks_26_lin1_out = add(single_blocks_26_linear1_matrixmultiply_output, single_blocks_26_linear1_bias)
    single_blocks_26_tensoritem_2_output = tensor_item(single_blocks_26_lin1_out, single_blocks_26_tensoritem_2_index)
    single_blocks_26_reshape_output = reshape(single_blocks_26_tensoritem_2_output, single_blocks_26_totuple_output)
    single_blocks_26_transpose_out = transpose(single_blocks_26_reshape_output, single_blocks_26_transpose_axes)
    single_blocks_26_tensoritem_3_output = tensor_item(single_blocks_26_transpose_out, single_blocks_26_tensoritem_3_index)
    single_blocks_26_tensoritem_4_output = tensor_item(single_blocks_26_transpose_out, single_blocks_26_tensoritem_4_index)
    single_blocks_26_norm_query_norm_power_output = power(single_blocks_26_tensoritem_3_output, single_blocks_26_norm_query_norm_power_exponent)
    single_blocks_26_norm_query_norm_mean_output = reduce_mean(single_blocks_26_norm_query_norm_power_output, axis=single_blocks_26_norm_query_norm_mean_axis, keepdim=single_blocks_26_norm_query_norm_mean_keepdim)
    single_blocks_26_norm_query_norm_add_output = add(single_blocks_26_norm_query_norm_mean_output, single_blocks_26_norm_query_norm_add_right)
    single_blocks_26_norm_query_norm_sqrt_output = sqrt(single_blocks_26_norm_query_norm_add_output)
    single_blocks_26_norm_query_norm_divide_output = divide(single_blocks_26_norm_query_norm_divide_numerator, single_blocks_26_norm_query_norm_sqrt_output)
    single_blocks_26_norm_query_norm_multiply_0_output = multiplication(single_blocks_26_tensoritem_3_output, single_blocks_26_norm_query_norm_divide_output)
    single_blocks_26_norm_query_norm_multiply_1_output = multiplication(single_blocks_26_norm_query_norm_multiply_0_output, single_blocks_26_norm_query_norm_scale)
    single_blocks_26_norm_key_norm_power_output = power(single_blocks_26_tensoritem_4_output, single_blocks_26_norm_key_norm_power_exponent)
    single_blocks_26_norm_key_norm_mean_output = reduce_mean(single_blocks_26_norm_key_norm_power_output, axis=single_blocks_26_norm_key_norm_mean_axis, keepdim=single_blocks_26_norm_key_norm_mean_keepdim)
    single_blocks_26_norm_key_norm_add_output = add(single_blocks_26_norm_key_norm_mean_output, single_blocks_26_norm_key_norm_add_right)
    single_blocks_26_norm_key_norm_sqrt_output = sqrt(single_blocks_26_norm_key_norm_add_output)
    single_blocks_26_norm_key_norm_divide_output = divide(single_blocks_26_norm_key_norm_divide_numerator, single_blocks_26_norm_key_norm_sqrt_output)
    single_blocks_26_norm_key_norm_multiply_0_output = multiplication(single_blocks_26_tensoritem_4_output, single_blocks_26_norm_key_norm_divide_output)
    single_blocks_26_norm_key_norm_multiply_1_output = multiplication(single_blocks_26_norm_key_norm_multiply_0_output, single_blocks_26_norm_key_norm_scale)
    single_blocks_26_tensoritem_5_output = tensor_item(single_blocks_26_transpose_out, single_blocks_26_tensoritem_5_index)
    single_blocks_26_model_model_xq_ = reshape(single_blocks_26_norm_query_norm_multiply_1_output, single_blocks_26_model_model_totuple_0_output)
    single_blocks_26_model_model_xk_ = reshape(single_blocks_26_norm_key_norm_multiply_1_output, single_blocks_26_model_model_totuple_1_output)
    single_blocks_26_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_26_model_model_tensoritem_0_index)
    single_blocks_26_model_model_tensoritem_1_output = tensor_item(single_blocks_26_model_model_xq_, single_blocks_26_model_model_tensoritem_1_index)
    single_blocks_26_model_model_multiply_0_output = multiplication(single_blocks_26_model_model_tensoritem_0_output, single_blocks_26_model_model_tensoritem_1_output)
    single_blocks_26_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_26_model_model_tensoritem_2_index)
    single_blocks_26_model_model_tensoritem_3_output = tensor_item(single_blocks_26_model_model_xq_, single_blocks_26_model_model_tensoritem_3_index)
    single_blocks_26_model_model_multiply_1_output = multiplication(single_blocks_26_model_model_tensoritem_2_output, single_blocks_26_model_model_tensoritem_3_output)
    single_blocks_26_model_model_add_0_output = add(single_blocks_26_model_model_multiply_0_output, single_blocks_26_model_model_multiply_1_output)
    single_blocks_26_model_q_out = reshape(single_blocks_26_model_model_add_0_output, single_blocks_26_model_model_shape_0_output)
    single_blocks_26_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_26_model_model_tensoritem_4_index)
    single_blocks_26_model_model_tensoritem_5_output = tensor_item(single_blocks_26_model_model_xk_, single_blocks_26_model_model_tensoritem_5_index)
    single_blocks_26_model_model_multiply_2_output = multiplication(single_blocks_26_model_model_tensoritem_4_output, single_blocks_26_model_model_tensoritem_5_output)
    single_blocks_26_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_26_model_model_tensoritem_6_index)
    single_blocks_26_model_model_tensoritem_7_output = tensor_item(single_blocks_26_model_model_xk_, single_blocks_26_model_model_tensoritem_7_index)
    single_blocks_26_model_model_multiply_3_output = multiplication(single_blocks_26_model_model_tensoritem_6_output, single_blocks_26_model_model_tensoritem_7_output)
    single_blocks_26_model_model_add_1_output = add(single_blocks_26_model_model_multiply_2_output, single_blocks_26_model_model_multiply_3_output)
    single_blocks_26_model_k_out = reshape(single_blocks_26_model_model_add_1_output, single_blocks_26_model_model_shape_1_output)
    single_blocks_26_model_context = scaled_dot_product_attention(single_blocks_26_model_q_out, single_blocks_26_model_k_out, single_blocks_26_tensoritem_5_output, single_blocks_26_model_scaleddotproduct_attn_mask)
    single_blocks_26_model_transpose_output = transpose(single_blocks_26_model_context, single_blocks_26_model_transpose_axes)
    single_blocks_26_attn = reshape(single_blocks_26_model_transpose_output, single_blocks_26_model_totuple_output)
    single_blocks_26_tensoritem_6_output = tensor_item(single_blocks_26_lin1_out, single_blocks_26_tensoritem_6_index)
    single_blocks_26_mlp_act = gelu(single_blocks_26_tensoritem_6_output, single_blocks_26_gelu_approximate)
    single_blocks_26_concat_out = concat(single_blocks_26_attn, single_blocks_26_mlp_act, axis=single_blocks_26_concat_axis)
    single_blocks_26_linear2_transpose_output = transpose(single_blocks_26_linear2_weight, single_blocks_26_linear2_transpose_axes)
    single_blocks_26_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_26_concat_out, single_blocks_26_linear2_transpose_output)
    single_blocks_26_lin2_out = add(single_blocks_26_linear2_matrixmultiply_output, single_blocks_26_linear2_bias)
    single_blocks_26_tensoritem_7_output = tensor_item(single_blocks_26_modulation_split_output, single_blocks_26_tensoritem_7_index)
    single_blocks_26_multiply_1_output = multiplication(single_blocks_26_tensoritem_7_output, single_blocks_26_lin2_out)
    single_blocks_26_add_2_output = add(single_blocks_25_add_2_output, single_blocks_26_multiply_1_output)
    single_blocks_27_modulation_silu_minus = minus(vec)
    single_blocks_27_modulation_silu_exp = exp(single_blocks_27_modulation_silu_minus)
    single_blocks_27_modulation_silu_add = add(single_blocks_27_modulation_silu_add_left, single_blocks_27_modulation_silu_exp)
    single_blocks_27_modulation_silu_output = divide(vec, single_blocks_27_modulation_silu_add)
    single_blocks_27_modulation_lin_transpose_output = transpose(single_blocks_27_modulation_lin_weight, single_blocks_27_modulation_lin_transpose_axes)
    single_blocks_27_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_27_modulation_silu_output, single_blocks_27_modulation_lin_transpose_output)
    single_blocks_27_modulation_lin_out = add(single_blocks_27_modulation_lin_matrixmultiply_output, single_blocks_27_modulation_lin_bias)
    single_blocks_27_modulation_tensoritem_output = tensor_item(single_blocks_27_modulation_lin_out, single_blocks_27_modulation_tensoritem_index)
    single_blocks_27_modulation_split_output = split(single_blocks_27_modulation_tensoritem_output, single_blocks_27_modulation_split_split_size, single_blocks_27_modulation_split_axis)
    single_blocks_27_pre_norm_mean_output = reduce_mean(single_blocks_26_add_2_output, axis=single_blocks_27_pre_norm_mean_axis, keepdim=single_blocks_27_pre_norm_mean_keepdim)
    single_blocks_27_pre_norm_subtract_output = subtract(single_blocks_26_add_2_output, single_blocks_27_pre_norm_mean_output)
    single_blocks_27_pre_norm_variance_output = variance(single_blocks_26_add_2_output, axis=single_blocks_27_pre_norm_variance_axis, keepdim=single_blocks_27_pre_norm_variance_keepdim, correction=single_blocks_27_pre_norm_variance_correction)
    single_blocks_27_pre_norm_add_output = add(single_blocks_27_pre_norm_variance_output, single_blocks_27_pre_norm_add_right)
    single_blocks_27_pre_norm_sqrt_output = sqrt(single_blocks_27_pre_norm_add_output)
    single_blocks_27_pre_norm_divide_output = divide(single_blocks_27_pre_norm_subtract_output, single_blocks_27_pre_norm_sqrt_output)
    single_blocks_27_tensoritem_0_output = tensor_item(single_blocks_27_modulation_split_output, single_blocks_27_tensoritem_0_index)
    single_blocks_27_add_0_output = add(single_blocks_27_add_0_left, single_blocks_27_tensoritem_0_output)
    single_blocks_27_multiply_0_output = multiplication(single_blocks_27_add_0_output, single_blocks_27_pre_norm_divide_output)
    single_blocks_27_tensoritem_1_output = tensor_item(single_blocks_27_modulation_split_output, single_blocks_27_tensoritem_1_index)
    single_blocks_27_add_1_output = add(single_blocks_27_multiply_0_output, single_blocks_27_tensoritem_1_output)
    single_blocks_27_linear1_transpose_output = transpose(single_blocks_27_linear1_weight, single_blocks_27_linear1_transpose_axes)
    single_blocks_27_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_27_add_1_output, single_blocks_27_linear1_transpose_output)
    single_blocks_27_lin1_out = add(single_blocks_27_linear1_matrixmultiply_output, single_blocks_27_linear1_bias)
    single_blocks_27_tensoritem_2_output = tensor_item(single_blocks_27_lin1_out, single_blocks_27_tensoritem_2_index)
    single_blocks_27_reshape_output = reshape(single_blocks_27_tensoritem_2_output, single_blocks_27_totuple_output)
    single_blocks_27_transpose_out = transpose(single_blocks_27_reshape_output, single_blocks_27_transpose_axes)
    single_blocks_27_tensoritem_3_output = tensor_item(single_blocks_27_transpose_out, single_blocks_27_tensoritem_3_index)
    single_blocks_27_tensoritem_4_output = tensor_item(single_blocks_27_transpose_out, single_blocks_27_tensoritem_4_index)
    single_blocks_27_norm_query_norm_power_output = power(single_blocks_27_tensoritem_3_output, single_blocks_27_norm_query_norm_power_exponent)
    single_blocks_27_norm_query_norm_mean_output = reduce_mean(single_blocks_27_norm_query_norm_power_output, axis=single_blocks_27_norm_query_norm_mean_axis, keepdim=single_blocks_27_norm_query_norm_mean_keepdim)
    single_blocks_27_norm_query_norm_add_output = add(single_blocks_27_norm_query_norm_mean_output, single_blocks_27_norm_query_norm_add_right)
    single_blocks_27_norm_query_norm_sqrt_output = sqrt(single_blocks_27_norm_query_norm_add_output)
    single_blocks_27_norm_query_norm_divide_output = divide(single_blocks_27_norm_query_norm_divide_numerator, single_blocks_27_norm_query_norm_sqrt_output)
    single_blocks_27_norm_query_norm_multiply_0_output = multiplication(single_blocks_27_tensoritem_3_output, single_blocks_27_norm_query_norm_divide_output)
    single_blocks_27_norm_query_norm_multiply_1_output = multiplication(single_blocks_27_norm_query_norm_multiply_0_output, single_blocks_27_norm_query_norm_scale)
    single_blocks_27_norm_key_norm_power_output = power(single_blocks_27_tensoritem_4_output, single_blocks_27_norm_key_norm_power_exponent)
    single_blocks_27_norm_key_norm_mean_output = reduce_mean(single_blocks_27_norm_key_norm_power_output, axis=single_blocks_27_norm_key_norm_mean_axis, keepdim=single_blocks_27_norm_key_norm_mean_keepdim)
    single_blocks_27_norm_key_norm_add_output = add(single_blocks_27_norm_key_norm_mean_output, single_blocks_27_norm_key_norm_add_right)
    single_blocks_27_norm_key_norm_sqrt_output = sqrt(single_blocks_27_norm_key_norm_add_output)
    single_blocks_27_norm_key_norm_divide_output = divide(single_blocks_27_norm_key_norm_divide_numerator, single_blocks_27_norm_key_norm_sqrt_output)
    single_blocks_27_norm_key_norm_multiply_0_output = multiplication(single_blocks_27_tensoritem_4_output, single_blocks_27_norm_key_norm_divide_output)
    single_blocks_27_norm_key_norm_multiply_1_output = multiplication(single_blocks_27_norm_key_norm_multiply_0_output, single_blocks_27_norm_key_norm_scale)
    single_blocks_27_tensoritem_5_output = tensor_item(single_blocks_27_transpose_out, single_blocks_27_tensoritem_5_index)
    single_blocks_27_model_model_xq_ = reshape(single_blocks_27_norm_query_norm_multiply_1_output, single_blocks_27_model_model_totuple_0_output)
    single_blocks_27_model_model_xk_ = reshape(single_blocks_27_norm_key_norm_multiply_1_output, single_blocks_27_model_model_totuple_1_output)
    single_blocks_27_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_27_model_model_tensoritem_0_index)
    single_blocks_27_model_model_tensoritem_1_output = tensor_item(single_blocks_27_model_model_xq_, single_blocks_27_model_model_tensoritem_1_index)
    single_blocks_27_model_model_multiply_0_output = multiplication(single_blocks_27_model_model_tensoritem_0_output, single_blocks_27_model_model_tensoritem_1_output)
    single_blocks_27_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_27_model_model_tensoritem_2_index)
    single_blocks_27_model_model_tensoritem_3_output = tensor_item(single_blocks_27_model_model_xq_, single_blocks_27_model_model_tensoritem_3_index)
    single_blocks_27_model_model_multiply_1_output = multiplication(single_blocks_27_model_model_tensoritem_2_output, single_blocks_27_model_model_tensoritem_3_output)
    single_blocks_27_model_model_add_0_output = add(single_blocks_27_model_model_multiply_0_output, single_blocks_27_model_model_multiply_1_output)
    single_blocks_27_model_q_out = reshape(single_blocks_27_model_model_add_0_output, single_blocks_27_model_model_shape_0_output)
    single_blocks_27_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_27_model_model_tensoritem_4_index)
    single_blocks_27_model_model_tensoritem_5_output = tensor_item(single_blocks_27_model_model_xk_, single_blocks_27_model_model_tensoritem_5_index)
    single_blocks_27_model_model_multiply_2_output = multiplication(single_blocks_27_model_model_tensoritem_4_output, single_blocks_27_model_model_tensoritem_5_output)
    single_blocks_27_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_27_model_model_tensoritem_6_index)
    single_blocks_27_model_model_tensoritem_7_output = tensor_item(single_blocks_27_model_model_xk_, single_blocks_27_model_model_tensoritem_7_index)
    single_blocks_27_model_model_multiply_3_output = multiplication(single_blocks_27_model_model_tensoritem_6_output, single_blocks_27_model_model_tensoritem_7_output)
    single_blocks_27_model_model_add_1_output = add(single_blocks_27_model_model_multiply_2_output, single_blocks_27_model_model_multiply_3_output)
    single_blocks_27_model_k_out = reshape(single_blocks_27_model_model_add_1_output, single_blocks_27_model_model_shape_1_output)
    single_blocks_27_model_context = scaled_dot_product_attention(single_blocks_27_model_q_out, single_blocks_27_model_k_out, single_blocks_27_tensoritem_5_output, single_blocks_27_model_scaleddotproduct_attn_mask)
    single_blocks_27_model_transpose_output = transpose(single_blocks_27_model_context, single_blocks_27_model_transpose_axes)
    single_blocks_27_attn = reshape(single_blocks_27_model_transpose_output, single_blocks_27_model_totuple_output)
    single_blocks_27_tensoritem_6_output = tensor_item(single_blocks_27_lin1_out, single_blocks_27_tensoritem_6_index)
    single_blocks_27_mlp_act = gelu(single_blocks_27_tensoritem_6_output, single_blocks_27_gelu_approximate)
    single_blocks_27_concat_out = concat(single_blocks_27_attn, single_blocks_27_mlp_act, axis=single_blocks_27_concat_axis)
    single_blocks_27_linear2_transpose_output = transpose(single_blocks_27_linear2_weight, single_blocks_27_linear2_transpose_axes)
    single_blocks_27_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_27_concat_out, single_blocks_27_linear2_transpose_output)
    single_blocks_27_lin2_out = add(single_blocks_27_linear2_matrixmultiply_output, single_blocks_27_linear2_bias)
    single_blocks_27_tensoritem_7_output = tensor_item(single_blocks_27_modulation_split_output, single_blocks_27_tensoritem_7_index)
    single_blocks_27_multiply_1_output = multiplication(single_blocks_27_tensoritem_7_output, single_blocks_27_lin2_out)
    single_blocks_27_add_2_output = add(single_blocks_26_add_2_output, single_blocks_27_multiply_1_output)
    single_blocks_28_modulation_silu_minus = minus(vec)
    single_blocks_28_modulation_silu_exp = exp(single_blocks_28_modulation_silu_minus)
    single_blocks_28_modulation_silu_add = add(single_blocks_28_modulation_silu_add_left, single_blocks_28_modulation_silu_exp)
    single_blocks_28_modulation_silu_output = divide(vec, single_blocks_28_modulation_silu_add)
    single_blocks_28_modulation_lin_transpose_output = transpose(single_blocks_28_modulation_lin_weight, single_blocks_28_modulation_lin_transpose_axes)
    single_blocks_28_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_28_modulation_silu_output, single_blocks_28_modulation_lin_transpose_output)
    single_blocks_28_modulation_lin_out = add(single_blocks_28_modulation_lin_matrixmultiply_output, single_blocks_28_modulation_lin_bias)
    single_blocks_28_modulation_tensoritem_output = tensor_item(single_blocks_28_modulation_lin_out, single_blocks_28_modulation_tensoritem_index)
    single_blocks_28_modulation_split_output = split(single_blocks_28_modulation_tensoritem_output, single_blocks_28_modulation_split_split_size, single_blocks_28_modulation_split_axis)
    single_blocks_28_pre_norm_mean_output = reduce_mean(single_blocks_27_add_2_output, axis=single_blocks_28_pre_norm_mean_axis, keepdim=single_blocks_28_pre_norm_mean_keepdim)
    single_blocks_28_pre_norm_subtract_output = subtract(single_blocks_27_add_2_output, single_blocks_28_pre_norm_mean_output)
    single_blocks_28_pre_norm_variance_output = variance(single_blocks_27_add_2_output, axis=single_blocks_28_pre_norm_variance_axis, keepdim=single_blocks_28_pre_norm_variance_keepdim, correction=single_blocks_28_pre_norm_variance_correction)
    single_blocks_28_pre_norm_add_output = add(single_blocks_28_pre_norm_variance_output, single_blocks_28_pre_norm_add_right)
    single_blocks_28_pre_norm_sqrt_output = sqrt(single_blocks_28_pre_norm_add_output)
    single_blocks_28_pre_norm_divide_output = divide(single_blocks_28_pre_norm_subtract_output, single_blocks_28_pre_norm_sqrt_output)
    single_blocks_28_tensoritem_0_output = tensor_item(single_blocks_28_modulation_split_output, single_blocks_28_tensoritem_0_index)
    single_blocks_28_add_0_output = add(single_blocks_28_add_0_left, single_blocks_28_tensoritem_0_output)
    single_blocks_28_multiply_0_output = multiplication(single_blocks_28_add_0_output, single_blocks_28_pre_norm_divide_output)
    single_blocks_28_tensoritem_1_output = tensor_item(single_blocks_28_modulation_split_output, single_blocks_28_tensoritem_1_index)
    single_blocks_28_add_1_output = add(single_blocks_28_multiply_0_output, single_blocks_28_tensoritem_1_output)
    single_blocks_28_linear1_transpose_output = transpose(single_blocks_28_linear1_weight, single_blocks_28_linear1_transpose_axes)
    single_blocks_28_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_28_add_1_output, single_blocks_28_linear1_transpose_output)
    single_blocks_28_lin1_out = add(single_blocks_28_linear1_matrixmultiply_output, single_blocks_28_linear1_bias)
    single_blocks_28_tensoritem_2_output = tensor_item(single_blocks_28_lin1_out, single_blocks_28_tensoritem_2_index)
    single_blocks_28_reshape_output = reshape(single_blocks_28_tensoritem_2_output, single_blocks_28_totuple_output)
    single_blocks_28_transpose_out = transpose(single_blocks_28_reshape_output, single_blocks_28_transpose_axes)
    single_blocks_28_tensoritem_3_output = tensor_item(single_blocks_28_transpose_out, single_blocks_28_tensoritem_3_index)
    single_blocks_28_tensoritem_4_output = tensor_item(single_blocks_28_transpose_out, single_blocks_28_tensoritem_4_index)
    single_blocks_28_norm_query_norm_power_output = power(single_blocks_28_tensoritem_3_output, single_blocks_28_norm_query_norm_power_exponent)
    single_blocks_28_norm_query_norm_mean_output = reduce_mean(single_blocks_28_norm_query_norm_power_output, axis=single_blocks_28_norm_query_norm_mean_axis, keepdim=single_blocks_28_norm_query_norm_mean_keepdim)
    single_blocks_28_norm_query_norm_add_output = add(single_blocks_28_norm_query_norm_mean_output, single_blocks_28_norm_query_norm_add_right)
    single_blocks_28_norm_query_norm_sqrt_output = sqrt(single_blocks_28_norm_query_norm_add_output)
    single_blocks_28_norm_query_norm_divide_output = divide(single_blocks_28_norm_query_norm_divide_numerator, single_blocks_28_norm_query_norm_sqrt_output)
    single_blocks_28_norm_query_norm_multiply_0_output = multiplication(single_blocks_28_tensoritem_3_output, single_blocks_28_norm_query_norm_divide_output)
    single_blocks_28_norm_query_norm_multiply_1_output = multiplication(single_blocks_28_norm_query_norm_multiply_0_output, single_blocks_28_norm_query_norm_scale)
    single_blocks_28_norm_key_norm_power_output = power(single_blocks_28_tensoritem_4_output, single_blocks_28_norm_key_norm_power_exponent)
    single_blocks_28_norm_key_norm_mean_output = reduce_mean(single_blocks_28_norm_key_norm_power_output, axis=single_blocks_28_norm_key_norm_mean_axis, keepdim=single_blocks_28_norm_key_norm_mean_keepdim)
    single_blocks_28_norm_key_norm_add_output = add(single_blocks_28_norm_key_norm_mean_output, single_blocks_28_norm_key_norm_add_right)
    single_blocks_28_norm_key_norm_sqrt_output = sqrt(single_blocks_28_norm_key_norm_add_output)
    single_blocks_28_norm_key_norm_divide_output = divide(single_blocks_28_norm_key_norm_divide_numerator, single_blocks_28_norm_key_norm_sqrt_output)
    single_blocks_28_norm_key_norm_multiply_0_output = multiplication(single_blocks_28_tensoritem_4_output, single_blocks_28_norm_key_norm_divide_output)
    single_blocks_28_norm_key_norm_multiply_1_output = multiplication(single_blocks_28_norm_key_norm_multiply_0_output, single_blocks_28_norm_key_norm_scale)
    single_blocks_28_tensoritem_5_output = tensor_item(single_blocks_28_transpose_out, single_blocks_28_tensoritem_5_index)
    single_blocks_28_model_model_xq_ = reshape(single_blocks_28_norm_query_norm_multiply_1_output, single_blocks_28_model_model_totuple_0_output)
    single_blocks_28_model_model_xk_ = reshape(single_blocks_28_norm_key_norm_multiply_1_output, single_blocks_28_model_model_totuple_1_output)
    single_blocks_28_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_28_model_model_tensoritem_0_index)
    single_blocks_28_model_model_tensoritem_1_output = tensor_item(single_blocks_28_model_model_xq_, single_blocks_28_model_model_tensoritem_1_index)
    single_blocks_28_model_model_multiply_0_output = multiplication(single_blocks_28_model_model_tensoritem_0_output, single_blocks_28_model_model_tensoritem_1_output)
    single_blocks_28_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_28_model_model_tensoritem_2_index)
    single_blocks_28_model_model_tensoritem_3_output = tensor_item(single_blocks_28_model_model_xq_, single_blocks_28_model_model_tensoritem_3_index)
    single_blocks_28_model_model_multiply_1_output = multiplication(single_blocks_28_model_model_tensoritem_2_output, single_blocks_28_model_model_tensoritem_3_output)
    single_blocks_28_model_model_add_0_output = add(single_blocks_28_model_model_multiply_0_output, single_blocks_28_model_model_multiply_1_output)
    single_blocks_28_model_q_out = reshape(single_blocks_28_model_model_add_0_output, single_blocks_28_model_model_shape_0_output)
    single_blocks_28_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_28_model_model_tensoritem_4_index)
    single_blocks_28_model_model_tensoritem_5_output = tensor_item(single_blocks_28_model_model_xk_, single_blocks_28_model_model_tensoritem_5_index)
    single_blocks_28_model_model_multiply_2_output = multiplication(single_blocks_28_model_model_tensoritem_4_output, single_blocks_28_model_model_tensoritem_5_output)
    single_blocks_28_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_28_model_model_tensoritem_6_index)
    single_blocks_28_model_model_tensoritem_7_output = tensor_item(single_blocks_28_model_model_xk_, single_blocks_28_model_model_tensoritem_7_index)
    single_blocks_28_model_model_multiply_3_output = multiplication(single_blocks_28_model_model_tensoritem_6_output, single_blocks_28_model_model_tensoritem_7_output)
    single_blocks_28_model_model_add_1_output = add(single_blocks_28_model_model_multiply_2_output, single_blocks_28_model_model_multiply_3_output)
    single_blocks_28_model_k_out = reshape(single_blocks_28_model_model_add_1_output, single_blocks_28_model_model_shape_1_output)
    single_blocks_28_model_context = scaled_dot_product_attention(single_blocks_28_model_q_out, single_blocks_28_model_k_out, single_blocks_28_tensoritem_5_output, single_blocks_28_model_scaleddotproduct_attn_mask)
    single_blocks_28_model_transpose_output = transpose(single_blocks_28_model_context, single_blocks_28_model_transpose_axes)
    single_blocks_28_attn = reshape(single_blocks_28_model_transpose_output, single_blocks_28_model_totuple_output)
    single_blocks_28_tensoritem_6_output = tensor_item(single_blocks_28_lin1_out, single_blocks_28_tensoritem_6_index)
    single_blocks_28_mlp_act = gelu(single_blocks_28_tensoritem_6_output, single_blocks_28_gelu_approximate)
    single_blocks_28_concat_out = concat(single_blocks_28_attn, single_blocks_28_mlp_act, axis=single_blocks_28_concat_axis)
    single_blocks_28_linear2_transpose_output = transpose(single_blocks_28_linear2_weight, single_blocks_28_linear2_transpose_axes)
    single_blocks_28_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_28_concat_out, single_blocks_28_linear2_transpose_output)
    single_blocks_28_lin2_out = add(single_blocks_28_linear2_matrixmultiply_output, single_blocks_28_linear2_bias)
    single_blocks_28_tensoritem_7_output = tensor_item(single_blocks_28_modulation_split_output, single_blocks_28_tensoritem_7_index)
    single_blocks_28_multiply_1_output = multiplication(single_blocks_28_tensoritem_7_output, single_blocks_28_lin2_out)
    single_blocks_28_add_2_output = add(single_blocks_27_add_2_output, single_blocks_28_multiply_1_output)
    single_blocks_29_modulation_silu_minus = minus(vec)
    single_blocks_29_modulation_silu_exp = exp(single_blocks_29_modulation_silu_minus)
    single_blocks_29_modulation_silu_add = add(single_blocks_29_modulation_silu_add_left, single_blocks_29_modulation_silu_exp)
    single_blocks_29_modulation_silu_output = divide(vec, single_blocks_29_modulation_silu_add)
    single_blocks_29_modulation_lin_transpose_output = transpose(single_blocks_29_modulation_lin_weight, single_blocks_29_modulation_lin_transpose_axes)
    single_blocks_29_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_29_modulation_silu_output, single_blocks_29_modulation_lin_transpose_output)
    single_blocks_29_modulation_lin_out = add(single_blocks_29_modulation_lin_matrixmultiply_output, single_blocks_29_modulation_lin_bias)
    single_blocks_29_modulation_tensoritem_output = tensor_item(single_blocks_29_modulation_lin_out, single_blocks_29_modulation_tensoritem_index)
    single_blocks_29_modulation_split_output = split(single_blocks_29_modulation_tensoritem_output, single_blocks_29_modulation_split_split_size, single_blocks_29_modulation_split_axis)
    single_blocks_29_pre_norm_mean_output = reduce_mean(single_blocks_28_add_2_output, axis=single_blocks_29_pre_norm_mean_axis, keepdim=single_blocks_29_pre_norm_mean_keepdim)
    single_blocks_29_pre_norm_subtract_output = subtract(single_blocks_28_add_2_output, single_blocks_29_pre_norm_mean_output)
    single_blocks_29_pre_norm_variance_output = variance(single_blocks_28_add_2_output, axis=single_blocks_29_pre_norm_variance_axis, keepdim=single_blocks_29_pre_norm_variance_keepdim, correction=single_blocks_29_pre_norm_variance_correction)
    single_blocks_29_pre_norm_add_output = add(single_blocks_29_pre_norm_variance_output, single_blocks_29_pre_norm_add_right)
    single_blocks_29_pre_norm_sqrt_output = sqrt(single_blocks_29_pre_norm_add_output)
    single_blocks_29_pre_norm_divide_output = divide(single_blocks_29_pre_norm_subtract_output, single_blocks_29_pre_norm_sqrt_output)
    single_blocks_29_tensoritem_0_output = tensor_item(single_blocks_29_modulation_split_output, single_blocks_29_tensoritem_0_index)
    single_blocks_29_add_0_output = add(single_blocks_29_add_0_left, single_blocks_29_tensoritem_0_output)
    single_blocks_29_multiply_0_output = multiplication(single_blocks_29_add_0_output, single_blocks_29_pre_norm_divide_output)
    single_blocks_29_tensoritem_1_output = tensor_item(single_blocks_29_modulation_split_output, single_blocks_29_tensoritem_1_index)
    single_blocks_29_add_1_output = add(single_blocks_29_multiply_0_output, single_blocks_29_tensoritem_1_output)
    single_blocks_29_linear1_transpose_output = transpose(single_blocks_29_linear1_weight, single_blocks_29_linear1_transpose_axes)
    single_blocks_29_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_29_add_1_output, single_blocks_29_linear1_transpose_output)
    single_blocks_29_lin1_out = add(single_blocks_29_linear1_matrixmultiply_output, single_blocks_29_linear1_bias)
    single_blocks_29_tensoritem_2_output = tensor_item(single_blocks_29_lin1_out, single_blocks_29_tensoritem_2_index)
    single_blocks_29_reshape_output = reshape(single_blocks_29_tensoritem_2_output, single_blocks_29_totuple_output)
    single_blocks_29_transpose_out = transpose(single_blocks_29_reshape_output, single_blocks_29_transpose_axes)
    single_blocks_29_tensoritem_3_output = tensor_item(single_blocks_29_transpose_out, single_blocks_29_tensoritem_3_index)
    single_blocks_29_tensoritem_4_output = tensor_item(single_blocks_29_transpose_out, single_blocks_29_tensoritem_4_index)
    single_blocks_29_norm_query_norm_power_output = power(single_blocks_29_tensoritem_3_output, single_blocks_29_norm_query_norm_power_exponent)
    single_blocks_29_norm_query_norm_mean_output = reduce_mean(single_blocks_29_norm_query_norm_power_output, axis=single_blocks_29_norm_query_norm_mean_axis, keepdim=single_blocks_29_norm_query_norm_mean_keepdim)
    single_blocks_29_norm_query_norm_add_output = add(single_blocks_29_norm_query_norm_mean_output, single_blocks_29_norm_query_norm_add_right)
    single_blocks_29_norm_query_norm_sqrt_output = sqrt(single_blocks_29_norm_query_norm_add_output)
    single_blocks_29_norm_query_norm_divide_output = divide(single_blocks_29_norm_query_norm_divide_numerator, single_blocks_29_norm_query_norm_sqrt_output)
    single_blocks_29_norm_query_norm_multiply_0_output = multiplication(single_blocks_29_tensoritem_3_output, single_blocks_29_norm_query_norm_divide_output)
    single_blocks_29_norm_query_norm_multiply_1_output = multiplication(single_blocks_29_norm_query_norm_multiply_0_output, single_blocks_29_norm_query_norm_scale)
    single_blocks_29_norm_key_norm_power_output = power(single_blocks_29_tensoritem_4_output, single_blocks_29_norm_key_norm_power_exponent)
    single_blocks_29_norm_key_norm_mean_output = reduce_mean(single_blocks_29_norm_key_norm_power_output, axis=single_blocks_29_norm_key_norm_mean_axis, keepdim=single_blocks_29_norm_key_norm_mean_keepdim)
    single_blocks_29_norm_key_norm_add_output = add(single_blocks_29_norm_key_norm_mean_output, single_blocks_29_norm_key_norm_add_right)
    single_blocks_29_norm_key_norm_sqrt_output = sqrt(single_blocks_29_norm_key_norm_add_output)
    single_blocks_29_norm_key_norm_divide_output = divide(single_blocks_29_norm_key_norm_divide_numerator, single_blocks_29_norm_key_norm_sqrt_output)
    single_blocks_29_norm_key_norm_multiply_0_output = multiplication(single_blocks_29_tensoritem_4_output, single_blocks_29_norm_key_norm_divide_output)
    single_blocks_29_norm_key_norm_multiply_1_output = multiplication(single_blocks_29_norm_key_norm_multiply_0_output, single_blocks_29_norm_key_norm_scale)
    single_blocks_29_tensoritem_5_output = tensor_item(single_blocks_29_transpose_out, single_blocks_29_tensoritem_5_index)
    single_blocks_29_model_model_xq_ = reshape(single_blocks_29_norm_query_norm_multiply_1_output, single_blocks_29_model_model_totuple_0_output)
    single_blocks_29_model_model_xk_ = reshape(single_blocks_29_norm_key_norm_multiply_1_output, single_blocks_29_model_model_totuple_1_output)
    single_blocks_29_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_29_model_model_tensoritem_0_index)
    single_blocks_29_model_model_tensoritem_1_output = tensor_item(single_blocks_29_model_model_xq_, single_blocks_29_model_model_tensoritem_1_index)
    single_blocks_29_model_model_multiply_0_output = multiplication(single_blocks_29_model_model_tensoritem_0_output, single_blocks_29_model_model_tensoritem_1_output)
    single_blocks_29_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_29_model_model_tensoritem_2_index)
    single_blocks_29_model_model_tensoritem_3_output = tensor_item(single_blocks_29_model_model_xq_, single_blocks_29_model_model_tensoritem_3_index)
    single_blocks_29_model_model_multiply_1_output = multiplication(single_blocks_29_model_model_tensoritem_2_output, single_blocks_29_model_model_tensoritem_3_output)
    single_blocks_29_model_model_add_0_output = add(single_blocks_29_model_model_multiply_0_output, single_blocks_29_model_model_multiply_1_output)
    single_blocks_29_model_q_out = reshape(single_blocks_29_model_model_add_0_output, single_blocks_29_model_model_shape_0_output)
    single_blocks_29_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_29_model_model_tensoritem_4_index)
    single_blocks_29_model_model_tensoritem_5_output = tensor_item(single_blocks_29_model_model_xk_, single_blocks_29_model_model_tensoritem_5_index)
    single_blocks_29_model_model_multiply_2_output = multiplication(single_blocks_29_model_model_tensoritem_4_output, single_blocks_29_model_model_tensoritem_5_output)
    single_blocks_29_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_29_model_model_tensoritem_6_index)
    single_blocks_29_model_model_tensoritem_7_output = tensor_item(single_blocks_29_model_model_xk_, single_blocks_29_model_model_tensoritem_7_index)
    single_blocks_29_model_model_multiply_3_output = multiplication(single_blocks_29_model_model_tensoritem_6_output, single_blocks_29_model_model_tensoritem_7_output)
    single_blocks_29_model_model_add_1_output = add(single_blocks_29_model_model_multiply_2_output, single_blocks_29_model_model_multiply_3_output)
    single_blocks_29_model_k_out = reshape(single_blocks_29_model_model_add_1_output, single_blocks_29_model_model_shape_1_output)
    single_blocks_29_model_context = scaled_dot_product_attention(single_blocks_29_model_q_out, single_blocks_29_model_k_out, single_blocks_29_tensoritem_5_output, single_blocks_29_model_scaleddotproduct_attn_mask)
    single_blocks_29_model_transpose_output = transpose(single_blocks_29_model_context, single_blocks_29_model_transpose_axes)
    single_blocks_29_attn = reshape(single_blocks_29_model_transpose_output, single_blocks_29_model_totuple_output)
    single_blocks_29_tensoritem_6_output = tensor_item(single_blocks_29_lin1_out, single_blocks_29_tensoritem_6_index)
    single_blocks_29_mlp_act = gelu(single_blocks_29_tensoritem_6_output, single_blocks_29_gelu_approximate)
    single_blocks_29_concat_out = concat(single_blocks_29_attn, single_blocks_29_mlp_act, axis=single_blocks_29_concat_axis)
    single_blocks_29_linear2_transpose_output = transpose(single_blocks_29_linear2_weight, single_blocks_29_linear2_transpose_axes)
    single_blocks_29_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_29_concat_out, single_blocks_29_linear2_transpose_output)
    single_blocks_29_lin2_out = add(single_blocks_29_linear2_matrixmultiply_output, single_blocks_29_linear2_bias)
    single_blocks_29_tensoritem_7_output = tensor_item(single_blocks_29_modulation_split_output, single_blocks_29_tensoritem_7_index)
    single_blocks_29_multiply_1_output = multiplication(single_blocks_29_tensoritem_7_output, single_blocks_29_lin2_out)
    single_blocks_29_add_2_output = add(single_blocks_28_add_2_output, single_blocks_29_multiply_1_output)
    single_blocks_30_modulation_silu_minus = minus(vec)
    single_blocks_30_modulation_silu_exp = exp(single_blocks_30_modulation_silu_minus)
    single_blocks_30_modulation_silu_add = add(single_blocks_30_modulation_silu_add_left, single_blocks_30_modulation_silu_exp)
    single_blocks_30_modulation_silu_output = divide(vec, single_blocks_30_modulation_silu_add)
    single_blocks_30_modulation_lin_transpose_output = transpose(single_blocks_30_modulation_lin_weight, single_blocks_30_modulation_lin_transpose_axes)
    single_blocks_30_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_30_modulation_silu_output, single_blocks_30_modulation_lin_transpose_output)
    single_blocks_30_modulation_lin_out = add(single_blocks_30_modulation_lin_matrixmultiply_output, single_blocks_30_modulation_lin_bias)
    single_blocks_30_modulation_tensoritem_output = tensor_item(single_blocks_30_modulation_lin_out, single_blocks_30_modulation_tensoritem_index)
    single_blocks_30_modulation_split_output = split(single_blocks_30_modulation_tensoritem_output, single_blocks_30_modulation_split_split_size, single_blocks_30_modulation_split_axis)
    single_blocks_30_pre_norm_mean_output = reduce_mean(single_blocks_29_add_2_output, axis=single_blocks_30_pre_norm_mean_axis, keepdim=single_blocks_30_pre_norm_mean_keepdim)
    single_blocks_30_pre_norm_subtract_output = subtract(single_blocks_29_add_2_output, single_blocks_30_pre_norm_mean_output)
    single_blocks_30_pre_norm_variance_output = variance(single_blocks_29_add_2_output, axis=single_blocks_30_pre_norm_variance_axis, keepdim=single_blocks_30_pre_norm_variance_keepdim, correction=single_blocks_30_pre_norm_variance_correction)
    single_blocks_30_pre_norm_add_output = add(single_blocks_30_pre_norm_variance_output, single_blocks_30_pre_norm_add_right)
    single_blocks_30_pre_norm_sqrt_output = sqrt(single_blocks_30_pre_norm_add_output)
    single_blocks_30_pre_norm_divide_output = divide(single_blocks_30_pre_norm_subtract_output, single_blocks_30_pre_norm_sqrt_output)
    single_blocks_30_tensoritem_0_output = tensor_item(single_blocks_30_modulation_split_output, single_blocks_30_tensoritem_0_index)
    single_blocks_30_add_0_output = add(single_blocks_30_add_0_left, single_blocks_30_tensoritem_0_output)
    single_blocks_30_multiply_0_output = multiplication(single_blocks_30_add_0_output, single_blocks_30_pre_norm_divide_output)
    single_blocks_30_tensoritem_1_output = tensor_item(single_blocks_30_modulation_split_output, single_blocks_30_tensoritem_1_index)
    single_blocks_30_add_1_output = add(single_blocks_30_multiply_0_output, single_blocks_30_tensoritem_1_output)
    single_blocks_30_linear1_transpose_output = transpose(single_blocks_30_linear1_weight, single_blocks_30_linear1_transpose_axes)
    single_blocks_30_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_30_add_1_output, single_blocks_30_linear1_transpose_output)
    single_blocks_30_lin1_out = add(single_blocks_30_linear1_matrixmultiply_output, single_blocks_30_linear1_bias)
    single_blocks_30_tensoritem_2_output = tensor_item(single_blocks_30_lin1_out, single_blocks_30_tensoritem_2_index)
    single_blocks_30_reshape_output = reshape(single_blocks_30_tensoritem_2_output, single_blocks_30_totuple_output)
    single_blocks_30_transpose_out = transpose(single_blocks_30_reshape_output, single_blocks_30_transpose_axes)
    single_blocks_30_tensoritem_3_output = tensor_item(single_blocks_30_transpose_out, single_blocks_30_tensoritem_3_index)
    single_blocks_30_tensoritem_4_output = tensor_item(single_blocks_30_transpose_out, single_blocks_30_tensoritem_4_index)
    single_blocks_30_norm_query_norm_power_output = power(single_blocks_30_tensoritem_3_output, single_blocks_30_norm_query_norm_power_exponent)
    single_blocks_30_norm_query_norm_mean_output = reduce_mean(single_blocks_30_norm_query_norm_power_output, axis=single_blocks_30_norm_query_norm_mean_axis, keepdim=single_blocks_30_norm_query_norm_mean_keepdim)
    single_blocks_30_norm_query_norm_add_output = add(single_blocks_30_norm_query_norm_mean_output, single_blocks_30_norm_query_norm_add_right)
    single_blocks_30_norm_query_norm_sqrt_output = sqrt(single_blocks_30_norm_query_norm_add_output)
    single_blocks_30_norm_query_norm_divide_output = divide(single_blocks_30_norm_query_norm_divide_numerator, single_blocks_30_norm_query_norm_sqrt_output)
    single_blocks_30_norm_query_norm_multiply_0_output = multiplication(single_blocks_30_tensoritem_3_output, single_blocks_30_norm_query_norm_divide_output)
    single_blocks_30_norm_query_norm_multiply_1_output = multiplication(single_blocks_30_norm_query_norm_multiply_0_output, single_blocks_30_norm_query_norm_scale)
    single_blocks_30_norm_key_norm_power_output = power(single_blocks_30_tensoritem_4_output, single_blocks_30_norm_key_norm_power_exponent)
    single_blocks_30_norm_key_norm_mean_output = reduce_mean(single_blocks_30_norm_key_norm_power_output, axis=single_blocks_30_norm_key_norm_mean_axis, keepdim=single_blocks_30_norm_key_norm_mean_keepdim)
    single_blocks_30_norm_key_norm_add_output = add(single_blocks_30_norm_key_norm_mean_output, single_blocks_30_norm_key_norm_add_right)
    single_blocks_30_norm_key_norm_sqrt_output = sqrt(single_blocks_30_norm_key_norm_add_output)
    single_blocks_30_norm_key_norm_divide_output = divide(single_blocks_30_norm_key_norm_divide_numerator, single_blocks_30_norm_key_norm_sqrt_output)
    single_blocks_30_norm_key_norm_multiply_0_output = multiplication(single_blocks_30_tensoritem_4_output, single_blocks_30_norm_key_norm_divide_output)
    single_blocks_30_norm_key_norm_multiply_1_output = multiplication(single_blocks_30_norm_key_norm_multiply_0_output, single_blocks_30_norm_key_norm_scale)
    single_blocks_30_tensoritem_5_output = tensor_item(single_blocks_30_transpose_out, single_blocks_30_tensoritem_5_index)
    single_blocks_30_model_model_xq_ = reshape(single_blocks_30_norm_query_norm_multiply_1_output, single_blocks_30_model_model_totuple_0_output)
    single_blocks_30_model_model_xk_ = reshape(single_blocks_30_norm_key_norm_multiply_1_output, single_blocks_30_model_model_totuple_1_output)
    single_blocks_30_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_30_model_model_tensoritem_0_index)
    single_blocks_30_model_model_tensoritem_1_output = tensor_item(single_blocks_30_model_model_xq_, single_blocks_30_model_model_tensoritem_1_index)
    single_blocks_30_model_model_multiply_0_output = multiplication(single_blocks_30_model_model_tensoritem_0_output, single_blocks_30_model_model_tensoritem_1_output)
    single_blocks_30_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_30_model_model_tensoritem_2_index)
    single_blocks_30_model_model_tensoritem_3_output = tensor_item(single_blocks_30_model_model_xq_, single_blocks_30_model_model_tensoritem_3_index)
    single_blocks_30_model_model_multiply_1_output = multiplication(single_blocks_30_model_model_tensoritem_2_output, single_blocks_30_model_model_tensoritem_3_output)
    single_blocks_30_model_model_add_0_output = add(single_blocks_30_model_model_multiply_0_output, single_blocks_30_model_model_multiply_1_output)
    single_blocks_30_model_q_out = reshape(single_blocks_30_model_model_add_0_output, single_blocks_30_model_model_shape_0_output)
    single_blocks_30_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_30_model_model_tensoritem_4_index)
    single_blocks_30_model_model_tensoritem_5_output = tensor_item(single_blocks_30_model_model_xk_, single_blocks_30_model_model_tensoritem_5_index)
    single_blocks_30_model_model_multiply_2_output = multiplication(single_blocks_30_model_model_tensoritem_4_output, single_blocks_30_model_model_tensoritem_5_output)
    single_blocks_30_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_30_model_model_tensoritem_6_index)
    single_blocks_30_model_model_tensoritem_7_output = tensor_item(single_blocks_30_model_model_xk_, single_blocks_30_model_model_tensoritem_7_index)
    single_blocks_30_model_model_multiply_3_output = multiplication(single_blocks_30_model_model_tensoritem_6_output, single_blocks_30_model_model_tensoritem_7_output)
    single_blocks_30_model_model_add_1_output = add(single_blocks_30_model_model_multiply_2_output, single_blocks_30_model_model_multiply_3_output)
    single_blocks_30_model_k_out = reshape(single_blocks_30_model_model_add_1_output, single_blocks_30_model_model_shape_1_output)
    single_blocks_30_model_context = scaled_dot_product_attention(single_blocks_30_model_q_out, single_blocks_30_model_k_out, single_blocks_30_tensoritem_5_output, single_blocks_30_model_scaleddotproduct_attn_mask)
    single_blocks_30_model_transpose_output = transpose(single_blocks_30_model_context, single_blocks_30_model_transpose_axes)
    single_blocks_30_attn = reshape(single_blocks_30_model_transpose_output, single_blocks_30_model_totuple_output)
    single_blocks_30_tensoritem_6_output = tensor_item(single_blocks_30_lin1_out, single_blocks_30_tensoritem_6_index)
    single_blocks_30_mlp_act = gelu(single_blocks_30_tensoritem_6_output, single_blocks_30_gelu_approximate)
    single_blocks_30_concat_out = concat(single_blocks_30_attn, single_blocks_30_mlp_act, axis=single_blocks_30_concat_axis)
    single_blocks_30_linear2_transpose_output = transpose(single_blocks_30_linear2_weight, single_blocks_30_linear2_transpose_axes)
    single_blocks_30_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_30_concat_out, single_blocks_30_linear2_transpose_output)
    single_blocks_30_lin2_out = add(single_blocks_30_linear2_matrixmultiply_output, single_blocks_30_linear2_bias)
    single_blocks_30_tensoritem_7_output = tensor_item(single_blocks_30_modulation_split_output, single_blocks_30_tensoritem_7_index)
    single_blocks_30_multiply_1_output = multiplication(single_blocks_30_tensoritem_7_output, single_blocks_30_lin2_out)
    single_blocks_30_add_2_output = add(single_blocks_29_add_2_output, single_blocks_30_multiply_1_output)
    single_blocks_31_modulation_silu_minus = minus(vec)
    single_blocks_31_modulation_silu_exp = exp(single_blocks_31_modulation_silu_minus)
    single_blocks_31_modulation_silu_add = add(single_blocks_31_modulation_silu_add_left, single_blocks_31_modulation_silu_exp)
    single_blocks_31_modulation_silu_output = divide(vec, single_blocks_31_modulation_silu_add)
    single_blocks_31_modulation_lin_transpose_output = transpose(single_blocks_31_modulation_lin_weight, single_blocks_31_modulation_lin_transpose_axes)
    single_blocks_31_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_31_modulation_silu_output, single_blocks_31_modulation_lin_transpose_output)
    single_blocks_31_modulation_lin_out = add(single_blocks_31_modulation_lin_matrixmultiply_output, single_blocks_31_modulation_lin_bias)
    single_blocks_31_modulation_tensoritem_output = tensor_item(single_blocks_31_modulation_lin_out, single_blocks_31_modulation_tensoritem_index)
    single_blocks_31_modulation_split_output = split(single_blocks_31_modulation_tensoritem_output, single_blocks_31_modulation_split_split_size, single_blocks_31_modulation_split_axis)
    single_blocks_31_pre_norm_mean_output = reduce_mean(single_blocks_30_add_2_output, axis=single_blocks_31_pre_norm_mean_axis, keepdim=single_blocks_31_pre_norm_mean_keepdim)
    single_blocks_31_pre_norm_subtract_output = subtract(single_blocks_30_add_2_output, single_blocks_31_pre_norm_mean_output)
    single_blocks_31_pre_norm_variance_output = variance(single_blocks_30_add_2_output, axis=single_blocks_31_pre_norm_variance_axis, keepdim=single_blocks_31_pre_norm_variance_keepdim, correction=single_blocks_31_pre_norm_variance_correction)
    single_blocks_31_pre_norm_add_output = add(single_blocks_31_pre_norm_variance_output, single_blocks_31_pre_norm_add_right)
    single_blocks_31_pre_norm_sqrt_output = sqrt(single_blocks_31_pre_norm_add_output)
    single_blocks_31_pre_norm_divide_output = divide(single_blocks_31_pre_norm_subtract_output, single_blocks_31_pre_norm_sqrt_output)
    single_blocks_31_tensoritem_0_output = tensor_item(single_blocks_31_modulation_split_output, single_blocks_31_tensoritem_0_index)
    single_blocks_31_add_0_output = add(single_blocks_31_add_0_left, single_blocks_31_tensoritem_0_output)
    single_blocks_31_multiply_0_output = multiplication(single_blocks_31_add_0_output, single_blocks_31_pre_norm_divide_output)
    single_blocks_31_tensoritem_1_output = tensor_item(single_blocks_31_modulation_split_output, single_blocks_31_tensoritem_1_index)
    single_blocks_31_add_1_output = add(single_blocks_31_multiply_0_output, single_blocks_31_tensoritem_1_output)
    single_blocks_31_linear1_transpose_output = transpose(single_blocks_31_linear1_weight, single_blocks_31_linear1_transpose_axes)
    single_blocks_31_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_31_add_1_output, single_blocks_31_linear1_transpose_output)
    single_blocks_31_lin1_out = add(single_blocks_31_linear1_matrixmultiply_output, single_blocks_31_linear1_bias)
    single_blocks_31_tensoritem_2_output = tensor_item(single_blocks_31_lin1_out, single_blocks_31_tensoritem_2_index)
    single_blocks_31_reshape_output = reshape(single_blocks_31_tensoritem_2_output, single_blocks_31_totuple_output)
    single_blocks_31_transpose_out = transpose(single_blocks_31_reshape_output, single_blocks_31_transpose_axes)
    single_blocks_31_tensoritem_3_output = tensor_item(single_blocks_31_transpose_out, single_blocks_31_tensoritem_3_index)
    single_blocks_31_tensoritem_4_output = tensor_item(single_blocks_31_transpose_out, single_blocks_31_tensoritem_4_index)
    single_blocks_31_norm_query_norm_power_output = power(single_blocks_31_tensoritem_3_output, single_blocks_31_norm_query_norm_power_exponent)
    single_blocks_31_norm_query_norm_mean_output = reduce_mean(single_blocks_31_norm_query_norm_power_output, axis=single_blocks_31_norm_query_norm_mean_axis, keepdim=single_blocks_31_norm_query_norm_mean_keepdim)
    single_blocks_31_norm_query_norm_add_output = add(single_blocks_31_norm_query_norm_mean_output, single_blocks_31_norm_query_norm_add_right)
    single_blocks_31_norm_query_norm_sqrt_output = sqrt(single_blocks_31_norm_query_norm_add_output)
    single_blocks_31_norm_query_norm_divide_output = divide(single_blocks_31_norm_query_norm_divide_numerator, single_blocks_31_norm_query_norm_sqrt_output)
    single_blocks_31_norm_query_norm_multiply_0_output = multiplication(single_blocks_31_tensoritem_3_output, single_blocks_31_norm_query_norm_divide_output)
    single_blocks_31_norm_query_norm_multiply_1_output = multiplication(single_blocks_31_norm_query_norm_multiply_0_output, single_blocks_31_norm_query_norm_scale)
    single_blocks_31_norm_key_norm_power_output = power(single_blocks_31_tensoritem_4_output, single_blocks_31_norm_key_norm_power_exponent)
    single_blocks_31_norm_key_norm_mean_output = reduce_mean(single_blocks_31_norm_key_norm_power_output, axis=single_blocks_31_norm_key_norm_mean_axis, keepdim=single_blocks_31_norm_key_norm_mean_keepdim)
    single_blocks_31_norm_key_norm_add_output = add(single_blocks_31_norm_key_norm_mean_output, single_blocks_31_norm_key_norm_add_right)
    single_blocks_31_norm_key_norm_sqrt_output = sqrt(single_blocks_31_norm_key_norm_add_output)
    single_blocks_31_norm_key_norm_divide_output = divide(single_blocks_31_norm_key_norm_divide_numerator, single_blocks_31_norm_key_norm_sqrt_output)
    single_blocks_31_norm_key_norm_multiply_0_output = multiplication(single_blocks_31_tensoritem_4_output, single_blocks_31_norm_key_norm_divide_output)
    single_blocks_31_norm_key_norm_multiply_1_output = multiplication(single_blocks_31_norm_key_norm_multiply_0_output, single_blocks_31_norm_key_norm_scale)
    single_blocks_31_tensoritem_5_output = tensor_item(single_blocks_31_transpose_out, single_blocks_31_tensoritem_5_index)
    single_blocks_31_model_model_xq_ = reshape(single_blocks_31_norm_query_norm_multiply_1_output, single_blocks_31_model_model_totuple_0_output)
    single_blocks_31_model_model_xk_ = reshape(single_blocks_31_norm_key_norm_multiply_1_output, single_blocks_31_model_model_totuple_1_output)
    single_blocks_31_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_31_model_model_tensoritem_0_index)
    single_blocks_31_model_model_tensoritem_1_output = tensor_item(single_blocks_31_model_model_xq_, single_blocks_31_model_model_tensoritem_1_index)
    single_blocks_31_model_model_multiply_0_output = multiplication(single_blocks_31_model_model_tensoritem_0_output, single_blocks_31_model_model_tensoritem_1_output)
    single_blocks_31_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_31_model_model_tensoritem_2_index)
    single_blocks_31_model_model_tensoritem_3_output = tensor_item(single_blocks_31_model_model_xq_, single_blocks_31_model_model_tensoritem_3_index)
    single_blocks_31_model_model_multiply_1_output = multiplication(single_blocks_31_model_model_tensoritem_2_output, single_blocks_31_model_model_tensoritem_3_output)
    single_blocks_31_model_model_add_0_output = add(single_blocks_31_model_model_multiply_0_output, single_blocks_31_model_model_multiply_1_output)
    single_blocks_31_model_q_out = reshape(single_blocks_31_model_model_add_0_output, single_blocks_31_model_model_shape_0_output)
    single_blocks_31_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_31_model_model_tensoritem_4_index)
    single_blocks_31_model_model_tensoritem_5_output = tensor_item(single_blocks_31_model_model_xk_, single_blocks_31_model_model_tensoritem_5_index)
    single_blocks_31_model_model_multiply_2_output = multiplication(single_blocks_31_model_model_tensoritem_4_output, single_blocks_31_model_model_tensoritem_5_output)
    single_blocks_31_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_31_model_model_tensoritem_6_index)
    single_blocks_31_model_model_tensoritem_7_output = tensor_item(single_blocks_31_model_model_xk_, single_blocks_31_model_model_tensoritem_7_index)
    single_blocks_31_model_model_multiply_3_output = multiplication(single_blocks_31_model_model_tensoritem_6_output, single_blocks_31_model_model_tensoritem_7_output)
    single_blocks_31_model_model_add_1_output = add(single_blocks_31_model_model_multiply_2_output, single_blocks_31_model_model_multiply_3_output)
    single_blocks_31_model_k_out = reshape(single_blocks_31_model_model_add_1_output, single_blocks_31_model_model_shape_1_output)
    single_blocks_31_model_context = scaled_dot_product_attention(single_blocks_31_model_q_out, single_blocks_31_model_k_out, single_blocks_31_tensoritem_5_output, single_blocks_31_model_scaleddotproduct_attn_mask)
    single_blocks_31_model_transpose_output = transpose(single_blocks_31_model_context, single_blocks_31_model_transpose_axes)
    single_blocks_31_attn = reshape(single_blocks_31_model_transpose_output, single_blocks_31_model_totuple_output)
    single_blocks_31_tensoritem_6_output = tensor_item(single_blocks_31_lin1_out, single_blocks_31_tensoritem_6_index)
    single_blocks_31_mlp_act = gelu(single_blocks_31_tensoritem_6_output, single_blocks_31_gelu_approximate)
    single_blocks_31_concat_out = concat(single_blocks_31_attn, single_blocks_31_mlp_act, axis=single_blocks_31_concat_axis)
    single_blocks_31_linear2_transpose_output = transpose(single_blocks_31_linear2_weight, single_blocks_31_linear2_transpose_axes)
    single_blocks_31_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_31_concat_out, single_blocks_31_linear2_transpose_output)
    single_blocks_31_lin2_out = add(single_blocks_31_linear2_matrixmultiply_output, single_blocks_31_linear2_bias)
    single_blocks_31_tensoritem_7_output = tensor_item(single_blocks_31_modulation_split_output, single_blocks_31_tensoritem_7_index)
    single_blocks_31_multiply_1_output = multiplication(single_blocks_31_tensoritem_7_output, single_blocks_31_lin2_out)
    single_blocks_31_add_2_output = add(single_blocks_30_add_2_output, single_blocks_31_multiply_1_output)
    single_blocks_32_modulation_silu_minus = minus(vec)
    single_blocks_32_modulation_silu_exp = exp(single_blocks_32_modulation_silu_minus)
    single_blocks_32_modulation_silu_add = add(single_blocks_32_modulation_silu_add_left, single_blocks_32_modulation_silu_exp)
    single_blocks_32_modulation_silu_output = divide(vec, single_blocks_32_modulation_silu_add)
    single_blocks_32_modulation_lin_transpose_output = transpose(single_blocks_32_modulation_lin_weight, single_blocks_32_modulation_lin_transpose_axes)
    single_blocks_32_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_32_modulation_silu_output, single_blocks_32_modulation_lin_transpose_output)
    single_blocks_32_modulation_lin_out = add(single_blocks_32_modulation_lin_matrixmultiply_output, single_blocks_32_modulation_lin_bias)
    single_blocks_32_modulation_tensoritem_output = tensor_item(single_blocks_32_modulation_lin_out, single_blocks_32_modulation_tensoritem_index)
    single_blocks_32_modulation_split_output = split(single_blocks_32_modulation_tensoritem_output, single_blocks_32_modulation_split_split_size, single_blocks_32_modulation_split_axis)
    single_blocks_32_pre_norm_mean_output = reduce_mean(single_blocks_31_add_2_output, axis=single_blocks_32_pre_norm_mean_axis, keepdim=single_blocks_32_pre_norm_mean_keepdim)
    single_blocks_32_pre_norm_subtract_output = subtract(single_blocks_31_add_2_output, single_blocks_32_pre_norm_mean_output)
    single_blocks_32_pre_norm_variance_output = variance(single_blocks_31_add_2_output, axis=single_blocks_32_pre_norm_variance_axis, keepdim=single_blocks_32_pre_norm_variance_keepdim, correction=single_blocks_32_pre_norm_variance_correction)
    single_blocks_32_pre_norm_add_output = add(single_blocks_32_pre_norm_variance_output, single_blocks_32_pre_norm_add_right)
    single_blocks_32_pre_norm_sqrt_output = sqrt(single_blocks_32_pre_norm_add_output)
    single_blocks_32_pre_norm_divide_output = divide(single_blocks_32_pre_norm_subtract_output, single_blocks_32_pre_norm_sqrt_output)
    single_blocks_32_tensoritem_0_output = tensor_item(single_blocks_32_modulation_split_output, single_blocks_32_tensoritem_0_index)
    single_blocks_32_add_0_output = add(single_blocks_32_add_0_left, single_blocks_32_tensoritem_0_output)
    single_blocks_32_multiply_0_output = multiplication(single_blocks_32_add_0_output, single_blocks_32_pre_norm_divide_output)
    single_blocks_32_tensoritem_1_output = tensor_item(single_blocks_32_modulation_split_output, single_blocks_32_tensoritem_1_index)
    single_blocks_32_add_1_output = add(single_blocks_32_multiply_0_output, single_blocks_32_tensoritem_1_output)
    single_blocks_32_linear1_transpose_output = transpose(single_blocks_32_linear1_weight, single_blocks_32_linear1_transpose_axes)
    single_blocks_32_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_32_add_1_output, single_blocks_32_linear1_transpose_output)
    single_blocks_32_lin1_out = add(single_blocks_32_linear1_matrixmultiply_output, single_blocks_32_linear1_bias)
    single_blocks_32_tensoritem_2_output = tensor_item(single_blocks_32_lin1_out, single_blocks_32_tensoritem_2_index)
    single_blocks_32_reshape_output = reshape(single_blocks_32_tensoritem_2_output, single_blocks_32_totuple_output)
    single_blocks_32_transpose_out = transpose(single_blocks_32_reshape_output, single_blocks_32_transpose_axes)
    single_blocks_32_tensoritem_3_output = tensor_item(single_blocks_32_transpose_out, single_blocks_32_tensoritem_3_index)
    single_blocks_32_tensoritem_4_output = tensor_item(single_blocks_32_transpose_out, single_blocks_32_tensoritem_4_index)
    single_blocks_32_norm_query_norm_power_output = power(single_blocks_32_tensoritem_3_output, single_blocks_32_norm_query_norm_power_exponent)
    single_blocks_32_norm_query_norm_mean_output = reduce_mean(single_blocks_32_norm_query_norm_power_output, axis=single_blocks_32_norm_query_norm_mean_axis, keepdim=single_blocks_32_norm_query_norm_mean_keepdim)
    single_blocks_32_norm_query_norm_add_output = add(single_blocks_32_norm_query_norm_mean_output, single_blocks_32_norm_query_norm_add_right)
    single_blocks_32_norm_query_norm_sqrt_output = sqrt(single_blocks_32_norm_query_norm_add_output)
    single_blocks_32_norm_query_norm_divide_output = divide(single_blocks_32_norm_query_norm_divide_numerator, single_blocks_32_norm_query_norm_sqrt_output)
    single_blocks_32_norm_query_norm_multiply_0_output = multiplication(single_blocks_32_tensoritem_3_output, single_blocks_32_norm_query_norm_divide_output)
    single_blocks_32_norm_query_norm_multiply_1_output = multiplication(single_blocks_32_norm_query_norm_multiply_0_output, single_blocks_32_norm_query_norm_scale)
    single_blocks_32_norm_key_norm_power_output = power(single_blocks_32_tensoritem_4_output, single_blocks_32_norm_key_norm_power_exponent)
    single_blocks_32_norm_key_norm_mean_output = reduce_mean(single_blocks_32_norm_key_norm_power_output, axis=single_blocks_32_norm_key_norm_mean_axis, keepdim=single_blocks_32_norm_key_norm_mean_keepdim)
    single_blocks_32_norm_key_norm_add_output = add(single_blocks_32_norm_key_norm_mean_output, single_blocks_32_norm_key_norm_add_right)
    single_blocks_32_norm_key_norm_sqrt_output = sqrt(single_blocks_32_norm_key_norm_add_output)
    single_blocks_32_norm_key_norm_divide_output = divide(single_blocks_32_norm_key_norm_divide_numerator, single_blocks_32_norm_key_norm_sqrt_output)
    single_blocks_32_norm_key_norm_multiply_0_output = multiplication(single_blocks_32_tensoritem_4_output, single_blocks_32_norm_key_norm_divide_output)
    single_blocks_32_norm_key_norm_multiply_1_output = multiplication(single_blocks_32_norm_key_norm_multiply_0_output, single_blocks_32_norm_key_norm_scale)
    single_blocks_32_tensoritem_5_output = tensor_item(single_blocks_32_transpose_out, single_blocks_32_tensoritem_5_index)
    single_blocks_32_model_model_xq_ = reshape(single_blocks_32_norm_query_norm_multiply_1_output, single_blocks_32_model_model_totuple_0_output)
    single_blocks_32_model_model_xk_ = reshape(single_blocks_32_norm_key_norm_multiply_1_output, single_blocks_32_model_model_totuple_1_output)
    single_blocks_32_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_32_model_model_tensoritem_0_index)
    single_blocks_32_model_model_tensoritem_1_output = tensor_item(single_blocks_32_model_model_xq_, single_blocks_32_model_model_tensoritem_1_index)
    single_blocks_32_model_model_multiply_0_output = multiplication(single_blocks_32_model_model_tensoritem_0_output, single_blocks_32_model_model_tensoritem_1_output)
    single_blocks_32_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_32_model_model_tensoritem_2_index)
    single_blocks_32_model_model_tensoritem_3_output = tensor_item(single_blocks_32_model_model_xq_, single_blocks_32_model_model_tensoritem_3_index)
    single_blocks_32_model_model_multiply_1_output = multiplication(single_blocks_32_model_model_tensoritem_2_output, single_blocks_32_model_model_tensoritem_3_output)
    single_blocks_32_model_model_add_0_output = add(single_blocks_32_model_model_multiply_0_output, single_blocks_32_model_model_multiply_1_output)
    single_blocks_32_model_q_out = reshape(single_blocks_32_model_model_add_0_output, single_blocks_32_model_model_shape_0_output)
    single_blocks_32_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_32_model_model_tensoritem_4_index)
    single_blocks_32_model_model_tensoritem_5_output = tensor_item(single_blocks_32_model_model_xk_, single_blocks_32_model_model_tensoritem_5_index)
    single_blocks_32_model_model_multiply_2_output = multiplication(single_blocks_32_model_model_tensoritem_4_output, single_blocks_32_model_model_tensoritem_5_output)
    single_blocks_32_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_32_model_model_tensoritem_6_index)
    single_blocks_32_model_model_tensoritem_7_output = tensor_item(single_blocks_32_model_model_xk_, single_blocks_32_model_model_tensoritem_7_index)
    single_blocks_32_model_model_multiply_3_output = multiplication(single_blocks_32_model_model_tensoritem_6_output, single_blocks_32_model_model_tensoritem_7_output)
    single_blocks_32_model_model_add_1_output = add(single_blocks_32_model_model_multiply_2_output, single_blocks_32_model_model_multiply_3_output)
    single_blocks_32_model_k_out = reshape(single_blocks_32_model_model_add_1_output, single_blocks_32_model_model_shape_1_output)
    single_blocks_32_model_context = scaled_dot_product_attention(single_blocks_32_model_q_out, single_blocks_32_model_k_out, single_blocks_32_tensoritem_5_output, single_blocks_32_model_scaleddotproduct_attn_mask)
    single_blocks_32_model_transpose_output = transpose(single_blocks_32_model_context, single_blocks_32_model_transpose_axes)
    single_blocks_32_attn = reshape(single_blocks_32_model_transpose_output, single_blocks_32_model_totuple_output)
    single_blocks_32_tensoritem_6_output = tensor_item(single_blocks_32_lin1_out, single_blocks_32_tensoritem_6_index)
    single_blocks_32_mlp_act = gelu(single_blocks_32_tensoritem_6_output, single_blocks_32_gelu_approximate)
    single_blocks_32_concat_out = concat(single_blocks_32_attn, single_blocks_32_mlp_act, axis=single_blocks_32_concat_axis)
    single_blocks_32_linear2_transpose_output = transpose(single_blocks_32_linear2_weight, single_blocks_32_linear2_transpose_axes)
    single_blocks_32_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_32_concat_out, single_blocks_32_linear2_transpose_output)
    single_blocks_32_lin2_out = add(single_blocks_32_linear2_matrixmultiply_output, single_blocks_32_linear2_bias)
    single_blocks_32_tensoritem_7_output = tensor_item(single_blocks_32_modulation_split_output, single_blocks_32_tensoritem_7_index)
    single_blocks_32_multiply_1_output = multiplication(single_blocks_32_tensoritem_7_output, single_blocks_32_lin2_out)
    single_blocks_32_add_2_output = add(single_blocks_31_add_2_output, single_blocks_32_multiply_1_output)
    single_blocks_33_modulation_silu_minus = minus(vec)
    single_blocks_33_modulation_silu_exp = exp(single_blocks_33_modulation_silu_minus)
    single_blocks_33_modulation_silu_add = add(single_blocks_33_modulation_silu_add_left, single_blocks_33_modulation_silu_exp)
    single_blocks_33_modulation_silu_output = divide(vec, single_blocks_33_modulation_silu_add)
    single_blocks_33_modulation_lin_transpose_output = transpose(single_blocks_33_modulation_lin_weight, single_blocks_33_modulation_lin_transpose_axes)
    single_blocks_33_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_33_modulation_silu_output, single_blocks_33_modulation_lin_transpose_output)
    single_blocks_33_modulation_lin_out = add(single_blocks_33_modulation_lin_matrixmultiply_output, single_blocks_33_modulation_lin_bias)
    single_blocks_33_modulation_tensoritem_output = tensor_item(single_blocks_33_modulation_lin_out, single_blocks_33_modulation_tensoritem_index)
    single_blocks_33_modulation_split_output = split(single_blocks_33_modulation_tensoritem_output, single_blocks_33_modulation_split_split_size, single_blocks_33_modulation_split_axis)
    single_blocks_33_pre_norm_mean_output = reduce_mean(single_blocks_32_add_2_output, axis=single_blocks_33_pre_norm_mean_axis, keepdim=single_blocks_33_pre_norm_mean_keepdim)
    single_blocks_33_pre_norm_subtract_output = subtract(single_blocks_32_add_2_output, single_blocks_33_pre_norm_mean_output)
    single_blocks_33_pre_norm_variance_output = variance(single_blocks_32_add_2_output, axis=single_blocks_33_pre_norm_variance_axis, keepdim=single_blocks_33_pre_norm_variance_keepdim, correction=single_blocks_33_pre_norm_variance_correction)
    single_blocks_33_pre_norm_add_output = add(single_blocks_33_pre_norm_variance_output, single_blocks_33_pre_norm_add_right)
    single_blocks_33_pre_norm_sqrt_output = sqrt(single_blocks_33_pre_norm_add_output)
    single_blocks_33_pre_norm_divide_output = divide(single_blocks_33_pre_norm_subtract_output, single_blocks_33_pre_norm_sqrt_output)
    single_blocks_33_tensoritem_0_output = tensor_item(single_blocks_33_modulation_split_output, single_blocks_33_tensoritem_0_index)
    single_blocks_33_add_0_output = add(single_blocks_33_add_0_left, single_blocks_33_tensoritem_0_output)
    single_blocks_33_multiply_0_output = multiplication(single_blocks_33_add_0_output, single_blocks_33_pre_norm_divide_output)
    single_blocks_33_tensoritem_1_output = tensor_item(single_blocks_33_modulation_split_output, single_blocks_33_tensoritem_1_index)
    single_blocks_33_add_1_output = add(single_blocks_33_multiply_0_output, single_blocks_33_tensoritem_1_output)
    single_blocks_33_linear1_transpose_output = transpose(single_blocks_33_linear1_weight, single_blocks_33_linear1_transpose_axes)
    single_blocks_33_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_33_add_1_output, single_blocks_33_linear1_transpose_output)
    single_blocks_33_lin1_out = add(single_blocks_33_linear1_matrixmultiply_output, single_blocks_33_linear1_bias)
    single_blocks_33_tensoritem_2_output = tensor_item(single_blocks_33_lin1_out, single_blocks_33_tensoritem_2_index)
    single_blocks_33_reshape_output = reshape(single_blocks_33_tensoritem_2_output, single_blocks_33_totuple_output)
    single_blocks_33_transpose_out = transpose(single_blocks_33_reshape_output, single_blocks_33_transpose_axes)
    single_blocks_33_tensoritem_3_output = tensor_item(single_blocks_33_transpose_out, single_blocks_33_tensoritem_3_index)
    single_blocks_33_tensoritem_4_output = tensor_item(single_blocks_33_transpose_out, single_blocks_33_tensoritem_4_index)
    single_blocks_33_norm_query_norm_power_output = power(single_blocks_33_tensoritem_3_output, single_blocks_33_norm_query_norm_power_exponent)
    single_blocks_33_norm_query_norm_mean_output = reduce_mean(single_blocks_33_norm_query_norm_power_output, axis=single_blocks_33_norm_query_norm_mean_axis, keepdim=single_blocks_33_norm_query_norm_mean_keepdim)
    single_blocks_33_norm_query_norm_add_output = add(single_blocks_33_norm_query_norm_mean_output, single_blocks_33_norm_query_norm_add_right)
    single_blocks_33_norm_query_norm_sqrt_output = sqrt(single_blocks_33_norm_query_norm_add_output)
    single_blocks_33_norm_query_norm_divide_output = divide(single_blocks_33_norm_query_norm_divide_numerator, single_blocks_33_norm_query_norm_sqrt_output)
    single_blocks_33_norm_query_norm_multiply_0_output = multiplication(single_blocks_33_tensoritem_3_output, single_blocks_33_norm_query_norm_divide_output)
    single_blocks_33_norm_query_norm_multiply_1_output = multiplication(single_blocks_33_norm_query_norm_multiply_0_output, single_blocks_33_norm_query_norm_scale)
    single_blocks_33_norm_key_norm_power_output = power(single_blocks_33_tensoritem_4_output, single_blocks_33_norm_key_norm_power_exponent)
    single_blocks_33_norm_key_norm_mean_output = reduce_mean(single_blocks_33_norm_key_norm_power_output, axis=single_blocks_33_norm_key_norm_mean_axis, keepdim=single_blocks_33_norm_key_norm_mean_keepdim)
    single_blocks_33_norm_key_norm_add_output = add(single_blocks_33_norm_key_norm_mean_output, single_blocks_33_norm_key_norm_add_right)
    single_blocks_33_norm_key_norm_sqrt_output = sqrt(single_blocks_33_norm_key_norm_add_output)
    single_blocks_33_norm_key_norm_divide_output = divide(single_blocks_33_norm_key_norm_divide_numerator, single_blocks_33_norm_key_norm_sqrt_output)
    single_blocks_33_norm_key_norm_multiply_0_output = multiplication(single_blocks_33_tensoritem_4_output, single_blocks_33_norm_key_norm_divide_output)
    single_blocks_33_norm_key_norm_multiply_1_output = multiplication(single_blocks_33_norm_key_norm_multiply_0_output, single_blocks_33_norm_key_norm_scale)
    single_blocks_33_tensoritem_5_output = tensor_item(single_blocks_33_transpose_out, single_blocks_33_tensoritem_5_index)
    single_blocks_33_model_model_xq_ = reshape(single_blocks_33_norm_query_norm_multiply_1_output, single_blocks_33_model_model_totuple_0_output)
    single_blocks_33_model_model_xk_ = reshape(single_blocks_33_norm_key_norm_multiply_1_output, single_blocks_33_model_model_totuple_1_output)
    single_blocks_33_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_33_model_model_tensoritem_0_index)
    single_blocks_33_model_model_tensoritem_1_output = tensor_item(single_blocks_33_model_model_xq_, single_blocks_33_model_model_tensoritem_1_index)
    single_blocks_33_model_model_multiply_0_output = multiplication(single_blocks_33_model_model_tensoritem_0_output, single_blocks_33_model_model_tensoritem_1_output)
    single_blocks_33_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_33_model_model_tensoritem_2_index)
    single_blocks_33_model_model_tensoritem_3_output = tensor_item(single_blocks_33_model_model_xq_, single_blocks_33_model_model_tensoritem_3_index)
    single_blocks_33_model_model_multiply_1_output = multiplication(single_blocks_33_model_model_tensoritem_2_output, single_blocks_33_model_model_tensoritem_3_output)
    single_blocks_33_model_model_add_0_output = add(single_blocks_33_model_model_multiply_0_output, single_blocks_33_model_model_multiply_1_output)
    single_blocks_33_model_q_out = reshape(single_blocks_33_model_model_add_0_output, single_blocks_33_model_model_shape_0_output)
    single_blocks_33_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_33_model_model_tensoritem_4_index)
    single_blocks_33_model_model_tensoritem_5_output = tensor_item(single_blocks_33_model_model_xk_, single_blocks_33_model_model_tensoritem_5_index)
    single_blocks_33_model_model_multiply_2_output = multiplication(single_blocks_33_model_model_tensoritem_4_output, single_blocks_33_model_model_tensoritem_5_output)
    single_blocks_33_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_33_model_model_tensoritem_6_index)
    single_blocks_33_model_model_tensoritem_7_output = tensor_item(single_blocks_33_model_model_xk_, single_blocks_33_model_model_tensoritem_7_index)
    single_blocks_33_model_model_multiply_3_output = multiplication(single_blocks_33_model_model_tensoritem_6_output, single_blocks_33_model_model_tensoritem_7_output)
    single_blocks_33_model_model_add_1_output = add(single_blocks_33_model_model_multiply_2_output, single_blocks_33_model_model_multiply_3_output)
    single_blocks_33_model_k_out = reshape(single_blocks_33_model_model_add_1_output, single_blocks_33_model_model_shape_1_output)
    single_blocks_33_model_context = scaled_dot_product_attention(single_blocks_33_model_q_out, single_blocks_33_model_k_out, single_blocks_33_tensoritem_5_output, single_blocks_33_model_scaleddotproduct_attn_mask)
    single_blocks_33_model_transpose_output = transpose(single_blocks_33_model_context, single_blocks_33_model_transpose_axes)
    single_blocks_33_attn = reshape(single_blocks_33_model_transpose_output, single_blocks_33_model_totuple_output)
    single_blocks_33_tensoritem_6_output = tensor_item(single_blocks_33_lin1_out, single_blocks_33_tensoritem_6_index)
    single_blocks_33_mlp_act = gelu(single_blocks_33_tensoritem_6_output, single_blocks_33_gelu_approximate)
    single_blocks_33_concat_out = concat(single_blocks_33_attn, single_blocks_33_mlp_act, axis=single_blocks_33_concat_axis)
    single_blocks_33_linear2_transpose_output = transpose(single_blocks_33_linear2_weight, single_blocks_33_linear2_transpose_axes)
    single_blocks_33_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_33_concat_out, single_blocks_33_linear2_transpose_output)
    single_blocks_33_lin2_out = add(single_blocks_33_linear2_matrixmultiply_output, single_blocks_33_linear2_bias)
    single_blocks_33_tensoritem_7_output = tensor_item(single_blocks_33_modulation_split_output, single_blocks_33_tensoritem_7_index)
    single_blocks_33_multiply_1_output = multiplication(single_blocks_33_tensoritem_7_output, single_blocks_33_lin2_out)
    single_blocks_33_add_2_output = add(single_blocks_32_add_2_output, single_blocks_33_multiply_1_output)
    single_blocks_34_modulation_silu_minus = minus(vec)
    single_blocks_34_modulation_silu_exp = exp(single_blocks_34_modulation_silu_minus)
    single_blocks_34_modulation_silu_add = add(single_blocks_34_modulation_silu_add_left, single_blocks_34_modulation_silu_exp)
    single_blocks_34_modulation_silu_output = divide(vec, single_blocks_34_modulation_silu_add)
    single_blocks_34_modulation_lin_transpose_output = transpose(single_blocks_34_modulation_lin_weight, single_blocks_34_modulation_lin_transpose_axes)
    single_blocks_34_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_34_modulation_silu_output, single_blocks_34_modulation_lin_transpose_output)
    single_blocks_34_modulation_lin_out = add(single_blocks_34_modulation_lin_matrixmultiply_output, single_blocks_34_modulation_lin_bias)
    single_blocks_34_modulation_tensoritem_output = tensor_item(single_blocks_34_modulation_lin_out, single_blocks_34_modulation_tensoritem_index)
    single_blocks_34_modulation_split_output = split(single_blocks_34_modulation_tensoritem_output, single_blocks_34_modulation_split_split_size, single_blocks_34_modulation_split_axis)
    single_blocks_34_pre_norm_mean_output = reduce_mean(single_blocks_33_add_2_output, axis=single_blocks_34_pre_norm_mean_axis, keepdim=single_blocks_34_pre_norm_mean_keepdim)
    single_blocks_34_pre_norm_subtract_output = subtract(single_blocks_33_add_2_output, single_blocks_34_pre_norm_mean_output)
    single_blocks_34_pre_norm_variance_output = variance(single_blocks_33_add_2_output, axis=single_blocks_34_pre_norm_variance_axis, keepdim=single_blocks_34_pre_norm_variance_keepdim, correction=single_blocks_34_pre_norm_variance_correction)
    single_blocks_34_pre_norm_add_output = add(single_blocks_34_pre_norm_variance_output, single_blocks_34_pre_norm_add_right)
    single_blocks_34_pre_norm_sqrt_output = sqrt(single_blocks_34_pre_norm_add_output)
    single_blocks_34_pre_norm_divide_output = divide(single_blocks_34_pre_norm_subtract_output, single_blocks_34_pre_norm_sqrt_output)
    single_blocks_34_tensoritem_0_output = tensor_item(single_blocks_34_modulation_split_output, single_blocks_34_tensoritem_0_index)
    single_blocks_34_add_0_output = add(single_blocks_34_add_0_left, single_blocks_34_tensoritem_0_output)
    single_blocks_34_multiply_0_output = multiplication(single_blocks_34_add_0_output, single_blocks_34_pre_norm_divide_output)
    single_blocks_34_tensoritem_1_output = tensor_item(single_blocks_34_modulation_split_output, single_blocks_34_tensoritem_1_index)
    single_blocks_34_add_1_output = add(single_blocks_34_multiply_0_output, single_blocks_34_tensoritem_1_output)
    single_blocks_34_linear1_transpose_output = transpose(single_blocks_34_linear1_weight, single_blocks_34_linear1_transpose_axes)
    single_blocks_34_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_34_add_1_output, single_blocks_34_linear1_transpose_output)
    single_blocks_34_lin1_out = add(single_blocks_34_linear1_matrixmultiply_output, single_blocks_34_linear1_bias)
    single_blocks_34_tensoritem_2_output = tensor_item(single_blocks_34_lin1_out, single_blocks_34_tensoritem_2_index)
    single_blocks_34_reshape_output = reshape(single_blocks_34_tensoritem_2_output, single_blocks_34_totuple_output)
    single_blocks_34_transpose_out = transpose(single_blocks_34_reshape_output, single_blocks_34_transpose_axes)
    single_blocks_34_tensoritem_3_output = tensor_item(single_blocks_34_transpose_out, single_blocks_34_tensoritem_3_index)
    single_blocks_34_tensoritem_4_output = tensor_item(single_blocks_34_transpose_out, single_blocks_34_tensoritem_4_index)
    single_blocks_34_norm_query_norm_power_output = power(single_blocks_34_tensoritem_3_output, single_blocks_34_norm_query_norm_power_exponent)
    single_blocks_34_norm_query_norm_mean_output = reduce_mean(single_blocks_34_norm_query_norm_power_output, axis=single_blocks_34_norm_query_norm_mean_axis, keepdim=single_blocks_34_norm_query_norm_mean_keepdim)
    single_blocks_34_norm_query_norm_add_output = add(single_blocks_34_norm_query_norm_mean_output, single_blocks_34_norm_query_norm_add_right)
    single_blocks_34_norm_query_norm_sqrt_output = sqrt(single_blocks_34_norm_query_norm_add_output)
    single_blocks_34_norm_query_norm_divide_output = divide(single_blocks_34_norm_query_norm_divide_numerator, single_blocks_34_norm_query_norm_sqrt_output)
    single_blocks_34_norm_query_norm_multiply_0_output = multiplication(single_blocks_34_tensoritem_3_output, single_blocks_34_norm_query_norm_divide_output)
    single_blocks_34_norm_query_norm_multiply_1_output = multiplication(single_blocks_34_norm_query_norm_multiply_0_output, single_blocks_34_norm_query_norm_scale)
    single_blocks_34_norm_key_norm_power_output = power(single_blocks_34_tensoritem_4_output, single_blocks_34_norm_key_norm_power_exponent)
    single_blocks_34_norm_key_norm_mean_output = reduce_mean(single_blocks_34_norm_key_norm_power_output, axis=single_blocks_34_norm_key_norm_mean_axis, keepdim=single_blocks_34_norm_key_norm_mean_keepdim)
    single_blocks_34_norm_key_norm_add_output = add(single_blocks_34_norm_key_norm_mean_output, single_blocks_34_norm_key_norm_add_right)
    single_blocks_34_norm_key_norm_sqrt_output = sqrt(single_blocks_34_norm_key_norm_add_output)
    single_blocks_34_norm_key_norm_divide_output = divide(single_blocks_34_norm_key_norm_divide_numerator, single_blocks_34_norm_key_norm_sqrt_output)
    single_blocks_34_norm_key_norm_multiply_0_output = multiplication(single_blocks_34_tensoritem_4_output, single_blocks_34_norm_key_norm_divide_output)
    single_blocks_34_norm_key_norm_multiply_1_output = multiplication(single_blocks_34_norm_key_norm_multiply_0_output, single_blocks_34_norm_key_norm_scale)
    single_blocks_34_tensoritem_5_output = tensor_item(single_blocks_34_transpose_out, single_blocks_34_tensoritem_5_index)
    single_blocks_34_model_model_xq_ = reshape(single_blocks_34_norm_query_norm_multiply_1_output, single_blocks_34_model_model_totuple_0_output)
    single_blocks_34_model_model_xk_ = reshape(single_blocks_34_norm_key_norm_multiply_1_output, single_blocks_34_model_model_totuple_1_output)
    single_blocks_34_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_34_model_model_tensoritem_0_index)
    single_blocks_34_model_model_tensoritem_1_output = tensor_item(single_blocks_34_model_model_xq_, single_blocks_34_model_model_tensoritem_1_index)
    single_blocks_34_model_model_multiply_0_output = multiplication(single_blocks_34_model_model_tensoritem_0_output, single_blocks_34_model_model_tensoritem_1_output)
    single_blocks_34_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_34_model_model_tensoritem_2_index)
    single_blocks_34_model_model_tensoritem_3_output = tensor_item(single_blocks_34_model_model_xq_, single_blocks_34_model_model_tensoritem_3_index)
    single_blocks_34_model_model_multiply_1_output = multiplication(single_blocks_34_model_model_tensoritem_2_output, single_blocks_34_model_model_tensoritem_3_output)
    single_blocks_34_model_model_add_0_output = add(single_blocks_34_model_model_multiply_0_output, single_blocks_34_model_model_multiply_1_output)
    single_blocks_34_model_q_out = reshape(single_blocks_34_model_model_add_0_output, single_blocks_34_model_model_shape_0_output)
    single_blocks_34_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_34_model_model_tensoritem_4_index)
    single_blocks_34_model_model_tensoritem_5_output = tensor_item(single_blocks_34_model_model_xk_, single_blocks_34_model_model_tensoritem_5_index)
    single_blocks_34_model_model_multiply_2_output = multiplication(single_blocks_34_model_model_tensoritem_4_output, single_blocks_34_model_model_tensoritem_5_output)
    single_blocks_34_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_34_model_model_tensoritem_6_index)
    single_blocks_34_model_model_tensoritem_7_output = tensor_item(single_blocks_34_model_model_xk_, single_blocks_34_model_model_tensoritem_7_index)
    single_blocks_34_model_model_multiply_3_output = multiplication(single_blocks_34_model_model_tensoritem_6_output, single_blocks_34_model_model_tensoritem_7_output)
    single_blocks_34_model_model_add_1_output = add(single_blocks_34_model_model_multiply_2_output, single_blocks_34_model_model_multiply_3_output)
    single_blocks_34_model_k_out = reshape(single_blocks_34_model_model_add_1_output, single_blocks_34_model_model_shape_1_output)
    single_blocks_34_model_context = scaled_dot_product_attention(single_blocks_34_model_q_out, single_blocks_34_model_k_out, single_blocks_34_tensoritem_5_output, single_blocks_34_model_scaleddotproduct_attn_mask)
    single_blocks_34_model_transpose_output = transpose(single_blocks_34_model_context, single_blocks_34_model_transpose_axes)
    single_blocks_34_attn = reshape(single_blocks_34_model_transpose_output, single_blocks_34_model_totuple_output)
    single_blocks_34_tensoritem_6_output = tensor_item(single_blocks_34_lin1_out, single_blocks_34_tensoritem_6_index)
    single_blocks_34_mlp_act = gelu(single_blocks_34_tensoritem_6_output, single_blocks_34_gelu_approximate)
    single_blocks_34_concat_out = concat(single_blocks_34_attn, single_blocks_34_mlp_act, axis=single_blocks_34_concat_axis)
    single_blocks_34_linear2_transpose_output = transpose(single_blocks_34_linear2_weight, single_blocks_34_linear2_transpose_axes)
    single_blocks_34_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_34_concat_out, single_blocks_34_linear2_transpose_output)
    single_blocks_34_lin2_out = add(single_blocks_34_linear2_matrixmultiply_output, single_blocks_34_linear2_bias)
    single_blocks_34_tensoritem_7_output = tensor_item(single_blocks_34_modulation_split_output, single_blocks_34_tensoritem_7_index)
    single_blocks_34_multiply_1_output = multiplication(single_blocks_34_tensoritem_7_output, single_blocks_34_lin2_out)
    single_blocks_34_add_2_output = add(single_blocks_33_add_2_output, single_blocks_34_multiply_1_output)
    single_blocks_35_modulation_silu_minus = minus(vec)
    single_blocks_35_modulation_silu_exp = exp(single_blocks_35_modulation_silu_minus)
    single_blocks_35_modulation_silu_add = add(single_blocks_35_modulation_silu_add_left, single_blocks_35_modulation_silu_exp)
    single_blocks_35_modulation_silu_output = divide(vec, single_blocks_35_modulation_silu_add)
    single_blocks_35_modulation_lin_transpose_output = transpose(single_blocks_35_modulation_lin_weight, single_blocks_35_modulation_lin_transpose_axes)
    single_blocks_35_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_35_modulation_silu_output, single_blocks_35_modulation_lin_transpose_output)
    single_blocks_35_modulation_lin_out = add(single_blocks_35_modulation_lin_matrixmultiply_output, single_blocks_35_modulation_lin_bias)
    single_blocks_35_modulation_tensoritem_output = tensor_item(single_blocks_35_modulation_lin_out, single_blocks_35_modulation_tensoritem_index)
    single_blocks_35_modulation_split_output = split(single_blocks_35_modulation_tensoritem_output, single_blocks_35_modulation_split_split_size, single_blocks_35_modulation_split_axis)
    single_blocks_35_pre_norm_mean_output = reduce_mean(single_blocks_34_add_2_output, axis=single_blocks_35_pre_norm_mean_axis, keepdim=single_blocks_35_pre_norm_mean_keepdim)
    single_blocks_35_pre_norm_subtract_output = subtract(single_blocks_34_add_2_output, single_blocks_35_pre_norm_mean_output)
    single_blocks_35_pre_norm_variance_output = variance(single_blocks_34_add_2_output, axis=single_blocks_35_pre_norm_variance_axis, keepdim=single_blocks_35_pre_norm_variance_keepdim, correction=single_blocks_35_pre_norm_variance_correction)
    single_blocks_35_pre_norm_add_output = add(single_blocks_35_pre_norm_variance_output, single_blocks_35_pre_norm_add_right)
    single_blocks_35_pre_norm_sqrt_output = sqrt(single_blocks_35_pre_norm_add_output)
    single_blocks_35_pre_norm_divide_output = divide(single_blocks_35_pre_norm_subtract_output, single_blocks_35_pre_norm_sqrt_output)
    single_blocks_35_tensoritem_0_output = tensor_item(single_blocks_35_modulation_split_output, single_blocks_35_tensoritem_0_index)
    single_blocks_35_add_0_output = add(single_blocks_35_add_0_left, single_blocks_35_tensoritem_0_output)
    single_blocks_35_multiply_0_output = multiplication(single_blocks_35_add_0_output, single_blocks_35_pre_norm_divide_output)
    single_blocks_35_tensoritem_1_output = tensor_item(single_blocks_35_modulation_split_output, single_blocks_35_tensoritem_1_index)
    single_blocks_35_add_1_output = add(single_blocks_35_multiply_0_output, single_blocks_35_tensoritem_1_output)
    single_blocks_35_linear1_transpose_output = transpose(single_blocks_35_linear1_weight, single_blocks_35_linear1_transpose_axes)
    single_blocks_35_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_35_add_1_output, single_blocks_35_linear1_transpose_output)
    single_blocks_35_lin1_out = add(single_blocks_35_linear1_matrixmultiply_output, single_blocks_35_linear1_bias)
    single_blocks_35_tensoritem_2_output = tensor_item(single_blocks_35_lin1_out, single_blocks_35_tensoritem_2_index)
    single_blocks_35_reshape_output = reshape(single_blocks_35_tensoritem_2_output, single_blocks_35_totuple_output)
    single_blocks_35_transpose_out = transpose(single_blocks_35_reshape_output, single_blocks_35_transpose_axes)
    single_blocks_35_tensoritem_3_output = tensor_item(single_blocks_35_transpose_out, single_blocks_35_tensoritem_3_index)
    single_blocks_35_tensoritem_4_output = tensor_item(single_blocks_35_transpose_out, single_blocks_35_tensoritem_4_index)
    single_blocks_35_norm_query_norm_power_output = power(single_blocks_35_tensoritem_3_output, single_blocks_35_norm_query_norm_power_exponent)
    single_blocks_35_norm_query_norm_mean_output = reduce_mean(single_blocks_35_norm_query_norm_power_output, axis=single_blocks_35_norm_query_norm_mean_axis, keepdim=single_blocks_35_norm_query_norm_mean_keepdim)
    single_blocks_35_norm_query_norm_add_output = add(single_blocks_35_norm_query_norm_mean_output, single_blocks_35_norm_query_norm_add_right)
    single_blocks_35_norm_query_norm_sqrt_output = sqrt(single_blocks_35_norm_query_norm_add_output)
    single_blocks_35_norm_query_norm_divide_output = divide(single_blocks_35_norm_query_norm_divide_numerator, single_blocks_35_norm_query_norm_sqrt_output)
    single_blocks_35_norm_query_norm_multiply_0_output = multiplication(single_blocks_35_tensoritem_3_output, single_blocks_35_norm_query_norm_divide_output)
    single_blocks_35_norm_query_norm_multiply_1_output = multiplication(single_blocks_35_norm_query_norm_multiply_0_output, single_blocks_35_norm_query_norm_scale)
    single_blocks_35_norm_key_norm_power_output = power(single_blocks_35_tensoritem_4_output, single_blocks_35_norm_key_norm_power_exponent)
    single_blocks_35_norm_key_norm_mean_output = reduce_mean(single_blocks_35_norm_key_norm_power_output, axis=single_blocks_35_norm_key_norm_mean_axis, keepdim=single_blocks_35_norm_key_norm_mean_keepdim)
    single_blocks_35_norm_key_norm_add_output = add(single_blocks_35_norm_key_norm_mean_output, single_blocks_35_norm_key_norm_add_right)
    single_blocks_35_norm_key_norm_sqrt_output = sqrt(single_blocks_35_norm_key_norm_add_output)
    single_blocks_35_norm_key_norm_divide_output = divide(single_blocks_35_norm_key_norm_divide_numerator, single_blocks_35_norm_key_norm_sqrt_output)
    single_blocks_35_norm_key_norm_multiply_0_output = multiplication(single_blocks_35_tensoritem_4_output, single_blocks_35_norm_key_norm_divide_output)
    single_blocks_35_norm_key_norm_multiply_1_output = multiplication(single_blocks_35_norm_key_norm_multiply_0_output, single_blocks_35_norm_key_norm_scale)
    single_blocks_35_tensoritem_5_output = tensor_item(single_blocks_35_transpose_out, single_blocks_35_tensoritem_5_index)
    single_blocks_35_model_model_xq_ = reshape(single_blocks_35_norm_query_norm_multiply_1_output, single_blocks_35_model_model_totuple_0_output)
    single_blocks_35_model_model_xk_ = reshape(single_blocks_35_norm_key_norm_multiply_1_output, single_blocks_35_model_model_totuple_1_output)
    single_blocks_35_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_35_model_model_tensoritem_0_index)
    single_blocks_35_model_model_tensoritem_1_output = tensor_item(single_blocks_35_model_model_xq_, single_blocks_35_model_model_tensoritem_1_index)
    single_blocks_35_model_model_multiply_0_output = multiplication(single_blocks_35_model_model_tensoritem_0_output, single_blocks_35_model_model_tensoritem_1_output)
    single_blocks_35_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_35_model_model_tensoritem_2_index)
    single_blocks_35_model_model_tensoritem_3_output = tensor_item(single_blocks_35_model_model_xq_, single_blocks_35_model_model_tensoritem_3_index)
    single_blocks_35_model_model_multiply_1_output = multiplication(single_blocks_35_model_model_tensoritem_2_output, single_blocks_35_model_model_tensoritem_3_output)
    single_blocks_35_model_model_add_0_output = add(single_blocks_35_model_model_multiply_0_output, single_blocks_35_model_model_multiply_1_output)
    single_blocks_35_model_q_out = reshape(single_blocks_35_model_model_add_0_output, single_blocks_35_model_model_shape_0_output)
    single_blocks_35_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_35_model_model_tensoritem_4_index)
    single_blocks_35_model_model_tensoritem_5_output = tensor_item(single_blocks_35_model_model_xk_, single_blocks_35_model_model_tensoritem_5_index)
    single_blocks_35_model_model_multiply_2_output = multiplication(single_blocks_35_model_model_tensoritem_4_output, single_blocks_35_model_model_tensoritem_5_output)
    single_blocks_35_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_35_model_model_tensoritem_6_index)
    single_blocks_35_model_model_tensoritem_7_output = tensor_item(single_blocks_35_model_model_xk_, single_blocks_35_model_model_tensoritem_7_index)
    single_blocks_35_model_model_multiply_3_output = multiplication(single_blocks_35_model_model_tensoritem_6_output, single_blocks_35_model_model_tensoritem_7_output)
    single_blocks_35_model_model_add_1_output = add(single_blocks_35_model_model_multiply_2_output, single_blocks_35_model_model_multiply_3_output)
    single_blocks_35_model_k_out = reshape(single_blocks_35_model_model_add_1_output, single_blocks_35_model_model_shape_1_output)
    single_blocks_35_model_context = scaled_dot_product_attention(single_blocks_35_model_q_out, single_blocks_35_model_k_out, single_blocks_35_tensoritem_5_output, single_blocks_35_model_scaleddotproduct_attn_mask)
    single_blocks_35_model_transpose_output = transpose(single_blocks_35_model_context, single_blocks_35_model_transpose_axes)
    single_blocks_35_attn = reshape(single_blocks_35_model_transpose_output, single_blocks_35_model_totuple_output)
    single_blocks_35_tensoritem_6_output = tensor_item(single_blocks_35_lin1_out, single_blocks_35_tensoritem_6_index)
    single_blocks_35_mlp_act = gelu(single_blocks_35_tensoritem_6_output, single_blocks_35_gelu_approximate)
    single_blocks_35_concat_out = concat(single_blocks_35_attn, single_blocks_35_mlp_act, axis=single_blocks_35_concat_axis)
    single_blocks_35_linear2_transpose_output = transpose(single_blocks_35_linear2_weight, single_blocks_35_linear2_transpose_axes)
    single_blocks_35_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_35_concat_out, single_blocks_35_linear2_transpose_output)
    single_blocks_35_lin2_out = add(single_blocks_35_linear2_matrixmultiply_output, single_blocks_35_linear2_bias)
    single_blocks_35_tensoritem_7_output = tensor_item(single_blocks_35_modulation_split_output, single_blocks_35_tensoritem_7_index)
    single_blocks_35_multiply_1_output = multiplication(single_blocks_35_tensoritem_7_output, single_blocks_35_lin2_out)
    single_blocks_35_add_2_output = add(single_blocks_34_add_2_output, single_blocks_35_multiply_1_output)
    single_blocks_36_modulation_silu_minus = minus(vec)
    single_blocks_36_modulation_silu_exp = exp(single_blocks_36_modulation_silu_minus)
    single_blocks_36_modulation_silu_add = add(single_blocks_36_modulation_silu_add_left, single_blocks_36_modulation_silu_exp)
    single_blocks_36_modulation_silu_output = divide(vec, single_blocks_36_modulation_silu_add)
    single_blocks_36_modulation_lin_transpose_output = transpose(single_blocks_36_modulation_lin_weight, single_blocks_36_modulation_lin_transpose_axes)
    single_blocks_36_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_36_modulation_silu_output, single_blocks_36_modulation_lin_transpose_output)
    single_blocks_36_modulation_lin_out = add(single_blocks_36_modulation_lin_matrixmultiply_output, single_blocks_36_modulation_lin_bias)
    single_blocks_36_modulation_tensoritem_output = tensor_item(single_blocks_36_modulation_lin_out, single_blocks_36_modulation_tensoritem_index)
    single_blocks_36_modulation_split_output = split(single_blocks_36_modulation_tensoritem_output, single_blocks_36_modulation_split_split_size, single_blocks_36_modulation_split_axis)
    single_blocks_36_pre_norm_mean_output = reduce_mean(single_blocks_35_add_2_output, axis=single_blocks_36_pre_norm_mean_axis, keepdim=single_blocks_36_pre_norm_mean_keepdim)
    single_blocks_36_pre_norm_subtract_output = subtract(single_blocks_35_add_2_output, single_blocks_36_pre_norm_mean_output)
    single_blocks_36_pre_norm_variance_output = variance(single_blocks_35_add_2_output, axis=single_blocks_36_pre_norm_variance_axis, keepdim=single_blocks_36_pre_norm_variance_keepdim, correction=single_blocks_36_pre_norm_variance_correction)
    single_blocks_36_pre_norm_add_output = add(single_blocks_36_pre_norm_variance_output, single_blocks_36_pre_norm_add_right)
    single_blocks_36_pre_norm_sqrt_output = sqrt(single_blocks_36_pre_norm_add_output)
    single_blocks_36_pre_norm_divide_output = divide(single_blocks_36_pre_norm_subtract_output, single_blocks_36_pre_norm_sqrt_output)
    single_blocks_36_tensoritem_0_output = tensor_item(single_blocks_36_modulation_split_output, single_blocks_36_tensoritem_0_index)
    single_blocks_36_add_0_output = add(single_blocks_36_add_0_left, single_blocks_36_tensoritem_0_output)
    single_blocks_36_multiply_0_output = multiplication(single_blocks_36_add_0_output, single_blocks_36_pre_norm_divide_output)
    single_blocks_36_tensoritem_1_output = tensor_item(single_blocks_36_modulation_split_output, single_blocks_36_tensoritem_1_index)
    single_blocks_36_add_1_output = add(single_blocks_36_multiply_0_output, single_blocks_36_tensoritem_1_output)
    single_blocks_36_linear1_transpose_output = transpose(single_blocks_36_linear1_weight, single_blocks_36_linear1_transpose_axes)
    single_blocks_36_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_36_add_1_output, single_blocks_36_linear1_transpose_output)
    single_blocks_36_lin1_out = add(single_blocks_36_linear1_matrixmultiply_output, single_blocks_36_linear1_bias)
    single_blocks_36_tensoritem_2_output = tensor_item(single_blocks_36_lin1_out, single_blocks_36_tensoritem_2_index)
    single_blocks_36_reshape_output = reshape(single_blocks_36_tensoritem_2_output, single_blocks_36_totuple_output)
    single_blocks_36_transpose_out = transpose(single_blocks_36_reshape_output, single_blocks_36_transpose_axes)
    single_blocks_36_tensoritem_3_output = tensor_item(single_blocks_36_transpose_out, single_blocks_36_tensoritem_3_index)
    single_blocks_36_tensoritem_4_output = tensor_item(single_blocks_36_transpose_out, single_blocks_36_tensoritem_4_index)
    single_blocks_36_norm_query_norm_power_output = power(single_blocks_36_tensoritem_3_output, single_blocks_36_norm_query_norm_power_exponent)
    single_blocks_36_norm_query_norm_mean_output = reduce_mean(single_blocks_36_norm_query_norm_power_output, axis=single_blocks_36_norm_query_norm_mean_axis, keepdim=single_blocks_36_norm_query_norm_mean_keepdim)
    single_blocks_36_norm_query_norm_add_output = add(single_blocks_36_norm_query_norm_mean_output, single_blocks_36_norm_query_norm_add_right)
    single_blocks_36_norm_query_norm_sqrt_output = sqrt(single_blocks_36_norm_query_norm_add_output)
    single_blocks_36_norm_query_norm_divide_output = divide(single_blocks_36_norm_query_norm_divide_numerator, single_blocks_36_norm_query_norm_sqrt_output)
    single_blocks_36_norm_query_norm_multiply_0_output = multiplication(single_blocks_36_tensoritem_3_output, single_blocks_36_norm_query_norm_divide_output)
    single_blocks_36_norm_query_norm_multiply_1_output = multiplication(single_blocks_36_norm_query_norm_multiply_0_output, single_blocks_36_norm_query_norm_scale)
    single_blocks_36_norm_key_norm_power_output = power(single_blocks_36_tensoritem_4_output, single_blocks_36_norm_key_norm_power_exponent)
    single_blocks_36_norm_key_norm_mean_output = reduce_mean(single_blocks_36_norm_key_norm_power_output, axis=single_blocks_36_norm_key_norm_mean_axis, keepdim=single_blocks_36_norm_key_norm_mean_keepdim)
    single_blocks_36_norm_key_norm_add_output = add(single_blocks_36_norm_key_norm_mean_output, single_blocks_36_norm_key_norm_add_right)
    single_blocks_36_norm_key_norm_sqrt_output = sqrt(single_blocks_36_norm_key_norm_add_output)
    single_blocks_36_norm_key_norm_divide_output = divide(single_blocks_36_norm_key_norm_divide_numerator, single_blocks_36_norm_key_norm_sqrt_output)
    single_blocks_36_norm_key_norm_multiply_0_output = multiplication(single_blocks_36_tensoritem_4_output, single_blocks_36_norm_key_norm_divide_output)
    single_blocks_36_norm_key_norm_multiply_1_output = multiplication(single_blocks_36_norm_key_norm_multiply_0_output, single_blocks_36_norm_key_norm_scale)
    single_blocks_36_tensoritem_5_output = tensor_item(single_blocks_36_transpose_out, single_blocks_36_tensoritem_5_index)
    single_blocks_36_model_model_xq_ = reshape(single_blocks_36_norm_query_norm_multiply_1_output, single_blocks_36_model_model_totuple_0_output)
    single_blocks_36_model_model_xk_ = reshape(single_blocks_36_norm_key_norm_multiply_1_output, single_blocks_36_model_model_totuple_1_output)
    single_blocks_36_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_36_model_model_tensoritem_0_index)
    single_blocks_36_model_model_tensoritem_1_output = tensor_item(single_blocks_36_model_model_xq_, single_blocks_36_model_model_tensoritem_1_index)
    single_blocks_36_model_model_multiply_0_output = multiplication(single_blocks_36_model_model_tensoritem_0_output, single_blocks_36_model_model_tensoritem_1_output)
    single_blocks_36_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_36_model_model_tensoritem_2_index)
    single_blocks_36_model_model_tensoritem_3_output = tensor_item(single_blocks_36_model_model_xq_, single_blocks_36_model_model_tensoritem_3_index)
    single_blocks_36_model_model_multiply_1_output = multiplication(single_blocks_36_model_model_tensoritem_2_output, single_blocks_36_model_model_tensoritem_3_output)
    single_blocks_36_model_model_add_0_output = add(single_blocks_36_model_model_multiply_0_output, single_blocks_36_model_model_multiply_1_output)
    single_blocks_36_model_q_out = reshape(single_blocks_36_model_model_add_0_output, single_blocks_36_model_model_shape_0_output)
    single_blocks_36_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_36_model_model_tensoritem_4_index)
    single_blocks_36_model_model_tensoritem_5_output = tensor_item(single_blocks_36_model_model_xk_, single_blocks_36_model_model_tensoritem_5_index)
    single_blocks_36_model_model_multiply_2_output = multiplication(single_blocks_36_model_model_tensoritem_4_output, single_blocks_36_model_model_tensoritem_5_output)
    single_blocks_36_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_36_model_model_tensoritem_6_index)
    single_blocks_36_model_model_tensoritem_7_output = tensor_item(single_blocks_36_model_model_xk_, single_blocks_36_model_model_tensoritem_7_index)
    single_blocks_36_model_model_multiply_3_output = multiplication(single_blocks_36_model_model_tensoritem_6_output, single_blocks_36_model_model_tensoritem_7_output)
    single_blocks_36_model_model_add_1_output = add(single_blocks_36_model_model_multiply_2_output, single_blocks_36_model_model_multiply_3_output)
    single_blocks_36_model_k_out = reshape(single_blocks_36_model_model_add_1_output, single_blocks_36_model_model_shape_1_output)
    single_blocks_36_model_context = scaled_dot_product_attention(single_blocks_36_model_q_out, single_blocks_36_model_k_out, single_blocks_36_tensoritem_5_output, single_blocks_36_model_scaleddotproduct_attn_mask)
    single_blocks_36_model_transpose_output = transpose(single_blocks_36_model_context, single_blocks_36_model_transpose_axes)
    single_blocks_36_attn = reshape(single_blocks_36_model_transpose_output, single_blocks_36_model_totuple_output)
    single_blocks_36_tensoritem_6_output = tensor_item(single_blocks_36_lin1_out, single_blocks_36_tensoritem_6_index)
    single_blocks_36_mlp_act = gelu(single_blocks_36_tensoritem_6_output, single_blocks_36_gelu_approximate)
    single_blocks_36_concat_out = concat(single_blocks_36_attn, single_blocks_36_mlp_act, axis=single_blocks_36_concat_axis)
    single_blocks_36_linear2_transpose_output = transpose(single_blocks_36_linear2_weight, single_blocks_36_linear2_transpose_axes)
    single_blocks_36_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_36_concat_out, single_blocks_36_linear2_transpose_output)
    single_blocks_36_lin2_out = add(single_blocks_36_linear2_matrixmultiply_output, single_blocks_36_linear2_bias)
    single_blocks_36_tensoritem_7_output = tensor_item(single_blocks_36_modulation_split_output, single_blocks_36_tensoritem_7_index)
    single_blocks_36_multiply_1_output = multiplication(single_blocks_36_tensoritem_7_output, single_blocks_36_lin2_out)
    single_blocks_36_add_2_output = add(single_blocks_35_add_2_output, single_blocks_36_multiply_1_output)
    single_blocks_37_modulation_silu_minus = minus(vec)
    single_blocks_37_modulation_silu_exp = exp(single_blocks_37_modulation_silu_minus)
    single_blocks_37_modulation_silu_add = add(single_blocks_37_modulation_silu_add_left, single_blocks_37_modulation_silu_exp)
    single_blocks_37_modulation_silu_output = divide(vec, single_blocks_37_modulation_silu_add)
    single_blocks_37_modulation_lin_transpose_output = transpose(single_blocks_37_modulation_lin_weight, single_blocks_37_modulation_lin_transpose_axes)
    single_blocks_37_modulation_lin_matrixmultiply_output = matrix_multiplication(single_blocks_37_modulation_silu_output, single_blocks_37_modulation_lin_transpose_output)
    single_blocks_37_modulation_lin_out = add(single_blocks_37_modulation_lin_matrixmultiply_output, single_blocks_37_modulation_lin_bias)
    single_blocks_37_modulation_tensoritem_output = tensor_item(single_blocks_37_modulation_lin_out, single_blocks_37_modulation_tensoritem_index)
    single_blocks_37_modulation_split_output = split(single_blocks_37_modulation_tensoritem_output, single_blocks_37_modulation_split_split_size, single_blocks_37_modulation_split_axis)
    single_blocks_37_pre_norm_mean_output = reduce_mean(single_blocks_36_add_2_output, axis=single_blocks_37_pre_norm_mean_axis, keepdim=single_blocks_37_pre_norm_mean_keepdim)
    single_blocks_37_pre_norm_subtract_output = subtract(single_blocks_36_add_2_output, single_blocks_37_pre_norm_mean_output)
    single_blocks_37_pre_norm_variance_output = variance(single_blocks_36_add_2_output, axis=single_blocks_37_pre_norm_variance_axis, keepdim=single_blocks_37_pre_norm_variance_keepdim, correction=single_blocks_37_pre_norm_variance_correction)
    single_blocks_37_pre_norm_add_output = add(single_blocks_37_pre_norm_variance_output, single_blocks_37_pre_norm_add_right)
    single_blocks_37_pre_norm_sqrt_output = sqrt(single_blocks_37_pre_norm_add_output)
    single_blocks_37_pre_norm_divide_output = divide(single_blocks_37_pre_norm_subtract_output, single_blocks_37_pre_norm_sqrt_output)
    single_blocks_37_tensoritem_0_output = tensor_item(single_blocks_37_modulation_split_output, single_blocks_37_tensoritem_0_index)
    single_blocks_37_add_0_output = add(single_blocks_37_add_0_left, single_blocks_37_tensoritem_0_output)
    single_blocks_37_multiply_0_output = multiplication(single_blocks_37_add_0_output, single_blocks_37_pre_norm_divide_output)
    single_blocks_37_tensoritem_1_output = tensor_item(single_blocks_37_modulation_split_output, single_blocks_37_tensoritem_1_index)
    single_blocks_37_add_1_output = add(single_blocks_37_multiply_0_output, single_blocks_37_tensoritem_1_output)
    single_blocks_37_linear1_transpose_output = transpose(single_blocks_37_linear1_weight, single_blocks_37_linear1_transpose_axes)
    single_blocks_37_linear1_matrixmultiply_output = matrix_multiplication(single_blocks_37_add_1_output, single_blocks_37_linear1_transpose_output)
    single_blocks_37_lin1_out = add(single_blocks_37_linear1_matrixmultiply_output, single_blocks_37_linear1_bias)
    single_blocks_37_tensoritem_2_output = tensor_item(single_blocks_37_lin1_out, single_blocks_37_tensoritem_2_index)
    single_blocks_37_reshape_output = reshape(single_blocks_37_tensoritem_2_output, single_blocks_37_totuple_output)
    single_blocks_37_transpose_out = transpose(single_blocks_37_reshape_output, single_blocks_37_transpose_axes)
    single_blocks_37_tensoritem_3_output = tensor_item(single_blocks_37_transpose_out, single_blocks_37_tensoritem_3_index)
    single_blocks_37_tensoritem_4_output = tensor_item(single_blocks_37_transpose_out, single_blocks_37_tensoritem_4_index)
    single_blocks_37_norm_query_norm_power_output = power(single_blocks_37_tensoritem_3_output, single_blocks_37_norm_query_norm_power_exponent)
    single_blocks_37_norm_query_norm_mean_output = reduce_mean(single_blocks_37_norm_query_norm_power_output, axis=single_blocks_37_norm_query_norm_mean_axis, keepdim=single_blocks_37_norm_query_norm_mean_keepdim)
    single_blocks_37_norm_query_norm_add_output = add(single_blocks_37_norm_query_norm_mean_output, single_blocks_37_norm_query_norm_add_right)
    single_blocks_37_norm_query_norm_sqrt_output = sqrt(single_blocks_37_norm_query_norm_add_output)
    single_blocks_37_norm_query_norm_divide_output = divide(single_blocks_37_norm_query_norm_divide_numerator, single_blocks_37_norm_query_norm_sqrt_output)
    single_blocks_37_norm_query_norm_multiply_0_output = multiplication(single_blocks_37_tensoritem_3_output, single_blocks_37_norm_query_norm_divide_output)
    single_blocks_37_norm_query_norm_multiply_1_output = multiplication(single_blocks_37_norm_query_norm_multiply_0_output, single_blocks_37_norm_query_norm_scale)
    single_blocks_37_norm_key_norm_power_output = power(single_blocks_37_tensoritem_4_output, single_blocks_37_norm_key_norm_power_exponent)
    single_blocks_37_norm_key_norm_mean_output = reduce_mean(single_blocks_37_norm_key_norm_power_output, axis=single_blocks_37_norm_key_norm_mean_axis, keepdim=single_blocks_37_norm_key_norm_mean_keepdim)
    single_blocks_37_norm_key_norm_add_output = add(single_blocks_37_norm_key_norm_mean_output, single_blocks_37_norm_key_norm_add_right)
    single_blocks_37_norm_key_norm_sqrt_output = sqrt(single_blocks_37_norm_key_norm_add_output)
    single_blocks_37_norm_key_norm_divide_output = divide(single_blocks_37_norm_key_norm_divide_numerator, single_blocks_37_norm_key_norm_sqrt_output)
    single_blocks_37_norm_key_norm_multiply_0_output = multiplication(single_blocks_37_tensoritem_4_output, single_blocks_37_norm_key_norm_divide_output)
    single_blocks_37_norm_key_norm_multiply_1_output = multiplication(single_blocks_37_norm_key_norm_multiply_0_output, single_blocks_37_norm_key_norm_scale)
    single_blocks_37_tensoritem_5_output = tensor_item(single_blocks_37_transpose_out, single_blocks_37_tensoritem_5_index)
    single_blocks_37_model_model_xq_ = reshape(single_blocks_37_norm_query_norm_multiply_1_output, single_blocks_37_model_model_totuple_0_output)
    single_blocks_37_model_model_xk_ = reshape(single_blocks_37_norm_key_norm_multiply_1_output, single_blocks_37_model_model_totuple_1_output)
    single_blocks_37_model_model_tensoritem_0_output = tensor_item(model_1_tensoritem_3_output, single_blocks_37_model_model_tensoritem_0_index)
    single_blocks_37_model_model_tensoritem_1_output = tensor_item(single_blocks_37_model_model_xq_, single_blocks_37_model_model_tensoritem_1_index)
    single_blocks_37_model_model_multiply_0_output = multiplication(single_blocks_37_model_model_tensoritem_0_output, single_blocks_37_model_model_tensoritem_1_output)
    single_blocks_37_model_model_tensoritem_2_output = tensor_item(model_1_tensoritem_3_output, single_blocks_37_model_model_tensoritem_2_index)
    single_blocks_37_model_model_tensoritem_3_output = tensor_item(single_blocks_37_model_model_xq_, single_blocks_37_model_model_tensoritem_3_index)
    single_blocks_37_model_model_multiply_1_output = multiplication(single_blocks_37_model_model_tensoritem_2_output, single_blocks_37_model_model_tensoritem_3_output)
    single_blocks_37_model_model_add_0_output = add(single_blocks_37_model_model_multiply_0_output, single_blocks_37_model_model_multiply_1_output)
    single_blocks_37_model_q_out = reshape(single_blocks_37_model_model_add_0_output, single_blocks_37_model_model_shape_0_output)
    single_blocks_37_model_model_tensoritem_4_output = tensor_item(model_1_tensoritem_3_output, single_blocks_37_model_model_tensoritem_4_index)
    single_blocks_37_model_model_tensoritem_5_output = tensor_item(single_blocks_37_model_model_xk_, single_blocks_37_model_model_tensoritem_5_index)
    single_blocks_37_model_model_multiply_2_output = multiplication(single_blocks_37_model_model_tensoritem_4_output, single_blocks_37_model_model_tensoritem_5_output)
    single_blocks_37_model_model_tensoritem_6_output = tensor_item(model_1_tensoritem_3_output, single_blocks_37_model_model_tensoritem_6_index)
    single_blocks_37_model_model_tensoritem_7_output = tensor_item(single_blocks_37_model_model_xk_, single_blocks_37_model_model_tensoritem_7_index)
    single_blocks_37_model_model_multiply_3_output = multiplication(single_blocks_37_model_model_tensoritem_6_output, single_blocks_37_model_model_tensoritem_7_output)
    single_blocks_37_model_model_add_1_output = add(single_blocks_37_model_model_multiply_2_output, single_blocks_37_model_model_multiply_3_output)
    single_blocks_37_model_k_out = reshape(single_blocks_37_model_model_add_1_output, single_blocks_37_model_model_shape_1_output)
    single_blocks_37_model_context = scaled_dot_product_attention(single_blocks_37_model_q_out, single_blocks_37_model_k_out, single_blocks_37_tensoritem_5_output, single_blocks_37_model_scaleddotproduct_attn_mask)
    single_blocks_37_model_transpose_output = transpose(single_blocks_37_model_context, single_blocks_37_model_transpose_axes)
    single_blocks_37_attn = reshape(single_blocks_37_model_transpose_output, single_blocks_37_model_totuple_output)
    single_blocks_37_tensoritem_6_output = tensor_item(single_blocks_37_lin1_out, single_blocks_37_tensoritem_6_index)
    single_blocks_37_mlp_act = gelu(single_blocks_37_tensoritem_6_output, single_blocks_37_gelu_approximate)
    single_blocks_37_concat_out = concat(single_blocks_37_attn, single_blocks_37_mlp_act, axis=single_blocks_37_concat_axis)
    single_blocks_37_linear2_transpose_output = transpose(single_blocks_37_linear2_weight, single_blocks_37_linear2_transpose_axes)
    single_blocks_37_linear2_matrixmultiply_output = matrix_multiplication(single_blocks_37_concat_out, single_blocks_37_linear2_transpose_output)
    single_blocks_37_lin2_out = add(single_blocks_37_linear2_matrixmultiply_output, single_blocks_37_linear2_bias)
    single_blocks_37_tensoritem_7_output = tensor_item(single_blocks_37_modulation_split_output, single_blocks_37_tensoritem_7_index)
    single_blocks_37_multiply_1_output = multiplication(single_blocks_37_tensoritem_7_output, single_blocks_37_lin2_out)
    single_blocks_37_add_2_output = add(single_blocks_36_add_2_output, single_blocks_37_multiply_1_output)
    tensoritem_output = tensor_item(single_blocks_37_add_2_output, tensoritem_index)
    final_layer_adaln_modulation_sigmoid_output = sigmoid(vec)
    final_layer_adaln_modulation_multiply_output = multiplication(final_layer_adaln_modulation_sigmoid_output, vec)
    final_layer_adaln_modulation_1_transpose_output = transpose(final_layer_adaln_modulation_1_weight, final_layer_adaln_modulation_1_transpose_axes)
    final_layer_adaln_modulation_1_matrixmultiply_output = matrix_multiplication(final_layer_adaln_modulation_multiply_output, final_layer_adaln_modulation_1_transpose_output)
    final_layer_mod = add(final_layer_adaln_modulation_1_matrixmultiply_output, final_layer_adaln_modulation_1_bias)
    final_layer_mod_split = split(final_layer_mod, final_layer_split_split_size, final_layer_split_axis)
    final_layer_norm_final_mean_output = reduce_mean(tensoritem_output, axis=final_layer_norm_final_mean_axis, keepdim=final_layer_norm_final_mean_keepdim)
    final_layer_norm_final_subtract_output = subtract(tensoritem_output, final_layer_norm_final_mean_output)
    final_layer_norm_final_variance_output = variance(tensoritem_output, axis=final_layer_norm_final_variance_axis, keepdim=final_layer_norm_final_variance_keepdim, correction=final_layer_norm_final_variance_correction)
    final_layer_norm_final_add_output = add(final_layer_norm_final_variance_output, final_layer_norm_final_add_right)
    final_layer_norm_final_sqrt_output = sqrt(final_layer_norm_final_add_output)
    final_layer_norm_final_divide_output = divide(final_layer_norm_final_subtract_output, final_layer_norm_final_sqrt_output)
    final_layer_tensoritem_0_output = tensor_item(final_layer_mod_split, final_layer_tensoritem_0_index)
    final_layer_tensoritem_1_output = tensor_item(final_layer_tensoritem_0_output, final_layer_tensoritem_1_index)
    final_layer_add_0_output = add(final_layer_add_0_left, final_layer_tensoritem_1_output)
    final_layer_multiply_output = multiplication(final_layer_add_0_output, final_layer_norm_final_divide_output)
    final_layer_tensoritem_2_output = tensor_item(final_layer_mod_split, final_layer_tensoritem_2_index)
    final_layer_tensoritem_3_output = tensor_item(final_layer_tensoritem_2_output, final_layer_tensoritem_3_index)
    final_layer_add_1_output = add(final_layer_multiply_output, final_layer_tensoritem_3_output)
    final_layer_linear_transpose_output = transpose(final_layer_linear_weight, final_layer_linear_transpose_axes)
    final_layer_linear_matrixmultiply_output = matrix_multiplication(final_layer_add_1_output, final_layer_linear_transpose_output)
    output = add(final_layer_linear_matrixmultiply_output, final_layer_linear_bias)
    return {'img_buffer': single_blocks_37_add_2_output, 'output': output}