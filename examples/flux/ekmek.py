from mithril.backends.with_autograd.torch_backend.ops import *

def evaluate(params, data, cache):
    bias_0 = params['bias_0']
    bias_1 = params['bias_1']
    bias_10 = params['bias_10']
    bias_11 = params['bias_11']
    bias_12 = params['bias_12']
    bias_13 = params['bias_13']
    bias_14 = params['bias_14']
    bias_15 = params['bias_15']
    bias_16 = params['bias_16']
    bias_17 = params['bias_17']
    bias_18 = params['bias_18']
    bias_19 = params['bias_19']
    bias_2 = params['bias_2']
    bias_20 = params['bias_20']
    bias_21 = params['bias_21']
    bias_22 = params['bias_22']
    bias_23 = params['bias_23']
    bias_24 = params['bias_24']
    bias_25 = params['bias_25']
    bias_26 = params['bias_26']
    bias_27 = params['bias_27']
    bias_28 = params['bias_28']
    bias_29 = params['bias_29']
    bias_3 = params['bias_3']
    bias_4 = params['bias_4']
    bias_5 = params['bias_5']
    bias_6 = params['bias_6']
    bias_7 = params['bias_7']
    bias_8 = params['bias_8']
    bias_9 = params['bias_9']
    input = data['input']
    weight_0 = params['weight_0']
    weight_1 = params['weight_1']
    weight_10 = params['weight_10']
    weight_11 = params['weight_11']
    weight_12 = params['weight_12']
    weight_13 = params['weight_13']
    weight_14 = params['weight_14']
    weight_15 = params['weight_15']
    weight_16 = params['weight_16']
    weight_17 = params['weight_17']
    weight_18 = params['weight_18']
    weight_19 = params['weight_19']
    weight_2 = params['weight_2']
    weight_20 = params['weight_20']
    weight_21 = params['weight_21']
    weight_22 = params['weight_22']
    weight_23 = params['weight_23']
    weight_24 = params['weight_24']
    weight_25 = params['weight_25']
    weight_26 = params['weight_26']
    weight_27 = params['weight_27']
    weight_28 = params['weight_28']
    weight_29 = params['weight_29']
    weight_3 = params['weight_3']
    weight_4 = params['weight_4']
    weight_5 = params['weight_5']
    weight_6 = params['weight_6']
    weight_7 = params['weight_7']
    weight_8 = params['weight_8']
    weight_9 = params['weight_9']
    output_6 = conv2d_bias(input, weight_0, bias_0)
    output_13 = conv2d_bias(output_6, weight_1, bias_1)
    output_20 = conv2d_bias(output_13, weight_2, bias_2)
    output_27 = conv2d_bias(output_20, weight_3, bias_3)
    output_34 = conv2d_bias(output_27, weight_4, bias_4)
    output_41 = conv2d_bias(output_34, weight_5, bias_5)
    output_48 = conv2d_bias(output_41, weight_6, bias_6)
    output_55 = conv2d_bias(output_48, weight_7, bias_7)
    output_62 = conv2d_bias(output_55, weight_8, bias_8)
    output_69 = conv2d_bias(output_62, weight_9, bias_9)
    output_76 = conv2d_bias(output_69, weight_10, bias_10)
    output_83 = conv2d_bias(output_76, weight_11, bias_11)
    output_90 = conv2d_bias(output_83, weight_12, bias_12)
    output_97 = conv2d_bias(output_90, weight_13, bias_13)
    output_104 = conv2d_bias(output_97, weight_14, bias_14)
    output_111 = conv2d_bias(output_104, weight_15, bias_15)
    output_118 = conv2d_bias(output_111, weight_16, bias_16)
    output_125 = conv2d_bias(output_118, weight_17, bias_17)
    output_132 = conv2d_bias(output_125, weight_18, bias_18)
    output_139 = conv2d_bias(output_132, weight_19, bias_19)
    output_146 = conv2d_bias(output_139, weight_20, bias_20)
    output_153 = conv2d_bias(output_146, weight_21, bias_21)
    output_160 = conv2d_bias(output_153, weight_22, bias_22)
    output_167 = conv2d_bias(output_160, weight_23, bias_23)
    output_174 = conv2d_bias(output_167, weight_24, bias_24)
    output_181 = conv2d_bias(output_174, weight_25, bias_25)
    output_188 = conv2d_bias(output_181, weight_26, bias_26)
    output_195 = conv2d_bias(output_188, weight_27, bias_27)
    output_202 = conv2d_bias(output_195, weight_28, bias_28)
    output = conv2d_bias(output_202, weight_29, bias_29)
    return {'output': output}